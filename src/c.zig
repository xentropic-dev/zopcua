//! This file was autogenerated with translate-c
pub const __builtin_bswap16 = @import("std").zig.c_builtins.__builtin_bswap16;
pub const __builtin_bswap32 = @import("std").zig.c_builtins.__builtin_bswap32;
pub const __builtin_bswap64 = @import("std").zig.c_builtins.__builtin_bswap64;
pub const __builtin_signbit = @import("std").zig.c_builtins.__builtin_signbit;
pub const __builtin_signbitf = @import("std").zig.c_builtins.__builtin_signbitf;
pub const __builtin_popcount = @import("std").zig.c_builtins.__builtin_popcount;
pub const __builtin_ctz = @import("std").zig.c_builtins.__builtin_ctz;
pub const __builtin_clz = @import("std").zig.c_builtins.__builtin_clz;
pub const __builtin_sqrt = @import("std").zig.c_builtins.__builtin_sqrt;
pub const __builtin_sqrtf = @import("std").zig.c_builtins.__builtin_sqrtf;
pub const __builtin_sin = @import("std").zig.c_builtins.__builtin_sin;
pub const __builtin_sinf = @import("std").zig.c_builtins.__builtin_sinf;
pub const __builtin_cos = @import("std").zig.c_builtins.__builtin_cos;
pub const __builtin_cosf = @import("std").zig.c_builtins.__builtin_cosf;
pub const __builtin_exp = @import("std").zig.c_builtins.__builtin_exp;
pub const __builtin_expf = @import("std").zig.c_builtins.__builtin_expf;
pub const __builtin_exp2 = @import("std").zig.c_builtins.__builtin_exp2;
pub const __builtin_exp2f = @import("std").zig.c_builtins.__builtin_exp2f;
pub const __builtin_log = @import("std").zig.c_builtins.__builtin_log;
pub const __builtin_logf = @import("std").zig.c_builtins.__builtin_logf;
pub const __builtin_log2 = @import("std").zig.c_builtins.__builtin_log2;
pub const __builtin_log2f = @import("std").zig.c_builtins.__builtin_log2f;
pub const __builtin_log10 = @import("std").zig.c_builtins.__builtin_log10;
pub const __builtin_log10f = @import("std").zig.c_builtins.__builtin_log10f;
pub const __builtin_abs = @import("std").zig.c_builtins.__builtin_abs;
pub const __builtin_labs = @import("std").zig.c_builtins.__builtin_labs;
pub const __builtin_llabs = @import("std").zig.c_builtins.__builtin_llabs;
pub const __builtin_fabs = @import("std").zig.c_builtins.__builtin_fabs;
pub const __builtin_fabsf = @import("std").zig.c_builtins.__builtin_fabsf;
pub const __builtin_floor = @import("std").zig.c_builtins.__builtin_floor;
pub const __builtin_floorf = @import("std").zig.c_builtins.__builtin_floorf;
pub const __builtin_ceil = @import("std").zig.c_builtins.__builtin_ceil;
pub const __builtin_ceilf = @import("std").zig.c_builtins.__builtin_ceilf;
pub const __builtin_trunc = @import("std").zig.c_builtins.__builtin_trunc;
pub const __builtin_truncf = @import("std").zig.c_builtins.__builtin_truncf;
pub const __builtin_round = @import("std").zig.c_builtins.__builtin_round;
pub const __builtin_roundf = @import("std").zig.c_builtins.__builtin_roundf;
pub const __builtin_strlen = @import("std").zig.c_builtins.__builtin_strlen;
pub const __builtin_strcmp = @import("std").zig.c_builtins.__builtin_strcmp;
pub const __builtin_object_size = @import("std").zig.c_builtins.__builtin_object_size;
pub const __builtin___memset_chk = @import("std").zig.c_builtins.__builtin___memset_chk;
pub const __builtin_memset = @import("std").zig.c_builtins.__builtin_memset;
pub const __builtin___memcpy_chk = @import("std").zig.c_builtins.__builtin___memcpy_chk;
pub const __builtin_memcpy = @import("std").zig.c_builtins.__builtin_memcpy;
pub const __builtin_expect = @import("std").zig.c_builtins.__builtin_expect;
pub const __builtin_nanf = @import("std").zig.c_builtins.__builtin_nanf;
pub const __builtin_huge_valf = @import("std").zig.c_builtins.__builtin_huge_valf;
pub const __builtin_inff = @import("std").zig.c_builtins.__builtin_inff;
pub const __builtin_isnan = @import("std").zig.c_builtins.__builtin_isnan;
pub const __builtin_isinf = @import("std").zig.c_builtins.__builtin_isinf;
pub const __builtin_isinf_sign = @import("std").zig.c_builtins.__builtin_isinf_sign;
pub const __has_builtin = @import("std").zig.c_builtins.__has_builtin;
pub const __builtin_assume = @import("std").zig.c_builtins.__builtin_assume;
pub const __builtin_unreachable = @import("std").zig.c_builtins.__builtin_unreachable;
pub const __builtin_constant_p = @import("std").zig.c_builtins.__builtin_constant_p;
pub const __builtin_mul_overflow = @import("std").zig.c_builtins.__builtin_mul_overflow;
pub const ptrdiff_t = c_long;
pub const wchar_t = c_int;
pub const max_align_t = extern struct {
    __clang_max_align_nonce1: c_longlong align(8) = @import("std").mem.zeroes(c_longlong),
    __clang_max_align_nonce2: c_longdouble align(16) = @import("std").mem.zeroes(c_longdouble),
};
pub const __u_char = u8;
pub const __u_short = c_ushort;
pub const __u_int = c_uint;
pub const __u_long = c_ulong;
pub const __int8_t = i8;
pub const __uint8_t = u8;
pub const __int16_t = c_short;
pub const __uint16_t = c_ushort;
pub const __int32_t = c_int;
pub const __uint32_t = c_uint;
pub const __int64_t = c_long;
pub const __uint64_t = c_ulong;
pub const __int_least8_t = __int8_t;
pub const __uint_least8_t = __uint8_t;
pub const __int_least16_t = __int16_t;
pub const __uint_least16_t = __uint16_t;
pub const __int_least32_t = __int32_t;
pub const __uint_least32_t = __uint32_t;
pub const __int_least64_t = __int64_t;
pub const __uint_least64_t = __uint64_t;
pub const __quad_t = c_long;
pub const __u_quad_t = c_ulong;
pub const __intmax_t = c_long;
pub const __uintmax_t = c_ulong;
pub const __dev_t = c_ulong;
pub const __uid_t = c_uint;
pub const __gid_t = c_uint;
pub const __ino_t = c_ulong;
pub const __ino64_t = c_ulong;
pub const __mode_t = c_uint;
pub const __nlink_t = c_ulong;
pub const __off_t = c_long;
pub const __off64_t = c_long;
pub const __pid_t = c_int;
pub const __fsid_t = extern struct {
    __val: [2]c_int = @import("std").mem.zeroes([2]c_int),
};
pub const __clock_t = c_long;
pub const __rlim_t = c_ulong;
pub const __rlim64_t = c_ulong;
pub const __id_t = c_uint;
pub const __time_t = c_long;
pub const __useconds_t = c_uint;
pub const __suseconds_t = c_long;
pub const __suseconds64_t = c_long;
pub const __daddr_t = c_int;
pub const __key_t = c_int;
pub const __clockid_t = c_int;
pub const __timer_t = ?*anyopaque;
pub const __blksize_t = c_long;
pub const __blkcnt_t = c_long;
pub const __blkcnt64_t = c_long;
pub const __fsblkcnt_t = c_ulong;
pub const __fsblkcnt64_t = c_ulong;
pub const __fsfilcnt_t = c_ulong;
pub const __fsfilcnt64_t = c_ulong;
pub const __fsword_t = c_long;
pub const __ssize_t = c_long;
pub const __syscall_slong_t = c_long;
pub const __syscall_ulong_t = c_ulong;
pub const __loff_t = __off64_t;
pub const __caddr_t = [*c]u8;
pub const __intptr_t = c_long;
pub const __socklen_t = c_uint;
pub const __sig_atomic_t = c_int;
pub const int_least8_t = __int_least8_t;
pub const int_least16_t = __int_least16_t;
pub const int_least32_t = __int_least32_t;
pub const int_least64_t = __int_least64_t;
pub const uint_least8_t = __uint_least8_t;
pub const uint_least16_t = __uint_least16_t;
pub const uint_least32_t = __uint_least32_t;
pub const uint_least64_t = __uint_least64_t;
pub const int_fast8_t = i8;
pub const int_fast16_t = c_long;
pub const int_fast32_t = c_long;
pub const int_fast64_t = c_long;
pub const uint_fast8_t = u8;
pub const uint_fast16_t = c_ulong;
pub const uint_fast32_t = c_ulong;
pub const uint_fast64_t = c_ulong;
pub const intmax_t = __intmax_t;
pub const uintmax_t = __uintmax_t;
pub const __gwchar_t = c_int;
pub const imaxdiv_t = extern struct {
    quot: c_long = @import("std").mem.zeroes(c_long),
    rem: c_long = @import("std").mem.zeroes(c_long),
};
pub extern fn imaxabs(__n: intmax_t) intmax_t;
pub extern fn imaxdiv(__numer: intmax_t, __denom: intmax_t) imaxdiv_t;
pub extern fn strtoimax(noalias __nptr: [*c]const u8, noalias __endptr: [*c][*c]u8, __base: c_int) intmax_t;
pub extern fn strtoumax(noalias __nptr: [*c]const u8, noalias __endptr: [*c][*c]u8, __base: c_int) uintmax_t;
pub extern fn wcstoimax(noalias __nptr: [*c]const __gwchar_t, noalias __endptr: [*c][*c]__gwchar_t, __base: c_int) intmax_t;
pub extern fn wcstoumax(noalias __nptr: [*c]const __gwchar_t, noalias __endptr: [*c][*c]__gwchar_t, __base: c_int) uintmax_t;
pub extern fn memcpy(__dest: ?*anyopaque, __src: ?*const anyopaque, __n: c_ulong) ?*anyopaque;
pub extern fn memmove(__dest: ?*anyopaque, __src: ?*const anyopaque, __n: c_ulong) ?*anyopaque;
pub extern fn memccpy(__dest: ?*anyopaque, __src: ?*const anyopaque, __c: c_int, __n: c_ulong) ?*anyopaque;
pub extern fn memset(__s: ?*anyopaque, __c: c_int, __n: c_ulong) ?*anyopaque;
pub extern fn memcmp(__s1: ?*const anyopaque, __s2: ?*const anyopaque, __n: c_ulong) c_int;
pub extern fn __memcmpeq(__s1: ?*const anyopaque, __s2: ?*const anyopaque, __n: usize) c_int;
pub extern fn memchr(__s: ?*const anyopaque, __c: c_int, __n: c_ulong) ?*anyopaque;
pub extern fn rawmemchr(__s: ?*const anyopaque, __c: c_int) ?*anyopaque;
pub extern fn memrchr(__s: ?*const anyopaque, __c: c_int, __n: usize) ?*anyopaque;
pub extern fn strcpy(__dest: [*c]u8, __src: [*c]const u8) [*c]u8;
pub extern fn strncpy(__dest: [*c]u8, __src: [*c]const u8, __n: c_ulong) [*c]u8;
pub extern fn strcat(__dest: [*c]u8, __src: [*c]const u8) [*c]u8;
pub extern fn strncat(__dest: [*c]u8, __src: [*c]const u8, __n: c_ulong) [*c]u8;
pub extern fn strcmp(__s1: [*c]const u8, __s2: [*c]const u8) c_int;
pub extern fn strncmp(__s1: [*c]const u8, __s2: [*c]const u8, __n: c_ulong) c_int;
pub extern fn strcoll(__s1: [*c]const u8, __s2: [*c]const u8) c_int;
pub extern fn strxfrm(__dest: [*c]u8, __src: [*c]const u8, __n: c_ulong) c_ulong;
pub const struct___locale_data_1 = opaque {};
pub const struct___locale_struct = extern struct {
    __locales: [13]?*struct___locale_data_1 = @import("std").mem.zeroes([13]?*struct___locale_data_1),
    __ctype_b: [*c]const c_ushort = @import("std").mem.zeroes([*c]const c_ushort),
    __ctype_tolower: [*c]const c_int = @import("std").mem.zeroes([*c]const c_int),
    __ctype_toupper: [*c]const c_int = @import("std").mem.zeroes([*c]const c_int),
    __names: [13][*c]const u8 = @import("std").mem.zeroes([13][*c]const u8),
};
pub const __locale_t = [*c]struct___locale_struct;
pub const locale_t = __locale_t;
pub extern fn strcoll_l(__s1: [*c]const u8, __s2: [*c]const u8, __l: locale_t) c_int;
pub extern fn strxfrm_l(__dest: [*c]u8, __src: [*c]const u8, __n: usize, __l: locale_t) usize;
pub extern fn strdup(__s: [*c]const u8) [*c]u8;
pub extern fn strndup(__string: [*c]const u8, __n: c_ulong) [*c]u8;
pub extern fn strchr(__s: [*c]const u8, __c: c_int) [*c]u8;
pub extern fn strrchr(__s: [*c]const u8, __c: c_int) [*c]u8;
pub extern fn strchrnul(__s: [*c]const u8, __c: c_int) [*c]u8;
pub extern fn strcspn(__s: [*c]const u8, __reject: [*c]const u8) c_ulong;
pub extern fn strspn(__s: [*c]const u8, __accept: [*c]const u8) c_ulong;
pub extern fn strpbrk(__s: [*c]const u8, __accept: [*c]const u8) [*c]u8;
pub extern fn strstr(__haystack: [*c]const u8, __needle: [*c]const u8) [*c]u8;
pub extern fn strtok(__s: [*c]u8, __delim: [*c]const u8) [*c]u8;
pub extern fn __strtok_r(noalias __s: [*c]u8, noalias __delim: [*c]const u8, noalias __save_ptr: [*c][*c]u8) [*c]u8;
pub extern fn strtok_r(noalias __s: [*c]u8, noalias __delim: [*c]const u8, noalias __save_ptr: [*c][*c]u8) [*c]u8;
pub extern fn strcasestr(__haystack: [*c]const u8, __needle: [*c]const u8) [*c]u8;
pub extern fn memmem(__haystack: ?*const anyopaque, __haystacklen: usize, __needle: ?*const anyopaque, __needlelen: usize) ?*anyopaque;
pub extern fn __mempcpy(noalias __dest: ?*anyopaque, noalias __src: ?*const anyopaque, __n: usize) ?*anyopaque;
pub extern fn mempcpy(__dest: ?*anyopaque, __src: ?*const anyopaque, __n: c_ulong) ?*anyopaque;
pub extern fn strlen(__s: [*c]const u8) c_ulong;
pub extern fn strnlen(__string: [*c]const u8, __maxlen: usize) usize;
pub extern fn strerror(__errnum: c_int) [*c]u8;
pub extern fn strerror_r(__errnum: c_int, __buf: [*c]u8, __buflen: usize) [*c]u8;
pub extern fn strerrordesc_np(__err: c_int) [*c]const u8;
pub extern fn strerrorname_np(__err: c_int) [*c]const u8;
pub extern fn strerror_l(__errnum: c_int, __l: locale_t) [*c]u8;
pub extern fn bcmp(__s1: ?*const anyopaque, __s2: ?*const anyopaque, __n: c_ulong) c_int;
pub extern fn bcopy(__src: ?*const anyopaque, __dest: ?*anyopaque, __n: c_ulong) void;
pub extern fn bzero(__s: ?*anyopaque, __n: c_ulong) void;
pub extern fn index(__s: [*c]const u8, __c: c_int) [*c]u8;
pub extern fn rindex(__s: [*c]const u8, __c: c_int) [*c]u8;
pub extern fn ffs(__i: c_int) c_int;
pub extern fn ffsl(__l: c_long) c_int;
pub extern fn ffsll(__ll: c_longlong) c_int;
pub extern fn strcasecmp(__s1: [*c]const u8, __s2: [*c]const u8) c_int;
pub extern fn strncasecmp(__s1: [*c]const u8, __s2: [*c]const u8, __n: c_ulong) c_int;
pub extern fn strcasecmp_l(__s1: [*c]const u8, __s2: [*c]const u8, __loc: locale_t) c_int;
pub extern fn strncasecmp_l(__s1: [*c]const u8, __s2: [*c]const u8, __n: usize, __loc: locale_t) c_int;
pub extern fn explicit_bzero(__s: ?*anyopaque, __n: usize) void;
pub extern fn strsep(noalias __stringp: [*c][*c]u8, noalias __delim: [*c]const u8) [*c]u8;
pub extern fn strsignal(__sig: c_int) [*c]u8;
pub extern fn sigabbrev_np(__sig: c_int) [*c]const u8;
pub extern fn sigdescr_np(__sig: c_int) [*c]const u8;
pub extern fn __stpcpy(noalias __dest: [*c]u8, noalias __src: [*c]const u8) [*c]u8;
pub extern fn stpcpy(__dest: [*c]u8, __src: [*c]const u8) [*c]u8;
pub extern fn __stpncpy(noalias __dest: [*c]u8, noalias __src: [*c]const u8, __n: usize) [*c]u8;
pub extern fn stpncpy(__dest: [*c]u8, __src: [*c]const u8, __n: c_ulong) [*c]u8;
pub extern fn strlcpy(__dest: [*c]u8, __src: [*c]const u8, __n: c_ulong) c_ulong;
pub extern fn strlcat(__dest: [*c]u8, __src: [*c]const u8, __n: c_ulong) c_ulong;
pub extern fn strverscmp(__s1: [*c]const u8, __s2: [*c]const u8) c_int;
pub extern fn strfry(__string: [*c]u8) [*c]u8;
pub extern fn memfrob(__s: ?*anyopaque, __n: usize) ?*anyopaque;
pub extern fn basename(__filename: [*c]const u8) [*c]u8;
// ./vendor/open62541.h:261:12: warning: TODO implement function '__sync_lock_test_and_set_8' in std.zig.c_builtins

// ./vendor/open62541.h:257:1: warning: unable to translate function, demoted to extern
pub extern fn UA_atomic_xchg(arg_addr: [*c]volatile ?*anyopaque, arg_newptr: ?*anyopaque) callconv(.c) ?*anyopaque;
// ./vendor/open62541.h:277:12: warning: TODO implement function '__sync_val_compare_and_swap_8' in std.zig.c_builtins

// ./vendor/open62541.h:273:1: warning: unable to translate function, demoted to extern
pub extern fn UA_atomic_cmpxchg(arg_addr: [*c]volatile ?*anyopaque, arg_expected: ?*anyopaque, arg_newptr: ?*anyopaque) callconv(.c) ?*anyopaque;
pub const _Float32 = f32;
pub const _Float64 = f64;
pub const _Float32x = f64;
pub const _Float64x = c_longdouble;
pub const div_t = extern struct {
    quot: c_int = @import("std").mem.zeroes(c_int),
    rem: c_int = @import("std").mem.zeroes(c_int),
};
pub const ldiv_t = extern struct {
    quot: c_long = @import("std").mem.zeroes(c_long),
    rem: c_long = @import("std").mem.zeroes(c_long),
};
pub const lldiv_t = extern struct {
    quot: c_longlong = @import("std").mem.zeroes(c_longlong),
    rem: c_longlong = @import("std").mem.zeroes(c_longlong),
};
pub extern fn __ctype_get_mb_cur_max() usize;
pub extern fn atof(__nptr: [*c]const u8) f64;
pub extern fn atoi(__nptr: [*c]const u8) c_int;
pub extern fn atol(__nptr: [*c]const u8) c_long;
pub extern fn atoll(__nptr: [*c]const u8) c_longlong;
pub extern fn strtod(__nptr: [*c]const u8, __endptr: [*c][*c]u8) f64;
pub extern fn strtof(__nptr: [*c]const u8, __endptr: [*c][*c]u8) f32;
pub extern fn strtold(__nptr: [*c]const u8, __endptr: [*c][*c]u8) c_longdouble;
pub extern fn strtof32(noalias __nptr: [*c]const u8, noalias __endptr: [*c][*c]u8) _Float32;
pub extern fn strtof64(noalias __nptr: [*c]const u8, noalias __endptr: [*c][*c]u8) _Float64;
pub extern fn strtof32x(noalias __nptr: [*c]const u8, noalias __endptr: [*c][*c]u8) _Float32x;
pub extern fn strtof64x(noalias __nptr: [*c]const u8, noalias __endptr: [*c][*c]u8) _Float64x;
pub extern fn strtol(__nptr: [*c]const u8, __endptr: [*c][*c]u8, __base: c_int) c_long;
pub extern fn strtoul(__nptr: [*c]const u8, __endptr: [*c][*c]u8, __base: c_int) c_ulong;
pub extern fn strtoq(noalias __nptr: [*c]const u8, noalias __endptr: [*c][*c]u8, __base: c_int) c_longlong;
pub extern fn strtouq(noalias __nptr: [*c]const u8, noalias __endptr: [*c][*c]u8, __base: c_int) c_ulonglong;
pub extern fn strtoll(__nptr: [*c]const u8, __endptr: [*c][*c]u8, __base: c_int) c_longlong;
pub extern fn strtoull(__nptr: [*c]const u8, __endptr: [*c][*c]u8, __base: c_int) c_ulonglong;
pub extern fn strfromd(__dest: [*c]u8, __size: usize, __format: [*c]const u8, __f: f64) c_int;
pub extern fn strfromf(__dest: [*c]u8, __size: usize, __format: [*c]const u8, __f: f32) c_int;
pub extern fn strfroml(__dest: [*c]u8, __size: usize, __format: [*c]const u8, __f: c_longdouble) c_int;
pub extern fn strfromf32(__dest: [*c]u8, __size: usize, __format: [*c]const u8, __f: _Float32) c_int;
pub extern fn strfromf64(__dest: [*c]u8, __size: usize, __format: [*c]const u8, __f: _Float64) c_int;
pub extern fn strfromf32x(__dest: [*c]u8, __size: usize, __format: [*c]const u8, __f: _Float32x) c_int;
pub extern fn strfromf64x(__dest: [*c]u8, __size: usize, __format: [*c]const u8, __f: _Float64x) c_int;
pub extern fn strtol_l(noalias __nptr: [*c]const u8, noalias __endptr: [*c][*c]u8, __base: c_int, __loc: locale_t) c_long;
pub extern fn strtoul_l(noalias __nptr: [*c]const u8, noalias __endptr: [*c][*c]u8, __base: c_int, __loc: locale_t) c_ulong;
pub extern fn strtoll_l(noalias __nptr: [*c]const u8, noalias __endptr: [*c][*c]u8, __base: c_int, __loc: locale_t) c_longlong;
pub extern fn strtoull_l(noalias __nptr: [*c]const u8, noalias __endptr: [*c][*c]u8, __base: c_int, __loc: locale_t) c_ulonglong;
pub extern fn strtod_l(noalias __nptr: [*c]const u8, noalias __endptr: [*c][*c]u8, __loc: locale_t) f64;
pub extern fn strtof_l(noalias __nptr: [*c]const u8, noalias __endptr: [*c][*c]u8, __loc: locale_t) f32;
pub extern fn strtold_l(noalias __nptr: [*c]const u8, noalias __endptr: [*c][*c]u8, __loc: locale_t) c_longdouble;
pub extern fn strtof32_l(noalias __nptr: [*c]const u8, noalias __endptr: [*c][*c]u8, __loc: locale_t) _Float32;
pub extern fn strtof64_l(noalias __nptr: [*c]const u8, noalias __endptr: [*c][*c]u8, __loc: locale_t) _Float64;
pub extern fn strtof32x_l(noalias __nptr: [*c]const u8, noalias __endptr: [*c][*c]u8, __loc: locale_t) _Float32x;
pub extern fn strtof64x_l(noalias __nptr: [*c]const u8, noalias __endptr: [*c][*c]u8, __loc: locale_t) _Float64x;
pub extern fn l64a(__n: c_long) [*c]u8;
pub extern fn a64l(__s: [*c]const u8) c_long;
pub const u_char = __u_char;
pub const u_short = __u_short;
pub const u_int = __u_int;
pub const u_long = __u_long;
pub const quad_t = __quad_t;
pub const u_quad_t = __u_quad_t;
pub const fsid_t = __fsid_t;
pub const loff_t = __loff_t;
pub const ino_t = __ino_t;
pub const ino64_t = __ino64_t;
pub const dev_t = __dev_t;
pub const gid_t = __gid_t;
pub const mode_t = __mode_t;
pub const nlink_t = __nlink_t;
pub const uid_t = __uid_t;
pub const off_t = __off_t;
pub const off64_t = __off64_t;
pub const pid_t = __pid_t;
pub const id_t = __id_t;
pub const daddr_t = __daddr_t;
pub const caddr_t = __caddr_t;
pub const key_t = __key_t;
pub const clock_t = __clock_t;
pub const clockid_t = __clockid_t;
pub const time_t = __time_t;
pub const timer_t = __timer_t;
pub const useconds_t = __useconds_t;
pub const suseconds_t = __suseconds_t;
pub const ulong = c_ulong;
pub const ushort = c_ushort;
pub const uint = c_uint;
pub const u_int8_t = __uint8_t;
pub const u_int16_t = __uint16_t;
pub const u_int32_t = __uint32_t;
pub const u_int64_t = __uint64_t;
pub const register_t = c_long;
pub fn __bswap_16(arg___bsx: __uint16_t) callconv(.c) __uint16_t {
    var __bsx = arg___bsx;
    _ = &__bsx;
    return @as(__uint16_t, @bitCast(@as(c_short, @truncate(((@as(c_int, @bitCast(@as(c_uint, __bsx))) >> @intCast(8)) & @as(c_int, 255)) | ((@as(c_int, @bitCast(@as(c_uint, __bsx))) & @as(c_int, 255)) << @intCast(8))))));
}
pub fn __bswap_32(arg___bsx: __uint32_t) callconv(.c) __uint32_t {
    var __bsx = arg___bsx;
    _ = &__bsx;
    return ((((__bsx & @as(c_uint, 4278190080)) >> @intCast(24)) | ((__bsx & @as(c_uint, 16711680)) >> @intCast(8))) | ((__bsx & @as(c_uint, 65280)) << @intCast(8))) | ((__bsx & @as(c_uint, 255)) << @intCast(24));
}
pub fn __bswap_64(arg___bsx: __uint64_t) callconv(.c) __uint64_t {
    var __bsx = arg___bsx;
    _ = &__bsx;
    return @as(__uint64_t, @bitCast(@as(c_ulong, @truncate(((((((((@as(c_ulonglong, @bitCast(@as(c_ulonglong, __bsx))) & @as(c_ulonglong, 18374686479671623680)) >> @intCast(56)) | ((@as(c_ulonglong, @bitCast(@as(c_ulonglong, __bsx))) & @as(c_ulonglong, 71776119061217280)) >> @intCast(40))) | ((@as(c_ulonglong, @bitCast(@as(c_ulonglong, __bsx))) & @as(c_ulonglong, 280375465082880)) >> @intCast(24))) | ((@as(c_ulonglong, @bitCast(@as(c_ulonglong, __bsx))) & @as(c_ulonglong, 1095216660480)) >> @intCast(8))) | ((@as(c_ulonglong, @bitCast(@as(c_ulonglong, __bsx))) & @as(c_ulonglong, 4278190080)) << @intCast(8))) | ((@as(c_ulonglong, @bitCast(@as(c_ulonglong, __bsx))) & @as(c_ulonglong, 16711680)) << @intCast(24))) | ((@as(c_ulonglong, @bitCast(@as(c_ulonglong, __bsx))) & @as(c_ulonglong, 65280)) << @intCast(40))) | ((@as(c_ulonglong, @bitCast(@as(c_ulonglong, __bsx))) & @as(c_ulonglong, 255)) << @intCast(56))))));
}
pub fn __uint16_identity(arg___x: __uint16_t) callconv(.c) __uint16_t {
    var __x = arg___x;
    _ = &__x;
    return __x;
}
pub fn __uint32_identity(arg___x: __uint32_t) callconv(.c) __uint32_t {
    var __x = arg___x;
    _ = &__x;
    return __x;
}
pub fn __uint64_identity(arg___x: __uint64_t) callconv(.c) __uint64_t {
    var __x = arg___x;
    _ = &__x;
    return __x;
}
pub const __sigset_t = extern struct {
    __val: [16]c_ulong = @import("std").mem.zeroes([16]c_ulong),
};
pub const sigset_t = __sigset_t;
pub const struct_timeval = extern struct {
    tv_sec: __time_t = @import("std").mem.zeroes(__time_t),
    tv_usec: __suseconds_t = @import("std").mem.zeroes(__suseconds_t),
};
pub const struct_timespec = extern struct {
    tv_sec: __time_t = @import("std").mem.zeroes(__time_t),
    tv_nsec: __syscall_slong_t = @import("std").mem.zeroes(__syscall_slong_t),
};
pub const __fd_mask = c_long;
pub const fd_set = extern struct {
    fds_bits: [16]__fd_mask = @import("std").mem.zeroes([16]__fd_mask),
};
pub const fd_mask = __fd_mask;
pub extern fn select(__nfds: c_int, noalias __readfds: [*c]fd_set, noalias __writefds: [*c]fd_set, noalias __exceptfds: [*c]fd_set, noalias __timeout: [*c]struct_timeval) c_int;
pub extern fn pselect(__nfds: c_int, noalias __readfds: [*c]fd_set, noalias __writefds: [*c]fd_set, noalias __exceptfds: [*c]fd_set, noalias __timeout: [*c]const struct_timespec, noalias __sigmask: [*c]const __sigset_t) c_int;
pub const blksize_t = __blksize_t;
pub const blkcnt_t = __blkcnt_t;
pub const fsblkcnt_t = __fsblkcnt_t;
pub const fsfilcnt_t = __fsfilcnt_t;
pub const blkcnt64_t = __blkcnt64_t;
pub const fsblkcnt64_t = __fsblkcnt64_t;
pub const fsfilcnt64_t = __fsfilcnt64_t;
const struct_unnamed_2 = extern struct {
    __low: c_uint = @import("std").mem.zeroes(c_uint),
    __high: c_uint = @import("std").mem.zeroes(c_uint),
};
pub const __atomic_wide_counter = extern union {
    __value64: c_ulonglong,
    __value32: struct_unnamed_2,
};
pub const struct___pthread_internal_list = extern struct {
    __prev: [*c]struct___pthread_internal_list = @import("std").mem.zeroes([*c]struct___pthread_internal_list),
    __next: [*c]struct___pthread_internal_list = @import("std").mem.zeroes([*c]struct___pthread_internal_list),
};
pub const __pthread_list_t = struct___pthread_internal_list;
pub const struct___pthread_internal_slist = extern struct {
    __next: [*c]struct___pthread_internal_slist = @import("std").mem.zeroes([*c]struct___pthread_internal_slist),
};
pub const __pthread_slist_t = struct___pthread_internal_slist;
pub const struct___pthread_mutex_s = extern struct {
    __lock: c_int = @import("std").mem.zeroes(c_int),
    __count: c_uint = @import("std").mem.zeroes(c_uint),
    __owner: c_int = @import("std").mem.zeroes(c_int),
    __nusers: c_uint = @import("std").mem.zeroes(c_uint),
    __kind: c_int = @import("std").mem.zeroes(c_int),
    __spins: c_short = @import("std").mem.zeroes(c_short),
    __elision: c_short = @import("std").mem.zeroes(c_short),
    __list: __pthread_list_t = @import("std").mem.zeroes(__pthread_list_t),
};
pub const struct___pthread_rwlock_arch_t = extern struct {
    __readers: c_uint = @import("std").mem.zeroes(c_uint),
    __writers: c_uint = @import("std").mem.zeroes(c_uint),
    __wrphase_futex: c_uint = @import("std").mem.zeroes(c_uint),
    __writers_futex: c_uint = @import("std").mem.zeroes(c_uint),
    __pad3: c_uint = @import("std").mem.zeroes(c_uint),
    __pad4: c_uint = @import("std").mem.zeroes(c_uint),
    __cur_writer: c_int = @import("std").mem.zeroes(c_int),
    __shared: c_int = @import("std").mem.zeroes(c_int),
    __rwelision: i8 = @import("std").mem.zeroes(i8),
    __pad1: [7]u8 = @import("std").mem.zeroes([7]u8),
    __pad2: c_ulong = @import("std").mem.zeroes(c_ulong),
    __flags: c_uint = @import("std").mem.zeroes(c_uint),
};
pub const struct___pthread_cond_s = extern struct {
    __wseq: __atomic_wide_counter = @import("std").mem.zeroes(__atomic_wide_counter),
    __g1_start: __atomic_wide_counter = @import("std").mem.zeroes(__atomic_wide_counter),
    __g_refs: [2]c_uint = @import("std").mem.zeroes([2]c_uint),
    __g_size: [2]c_uint = @import("std").mem.zeroes([2]c_uint),
    __g1_orig_size: c_uint = @import("std").mem.zeroes(c_uint),
    __wrefs: c_uint = @import("std").mem.zeroes(c_uint),
    __g_signals: [2]c_uint = @import("std").mem.zeroes([2]c_uint),
};
pub const __tss_t = c_uint;
pub const __thrd_t = c_ulong;
pub const __once_flag = extern struct {
    __data: c_int = @import("std").mem.zeroes(c_int),
};
pub const pthread_t = c_ulong;
pub const pthread_mutexattr_t = extern union {
    __size: [4]u8,
    __align: c_int,
};
pub const pthread_condattr_t = extern union {
    __size: [4]u8,
    __align: c_int,
};
pub const pthread_key_t = c_uint;
pub const pthread_once_t = c_int;
pub const union_pthread_attr_t = extern union {
    __size: [56]u8,
    __align: c_long,
};
pub const pthread_attr_t = union_pthread_attr_t;
pub const pthread_mutex_t = extern union {
    __data: struct___pthread_mutex_s,
    __size: [40]u8,
    __align: c_long,
};
pub const pthread_cond_t = extern union {
    __data: struct___pthread_cond_s,
    __size: [48]u8,
    __align: c_longlong,
};
pub const pthread_rwlock_t = extern union {
    __data: struct___pthread_rwlock_arch_t,
    __size: [56]u8,
    __align: c_long,
};
pub const pthread_rwlockattr_t = extern union {
    __size: [8]u8,
    __align: c_long,
};
pub const pthread_spinlock_t = c_int;
pub const pthread_barrier_t = extern union {
    __size: [32]u8,
    __align: c_long,
};
pub const pthread_barrierattr_t = extern union {
    __size: [4]u8,
    __align: c_int,
};
pub extern fn random() c_long;
pub extern fn srandom(__seed: c_uint) void;
pub extern fn initstate(__seed: c_uint, __statebuf: [*c]u8, __statelen: usize) [*c]u8;
pub extern fn setstate(__statebuf: [*c]u8) [*c]u8;
pub const struct_random_data = extern struct {
    fptr: [*c]i32 = @import("std").mem.zeroes([*c]i32),
    rptr: [*c]i32 = @import("std").mem.zeroes([*c]i32),
    state: [*c]i32 = @import("std").mem.zeroes([*c]i32),
    rand_type: c_int = @import("std").mem.zeroes(c_int),
    rand_deg: c_int = @import("std").mem.zeroes(c_int),
    rand_sep: c_int = @import("std").mem.zeroes(c_int),
    end_ptr: [*c]i32 = @import("std").mem.zeroes([*c]i32),
};
pub extern fn random_r(noalias __buf: [*c]struct_random_data, noalias __result: [*c]i32) c_int;
pub extern fn srandom_r(__seed: c_uint, __buf: [*c]struct_random_data) c_int;
pub extern fn initstate_r(__seed: c_uint, noalias __statebuf: [*c]u8, __statelen: usize, noalias __buf: [*c]struct_random_data) c_int;
pub extern fn setstate_r(noalias __statebuf: [*c]u8, noalias __buf: [*c]struct_random_data) c_int;
pub extern fn rand() c_int;
pub extern fn srand(__seed: c_uint) void;
pub extern fn rand_r(__seed: [*c]c_uint) c_int;
pub extern fn drand48() f64;
pub extern fn erand48(__xsubi: [*c]c_ushort) f64;
pub extern fn lrand48() c_long;
pub extern fn nrand48(__xsubi: [*c]c_ushort) c_long;
pub extern fn mrand48() c_long;
pub extern fn jrand48(__xsubi: [*c]c_ushort) c_long;
pub extern fn srand48(__seedval: c_long) void;
pub extern fn seed48(__seed16v: [*c]c_ushort) [*c]c_ushort;
pub extern fn lcong48(__param: [*c]c_ushort) void;
pub const struct_drand48_data = extern struct {
    __x: [3]c_ushort = @import("std").mem.zeroes([3]c_ushort),
    __old_x: [3]c_ushort = @import("std").mem.zeroes([3]c_ushort),
    __c: c_ushort = @import("std").mem.zeroes(c_ushort),
    __init: c_ushort = @import("std").mem.zeroes(c_ushort),
    __a: c_ulonglong = @import("std").mem.zeroes(c_ulonglong),
};
pub extern fn drand48_r(noalias __buffer: [*c]struct_drand48_data, noalias __result: [*c]f64) c_int;
pub extern fn erand48_r(__xsubi: [*c]c_ushort, noalias __buffer: [*c]struct_drand48_data, noalias __result: [*c]f64) c_int;
pub extern fn lrand48_r(noalias __buffer: [*c]struct_drand48_data, noalias __result: [*c]c_long) c_int;
pub extern fn nrand48_r(__xsubi: [*c]c_ushort, noalias __buffer: [*c]struct_drand48_data, noalias __result: [*c]c_long) c_int;
pub extern fn mrand48_r(noalias __buffer: [*c]struct_drand48_data, noalias __result: [*c]c_long) c_int;
pub extern fn jrand48_r(__xsubi: [*c]c_ushort, noalias __buffer: [*c]struct_drand48_data, noalias __result: [*c]c_long) c_int;
pub extern fn srand48_r(__seedval: c_long, __buffer: [*c]struct_drand48_data) c_int;
pub extern fn seed48_r(__seed16v: [*c]c_ushort, __buffer: [*c]struct_drand48_data) c_int;
pub extern fn lcong48_r(__param: [*c]c_ushort, __buffer: [*c]struct_drand48_data) c_int;
pub extern fn arc4random() __uint32_t;
pub extern fn arc4random_buf(__buf: ?*anyopaque, __size: usize) void;
pub extern fn arc4random_uniform(__upper_bound: __uint32_t) __uint32_t;
pub extern fn malloc(__size: c_ulong) ?*anyopaque;
pub extern fn calloc(__nmemb: c_ulong, __size: c_ulong) ?*anyopaque;
pub extern fn realloc(__ptr: ?*anyopaque, __size: c_ulong) ?*anyopaque;
pub extern fn free(__ptr: ?*anyopaque) void;
pub extern fn reallocarray(__ptr: ?*anyopaque, __nmemb: usize, __size: usize) ?*anyopaque;
pub extern fn alloca(__size: c_ulong) ?*anyopaque;
pub extern fn valloc(__size: usize) ?*anyopaque;
pub extern fn posix_memalign(__memptr: [*c]?*anyopaque, __alignment: usize, __size: usize) c_int;
pub extern fn aligned_alloc(__alignment: c_ulong, __size: c_ulong) ?*anyopaque;
pub extern fn abort() noreturn;
pub extern fn atexit(__func: ?*const fn () callconv(.c) void) c_int;
pub extern fn at_quick_exit(__func: ?*const fn () callconv(.c) void) c_int;
pub extern fn on_exit(__func: ?*const fn (c_int, ?*anyopaque) callconv(.c) void, __arg: ?*anyopaque) c_int;
pub extern fn exit(__status: c_int) noreturn;
pub extern fn quick_exit(__status: c_int) noreturn;
pub extern fn _Exit(__status: c_int) noreturn;
pub extern fn getenv(__name: [*c]const u8) [*c]u8;
pub extern fn secure_getenv(__name: [*c]const u8) [*c]u8;
pub extern fn putenv(__string: [*c]u8) c_int;
pub extern fn setenv(__name: [*c]const u8, __value: [*c]const u8, __replace: c_int) c_int;
pub extern fn unsetenv(__name: [*c]const u8) c_int;
pub extern fn clearenv() c_int;
pub extern fn mktemp(__template: [*c]u8) [*c]u8;
pub extern fn mkstemp(__template: [*c]u8) c_int;
pub extern fn mkstemp64(__template: [*c]u8) c_int;
pub extern fn mkstemps(__template: [*c]u8, __suffixlen: c_int) c_int;
pub extern fn mkstemps64(__template: [*c]u8, __suffixlen: c_int) c_int;
pub extern fn mkdtemp(__template: [*c]u8) [*c]u8;
pub extern fn mkostemp(__template: [*c]u8, __flags: c_int) c_int;
pub extern fn mkostemp64(__template: [*c]u8, __flags: c_int) c_int;
pub extern fn mkostemps(__template: [*c]u8, __suffixlen: c_int, __flags: c_int) c_int;
pub extern fn mkostemps64(__template: [*c]u8, __suffixlen: c_int, __flags: c_int) c_int;
pub extern fn system(__command: [*c]const u8) c_int;
pub extern fn canonicalize_file_name(__name: [*c]const u8) [*c]u8;
pub extern fn realpath(noalias __name: [*c]const u8, noalias __resolved: [*c]u8) [*c]u8;
pub const __compar_fn_t = ?*const fn (?*const anyopaque, ?*const anyopaque) callconv(.c) c_int;
pub const comparison_fn_t = __compar_fn_t;
pub const __compar_d_fn_t = ?*const fn (?*const anyopaque, ?*const anyopaque, ?*anyopaque) callconv(.c) c_int;
pub extern fn bsearch(__key: ?*const anyopaque, __base: ?*const anyopaque, __nmemb: usize, __size: usize, __compar: __compar_fn_t) ?*anyopaque;
pub extern fn qsort(__base: ?*anyopaque, __nmemb: usize, __size: usize, __compar: __compar_fn_t) void;
pub extern fn qsort_r(__base: ?*anyopaque, __nmemb: usize, __size: usize, __compar: __compar_d_fn_t, __arg: ?*anyopaque) void;
pub extern fn abs(__x: c_int) c_int;
pub extern fn labs(__x: c_long) c_long;
pub extern fn llabs(__x: c_longlong) c_longlong;
pub extern fn div(__numer: c_int, __denom: c_int) div_t;
pub extern fn ldiv(__numer: c_long, __denom: c_long) ldiv_t;
pub extern fn lldiv(__numer: c_longlong, __denom: c_longlong) lldiv_t;
pub extern fn ecvt(__value: f64, __ndigit: c_int, noalias __decpt: [*c]c_int, noalias __sign: [*c]c_int) [*c]u8;
pub extern fn fcvt(__value: f64, __ndigit: c_int, noalias __decpt: [*c]c_int, noalias __sign: [*c]c_int) [*c]u8;
pub extern fn gcvt(__value: f64, __ndigit: c_int, __buf: [*c]u8) [*c]u8;
pub extern fn qecvt(__value: c_longdouble, __ndigit: c_int, noalias __decpt: [*c]c_int, noalias __sign: [*c]c_int) [*c]u8;
pub extern fn qfcvt(__value: c_longdouble, __ndigit: c_int, noalias __decpt: [*c]c_int, noalias __sign: [*c]c_int) [*c]u8;
pub extern fn qgcvt(__value: c_longdouble, __ndigit: c_int, __buf: [*c]u8) [*c]u8;
pub extern fn ecvt_r(__value: f64, __ndigit: c_int, noalias __decpt: [*c]c_int, noalias __sign: [*c]c_int, noalias __buf: [*c]u8, __len: usize) c_int;
pub extern fn fcvt_r(__value: f64, __ndigit: c_int, noalias __decpt: [*c]c_int, noalias __sign: [*c]c_int, noalias __buf: [*c]u8, __len: usize) c_int;
pub extern fn qecvt_r(__value: c_longdouble, __ndigit: c_int, noalias __decpt: [*c]c_int, noalias __sign: [*c]c_int, noalias __buf: [*c]u8, __len: usize) c_int;
pub extern fn qfcvt_r(__value: c_longdouble, __ndigit: c_int, noalias __decpt: [*c]c_int, noalias __sign: [*c]c_int, noalias __buf: [*c]u8, __len: usize) c_int;
pub extern fn mblen(__s: [*c]const u8, __n: usize) c_int;
pub extern fn mbtowc(noalias __pwc: [*c]wchar_t, noalias __s: [*c]const u8, __n: usize) c_int;
pub extern fn wctomb(__s: [*c]u8, __wchar: wchar_t) c_int;
pub extern fn mbstowcs(noalias __pwcs: [*c]wchar_t, noalias __s: [*c]const u8, __n: usize) usize;
pub extern fn wcstombs(noalias __s: [*c]u8, noalias __pwcs: [*c]const wchar_t, __n: usize) usize;
pub extern fn rpmatch(__response: [*c]const u8) c_int;
pub extern fn getsubopt(noalias __optionp: [*c][*c]u8, noalias __tokens: [*c]const [*c]u8, noalias __valuep: [*c][*c]u8) c_int;
pub extern fn posix_openpt(__oflag: c_int) c_int;
pub extern fn grantpt(__fd: c_int) c_int;
pub extern fn unlockpt(__fd: c_int) c_int;
pub extern fn ptsname(__fd: c_int) [*c]u8;
pub extern fn ptsname_r(__fd: c_int, __buf: [*c]u8, __buflen: usize) c_int;
pub extern fn getpt() c_int;
pub extern fn getloadavg(__loadavg: [*c]f64, __nelem: c_int) c_int;
pub const struct_sched_param = extern struct {
    sched_priority: c_int = @import("std").mem.zeroes(c_int),
};
pub extern fn clone(__fn: ?*const fn (?*anyopaque) callconv(.c) c_int, __child_stack: ?*anyopaque, __flags: c_int, __arg: ?*anyopaque, ...) c_int;
pub extern fn unshare(__flags: c_int) c_int;
pub extern fn sched_getcpu() c_int;
pub extern fn getcpu([*c]c_uint, [*c]c_uint) c_int;
pub extern fn setns(__fd: c_int, __nstype: c_int) c_int;
pub const __cpu_mask = c_ulong;
pub const cpu_set_t = extern struct {
    __bits: [16]__cpu_mask = @import("std").mem.zeroes([16]__cpu_mask),
};
pub extern fn __sched_cpucount(__setsize: usize, __setp: [*c]const cpu_set_t) c_int;
pub extern fn __sched_cpualloc(__count: usize) [*c]cpu_set_t;
pub extern fn __sched_cpufree(__set: [*c]cpu_set_t) void;
pub extern fn sched_setparam(__pid: __pid_t, __param: [*c]const struct_sched_param) c_int;
pub extern fn sched_getparam(__pid: __pid_t, __param: [*c]struct_sched_param) c_int;
pub extern fn sched_setscheduler(__pid: __pid_t, __policy: c_int, __param: [*c]const struct_sched_param) c_int;
pub extern fn sched_getscheduler(__pid: __pid_t) c_int;
pub extern fn sched_yield() c_int;
pub extern fn sched_get_priority_max(__algorithm: c_int) c_int;
pub extern fn sched_get_priority_min(__algorithm: c_int) c_int;
pub extern fn sched_rr_get_interval(__pid: __pid_t, __t: [*c]struct_timespec) c_int;
pub extern fn sched_setaffinity(__pid: __pid_t, __cpusetsize: usize, __cpuset: [*c]const cpu_set_t) c_int;
pub extern fn sched_getaffinity(__pid: __pid_t, __cpusetsize: usize, __cpuset: [*c]cpu_set_t) c_int;
// /usr/include/x86_64-linux-gnu/bits/timex.h:81:3: warning: struct demoted to opaque type - has bitfield
pub const struct_timex = opaque {};
pub extern fn clock_adjtime(__clock_id: __clockid_t, __utx: ?*struct_timex) c_int;
pub const struct_tm = extern struct {
    tm_sec: c_int = @import("std").mem.zeroes(c_int),
    tm_min: c_int = @import("std").mem.zeroes(c_int),
    tm_hour: c_int = @import("std").mem.zeroes(c_int),
    tm_mday: c_int = @import("std").mem.zeroes(c_int),
    tm_mon: c_int = @import("std").mem.zeroes(c_int),
    tm_year: c_int = @import("std").mem.zeroes(c_int),
    tm_wday: c_int = @import("std").mem.zeroes(c_int),
    tm_yday: c_int = @import("std").mem.zeroes(c_int),
    tm_isdst: c_int = @import("std").mem.zeroes(c_int),
    tm_gmtoff: c_long = @import("std").mem.zeroes(c_long),
    tm_zone: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
};
pub const struct_itimerspec = extern struct {
    it_interval: struct_timespec = @import("std").mem.zeroes(struct_timespec),
    it_value: struct_timespec = @import("std").mem.zeroes(struct_timespec),
};
pub const struct_sigevent = opaque {};
pub extern fn clock() clock_t;
pub extern fn time(__timer: [*c]time_t) time_t;
pub extern fn difftime(__time1: time_t, __time0: time_t) f64;
pub extern fn mktime(__tp: [*c]struct_tm) time_t;
pub extern fn strftime(noalias __s: [*c]u8, __maxsize: usize, noalias __format: [*c]const u8, noalias __tp: [*c]const struct_tm) usize;
pub extern fn strptime(noalias __s: [*c]const u8, noalias __fmt: [*c]const u8, __tp: [*c]struct_tm) [*c]u8;
pub extern fn strftime_l(noalias __s: [*c]u8, __maxsize: usize, noalias __format: [*c]const u8, noalias __tp: [*c]const struct_tm, __loc: locale_t) usize;
pub extern fn strptime_l(noalias __s: [*c]const u8, noalias __fmt: [*c]const u8, __tp: [*c]struct_tm, __loc: locale_t) [*c]u8;
pub extern fn gmtime(__timer: [*c]const time_t) [*c]struct_tm;
pub extern fn localtime(__timer: [*c]const time_t) [*c]struct_tm;
pub extern fn gmtime_r(noalias __timer: [*c]const time_t, noalias __tp: [*c]struct_tm) [*c]struct_tm;
pub extern fn localtime_r(noalias __timer: [*c]const time_t, noalias __tp: [*c]struct_tm) [*c]struct_tm;
pub extern fn asctime(__tp: [*c]const struct_tm) [*c]u8;
pub extern fn ctime(__timer: [*c]const time_t) [*c]u8;
pub extern fn asctime_r(noalias __tp: [*c]const struct_tm, noalias __buf: [*c]u8) [*c]u8;
pub extern fn ctime_r(noalias __timer: [*c]const time_t, noalias __buf: [*c]u8) [*c]u8;
pub extern var __tzname: [2][*c]u8;
pub extern var __daylight: c_int;
pub extern var __timezone: c_long;
pub extern var tzname: [2][*c]u8;
pub extern fn tzset() void;
pub extern var daylight: c_int;
pub extern var timezone: c_long;
pub extern fn timegm(__tp: [*c]struct_tm) time_t;
pub extern fn timelocal(__tp: [*c]struct_tm) time_t;
pub extern fn dysize(__year: c_int) c_int;
pub extern fn nanosleep(__requested_time: [*c]const struct_timespec, __remaining: [*c]struct_timespec) c_int;
pub extern fn clock_getres(__clock_id: clockid_t, __res: [*c]struct_timespec) c_int;
pub extern fn clock_gettime(__clock_id: clockid_t, __tp: [*c]struct_timespec) c_int;
pub extern fn clock_settime(__clock_id: clockid_t, __tp: [*c]const struct_timespec) c_int;
pub extern fn clock_nanosleep(__clock_id: clockid_t, __flags: c_int, __req: [*c]const struct_timespec, __rem: [*c]struct_timespec) c_int;
pub extern fn clock_getcpuclockid(__pid: pid_t, __clock_id: [*c]clockid_t) c_int;
pub extern fn timer_create(__clock_id: clockid_t, noalias __evp: ?*struct_sigevent, noalias __timerid: [*c]timer_t) c_int;
pub extern fn timer_delete(__timerid: timer_t) c_int;
pub extern fn timer_settime(__timerid: timer_t, __flags: c_int, noalias __value: [*c]const struct_itimerspec, noalias __ovalue: [*c]struct_itimerspec) c_int;
pub extern fn timer_gettime(__timerid: timer_t, __value: [*c]struct_itimerspec) c_int;
pub extern fn timer_getoverrun(__timerid: timer_t) c_int;
pub extern fn timespec_get(__ts: [*c]struct_timespec, __base: c_int) c_int;
pub extern fn timespec_getres(__ts: [*c]struct_timespec, __base: c_int) c_int;
pub extern var getdate_err: c_int;
pub extern fn getdate(__string: [*c]const u8) [*c]struct_tm;
pub extern fn getdate_r(noalias __string: [*c]const u8, noalias __resbufp: [*c]struct_tm) c_int;
pub const __jmp_buf = [8]c_long;
pub const struct___jmp_buf_tag = extern struct {
    __jmpbuf: __jmp_buf = @import("std").mem.zeroes(__jmp_buf),
    __mask_was_saved: c_int = @import("std").mem.zeroes(c_int),
    __saved_mask: __sigset_t = @import("std").mem.zeroes(__sigset_t),
};
pub extern fn __sysconf(__name: c_int) c_long;
pub const PTHREAD_CREATE_JOINABLE: c_int = 0;
pub const PTHREAD_CREATE_DETACHED: c_int = 1;
const enum_unnamed_3 = c_uint;
pub const PTHREAD_MUTEX_TIMED_NP: c_int = 0;
pub const PTHREAD_MUTEX_RECURSIVE_NP: c_int = 1;
pub const PTHREAD_MUTEX_ERRORCHECK_NP: c_int = 2;
pub const PTHREAD_MUTEX_ADAPTIVE_NP: c_int = 3;
pub const PTHREAD_MUTEX_NORMAL: c_int = 0;
pub const PTHREAD_MUTEX_RECURSIVE: c_int = 1;
pub const PTHREAD_MUTEX_ERRORCHECK: c_int = 2;
pub const PTHREAD_MUTEX_DEFAULT: c_int = 0;
pub const PTHREAD_MUTEX_FAST_NP: c_int = 0;
const enum_unnamed_4 = c_uint;
pub const PTHREAD_MUTEX_STALLED: c_int = 0;
pub const PTHREAD_MUTEX_STALLED_NP: c_int = 0;
pub const PTHREAD_MUTEX_ROBUST: c_int = 1;
pub const PTHREAD_MUTEX_ROBUST_NP: c_int = 1;
const enum_unnamed_5 = c_uint;
pub const PTHREAD_PRIO_NONE: c_int = 0;
pub const PTHREAD_PRIO_INHERIT: c_int = 1;
pub const PTHREAD_PRIO_PROTECT: c_int = 2;
const enum_unnamed_6 = c_uint;
pub const PTHREAD_RWLOCK_PREFER_READER_NP: c_int = 0;
pub const PTHREAD_RWLOCK_PREFER_WRITER_NP: c_int = 1;
pub const PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP: c_int = 2;
pub const PTHREAD_RWLOCK_DEFAULT_NP: c_int = 0;
const enum_unnamed_7 = c_uint;
pub const PTHREAD_INHERIT_SCHED: c_int = 0;
pub const PTHREAD_EXPLICIT_SCHED: c_int = 1;
const enum_unnamed_8 = c_uint;
pub const PTHREAD_SCOPE_SYSTEM: c_int = 0;
pub const PTHREAD_SCOPE_PROCESS: c_int = 1;
const enum_unnamed_9 = c_uint;
pub const PTHREAD_PROCESS_PRIVATE: c_int = 0;
pub const PTHREAD_PROCESS_SHARED: c_int = 1;
const enum_unnamed_10 = c_uint;
pub const struct__pthread_cleanup_buffer = extern struct {
    __routine: ?*const fn (?*anyopaque) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*anyopaque) callconv(.c) void),
    __arg: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    __canceltype: c_int = @import("std").mem.zeroes(c_int),
    __prev: [*c]struct__pthread_cleanup_buffer = @import("std").mem.zeroes([*c]struct__pthread_cleanup_buffer),
};
pub const PTHREAD_CANCEL_ENABLE: c_int = 0;
pub const PTHREAD_CANCEL_DISABLE: c_int = 1;
const enum_unnamed_11 = c_uint;
pub const PTHREAD_CANCEL_DEFERRED: c_int = 0;
pub const PTHREAD_CANCEL_ASYNCHRONOUS: c_int = 1;
const enum_unnamed_12 = c_uint;
pub extern fn pthread_create(noalias __newthread: [*c]pthread_t, noalias __attr: [*c]const pthread_attr_t, __start_routine: ?*const fn (?*anyopaque) callconv(.c) ?*anyopaque, noalias __arg: ?*anyopaque) c_int;
pub extern fn pthread_exit(__retval: ?*anyopaque) noreturn;
pub extern fn pthread_join(__th: pthread_t, __thread_return: [*c]?*anyopaque) c_int;
pub extern fn pthread_tryjoin_np(__th: pthread_t, __thread_return: [*c]?*anyopaque) c_int;
pub extern fn pthread_timedjoin_np(__th: pthread_t, __thread_return: [*c]?*anyopaque, __abstime: [*c]const struct_timespec) c_int;
pub extern fn pthread_clockjoin_np(__th: pthread_t, __thread_return: [*c]?*anyopaque, __clockid: clockid_t, __abstime: [*c]const struct_timespec) c_int;
pub extern fn pthread_detach(__th: pthread_t) c_int;
pub extern fn pthread_self() pthread_t;
pub extern fn pthread_equal(__thread1: pthread_t, __thread2: pthread_t) c_int;
pub extern fn pthread_attr_init(__attr: [*c]pthread_attr_t) c_int;
pub extern fn pthread_attr_destroy(__attr: [*c]pthread_attr_t) c_int;
pub extern fn pthread_attr_getdetachstate(__attr: [*c]const pthread_attr_t, __detachstate: [*c]c_int) c_int;
pub extern fn pthread_attr_setdetachstate(__attr: [*c]pthread_attr_t, __detachstate: c_int) c_int;
pub extern fn pthread_attr_getguardsize(__attr: [*c]const pthread_attr_t, __guardsize: [*c]usize) c_int;
pub extern fn pthread_attr_setguardsize(__attr: [*c]pthread_attr_t, __guardsize: usize) c_int;
pub extern fn pthread_attr_getschedparam(noalias __attr: [*c]const pthread_attr_t, noalias __param: [*c]struct_sched_param) c_int;
pub extern fn pthread_attr_setschedparam(noalias __attr: [*c]pthread_attr_t, noalias __param: [*c]const struct_sched_param) c_int;
pub extern fn pthread_attr_getschedpolicy(noalias __attr: [*c]const pthread_attr_t, noalias __policy: [*c]c_int) c_int;
pub extern fn pthread_attr_setschedpolicy(__attr: [*c]pthread_attr_t, __policy: c_int) c_int;
pub extern fn pthread_attr_getinheritsched(noalias __attr: [*c]const pthread_attr_t, noalias __inherit: [*c]c_int) c_int;
pub extern fn pthread_attr_setinheritsched(__attr: [*c]pthread_attr_t, __inherit: c_int) c_int;
pub extern fn pthread_attr_getscope(noalias __attr: [*c]const pthread_attr_t, noalias __scope: [*c]c_int) c_int;
pub extern fn pthread_attr_setscope(__attr: [*c]pthread_attr_t, __scope: c_int) c_int;
pub extern fn pthread_attr_getstackaddr(noalias __attr: [*c]const pthread_attr_t, noalias __stackaddr: [*c]?*anyopaque) c_int;
pub extern fn pthread_attr_setstackaddr(__attr: [*c]pthread_attr_t, __stackaddr: ?*anyopaque) c_int;
pub extern fn pthread_attr_getstacksize(noalias __attr: [*c]const pthread_attr_t, noalias __stacksize: [*c]usize) c_int;
pub extern fn pthread_attr_setstacksize(__attr: [*c]pthread_attr_t, __stacksize: usize) c_int;
pub extern fn pthread_attr_getstack(noalias __attr: [*c]const pthread_attr_t, noalias __stackaddr: [*c]?*anyopaque, noalias __stacksize: [*c]usize) c_int;
pub extern fn pthread_attr_setstack(__attr: [*c]pthread_attr_t, __stackaddr: ?*anyopaque, __stacksize: usize) c_int;
pub extern fn pthread_attr_setaffinity_np(__attr: [*c]pthread_attr_t, __cpusetsize: usize, __cpuset: [*c]const cpu_set_t) c_int;
pub extern fn pthread_attr_getaffinity_np(__attr: [*c]const pthread_attr_t, __cpusetsize: usize, __cpuset: [*c]cpu_set_t) c_int;
pub extern fn pthread_getattr_default_np(__attr: [*c]pthread_attr_t) c_int;
pub extern fn pthread_attr_setsigmask_np(__attr: [*c]pthread_attr_t, sigmask: [*c]const __sigset_t) c_int;
pub extern fn pthread_attr_getsigmask_np(__attr: [*c]const pthread_attr_t, sigmask: [*c]__sigset_t) c_int;
pub extern fn pthread_setattr_default_np(__attr: [*c]const pthread_attr_t) c_int;
pub extern fn pthread_getattr_np(__th: pthread_t, __attr: [*c]pthread_attr_t) c_int;
pub extern fn pthread_setschedparam(__target_thread: pthread_t, __policy: c_int, __param: [*c]const struct_sched_param) c_int;
pub extern fn pthread_getschedparam(__target_thread: pthread_t, noalias __policy: [*c]c_int, noalias __param: [*c]struct_sched_param) c_int;
pub extern fn pthread_setschedprio(__target_thread: pthread_t, __prio: c_int) c_int;
pub extern fn pthread_getname_np(__target_thread: pthread_t, __buf: [*c]u8, __buflen: usize) c_int;
pub extern fn pthread_setname_np(__target_thread: pthread_t, __name: [*c]const u8) c_int;
pub extern fn pthread_getconcurrency() c_int;
pub extern fn pthread_setconcurrency(__level: c_int) c_int;
pub extern fn pthread_yield() c_int;
pub extern fn pthread_setaffinity_np(__th: pthread_t, __cpusetsize: usize, __cpuset: [*c]const cpu_set_t) c_int;
pub extern fn pthread_getaffinity_np(__th: pthread_t, __cpusetsize: usize, __cpuset: [*c]cpu_set_t) c_int;
pub extern fn pthread_once(__once_control: [*c]pthread_once_t, __init_routine: ?*const fn () callconv(.c) void) c_int;
pub extern fn pthread_setcancelstate(__state: c_int, __oldstate: [*c]c_int) c_int;
pub extern fn pthread_setcanceltype(__type: c_int, __oldtype: [*c]c_int) c_int;
pub extern fn pthread_cancel(__th: pthread_t) c_int;
pub extern fn pthread_testcancel() void;
pub const struct___cancel_jmp_buf_tag = extern struct {
    __cancel_jmp_buf: __jmp_buf = @import("std").mem.zeroes(__jmp_buf),
    __mask_was_saved: c_int = @import("std").mem.zeroes(c_int),
};
pub const __pthread_unwind_buf_t = extern struct {
    __cancel_jmp_buf: [1]struct___cancel_jmp_buf_tag = @import("std").mem.zeroes([1]struct___cancel_jmp_buf_tag),
    __pad: [4]?*anyopaque = @import("std").mem.zeroes([4]?*anyopaque),
};
pub const struct___pthread_cleanup_frame = extern struct {
    __cancel_routine: ?*const fn (?*anyopaque) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*anyopaque) callconv(.c) void),
    __cancel_arg: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    __do_it: c_int = @import("std").mem.zeroes(c_int),
    __cancel_type: c_int = @import("std").mem.zeroes(c_int),
};
pub extern fn __pthread_register_cancel(__buf: [*c]__pthread_unwind_buf_t) void;
pub extern fn __pthread_unregister_cancel(__buf: [*c]__pthread_unwind_buf_t) void;
pub extern fn __pthread_register_cancel_defer(__buf: [*c]__pthread_unwind_buf_t) void;
pub extern fn __pthread_unregister_cancel_restore(__buf: [*c]__pthread_unwind_buf_t) void;
pub extern fn __pthread_unwind_next(__buf: [*c]__pthread_unwind_buf_t) noreturn;
pub extern fn __sigsetjmp(__env: [*c]struct___jmp_buf_tag, __savemask: c_int) c_int;
pub extern fn pthread_mutex_init(__mutex: [*c]pthread_mutex_t, __mutexattr: [*c]const pthread_mutexattr_t) c_int;
pub extern fn pthread_mutex_destroy(__mutex: [*c]pthread_mutex_t) c_int;
pub extern fn pthread_mutex_trylock(__mutex: [*c]pthread_mutex_t) c_int;
pub extern fn pthread_mutex_lock(__mutex: [*c]pthread_mutex_t) c_int;
pub extern fn pthread_mutex_timedlock(noalias __mutex: [*c]pthread_mutex_t, noalias __abstime: [*c]const struct_timespec) c_int;
pub extern fn pthread_mutex_clocklock(noalias __mutex: [*c]pthread_mutex_t, __clockid: clockid_t, noalias __abstime: [*c]const struct_timespec) c_int;
pub extern fn pthread_mutex_unlock(__mutex: [*c]pthread_mutex_t) c_int;
pub extern fn pthread_mutex_getprioceiling(noalias __mutex: [*c]const pthread_mutex_t, noalias __prioceiling: [*c]c_int) c_int;
pub extern fn pthread_mutex_setprioceiling(noalias __mutex: [*c]pthread_mutex_t, __prioceiling: c_int, noalias __old_ceiling: [*c]c_int) c_int;
pub extern fn pthread_mutex_consistent(__mutex: [*c]pthread_mutex_t) c_int;
pub extern fn pthread_mutex_consistent_np([*c]pthread_mutex_t) c_int;
pub extern fn pthread_mutexattr_init(__attr: [*c]pthread_mutexattr_t) c_int;
pub extern fn pthread_mutexattr_destroy(__attr: [*c]pthread_mutexattr_t) c_int;
pub extern fn pthread_mutexattr_getpshared(noalias __attr: [*c]const pthread_mutexattr_t, noalias __pshared: [*c]c_int) c_int;
pub extern fn pthread_mutexattr_setpshared(__attr: [*c]pthread_mutexattr_t, __pshared: c_int) c_int;
pub extern fn pthread_mutexattr_gettype(noalias __attr: [*c]const pthread_mutexattr_t, noalias __kind: [*c]c_int) c_int;
pub extern fn pthread_mutexattr_settype(__attr: [*c]pthread_mutexattr_t, __kind: c_int) c_int;
pub extern fn pthread_mutexattr_getprotocol(noalias __attr: [*c]const pthread_mutexattr_t, noalias __protocol: [*c]c_int) c_int;
pub extern fn pthread_mutexattr_setprotocol(__attr: [*c]pthread_mutexattr_t, __protocol: c_int) c_int;
pub extern fn pthread_mutexattr_getprioceiling(noalias __attr: [*c]const pthread_mutexattr_t, noalias __prioceiling: [*c]c_int) c_int;
pub extern fn pthread_mutexattr_setprioceiling(__attr: [*c]pthread_mutexattr_t, __prioceiling: c_int) c_int;
pub extern fn pthread_mutexattr_getrobust(__attr: [*c]const pthread_mutexattr_t, __robustness: [*c]c_int) c_int;
pub extern fn pthread_mutexattr_getrobust_np([*c]pthread_mutexattr_t, [*c]c_int) c_int;
pub extern fn pthread_mutexattr_setrobust(__attr: [*c]pthread_mutexattr_t, __robustness: c_int) c_int;
pub extern fn pthread_mutexattr_setrobust_np([*c]pthread_mutexattr_t, c_int) c_int;
pub extern fn pthread_rwlock_init(noalias __rwlock: [*c]pthread_rwlock_t, noalias __attr: [*c]const pthread_rwlockattr_t) c_int;
pub extern fn pthread_rwlock_destroy(__rwlock: [*c]pthread_rwlock_t) c_int;
pub extern fn pthread_rwlock_rdlock(__rwlock: [*c]pthread_rwlock_t) c_int;
pub extern fn pthread_rwlock_tryrdlock(__rwlock: [*c]pthread_rwlock_t) c_int;
pub extern fn pthread_rwlock_timedrdlock(noalias __rwlock: [*c]pthread_rwlock_t, noalias __abstime: [*c]const struct_timespec) c_int;
pub extern fn pthread_rwlock_clockrdlock(noalias __rwlock: [*c]pthread_rwlock_t, __clockid: clockid_t, noalias __abstime: [*c]const struct_timespec) c_int;
pub extern fn pthread_rwlock_wrlock(__rwlock: [*c]pthread_rwlock_t) c_int;
pub extern fn pthread_rwlock_trywrlock(__rwlock: [*c]pthread_rwlock_t) c_int;
pub extern fn pthread_rwlock_timedwrlock(noalias __rwlock: [*c]pthread_rwlock_t, noalias __abstime: [*c]const struct_timespec) c_int;
pub extern fn pthread_rwlock_clockwrlock(noalias __rwlock: [*c]pthread_rwlock_t, __clockid: clockid_t, noalias __abstime: [*c]const struct_timespec) c_int;
pub extern fn pthread_rwlock_unlock(__rwlock: [*c]pthread_rwlock_t) c_int;
pub extern fn pthread_rwlockattr_init(__attr: [*c]pthread_rwlockattr_t) c_int;
pub extern fn pthread_rwlockattr_destroy(__attr: [*c]pthread_rwlockattr_t) c_int;
pub extern fn pthread_rwlockattr_getpshared(noalias __attr: [*c]const pthread_rwlockattr_t, noalias __pshared: [*c]c_int) c_int;
pub extern fn pthread_rwlockattr_setpshared(__attr: [*c]pthread_rwlockattr_t, __pshared: c_int) c_int;
pub extern fn pthread_rwlockattr_getkind_np(noalias __attr: [*c]const pthread_rwlockattr_t, noalias __pref: [*c]c_int) c_int;
pub extern fn pthread_rwlockattr_setkind_np(__attr: [*c]pthread_rwlockattr_t, __pref: c_int) c_int;
pub extern fn pthread_cond_init(noalias __cond: [*c]pthread_cond_t, noalias __cond_attr: [*c]const pthread_condattr_t) c_int;
pub extern fn pthread_cond_destroy(__cond: [*c]pthread_cond_t) c_int;
pub extern fn pthread_cond_signal(__cond: [*c]pthread_cond_t) c_int;
pub extern fn pthread_cond_broadcast(__cond: [*c]pthread_cond_t) c_int;
pub extern fn pthread_cond_wait(noalias __cond: [*c]pthread_cond_t, noalias __mutex: [*c]pthread_mutex_t) c_int;
pub extern fn pthread_cond_timedwait(noalias __cond: [*c]pthread_cond_t, noalias __mutex: [*c]pthread_mutex_t, noalias __abstime: [*c]const struct_timespec) c_int;
pub extern fn pthread_cond_clockwait(noalias __cond: [*c]pthread_cond_t, noalias __mutex: [*c]pthread_mutex_t, __clock_id: __clockid_t, noalias __abstime: [*c]const struct_timespec) c_int;
pub extern fn pthread_condattr_init(__attr: [*c]pthread_condattr_t) c_int;
pub extern fn pthread_condattr_destroy(__attr: [*c]pthread_condattr_t) c_int;
pub extern fn pthread_condattr_getpshared(noalias __attr: [*c]const pthread_condattr_t, noalias __pshared: [*c]c_int) c_int;
pub extern fn pthread_condattr_setpshared(__attr: [*c]pthread_condattr_t, __pshared: c_int) c_int;
pub extern fn pthread_condattr_getclock(noalias __attr: [*c]const pthread_condattr_t, noalias __clock_id: [*c]__clockid_t) c_int;
pub extern fn pthread_condattr_setclock(__attr: [*c]pthread_condattr_t, __clock_id: __clockid_t) c_int;
pub extern fn pthread_spin_init(__lock: [*c]volatile pthread_spinlock_t, __pshared: c_int) c_int;
pub extern fn pthread_spin_destroy(__lock: [*c]volatile pthread_spinlock_t) c_int;
pub extern fn pthread_spin_lock(__lock: [*c]volatile pthread_spinlock_t) c_int;
pub extern fn pthread_spin_trylock(__lock: [*c]volatile pthread_spinlock_t) c_int;
pub extern fn pthread_spin_unlock(__lock: [*c]volatile pthread_spinlock_t) c_int;
pub extern fn pthread_barrier_init(noalias __barrier: [*c]pthread_barrier_t, noalias __attr: [*c]const pthread_barrierattr_t, __count: c_uint) c_int;
pub extern fn pthread_barrier_destroy(__barrier: [*c]pthread_barrier_t) c_int;
pub extern fn pthread_barrier_wait(__barrier: [*c]pthread_barrier_t) c_int;
pub extern fn pthread_barrierattr_init(__attr: [*c]pthread_barrierattr_t) c_int;
pub extern fn pthread_barrierattr_destroy(__attr: [*c]pthread_barrierattr_t) c_int;
pub extern fn pthread_barrierattr_getpshared(noalias __attr: [*c]const pthread_barrierattr_t, noalias __pshared: [*c]c_int) c_int;
pub extern fn pthread_barrierattr_setpshared(__attr: [*c]pthread_barrierattr_t, __pshared: c_int) c_int;
pub extern fn pthread_key_create(__key: [*c]pthread_key_t, __destr_function: ?*const fn (?*anyopaque) callconv(.c) void) c_int;
pub extern fn pthread_key_delete(__key: pthread_key_t) c_int;
pub extern fn pthread_getspecific(__key: pthread_key_t) ?*anyopaque;
pub extern fn pthread_setspecific(__key: pthread_key_t, __pointer: ?*const anyopaque) c_int;
pub extern fn pthread_getcpuclockid(__thread_id: pthread_t, __clock_id: [*c]__clockid_t) c_int;
pub extern fn pthread_atfork(__prepare: ?*const fn () callconv(.c) void, __parent: ?*const fn () callconv(.c) void, __child: ?*const fn () callconv(.c) void) c_int;
pub const UA_Lock = extern struct {
    mutex: pthread_mutex_t = @import("std").mem.zeroes(pthread_mutex_t),
    mutexCounter: c_int = @import("std").mem.zeroes(c_int),
};
pub fn UA_LOCK_INIT(arg_lock: [*c]UA_Lock) callconv(.c) void {
    var lock = arg_lock;
    _ = &lock;
    var mattr: pthread_mutexattr_t = undefined;
    _ = &mattr;
    _ = pthread_mutexattr_init(&mattr);
    _ = pthread_mutexattr_settype(&mattr, PTHREAD_MUTEX_RECURSIVE);
    _ = pthread_mutex_init(&lock.*.mutex, &mattr);
    _ = pthread_mutexattr_destroy(&mattr);
    lock.*.mutexCounter = 0;
}
pub fn UA_LOCK_DESTROY(arg_lock: [*c]UA_Lock) callconv(.c) void {
    var lock = arg_lock;
    _ = &lock;
    _ = pthread_mutex_destroy(&lock.*.mutex);
}
pub fn UA_LOCK(arg_lock: [*c]UA_Lock) callconv(.c) void {
    var lock = arg_lock;
    _ = &lock;
    _ = pthread_mutex_lock(&lock.*.mutex);
    lock.*.mutexCounter += 1;
}
pub fn UA_UNLOCK(arg_lock: [*c]UA_Lock) callconv(.c) void {
    var lock = arg_lock;
    _ = &lock;
    lock.*.mutexCounter -= 1;
    _ = pthread_mutex_unlock(&lock.*.mutex);
}
pub fn UA_LOCK_ASSERT(arg_lock: [*c]UA_Lock, arg_num: c_int) callconv(.c) void {
    var lock = arg_lock;
    _ = &lock;
    var num = arg_num;
    _ = &num;
    while (true) {
        if (!false) break;
    }
}
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_ATTRIBUTEID_NODEID: c_int = 1;
pub const UA_ATTRIBUTEID_NODECLASS: c_int = 2;
pub const UA_ATTRIBUTEID_BROWSENAME: c_int = 3;
pub const UA_ATTRIBUTEID_DISPLAYNAME: c_int = 4;
pub const UA_ATTRIBUTEID_DESCRIPTION: c_int = 5;
pub const UA_ATTRIBUTEID_WRITEMASK: c_int = 6;
pub const UA_ATTRIBUTEID_USERWRITEMASK: c_int = 7;
pub const UA_ATTRIBUTEID_ISABSTRACT: c_int = 8;
pub const UA_ATTRIBUTEID_SYMMETRIC: c_int = 9;
pub const UA_ATTRIBUTEID_INVERSENAME: c_int = 10;
pub const UA_ATTRIBUTEID_CONTAINSNOLOOPS: c_int = 11;
pub const UA_ATTRIBUTEID_EVENTNOTIFIER: c_int = 12;
pub const UA_ATTRIBUTEID_VALUE: c_int = 13;
pub const UA_ATTRIBUTEID_DATATYPE: c_int = 14;
pub const UA_ATTRIBUTEID_VALUERANK: c_int = 15;
pub const UA_ATTRIBUTEID_ARRAYDIMENSIONS: c_int = 16;
pub const UA_ATTRIBUTEID_ACCESSLEVEL: c_int = 17;
pub const UA_ATTRIBUTEID_USERACCESSLEVEL: c_int = 18;
pub const UA_ATTRIBUTEID_MINIMUMSAMPLINGINTERVAL: c_int = 19;
pub const UA_ATTRIBUTEID_HISTORIZING: c_int = 20;
pub const UA_ATTRIBUTEID_EXECUTABLE: c_int = 21;
pub const UA_ATTRIBUTEID_USEREXECUTABLE: c_int = 22;
pub const UA_ATTRIBUTEID_DATATYPEDEFINITION: c_int = 23;
pub const UA_ATTRIBUTEID_ROLEPERMISSIONS: c_int = 24;
pub const UA_ATTRIBUTEID_USERROLEPERMISSIONS: c_int = 25;
pub const UA_ATTRIBUTEID_ACCESSRESTRICTIONS: c_int = 26;
pub const UA_ATTRIBUTEID_ACCESSLEVELEX: c_int = 27;
pub const UA_AttributeId = c_uint;
pub const UA_RULEHANDLING_DEFAULT: c_int = 0;
pub const UA_RULEHANDLING_ABORT: c_int = 1;
pub const UA_RULEHANDLING_WARN: c_int = 2;
pub const UA_RULEHANDLING_ACCEPT: c_int = 3;
pub const UA_RuleHandling = c_uint;
pub const UA_ORDER_LESS: c_int = -1;
pub const UA_ORDER_EQ: c_int = 0;
pub const UA_ORDER_MORE: c_int = 1;
pub const UA_Order = c_int;
pub const UA_CONNECTIONSTATE_CLOSED: c_int = 0;
pub const UA_CONNECTIONSTATE_OPENING: c_int = 1;
pub const UA_CONNECTIONSTATE_ESTABLISHED: c_int = 2;
pub const UA_CONNECTIONSTATE_CLOSING: c_int = 3;
pub const UA_ConnectionState = c_uint;
pub const UA_SECURECHANNELSTATE_CLOSED: c_int = 0;
pub const UA_SECURECHANNELSTATE_REVERSE_LISTENING: c_int = 1;
pub const UA_SECURECHANNELSTATE_CONNECTING: c_int = 2;
pub const UA_SECURECHANNELSTATE_CONNECTED: c_int = 3;
pub const UA_SECURECHANNELSTATE_REVERSE_CONNECTED: c_int = 4;
pub const UA_SECURECHANNELSTATE_RHE_SENT: c_int = 5;
pub const UA_SECURECHANNELSTATE_HEL_SENT: c_int = 6;
pub const UA_SECURECHANNELSTATE_HEL_RECEIVED: c_int = 7;
pub const UA_SECURECHANNELSTATE_ACK_SENT: c_int = 8;
pub const UA_SECURECHANNELSTATE_ACK_RECEIVED: c_int = 9;
pub const UA_SECURECHANNELSTATE_OPN_SENT: c_int = 10;
pub const UA_SECURECHANNELSTATE_OPEN: c_int = 11;
pub const UA_SECURECHANNELSTATE_CLOSING: c_int = 12;
pub const UA_SecureChannelState = c_uint;
pub const UA_SESSIONSTATE_CLOSED: c_int = 0;
pub const UA_SESSIONSTATE_CREATE_REQUESTED: c_int = 1;
pub const UA_SESSIONSTATE_CREATED: c_int = 2;
pub const UA_SESSIONSTATE_ACTIVATE_REQUESTED: c_int = 3;
pub const UA_SESSIONSTATE_ACTIVATED: c_int = 4;
pub const UA_SESSIONSTATE_CLOSING: c_int = 5;
pub const UA_SessionState = c_uint;
pub const UA_SHUTDOWNREASON_CLOSE: c_int = 0;
pub const UA_SHUTDOWNREASON_REJECT: c_int = 1;
pub const UA_SHUTDOWNREASON_SECURITYREJECT: c_int = 2;
pub const UA_SHUTDOWNREASON_TIMEOUT: c_int = 3;
pub const UA_SHUTDOWNREASON_ABORT: c_int = 4;
pub const UA_SHUTDOWNREASON_PURGE: c_int = 5;
pub const UA_ShutdownReason = c_uint;
pub const UA_SecureChannelStatistics = extern struct {
    currentChannelCount: usize = @import("std").mem.zeroes(usize),
    cumulatedChannelCount: usize = @import("std").mem.zeroes(usize),
    rejectedChannelCount: usize = @import("std").mem.zeroes(usize),
    channelTimeoutCount: usize = @import("std").mem.zeroes(usize),
    channelAbortCount: usize = @import("std").mem.zeroes(usize),
    channelPurgeCount: usize = @import("std").mem.zeroes(usize),
};
pub const UA_SessionStatistics = extern struct {
    currentSessionCount: usize = @import("std").mem.zeroes(usize),
    cumulatedSessionCount: usize = @import("std").mem.zeroes(usize),
    securityRejectedSessionCount: usize = @import("std").mem.zeroes(usize),
    rejectedSessionCount: usize = @import("std").mem.zeroes(usize),
    sessionTimeoutCount: usize = @import("std").mem.zeroes(usize),
    sessionAbortCount: usize = @import("std").mem.zeroes(usize),
};
pub const UA_LIFECYCLESTATE_STOPPED: c_int = 0;
pub const UA_LIFECYCLESTATE_STARTED: c_int = 1;
pub const UA_LIFECYCLESTATE_STOPPING: c_int = 2;
pub const UA_LifecycleState = c_uint;
pub const struct_UA_Server = opaque {};
pub const UA_Server = struct_UA_Server;
pub const struct___va_list_tag_13 = extern struct {
    gp_offset: c_uint = @import("std").mem.zeroes(c_uint),
    fp_offset: c_uint = @import("std").mem.zeroes(c_uint),
    overflow_arg_area: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    reg_save_area: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const struct_UA_Logger = extern struct {
    log: ?*const fn (?*anyopaque, UA_LogLevel, UA_LogCategory, [*c]const u8, [*c]struct___va_list_tag_13) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*anyopaque, UA_LogLevel, UA_LogCategory, [*c]const u8, [*c]struct___va_list_tag_13) callconv(.c) void),
    context: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    clear: ?*const fn ([*c]struct_UA_Logger) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]struct_UA_Logger) callconv(.c) void),
};
pub const UA_Logger = struct_UA_Logger;
pub const UA_Double = f64;
// ./vendor/open62541.h:23401:15: warning: struct demoted to opaque type - has bitfield
pub const struct_UA_DataType = opaque {};
pub const UA_DataType = struct_UA_DataType;
pub const UA_Boolean = bool;
pub const struct_UA_DataTypeArray = extern struct {
    next: [*c]const struct_UA_DataTypeArray = @import("std").mem.zeroes([*c]const struct_UA_DataTypeArray),
    typesSize: usize = @import("std").mem.zeroes(usize),
    types: ?*const UA_DataType = @import("std").mem.zeroes(?*const UA_DataType),
    cleanup: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
};
pub const UA_DataTypeArray = struct_UA_DataTypeArray;
pub const UA_StatusCode = u32;
pub const UA_UInt32 = u32;
pub const UA_DateTime = i64;
pub const UA_Int64 = i64;
pub const UA_Callback = ?*const fn (?*anyopaque, ?*anyopaque) callconv(.c) void;
pub const UA_UInt64 = u64;
pub const struct_UA_DelayedCallback = extern struct {
    next: [*c]struct_UA_DelayedCallback = @import("std").mem.zeroes([*c]struct_UA_DelayedCallback),
    callback: UA_Callback = @import("std").mem.zeroes(UA_Callback),
    application: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    context: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const UA_DelayedCallback = struct_UA_DelayedCallback;
pub const struct_UA_EventSource = extern struct {
    next: [*c]struct_UA_EventSource = @import("std").mem.zeroes([*c]struct_UA_EventSource),
    eventSourceType: UA_EventSourceType = @import("std").mem.zeroes(UA_EventSourceType),
    name: UA_String = @import("std").mem.zeroes(UA_String),
    eventLoop: [*c]UA_EventLoop = @import("std").mem.zeroes([*c]UA_EventLoop),
    params: UA_KeyValueMap = @import("std").mem.zeroes(UA_KeyValueMap),
    state: UA_EventSourceState = @import("std").mem.zeroes(UA_EventSourceState),
    start: ?*const fn ([*c]UA_EventSource) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn ([*c]UA_EventSource) callconv(.c) UA_StatusCode),
    stop: ?*const fn ([*c]UA_EventSource) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]UA_EventSource) callconv(.c) void),
    free: ?*const fn ([*c]UA_EventSource) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn ([*c]UA_EventSource) callconv(.c) UA_StatusCode),
};
pub const UA_EventSource = struct_UA_EventSource;
pub const struct_UA_EventLoop = extern struct {
    logger: [*c]const UA_Logger = @import("std").mem.zeroes([*c]const UA_Logger),
    params: [*c]UA_KeyValueMap = @import("std").mem.zeroes([*c]UA_KeyValueMap),
    state: UA_EventLoopState = @import("std").mem.zeroes(UA_EventLoopState),
    start: ?*const fn ([*c]UA_EventLoop) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn ([*c]UA_EventLoop) callconv(.c) UA_StatusCode),
    stop: ?*const fn ([*c]UA_EventLoop) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]UA_EventLoop) callconv(.c) void),
    run: ?*const fn ([*c]UA_EventLoop, UA_UInt32) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn ([*c]UA_EventLoop, UA_UInt32) callconv(.c) UA_StatusCode),
    free: ?*const fn ([*c]UA_EventLoop) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn ([*c]UA_EventLoop) callconv(.c) UA_StatusCode),
    dateTime_now: ?*const fn ([*c]UA_EventLoop) callconv(.c) UA_DateTime = @import("std").mem.zeroes(?*const fn ([*c]UA_EventLoop) callconv(.c) UA_DateTime),
    dateTime_nowMonotonic: ?*const fn ([*c]UA_EventLoop) callconv(.c) UA_DateTime = @import("std").mem.zeroes(?*const fn ([*c]UA_EventLoop) callconv(.c) UA_DateTime),
    dateTime_localTimeUtcOffset: ?*const fn ([*c]UA_EventLoop) callconv(.c) UA_Int64 = @import("std").mem.zeroes(?*const fn ([*c]UA_EventLoop) callconv(.c) UA_Int64),
    nextCyclicTime: ?*const fn ([*c]UA_EventLoop) callconv(.c) UA_DateTime = @import("std").mem.zeroes(?*const fn ([*c]UA_EventLoop) callconv(.c) UA_DateTime),
    addCyclicCallback: ?*const fn ([*c]UA_EventLoop, UA_Callback, ?*anyopaque, ?*anyopaque, UA_Double, [*c]UA_DateTime, UA_TimerPolicy, [*c]UA_UInt64) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn ([*c]UA_EventLoop, UA_Callback, ?*anyopaque, ?*anyopaque, UA_Double, [*c]UA_DateTime, UA_TimerPolicy, [*c]UA_UInt64) callconv(.c) UA_StatusCode),
    modifyCyclicCallback: ?*const fn ([*c]UA_EventLoop, UA_UInt64, UA_Double, [*c]UA_DateTime, UA_TimerPolicy) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn ([*c]UA_EventLoop, UA_UInt64, UA_Double, [*c]UA_DateTime, UA_TimerPolicy) callconv(.c) UA_StatusCode),
    removeCyclicCallback: ?*const fn ([*c]UA_EventLoop, UA_UInt64) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]UA_EventLoop, UA_UInt64) callconv(.c) void),
    addTimedCallback: ?*const fn ([*c]UA_EventLoop, UA_Callback, ?*anyopaque, ?*anyopaque, UA_DateTime, [*c]UA_UInt64) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn ([*c]UA_EventLoop, UA_Callback, ?*anyopaque, ?*anyopaque, UA_DateTime, [*c]UA_UInt64) callconv(.c) UA_StatusCode),
    addDelayedCallback: ?*const fn ([*c]UA_EventLoop, [*c]UA_DelayedCallback) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]UA_EventLoop, [*c]UA_DelayedCallback) callconv(.c) void),
    removeDelayedCallback: ?*const fn ([*c]UA_EventLoop, [*c]UA_DelayedCallback) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]UA_EventLoop, [*c]UA_DelayedCallback) callconv(.c) void),
    eventSources: [*c]UA_EventSource = @import("std").mem.zeroes([*c]UA_EventSource),
    registerEventSource: ?*const fn ([*c]UA_EventLoop, [*c]UA_EventSource) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn ([*c]UA_EventLoop, [*c]UA_EventSource) callconv(.c) UA_StatusCode),
    deregisterEventSource: ?*const fn ([*c]UA_EventLoop, [*c]UA_EventSource) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn ([*c]UA_EventLoop, [*c]UA_EventSource) callconv(.c) UA_StatusCode),
    lock: ?*const fn ([*c]UA_EventLoop) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]UA_EventLoop) callconv(.c) void),
    unlock: ?*const fn ([*c]UA_EventLoop) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]UA_EventLoop) callconv(.c) void),
};
pub const UA_EventLoop = struct_UA_EventLoop;
pub const UA_ByteString = UA_String;
pub const struct_UA_SecurityPolicy = extern struct {
    policyContext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    policyUri: UA_String = @import("std").mem.zeroes(UA_String),
    localCertificate: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
    asymmetricModule: UA_SecurityPolicyAsymmetricModule = @import("std").mem.zeroes(UA_SecurityPolicyAsymmetricModule),
    symmetricModule: UA_SecurityPolicySymmetricModule = @import("std").mem.zeroes(UA_SecurityPolicySymmetricModule),
    certificateSigningAlgorithm: UA_SecurityPolicySignatureAlgorithm = @import("std").mem.zeroes(UA_SecurityPolicySignatureAlgorithm),
    channelModule: UA_SecurityPolicyChannelModule = @import("std").mem.zeroes(UA_SecurityPolicyChannelModule),
    logger: [*c]const UA_Logger = @import("std").mem.zeroes([*c]const UA_Logger),
    updateCertificateAndPrivateKey: ?*const fn ([*c]UA_SecurityPolicy, UA_ByteString, UA_ByteString) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn ([*c]UA_SecurityPolicy, UA_ByteString, UA_ByteString) callconv(.c) UA_StatusCode),
    clear: ?*const fn ([*c]UA_SecurityPolicy) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]UA_SecurityPolicy) callconv(.c) void),
};
pub const UA_SecurityPolicy = struct_UA_SecurityPolicy;
pub const struct_UA_CertificateVerification = extern struct {
    context: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    verifyCertificate: ?*const fn ([*c]const UA_CertificateVerification, [*c]const UA_ByteString) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn ([*c]const UA_CertificateVerification, [*c]const UA_ByteString) callconv(.c) UA_StatusCode),
    verifyApplicationURI: ?*const fn ([*c]const UA_CertificateVerification, [*c]const UA_ByteString, [*c]const UA_String) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn ([*c]const UA_CertificateVerification, [*c]const UA_ByteString, [*c]const UA_String) callconv(.c) UA_StatusCode),
    getExpirationDate: ?*const fn ([*c]UA_DateTime, [*c]UA_ByteString) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn ([*c]UA_DateTime, [*c]UA_ByteString) callconv(.c) UA_StatusCode),
    getSubjectName: ?*const fn ([*c]UA_String, [*c]UA_ByteString) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn ([*c]UA_String, [*c]UA_ByteString) callconv(.c) UA_StatusCode),
    clear: ?*const fn ([*c]UA_CertificateVerification) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]UA_CertificateVerification) callconv(.c) void),
    logging: [*c]const UA_Logger = @import("std").mem.zeroes([*c]const UA_Logger),
};
pub const UA_CertificateVerification = struct_UA_CertificateVerification;
pub const UA_Byte = u8;
pub const struct_UA_AccessControl = extern struct {
    context: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    clear: ?*const fn ([*c]UA_AccessControl) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]UA_AccessControl) callconv(.c) void),
    userTokenPoliciesSize: usize = @import("std").mem.zeroes(usize),
    userTokenPolicies: [*c]UA_UserTokenPolicy = @import("std").mem.zeroes([*c]UA_UserTokenPolicy),
    activateSession: ?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_EndpointDescription, [*c]const UA_ByteString, [*c]const UA_NodeId, [*c]const UA_ExtensionObject, [*c]?*anyopaque) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_EndpointDescription, [*c]const UA_ByteString, [*c]const UA_NodeId, [*c]const UA_ExtensionObject, [*c]?*anyopaque) callconv(.c) UA_StatusCode),
    closeSession: ?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_NodeId, ?*anyopaque) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_NodeId, ?*anyopaque) callconv(.c) void),
    getUserRightsMask: ?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque) callconv(.c) UA_UInt32 = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque) callconv(.c) UA_UInt32),
    getUserAccessLevel: ?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque) callconv(.c) UA_Byte = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque) callconv(.c) UA_Byte),
    getUserExecutable: ?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque) callconv(.c) UA_Boolean = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque) callconv(.c) UA_Boolean),
    getUserExecutableOnObject: ?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque) callconv(.c) UA_Boolean = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque) callconv(.c) UA_Boolean),
    allowAddNode: ?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_AddNodesItem) callconv(.c) UA_Boolean = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_AddNodesItem) callconv(.c) UA_Boolean),
    allowAddReference: ?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_AddReferencesItem) callconv(.c) UA_Boolean = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_AddReferencesItem) callconv(.c) UA_Boolean),
    allowDeleteNode: ?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_DeleteNodesItem) callconv(.c) UA_Boolean = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_DeleteNodesItem) callconv(.c) UA_Boolean),
    allowDeleteReference: ?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_DeleteReferencesItem) callconv(.c) UA_Boolean = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_DeleteReferencesItem) callconv(.c) UA_Boolean),
    allowBrowseNode: ?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque) callconv(.c) UA_Boolean = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque) callconv(.c) UA_Boolean),
    allowTransferSubscription: ?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque) callconv(.c) UA_Boolean = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque) callconv(.c) UA_Boolean),
    allowHistoryUpdateUpdateData: ?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, UA_PerformUpdateType, ?*const UA_DataValue) callconv(.c) UA_Boolean = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, UA_PerformUpdateType, ?*const UA_DataValue) callconv(.c) UA_Boolean),
    allowHistoryUpdateDeleteRawModified: ?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, UA_DateTime, UA_DateTime, bool) callconv(.c) UA_Boolean = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]UA_AccessControl, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, UA_DateTime, UA_DateTime, bool) callconv(.c) UA_Boolean),
};
pub const UA_AccessControl = struct_UA_AccessControl;
pub const UA_UInt16 = u16;
pub const UA_Server_AsyncOperationNotifyCallback = ?*const fn (?*UA_Server) callconv(.c) void;
pub const struct_UA_PubSubSecurityPolicy = extern struct {
    policyUri: UA_String = @import("std").mem.zeroes(UA_String),
    symmetricModule: UA_SecurityPolicySymmetricModule = @import("std").mem.zeroes(UA_SecurityPolicySymmetricModule),
    newContext: ?*const fn (?*anyopaque, [*c]const UA_ByteString, [*c]const UA_ByteString, [*c]const UA_ByteString, [*c]?*anyopaque) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*anyopaque, [*c]const UA_ByteString, [*c]const UA_ByteString, [*c]const UA_ByteString, [*c]?*anyopaque) callconv(.c) UA_StatusCode),
    deleteContext: ?*const fn (?*anyopaque) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*anyopaque) callconv(.c) void),
    setSecurityKeys: ?*const fn (?*anyopaque, [*c]const UA_ByteString, [*c]const UA_ByteString, [*c]const UA_ByteString) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*anyopaque, [*c]const UA_ByteString, [*c]const UA_ByteString, [*c]const UA_ByteString) callconv(.c) UA_StatusCode),
    setMessageNonce: ?*const fn (?*anyopaque, [*c]const UA_ByteString) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*anyopaque, [*c]const UA_ByteString) callconv(.c) UA_StatusCode),
    logger: [*c]const UA_Logger = @import("std").mem.zeroes([*c]const UA_Logger),
    clear: ?*const fn ([*c]UA_PubSubSecurityPolicy) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]UA_PubSubSecurityPolicy) callconv(.c) void),
    policyContext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const UA_PubSubSecurityPolicy = struct_UA_PubSubSecurityPolicy;
pub const struct_UA_PubSubConfiguration = extern struct {
    stateChangeCallback: ?*const fn (?*UA_Server, [*c]UA_NodeId, UA_PubSubState, UA_StatusCode) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]UA_NodeId, UA_PubSubState, UA_StatusCode) callconv(.c) void),
    enableDeltaFrames: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    enableInformationModelMethods: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    securityPoliciesSize: usize = @import("std").mem.zeroes(usize),
    securityPolicies: [*c]UA_PubSubSecurityPolicy = @import("std").mem.zeroes([*c]UA_PubSubSecurityPolicy),
};
pub const UA_PubSubConfiguration = struct_UA_PubSubConfiguration;
pub const struct_UA_HistoryDatabase = extern struct {
    context: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    clear: ?*const fn ([*c]UA_HistoryDatabase) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]UA_HistoryDatabase) callconv(.c) void),
    setValue: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, UA_Boolean, ?*const UA_DataValue) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, UA_Boolean, ?*const UA_DataValue) callconv(.c) void),
    setEvent: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, [*c]const UA_NodeId, [*c]const UA_EventFilter, [*c]UA_EventFieldList) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, [*c]const UA_NodeId, [*c]const UA_EventFilter, [*c]UA_EventFieldList) callconv(.c) void),
    readRaw: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_RequestHeader, [*c]const UA_ReadRawModifiedDetails, UA_TimestampsToReturn, UA_Boolean, usize, [*c]const UA_HistoryReadValueId, [*c]UA_HistoryReadResponse, [*c]const [*c]UA_HistoryData) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_RequestHeader, [*c]const UA_ReadRawModifiedDetails, UA_TimestampsToReturn, UA_Boolean, usize, [*c]const UA_HistoryReadValueId, [*c]UA_HistoryReadResponse, [*c]const [*c]UA_HistoryData) callconv(.c) void),
    readModified: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_RequestHeader, [*c]const UA_ReadRawModifiedDetails, UA_TimestampsToReturn, UA_Boolean, usize, [*c]const UA_HistoryReadValueId, [*c]UA_HistoryReadResponse, [*c]const [*c]UA_HistoryModifiedData) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_RequestHeader, [*c]const UA_ReadRawModifiedDetails, UA_TimestampsToReturn, UA_Boolean, usize, [*c]const UA_HistoryReadValueId, [*c]UA_HistoryReadResponse, [*c]const [*c]UA_HistoryModifiedData) callconv(.c) void),
    readEvent: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_RequestHeader, [*c]const UA_ReadEventDetails, UA_TimestampsToReturn, UA_Boolean, usize, [*c]const UA_HistoryReadValueId, [*c]UA_HistoryReadResponse, [*c]const [*c]UA_HistoryEvent) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_RequestHeader, [*c]const UA_ReadEventDetails, UA_TimestampsToReturn, UA_Boolean, usize, [*c]const UA_HistoryReadValueId, [*c]UA_HistoryReadResponse, [*c]const [*c]UA_HistoryEvent) callconv(.c) void),
    readProcessed: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_RequestHeader, [*c]const UA_ReadProcessedDetails, UA_TimestampsToReturn, UA_Boolean, usize, [*c]const UA_HistoryReadValueId, [*c]UA_HistoryReadResponse, [*c]const [*c]UA_HistoryData) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_RequestHeader, [*c]const UA_ReadProcessedDetails, UA_TimestampsToReturn, UA_Boolean, usize, [*c]const UA_HistoryReadValueId, [*c]UA_HistoryReadResponse, [*c]const [*c]UA_HistoryData) callconv(.c) void),
    readAtTime: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_RequestHeader, [*c]const UA_ReadAtTimeDetails, UA_TimestampsToReturn, UA_Boolean, usize, [*c]const UA_HistoryReadValueId, [*c]UA_HistoryReadResponse, [*c]const [*c]UA_HistoryData) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_RequestHeader, [*c]const UA_ReadAtTimeDetails, UA_TimestampsToReturn, UA_Boolean, usize, [*c]const UA_HistoryReadValueId, [*c]UA_HistoryReadResponse, [*c]const [*c]UA_HistoryData) callconv(.c) void),
    updateData: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_RequestHeader, [*c]const UA_UpdateDataDetails, [*c]UA_HistoryUpdateResult) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_RequestHeader, [*c]const UA_UpdateDataDetails, [*c]UA_HistoryUpdateResult) callconv(.c) void),
    deleteRawModified: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_RequestHeader, [*c]const UA_DeleteRawModifiedDetails, [*c]UA_HistoryUpdateResult) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_RequestHeader, [*c]const UA_DeleteRawModifiedDetails, [*c]UA_HistoryUpdateResult) callconv(.c) void),
};
pub const UA_HistoryDatabase = struct_UA_HistoryDatabase;
pub const UA_ServerConfig = struct_UA_ServerConfig;
pub const struct_UA_ServerConfig = extern struct {
    context: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    logging: [*c]UA_Logger = @import("std").mem.zeroes([*c]UA_Logger),
    buildInfo: UA_BuildInfo = @import("std").mem.zeroes(UA_BuildInfo),
    applicationDescription: UA_ApplicationDescription = @import("std").mem.zeroes(UA_ApplicationDescription),
    shutdownDelay: UA_Double = @import("std").mem.zeroes(UA_Double),
    notifyLifecycleState: ?*const fn (?*UA_Server, UA_LifecycleState) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*UA_Server, UA_LifecycleState) callconv(.c) void),
    verifyRequestTimestamp: UA_RuleHandling = @import("std").mem.zeroes(UA_RuleHandling),
    allowEmptyVariables: UA_RuleHandling = @import("std").mem.zeroes(UA_RuleHandling),
    customDataTypes: [*c]const UA_DataTypeArray = @import("std").mem.zeroes([*c]const UA_DataTypeArray),
    eventLoop: [*c]UA_EventLoop = @import("std").mem.zeroes([*c]UA_EventLoop),
    externalEventLoop: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    serverUrls: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
    serverUrlsSize: usize = @import("std").mem.zeroes(usize),
    tcpEnabled: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    tcpBufSize: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    tcpMaxMsgSize: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    tcpMaxChunks: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    tcpReuseAddr: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    securityPoliciesSize: usize = @import("std").mem.zeroes(usize),
    securityPolicies: [*c]UA_SecurityPolicy = @import("std").mem.zeroes([*c]UA_SecurityPolicy),
    endpointsSize: usize = @import("std").mem.zeroes(usize),
    endpoints: [*c]UA_EndpointDescription = @import("std").mem.zeroes([*c]UA_EndpointDescription),
    securityPolicyNoneDiscoveryOnly: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    allowNonePolicyPassword: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    secureChannelPKI: UA_CertificateVerification = @import("std").mem.zeroes(UA_CertificateVerification),
    sessionPKI: UA_CertificateVerification = @import("std").mem.zeroes(UA_CertificateVerification),
    accessControl: UA_AccessControl = @import("std").mem.zeroes(UA_AccessControl),
    nodestore: UA_Nodestore = @import("std").mem.zeroes(UA_Nodestore),
    nodeLifecycle: UA_GlobalNodeLifecycle = @import("std").mem.zeroes(UA_GlobalNodeLifecycle),
    modellingRulesOnInstances: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    maxSecureChannels: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    maxSecurityTokenLifetime: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    maxSessions: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    maxSessionTimeout: UA_Double = @import("std").mem.zeroes(UA_Double),
    maxNodesPerRead: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    maxNodesPerWrite: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    maxNodesPerMethodCall: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    maxNodesPerBrowse: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    maxNodesPerRegisterNodes: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    maxNodesPerTranslateBrowsePathsToNodeIds: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    maxNodesPerNodeManagement: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    maxMonitoredItemsPerCall: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    maxReferencesPerNode: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    asyncOperationTimeout: UA_Double = @import("std").mem.zeroes(UA_Double),
    maxAsyncOperationQueueSize: usize = @import("std").mem.zeroes(usize),
    asyncOperationNotifyCallback: UA_Server_AsyncOperationNotifyCallback = @import("std").mem.zeroes(UA_Server_AsyncOperationNotifyCallback),
    discoveryCleanupTimeout: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    subscriptionsEnabled: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    maxSubscriptions: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    maxSubscriptionsPerSession: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    publishingIntervalLimits: UA_DurationRange = @import("std").mem.zeroes(UA_DurationRange),
    lifeTimeCountLimits: UA_UInt32Range = @import("std").mem.zeroes(UA_UInt32Range),
    keepAliveCountLimits: UA_UInt32Range = @import("std").mem.zeroes(UA_UInt32Range),
    maxNotificationsPerPublish: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    enableRetransmissionQueue: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    maxRetransmissionQueueSize: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    maxEventsPerNode: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    maxMonitoredItems: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    maxMonitoredItemsPerSubscription: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    samplingIntervalLimits: UA_DurationRange = @import("std").mem.zeroes(UA_DurationRange),
    queueSizeLimits: UA_UInt32Range = @import("std").mem.zeroes(UA_UInt32Range),
    maxPublishReqPerSession: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    monitoredItemRegisterCallback: ?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, UA_UInt32, UA_Boolean) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, UA_UInt32, UA_Boolean) callconv(.c) void),
    pubsubEnabled: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    pubSubConfig: UA_PubSubConfiguration = @import("std").mem.zeroes(UA_PubSubConfiguration),
    historizingEnabled: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    historyDatabase: UA_HistoryDatabase = @import("std").mem.zeroes(UA_HistoryDatabase),
    accessHistoryDataCapability: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    maxReturnDataValues: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    accessHistoryEventsCapability: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    maxReturnEventValues: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    insertDataCapability: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    insertEventCapability: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    insertAnnotationsCapability: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    replaceDataCapability: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    replaceEventCapability: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    updateDataCapability: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    updateEventCapability: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    deleteRawCapability: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    deleteEventCapability: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    deleteAtTimeDataCapability: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    reverseReconnectInterval: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    privateKeyPasswordCallback: ?*const fn ([*c]UA_ServerConfig, [*c]UA_ByteString) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn ([*c]UA_ServerConfig, [*c]UA_ByteString) callconv(.c) UA_StatusCode),
};
pub const UA_ServerCallback = ?*const fn (?*UA_Server, ?*anyopaque) callconv(.c) void;
pub const struct_UA_Client = opaque {};
pub const UA_Client = struct_UA_Client;
pub const UA_SByte = i8;
pub const UA_Int16 = i16;
pub const UA_Int32 = i32;
pub const UA_Float = f32;
pub extern fn UA_StatusCode_name(code: UA_StatusCode) [*c]const u8;
pub fn UA_StatusCode_isBad(arg_code: UA_StatusCode) callconv(.c) UA_Boolean {
    var code = arg_code;
    _ = &code;
    return (code >> @intCast(30)) >= @as(UA_StatusCode, @bitCast(@as(c_int, 2)));
}
pub fn UA_StatusCode_isUncertain(arg_code: UA_StatusCode) callconv(.c) UA_Boolean {
    var code = arg_code;
    _ = &code;
    return (code >> @intCast(30)) == @as(UA_StatusCode, @bitCast(@as(c_int, 1)));
}
pub fn UA_StatusCode_isGood(arg_code: UA_StatusCode) callconv(.c) UA_Boolean {
    var code = arg_code;
    _ = &code;
    return (code >> @intCast(30)) == @as(UA_StatusCode, @bitCast(@as(c_int, 0)));
}
pub fn UA_StatusCode_isEqualTop(arg_s1: UA_StatusCode, arg_s2: UA_StatusCode) callconv(.c) UA_Boolean {
    var s1 = arg_s1;
    _ = &s1;
    var s2 = arg_s2;
    _ = &s2;
    return (s1 & @as(c_uint, 4294901760)) == (s2 & @as(c_uint, 4294901760));
}
pub const UA_String = extern struct {
    length: usize = @import("std").mem.zeroes(usize),
    data: [*c]UA_Byte = @import("std").mem.zeroes([*c]UA_Byte),
};
pub extern fn UA_String_fromChars(src: [*c]const u8) UA_String;
pub extern fn UA_String_isEmpty(s: [*c]const UA_String) UA_Boolean;
pub extern const UA_STRING_NULL: UA_String;
pub fn UA_STRING(arg_chars: [*c]u8) callconv(.c) UA_String {
    var chars = arg_chars;
    _ = &chars;
    var s: UA_String = undefined;
    _ = &s;
    _ = memset(@as(?*anyopaque, @ptrCast(&s)), @as(c_int, 0), @sizeOf(UA_String));
    if (!(chars != null)) return s;
    s.length = strlen(chars);
    s.data = @as([*c]UA_Byte, @ptrCast(@alignCast(chars)));
    return s;
}
pub extern fn UA_DateTime_now() UA_DateTime;
pub extern fn UA_DateTime_localTimeUtcOffset() UA_Int64;
pub extern fn UA_DateTime_nowMonotonic() UA_DateTime;
pub const struct_UA_DateTimeStruct = extern struct {
    nanoSec: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    microSec: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    milliSec: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    sec: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    min: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    hour: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    day: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    month: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    year: UA_Int16 = @import("std").mem.zeroes(UA_Int16),
};
pub const UA_DateTimeStruct = struct_UA_DateTimeStruct;
pub extern fn UA_DateTime_toStruct(t: UA_DateTime) UA_DateTimeStruct;
pub extern fn UA_DateTime_fromStruct(ts: UA_DateTimeStruct) UA_DateTime;
pub fn UA_DateTime_toUnixTime(arg_date: UA_DateTime) callconv(.c) UA_Int64 {
    var date = arg_date;
    _ = &date;
    return @as(UA_Int64, @bitCast(@as(c_long, @truncate(@divTrunc(@as(c_longlong, @bitCast(@as(c_longlong, date))) - (@as(c_longlong, 11644473600) * ((@as(c_longlong, 10) * @as(c_longlong, 1000)) * @as(c_longlong, 1000))), (@as(c_longlong, 10) * @as(c_longlong, 1000)) * @as(c_longlong, 1000))))));
}
pub fn UA_DateTime_fromUnixTime(arg_unixDate: UA_Int64) callconv(.c) UA_DateTime {
    var unixDate = arg_unixDate;
    _ = &unixDate;
    return @as(UA_DateTime, @bitCast(@as(c_long, @truncate((@as(c_longlong, @bitCast(@as(c_longlong, unixDate))) * ((@as(c_longlong, 10) * @as(c_longlong, 1000)) * @as(c_longlong, 1000))) + (@as(c_longlong, 11644473600) * ((@as(c_longlong, 10) * @as(c_longlong, 1000)) * @as(c_longlong, 1000)))))));
}
pub const UA_Guid = extern struct {
    data1: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    data2: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    data3: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    data4: [8]UA_Byte = @import("std").mem.zeroes([8]UA_Byte),
};
pub extern const UA_GUID_NULL: UA_Guid;
pub extern fn UA_Guid_print(guid: [*c]const UA_Guid, output: [*c]UA_String) UA_StatusCode;
pub extern fn UA_Guid_parse(guid: [*c]UA_Guid, str: UA_String) UA_StatusCode;
pub fn UA_GUID(arg_chars: [*c]const u8) callconv(.c) UA_Guid {
    var chars = arg_chars;
    _ = &chars;
    var guid: UA_Guid = undefined;
    _ = &guid;
    _ = UA_Guid_parse(&guid, UA_STRING(@as([*c]u8, @ptrFromInt(@as(usize, @intCast(@intFromPtr(chars)))))));
    return guid;
}
pub extern const UA_BYTESTRING_NULL: UA_ByteString;
pub extern fn UA_ByteString_allocBuffer(bs: [*c]UA_ByteString, length: usize) UA_StatusCode;
pub extern fn UA_ByteString_toBase64(bs: [*c]const UA_ByteString, output: [*c]UA_String) UA_StatusCode;
pub extern fn UA_ByteString_fromBase64(bs: [*c]UA_ByteString, input: [*c]const UA_String) UA_StatusCode;
pub extern fn UA_ByteString_hash(initialHashValue: UA_UInt32, data: [*c]const UA_Byte, size: usize) UA_UInt32;
pub const UA_XmlElement = UA_String;
pub const UA_NODEIDTYPE_NUMERIC: c_int = 0;
pub const UA_NODEIDTYPE_STRING: c_int = 3;
pub const UA_NODEIDTYPE_GUID: c_int = 4;
pub const UA_NODEIDTYPE_BYTESTRING: c_int = 5;
pub const enum_UA_NodeIdType = c_uint;
const union_unnamed_14 = extern union {
    numeric: UA_UInt32,
    string: UA_String,
    guid: UA_Guid,
    byteString: UA_ByteString,
};
pub const UA_NodeId = extern struct {
    namespaceIndex: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    identifierType: enum_UA_NodeIdType = @import("std").mem.zeroes(enum_UA_NodeIdType),
    identifier: union_unnamed_14 = @import("std").mem.zeroes(union_unnamed_14),
};
pub extern const UA_NODEID_NULL: UA_NodeId;
pub extern fn UA_NodeId_isNull(p: [*c]const UA_NodeId) UA_Boolean;
pub extern fn UA_NodeId_print(id: [*c]const UA_NodeId, output: [*c]UA_String) UA_StatusCode;
pub extern fn UA_NodeId_parse(id: [*c]UA_NodeId, str: UA_String) UA_StatusCode;
pub fn UA_NODEID(arg_chars: [*c]const u8) callconv(.c) UA_NodeId {
    var chars = arg_chars;
    _ = &chars;
    var id: UA_NodeId = undefined;
    _ = &id;
    _ = UA_NodeId_parse(&id, UA_STRING(@as([*c]u8, @ptrFromInt(@as(usize, @intCast(@intFromPtr(chars)))))));
    return id;
}
pub fn UA_NODEID_NUMERIC(arg_nsIndex: UA_UInt16, arg_identifier: UA_UInt32) callconv(.c) UA_NodeId {
    var nsIndex = arg_nsIndex;
    _ = &nsIndex;
    var identifier = arg_identifier;
    _ = &identifier;
    var id: UA_NodeId = undefined;
    _ = &id;
    _ = memset(@as(?*anyopaque, @ptrCast(&id)), @as(c_int, 0), @sizeOf(UA_NodeId));
    id.namespaceIndex = nsIndex;
    id.identifierType = @as(c_uint, @bitCast(UA_NODEIDTYPE_NUMERIC));
    id.identifier.numeric = identifier;
    return id;
}
pub fn UA_NODEID_STRING(arg_nsIndex: UA_UInt16, arg_chars: [*c]u8) callconv(.c) UA_NodeId {
    var nsIndex = arg_nsIndex;
    _ = &nsIndex;
    var chars = arg_chars;
    _ = &chars;
    var id: UA_NodeId = undefined;
    _ = &id;
    _ = memset(@as(?*anyopaque, @ptrCast(&id)), @as(c_int, 0), @sizeOf(UA_NodeId));
    id.namespaceIndex = nsIndex;
    id.identifierType = @as(c_uint, @bitCast(UA_NODEIDTYPE_STRING));
    id.identifier.string = UA_STRING(chars);
    return id;
}
pub fn UA_NODEID_STRING_ALLOC(arg_nsIndex: UA_UInt16, arg_chars: [*c]const u8) callconv(.c) UA_NodeId {
    var nsIndex = arg_nsIndex;
    _ = &nsIndex;
    var chars = arg_chars;
    _ = &chars;
    var id: UA_NodeId = undefined;
    _ = &id;
    _ = memset(@as(?*anyopaque, @ptrCast(&id)), @as(c_int, 0), @sizeOf(UA_NodeId));
    id.namespaceIndex = nsIndex;
    id.identifierType = @as(c_uint, @bitCast(UA_NODEIDTYPE_STRING));
    id.identifier.string = UA_String_fromChars(chars);
    return id;
}
pub fn UA_NODEID_GUID(arg_nsIndex: UA_UInt16, arg_guid: UA_Guid) callconv(.c) UA_NodeId {
    var nsIndex = arg_nsIndex;
    _ = &nsIndex;
    var guid = arg_guid;
    _ = &guid;
    var id: UA_NodeId = undefined;
    _ = &id;
    _ = memset(@as(?*anyopaque, @ptrCast(&id)), @as(c_int, 0), @sizeOf(UA_NodeId));
    id.namespaceIndex = nsIndex;
    id.identifierType = @as(c_uint, @bitCast(UA_NODEIDTYPE_GUID));
    id.identifier.guid = guid;
    return id;
}
pub fn UA_NODEID_BYTESTRING(arg_nsIndex: UA_UInt16, arg_chars: [*c]u8) callconv(.c) UA_NodeId {
    var nsIndex = arg_nsIndex;
    _ = &nsIndex;
    var chars = arg_chars;
    _ = &chars;
    var id: UA_NodeId = undefined;
    _ = &id;
    _ = memset(@as(?*anyopaque, @ptrCast(&id)), @as(c_int, 0), @sizeOf(UA_NodeId));
    id.namespaceIndex = nsIndex;
    id.identifierType = @as(c_uint, @bitCast(UA_NODEIDTYPE_BYTESTRING));
    id.identifier.byteString = UA_STRING(chars);
    return id;
}
pub fn UA_NODEID_BYTESTRING_ALLOC(arg_nsIndex: UA_UInt16, arg_chars: [*c]const u8) callconv(.c) UA_NodeId {
    var nsIndex = arg_nsIndex;
    _ = &nsIndex;
    var chars = arg_chars;
    _ = &chars;
    var id: UA_NodeId = undefined;
    _ = &id;
    _ = memset(@as(?*anyopaque, @ptrCast(&id)), @as(c_int, 0), @sizeOf(UA_NodeId));
    id.namespaceIndex = nsIndex;
    id.identifierType = @as(c_uint, @bitCast(UA_NODEIDTYPE_BYTESTRING));
    id.identifier.byteString = UA_String_fromChars(chars);
    return id;
}
pub extern fn UA_NodeId_order(n1: [*c]const UA_NodeId, n2: [*c]const UA_NodeId) UA_Order;
pub extern fn UA_NodeId_hash(n: [*c]const UA_NodeId) UA_UInt32;
pub const UA_ExpandedNodeId = extern struct {
    nodeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    namespaceUri: UA_String = @import("std").mem.zeroes(UA_String),
    serverIndex: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub extern const UA_EXPANDEDNODEID_NULL: UA_ExpandedNodeId;
pub extern fn UA_ExpandedNodeId_print(id: [*c]const UA_ExpandedNodeId, output: [*c]UA_String) UA_StatusCode;
pub extern fn UA_ExpandedNodeId_parse(id: [*c]UA_ExpandedNodeId, str: UA_String) UA_StatusCode;
pub fn UA_EXPANDEDNODEID(arg_chars: [*c]const u8) callconv(.c) UA_ExpandedNodeId {
    var chars = arg_chars;
    _ = &chars;
    var id: UA_ExpandedNodeId = undefined;
    _ = &id;
    _ = UA_ExpandedNodeId_parse(&id, UA_STRING(@as([*c]u8, @ptrFromInt(@as(usize, @intCast(@intFromPtr(chars)))))));
    return id;
}
pub fn UA_EXPANDEDNODEID_NUMERIC(arg_nsIndex: UA_UInt16, arg_identifier: UA_UInt32) callconv(.c) UA_ExpandedNodeId {
    var nsIndex = arg_nsIndex;
    _ = &nsIndex;
    var identifier = arg_identifier;
    _ = &identifier;
    var id: UA_ExpandedNodeId = undefined;
    _ = &id;
    id.nodeId = UA_NODEID_NUMERIC(nsIndex, identifier);
    id.serverIndex = 0;
    id.namespaceUri = UA_STRING_NULL;
    return id;
}
pub fn UA_EXPANDEDNODEID_STRING(arg_nsIndex: UA_UInt16, arg_chars: [*c]u8) callconv(.c) UA_ExpandedNodeId {
    var nsIndex = arg_nsIndex;
    _ = &nsIndex;
    var chars = arg_chars;
    _ = &chars;
    var id: UA_ExpandedNodeId = undefined;
    _ = &id;
    id.nodeId = UA_NODEID_STRING(nsIndex, chars);
    id.serverIndex = 0;
    id.namespaceUri = UA_STRING_NULL;
    return id;
}
pub fn UA_EXPANDEDNODEID_STRING_ALLOC(arg_nsIndex: UA_UInt16, arg_chars: [*c]const u8) callconv(.c) UA_ExpandedNodeId {
    var nsIndex = arg_nsIndex;
    _ = &nsIndex;
    var chars = arg_chars;
    _ = &chars;
    var id: UA_ExpandedNodeId = undefined;
    _ = &id;
    id.nodeId = UA_NODEID_STRING_ALLOC(nsIndex, chars);
    id.serverIndex = 0;
    id.namespaceUri = UA_STRING_NULL;
    return id;
}
pub fn UA_EXPANDEDNODEID_STRING_GUID(arg_nsIndex: UA_UInt16, arg_guid: UA_Guid) callconv(.c) UA_ExpandedNodeId {
    var nsIndex = arg_nsIndex;
    _ = &nsIndex;
    var guid = arg_guid;
    _ = &guid;
    var id: UA_ExpandedNodeId = undefined;
    _ = &id;
    id.nodeId = UA_NODEID_GUID(nsIndex, guid);
    id.serverIndex = 0;
    id.namespaceUri = UA_STRING_NULL;
    return id;
}
pub fn UA_EXPANDEDNODEID_BYTESTRING(arg_nsIndex: UA_UInt16, arg_chars: [*c]u8) callconv(.c) UA_ExpandedNodeId {
    var nsIndex = arg_nsIndex;
    _ = &nsIndex;
    var chars = arg_chars;
    _ = &chars;
    var id: UA_ExpandedNodeId = undefined;
    _ = &id;
    id.nodeId = UA_NODEID_BYTESTRING(nsIndex, chars);
    id.serverIndex = 0;
    id.namespaceUri = UA_STRING_NULL;
    return id;
}
pub fn UA_EXPANDEDNODEID_BYTESTRING_ALLOC(arg_nsIndex: UA_UInt16, arg_chars: [*c]const u8) callconv(.c) UA_ExpandedNodeId {
    var nsIndex = arg_nsIndex;
    _ = &nsIndex;
    var chars = arg_chars;
    _ = &chars;
    var id: UA_ExpandedNodeId = undefined;
    _ = &id;
    id.nodeId = UA_NODEID_BYTESTRING_ALLOC(nsIndex, chars);
    id.serverIndex = 0;
    id.namespaceUri = UA_STRING_NULL;
    return id;
}
pub fn UA_EXPANDEDNODEID_NODEID(arg_nodeId: UA_NodeId) callconv(.c) UA_ExpandedNodeId {
    var nodeId = arg_nodeId;
    _ = &nodeId;
    var id: UA_ExpandedNodeId = undefined;
    _ = &id;
    _ = memset(@as(?*anyopaque, @ptrCast(&id)), @as(c_int, 0), @sizeOf(UA_ExpandedNodeId));
    id.nodeId = nodeId;
    return id;
}
pub extern fn UA_ExpandedNodeId_isLocal(n: [*c]const UA_ExpandedNodeId) UA_Boolean;
pub extern fn UA_ExpandedNodeId_order(n1: [*c]const UA_ExpandedNodeId, n2: [*c]const UA_ExpandedNodeId) UA_Order;
pub extern fn UA_ExpandedNodeId_hash(n: [*c]const UA_ExpandedNodeId) UA_UInt32;
pub const UA_QualifiedName = extern struct {
    namespaceIndex: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    name: UA_String = @import("std").mem.zeroes(UA_String),
};
pub fn UA_QualifiedName_isNull(arg_q: [*c]const UA_QualifiedName) callconv(.c) UA_Boolean {
    var q = arg_q;
    _ = &q;
    return (@as(c_int, @bitCast(@as(c_uint, q.*.namespaceIndex))) == @as(c_int, 0)) and (q.*.name.length == @as(usize, @bitCast(@as(c_long, @as(c_int, 0)))));
}
pub extern fn UA_QualifiedName_hash(q: [*c]const UA_QualifiedName) UA_UInt32;
pub fn UA_QUALIFIEDNAME(arg_nsIndex: UA_UInt16, arg_chars: [*c]u8) callconv(.c) UA_QualifiedName {
    var nsIndex = arg_nsIndex;
    _ = &nsIndex;
    var chars = arg_chars;
    _ = &chars;
    var qn: UA_QualifiedName = undefined;
    _ = &qn;
    qn.namespaceIndex = nsIndex;
    qn.name = UA_STRING(chars);
    return qn;
}
pub fn UA_QUALIFIEDNAME_ALLOC(arg_nsIndex: UA_UInt16, arg_chars: [*c]const u8) callconv(.c) UA_QualifiedName {
    var nsIndex = arg_nsIndex;
    _ = &nsIndex;
    var chars = arg_chars;
    _ = &chars;
    var qn: UA_QualifiedName = undefined;
    _ = &qn;
    qn.namespaceIndex = nsIndex;
    qn.name = UA_String_fromChars(chars);
    return qn;
}
pub const UA_LocalizedText = extern struct {
    locale: UA_String = @import("std").mem.zeroes(UA_String),
    text: UA_String = @import("std").mem.zeroes(UA_String),
};
pub fn UA_LOCALIZEDTEXT(arg_locale: [*c]u8, arg_text: [*c]u8) callconv(.c) UA_LocalizedText {
    var locale = arg_locale;
    _ = &locale;
    var text = arg_text;
    _ = &text;
    var lt: UA_LocalizedText = undefined;
    _ = &lt;
    lt.locale = UA_STRING(locale);
    lt.text = UA_STRING(text);
    return lt;
}
pub fn UA_LOCALIZEDTEXT_ALLOC(arg_locale: [*c]const u8, arg_text: [*c]const u8) callconv(.c) UA_LocalizedText {
    var locale = arg_locale;
    _ = &locale;
    var text = arg_text;
    _ = &text;
    var lt: UA_LocalizedText = undefined;
    _ = &lt;
    lt.locale = UA_String_fromChars(locale);
    lt.text = UA_String_fromChars(text);
    return lt;
}
pub const UA_NumericRangeDimension = extern struct {
    min: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    max: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_NumericRange = extern struct {
    dimensionsSize: usize = @import("std").mem.zeroes(usize),
    dimensions: [*c]UA_NumericRangeDimension = @import("std").mem.zeroes([*c]UA_NumericRangeDimension),
};
pub extern fn UA_NumericRange_parse(range: [*c]UA_NumericRange, str: UA_String) UA_StatusCode;
pub fn UA_NUMERICRANGE(arg_s: [*c]const u8) callconv(.c) UA_NumericRange {
    var s = arg_s;
    _ = &s;
    var nr: UA_NumericRange = undefined;
    _ = &nr;
    _ = memset(@as(?*anyopaque, @ptrCast(&nr)), @as(c_int, 0), @sizeOf(UA_NumericRange));
    _ = UA_NumericRange_parse(&nr, UA_STRING(@as([*c]u8, @ptrFromInt(@as(usize, @intCast(@intFromPtr(s)))))));
    return nr;
}
pub const UA_VARIANT_DATA: c_int = 0;
pub const UA_VARIANT_DATA_NODELETE: c_int = 1;
pub const UA_VariantStorageType = c_uint;
pub const UA_Variant = extern struct {
    type: ?*const UA_DataType = @import("std").mem.zeroes(?*const UA_DataType),
    storageType: UA_VariantStorageType = @import("std").mem.zeroes(UA_VariantStorageType),
    arrayLength: usize = @import("std").mem.zeroes(usize),
    data: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    arrayDimensionsSize: usize = @import("std").mem.zeroes(usize),
    arrayDimensions: [*c]UA_UInt32 = @import("std").mem.zeroes([*c]UA_UInt32),
};
pub fn UA_Variant_isEmpty(arg_v: [*c]const UA_Variant) callconv(.c) UA_Boolean {
    var v = arg_v;
    _ = &v;
    return v.*.type == @as(?*const UA_DataType, @ptrCast(@as(?*anyopaque, @ptrFromInt(@as(c_int, 0)))));
}
pub fn UA_Variant_isScalar(arg_v: [*c]const UA_Variant) callconv(.c) UA_Boolean {
    var v = arg_v;
    _ = &v;
    return (v.*.arrayLength == @as(usize, @bitCast(@as(c_long, @as(c_int, 0))))) and (v.*.data > @as(?*anyopaque, @ptrFromInt(@as(c_int, 1))));
}
pub fn UA_Variant_hasScalarType(arg_v: [*c]const UA_Variant, arg_type: ?*const UA_DataType) callconv(.c) UA_Boolean {
    var v = arg_v;
    _ = &v;
    var @"type" = arg_type;
    _ = &@"type";
    return (@as(c_int, @intFromBool(UA_Variant_isScalar(v))) != 0) and (@"type" == v.*.type);
}
pub fn UA_Variant_hasArrayType(arg_v: [*c]const UA_Variant, arg_type: ?*const UA_DataType) callconv(.c) UA_Boolean {
    var v = arg_v;
    _ = &v;
    var @"type" = arg_type;
    _ = &@"type";
    return !UA_Variant_isScalar(v) and (@"type" == v.*.type);
}
pub extern fn UA_Variant_setScalar(v: [*c]UA_Variant, noalias p: ?*anyopaque, @"type": ?*const UA_DataType) void;
pub extern fn UA_Variant_setScalarCopy(v: [*c]UA_Variant, noalias p: ?*const anyopaque, @"type": ?*const UA_DataType) UA_StatusCode;
pub extern fn UA_Variant_setArray(v: [*c]UA_Variant, noalias array: ?*anyopaque, arraySize: usize, @"type": ?*const UA_DataType) void;
pub extern fn UA_Variant_setArrayCopy(v: [*c]UA_Variant, noalias array: ?*const anyopaque, arraySize: usize, @"type": ?*const UA_DataType) UA_StatusCode;
pub extern fn UA_Variant_copyRange(src: [*c]const UA_Variant, noalias dst: [*c]UA_Variant, range: UA_NumericRange) UA_StatusCode;
pub extern fn UA_Variant_setRange(v: [*c]UA_Variant, noalias array: ?*anyopaque, arraySize: usize, range: UA_NumericRange) UA_StatusCode;
pub extern fn UA_Variant_setRangeCopy(v: [*c]UA_Variant, noalias array: ?*const anyopaque, arraySize: usize, range: UA_NumericRange) UA_StatusCode;
pub const UA_EXTENSIONOBJECT_ENCODED_NOBODY: c_int = 0;
pub const UA_EXTENSIONOBJECT_ENCODED_BYTESTRING: c_int = 1;
pub const UA_EXTENSIONOBJECT_ENCODED_XML: c_int = 2;
pub const UA_EXTENSIONOBJECT_DECODED: c_int = 3;
pub const UA_EXTENSIONOBJECT_DECODED_NODELETE: c_int = 4;
pub const UA_ExtensionObjectEncoding = c_uint;
const struct_unnamed_16 = extern struct {
    typeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    body: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
};
const struct_unnamed_17 = extern struct {
    type: ?*const UA_DataType = @import("std").mem.zeroes(?*const UA_DataType),
    data: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
const union_unnamed_15 = extern union {
    encoded: struct_unnamed_16,
    decoded: struct_unnamed_17,
};
pub const UA_ExtensionObject = extern struct {
    encoding: UA_ExtensionObjectEncoding = @import("std").mem.zeroes(UA_ExtensionObjectEncoding),
    content: union_unnamed_15 = @import("std").mem.zeroes(union_unnamed_15),
};
pub extern fn UA_ExtensionObject_setValue(eo: [*c]UA_ExtensionObject, noalias p: ?*anyopaque, @"type": ?*const UA_DataType) void;
pub extern fn UA_ExtensionObject_setValueNoDelete(eo: [*c]UA_ExtensionObject, noalias p: ?*anyopaque, @"type": ?*const UA_DataType) void;
pub extern fn UA_ExtensionObject_setValueCopy(eo: [*c]UA_ExtensionObject, noalias p: ?*anyopaque, @"type": ?*const UA_DataType) UA_StatusCode;
// ./vendor/open62541.h:23269:19: warning: struct demoted to opaque type - has bitfield
pub const UA_DataValue = opaque {};
pub extern fn UA_DataValue_copyVariantRange(src: ?*const UA_DataValue, noalias dst: ?*UA_DataValue, range: UA_NumericRange) UA_StatusCode;
// ./vendor/open62541.h:23295:19: warning: struct demoted to opaque type - has bitfield
pub const struct_UA_DiagnosticInfo = opaque {};
pub const UA_DiagnosticInfo = struct_UA_DiagnosticInfo;
// ./vendor/open62541.h:23345:13: warning: struct demoted to opaque type - has bitfield
pub const UA_DataTypeMember = opaque {};
pub const UA_DATATYPEKIND_BOOLEAN: c_int = 0;
pub const UA_DATATYPEKIND_SBYTE: c_int = 1;
pub const UA_DATATYPEKIND_BYTE: c_int = 2;
pub const UA_DATATYPEKIND_INT16: c_int = 3;
pub const UA_DATATYPEKIND_UINT16: c_int = 4;
pub const UA_DATATYPEKIND_INT32: c_int = 5;
pub const UA_DATATYPEKIND_UINT32: c_int = 6;
pub const UA_DATATYPEKIND_INT64: c_int = 7;
pub const UA_DATATYPEKIND_UINT64: c_int = 8;
pub const UA_DATATYPEKIND_FLOAT: c_int = 9;
pub const UA_DATATYPEKIND_DOUBLE: c_int = 10;
pub const UA_DATATYPEKIND_STRING: c_int = 11;
pub const UA_DATATYPEKIND_DATETIME: c_int = 12;
pub const UA_DATATYPEKIND_GUID: c_int = 13;
pub const UA_DATATYPEKIND_BYTESTRING: c_int = 14;
pub const UA_DATATYPEKIND_XMLELEMENT: c_int = 15;
pub const UA_DATATYPEKIND_NODEID: c_int = 16;
pub const UA_DATATYPEKIND_EXPANDEDNODEID: c_int = 17;
pub const UA_DATATYPEKIND_STATUSCODE: c_int = 18;
pub const UA_DATATYPEKIND_QUALIFIEDNAME: c_int = 19;
pub const UA_DATATYPEKIND_LOCALIZEDTEXT: c_int = 20;
pub const UA_DATATYPEKIND_EXTENSIONOBJECT: c_int = 21;
pub const UA_DATATYPEKIND_DATAVALUE: c_int = 22;
pub const UA_DATATYPEKIND_VARIANT: c_int = 23;
pub const UA_DATATYPEKIND_DIAGNOSTICINFO: c_int = 24;
pub const UA_DATATYPEKIND_DECIMAL: c_int = 25;
pub const UA_DATATYPEKIND_ENUM: c_int = 26;
pub const UA_DATATYPEKIND_STRUCTURE: c_int = 27;
pub const UA_DATATYPEKIND_OPTSTRUCT: c_int = 28;
pub const UA_DATATYPEKIND_UNION: c_int = 29;
pub const UA_DATATYPEKIND_BITFIELDCLUSTER: c_int = 30;
pub const UA_DataTypeKind = c_uint;
pub extern fn UA_DataType_getStructMember(@"type": ?*const UA_DataType, memberName: [*c]const u8, outOffset: [*c]usize, outMemberType: [*c]?*const UA_DataType, outIsArray: [*c]UA_Boolean) UA_Boolean;
pub extern fn UA_DataType_isNumeric(@"type": ?*const UA_DataType) UA_Boolean;
pub extern fn UA_findDataType(typeId: [*c]const UA_NodeId) ?*const UA_DataType;
pub extern fn UA_findDataTypeWithCustom(typeId: [*c]const UA_NodeId, customTypes: [*c]const UA_DataTypeArray) ?*const UA_DataType;
pub extern fn UA_new(@"type": ?*const UA_DataType) ?*anyopaque;
pub fn UA_init(arg_p: ?*anyopaque, arg_type: ?*const UA_DataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    var @"type" = arg_type;
    _ = &@"type";
    _ = memset(p, @as(c_int, 0), @as(c_ulong, @bitCast(@as(c_ulong, @"type".*.memSize))));
}
pub extern fn UA_copy(src: ?*const anyopaque, dst: ?*anyopaque, @"type": ?*const UA_DataType) UA_StatusCode;
pub extern fn UA_clear(p: ?*anyopaque, @"type": ?*const UA_DataType) void;
pub extern fn UA_delete(p: ?*anyopaque, @"type": ?*const UA_DataType) void;
pub extern fn UA_print(p: ?*const anyopaque, @"type": ?*const UA_DataType, output: [*c]UA_String) UA_StatusCode;
pub extern fn UA_order(p1: ?*const anyopaque, p2: ?*const anyopaque, @"type": ?*const UA_DataType) UA_Order;
pub fn UA_equal(arg_p1: ?*const anyopaque, arg_p2: ?*const anyopaque, arg_type: ?*const UA_DataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    var @"type" = arg_type;
    _ = &@"type";
    return UA_order(p1, p2, @"type") == UA_ORDER_EQ;
}
pub extern fn UA_calcSizeBinary(p: ?*const anyopaque, @"type": ?*const UA_DataType) usize;
pub extern fn UA_encodeBinary(p: ?*const anyopaque, @"type": ?*const UA_DataType, outBuf: [*c]UA_ByteString) UA_StatusCode;
pub const UA_DecodeBinaryOptions = extern struct {
    customTypes: [*c]const UA_DataTypeArray = @import("std").mem.zeroes([*c]const UA_DataTypeArray),
};
pub extern fn UA_decodeBinary(inBuf: [*c]const UA_ByteString, p: ?*anyopaque, @"type": ?*const UA_DataType, options: [*c]const UA_DecodeBinaryOptions) UA_StatusCode;
pub const UA_EncodeJsonOptions = extern struct {
    namespaces: [*c]const UA_String = @import("std").mem.zeroes([*c]const UA_String),
    namespacesSize: usize = @import("std").mem.zeroes(usize),
    serverUris: [*c]const UA_String = @import("std").mem.zeroes([*c]const UA_String),
    serverUrisSize: usize = @import("std").mem.zeroes(usize),
    useReversible: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    prettyPrint: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    unquotedKeys: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    stringNodeIds: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
};
pub extern fn UA_calcSizeJson(src: ?*const anyopaque, @"type": ?*const UA_DataType, options: [*c]const UA_EncodeJsonOptions) usize;
pub extern fn UA_encodeJson(src: ?*const anyopaque, @"type": ?*const UA_DataType, outBuf: [*c]UA_ByteString, options: [*c]const UA_EncodeJsonOptions) UA_StatusCode;
pub const UA_DecodeJsonOptions = extern struct {
    namespaces: [*c]const UA_String = @import("std").mem.zeroes([*c]const UA_String),
    namespacesSize: usize = @import("std").mem.zeroes(usize),
    serverUris: [*c]const UA_String = @import("std").mem.zeroes([*c]const UA_String),
    serverUrisSize: usize = @import("std").mem.zeroes(usize),
    customTypes: [*c]const UA_DataTypeArray = @import("std").mem.zeroes([*c]const UA_DataTypeArray),
};
pub extern fn UA_decodeJson(src: [*c]const UA_ByteString, dst: ?*anyopaque, @"type": ?*const UA_DataType, options: [*c]const UA_DecodeJsonOptions) UA_StatusCode;
pub extern fn UA_Array_new(size: usize, @"type": ?*const UA_DataType) ?*anyopaque;
pub extern fn UA_Array_copy(src: ?*const anyopaque, size: usize, dst: [*c]?*anyopaque, @"type": ?*const UA_DataType) UA_StatusCode;
pub extern fn UA_Array_resize(p: [*c]?*anyopaque, size: [*c]usize, newSize: usize, @"type": ?*const UA_DataType) UA_StatusCode;
pub extern fn UA_Array_append(p: [*c]?*anyopaque, size: [*c]usize, newElem: ?*anyopaque, @"type": ?*const UA_DataType) UA_StatusCode;
pub extern fn UA_Array_appendCopy(p: [*c]?*anyopaque, size: [*c]usize, newElem: ?*const anyopaque, @"type": ?*const UA_DataType) UA_StatusCode;
pub extern fn UA_Array_delete(p: ?*anyopaque, size: usize, @"type": ?*const UA_DataType) void;
pub extern var UA_TYPES: [394]UA_DataType;
pub const UA_NAMINGRULETYPE_MANDATORY: c_int = 1;
pub const UA_NAMINGRULETYPE_OPTIONAL: c_int = 2;
pub const UA_NAMINGRULETYPE_CONSTRAINT: c_int = 3;
pub const __UA_NAMINGRULETYPE_FORCE32BIT: c_int = 2147483647;
pub const UA_NamingRuleType = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const __UA_ENUMERATION_FORCE32BIT: c_int = 2147483647;
pub const UA_Enumeration = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_ImageBMP = UA_ByteString;
pub const UA_ImageGIF = UA_ByteString;
pub const UA_ImageJPG = UA_ByteString;
pub const UA_ImagePNG = UA_ByteString;
pub const UA_AudioDataType = UA_ByteString;
pub const UA_UriString = UA_String;
pub const UA_BitFieldMaskDataType = UA_UInt64;
pub const UA_SemanticVersionString = UA_String;
pub const UA_KeyValuePair = extern struct {
    key: UA_QualifiedName = @import("std").mem.zeroes(UA_QualifiedName),
    value: UA_Variant = @import("std").mem.zeroes(UA_Variant),
};
pub const UA_AdditionalParametersType = extern struct {
    parametersSize: usize = @import("std").mem.zeroes(usize),
    parameters: [*c]UA_KeyValuePair = @import("std").mem.zeroes([*c]UA_KeyValuePair),
};
pub const UA_EphemeralKeyType = extern struct {
    publicKey: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
    signature: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
};
pub const UA_Handle = UA_ByteString;
pub const UA_TrimmedString = UA_ByteString;
pub const UA_RationalNumber = extern struct {
    numerator: UA_Int32 = @import("std").mem.zeroes(UA_Int32),
    denominator: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_ThreeDVector = extern struct {
    x: UA_Double = @import("std").mem.zeroes(UA_Double),
    y: UA_Double = @import("std").mem.zeroes(UA_Double),
    z: UA_Double = @import("std").mem.zeroes(UA_Double),
};
pub const UA_ThreeDCartesianCoordinates = extern struct {
    x: UA_Double = @import("std").mem.zeroes(UA_Double),
    y: UA_Double = @import("std").mem.zeroes(UA_Double),
    z: UA_Double = @import("std").mem.zeroes(UA_Double),
};
pub const UA_ThreeDOrientation = extern struct {
    a: UA_Double = @import("std").mem.zeroes(UA_Double),
    b: UA_Double = @import("std").mem.zeroes(UA_Double),
    c: UA_Double = @import("std").mem.zeroes(UA_Double),
};
pub const UA_ThreeDFrame = extern struct {
    cartesianCoordinates: UA_ThreeDCartesianCoordinates = @import("std").mem.zeroes(UA_ThreeDCartesianCoordinates),
    orientation: UA_ThreeDOrientation = @import("std").mem.zeroes(UA_ThreeDOrientation),
};
pub const UA_OPENFILEMODE_READ: c_int = 1;
pub const UA_OPENFILEMODE_WRITE: c_int = 2;
pub const UA_OPENFILEMODE_ERASEEXISTING: c_int = 4;
pub const UA_OPENFILEMODE_APPEND: c_int = 8;
pub const __UA_OPENFILEMODE_FORCE32BIT: c_int = 2147483647;
pub const UA_OpenFileMode = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_IDENTITYCRITERIATYPE_USERNAME: c_int = 1;
pub const UA_IDENTITYCRITERIATYPE_THUMBPRINT: c_int = 2;
pub const UA_IDENTITYCRITERIATYPE_ROLE: c_int = 3;
pub const UA_IDENTITYCRITERIATYPE_GROUPID: c_int = 4;
pub const UA_IDENTITYCRITERIATYPE_ANONYMOUS: c_int = 5;
pub const UA_IDENTITYCRITERIATYPE_AUTHENTICATEDUSER: c_int = 6;
pub const UA_IDENTITYCRITERIATYPE_APPLICATION: c_int = 7;
pub const UA_IDENTITYCRITERIATYPE_X509SUBJECT: c_int = 8;
pub const __UA_IDENTITYCRITERIATYPE_FORCE32BIT: c_int = 2147483647;
pub const UA_IdentityCriteriaType = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_IdentityMappingRuleType = extern struct {
    criteriaType: UA_IdentityCriteriaType = @import("std").mem.zeroes(UA_IdentityCriteriaType),
    criteria: UA_String = @import("std").mem.zeroes(UA_String),
};
pub const UA_CurrencyUnitType = extern struct {
    numericCode: UA_Int16 = @import("std").mem.zeroes(UA_Int16),
    exponent: UA_SByte = @import("std").mem.zeroes(UA_SByte),
    alphabeticCode: UA_String = @import("std").mem.zeroes(UA_String),
    currency: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
};
pub const UA_AlarmMask = UA_UInt16;
pub const UA_TrustListValidationOptions = UA_UInt32;
pub const UA_TRUSTLISTMASKS_NONE: c_int = 0;
pub const UA_TRUSTLISTMASKS_TRUSTEDCERTIFICATES: c_int = 1;
pub const UA_TRUSTLISTMASKS_TRUSTEDCRLS: c_int = 2;
pub const UA_TRUSTLISTMASKS_ISSUERCERTIFICATES: c_int = 4;
pub const UA_TRUSTLISTMASKS_ISSUERCRLS: c_int = 8;
pub const UA_TRUSTLISTMASKS_ALL: c_int = 15;
pub const __UA_TRUSTLISTMASKS_FORCE32BIT: c_int = 2147483647;
pub const UA_TrustListMasks = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_TrustListDataType = extern struct {
    specifiedLists: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    trustedCertificatesSize: usize = @import("std").mem.zeroes(usize),
    trustedCertificates: [*c]UA_ByteString = @import("std").mem.zeroes([*c]UA_ByteString),
    trustedCrlsSize: usize = @import("std").mem.zeroes(usize),
    trustedCrls: [*c]UA_ByteString = @import("std").mem.zeroes([*c]UA_ByteString),
    issuerCertificatesSize: usize = @import("std").mem.zeroes(usize),
    issuerCertificates: [*c]UA_ByteString = @import("std").mem.zeroes([*c]UA_ByteString),
    issuerCrlsSize: usize = @import("std").mem.zeroes(usize),
    issuerCrls: [*c]UA_ByteString = @import("std").mem.zeroes([*c]UA_ByteString),
};
pub const UA_TransactionErrorType = extern struct {
    targetId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    @"error": UA_StatusCode = @import("std").mem.zeroes(UA_StatusCode),
    message: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
};
pub const UA_DataTypeDescription = extern struct {
    dataTypeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    name: UA_QualifiedName = @import("std").mem.zeroes(UA_QualifiedName),
};
pub const UA_SimpleTypeDescription = extern struct {
    dataTypeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    name: UA_QualifiedName = @import("std").mem.zeroes(UA_QualifiedName),
    baseDataType: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    builtInType: UA_Byte = @import("std").mem.zeroes(UA_Byte),
};
pub const UA_PortableQualifiedName = extern struct {
    namespaceUri: UA_String = @import("std").mem.zeroes(UA_String),
    name: UA_String = @import("std").mem.zeroes(UA_String),
};
pub const UA_PortableNodeId = extern struct {
    namespaceUri: UA_String = @import("std").mem.zeroes(UA_String),
    identifier: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
};
pub const UA_UnsignedRationalNumber = extern struct {
    numerator: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    denominator: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_PUBSUBSTATE_DISABLED: c_int = 0;
pub const UA_PUBSUBSTATE_PAUSED: c_int = 1;
pub const UA_PUBSUBSTATE_OPERATIONAL: c_int = 2;
pub const UA_PUBSUBSTATE_ERROR: c_int = 3;
pub const UA_PUBSUBSTATE_PREOPERATIONAL: c_int = 4;
pub const __UA_PUBSUBSTATE_FORCE32BIT: c_int = 2147483647;
pub const UA_PubSubState = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_DataSetFieldFlags = UA_UInt16;
pub const UA_ConfigurationVersionDataType = extern struct {
    majorVersion: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    minorVersion: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_PublishedVariableDataType = extern struct {
    publishedVariable: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    attributeId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    samplingIntervalHint: UA_Double = @import("std").mem.zeroes(UA_Double),
    deadbandType: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    deadbandValue: UA_Double = @import("std").mem.zeroes(UA_Double),
    indexRange: UA_String = @import("std").mem.zeroes(UA_String),
    substituteValue: UA_Variant = @import("std").mem.zeroes(UA_Variant),
    metaDataPropertiesSize: usize = @import("std").mem.zeroes(usize),
    metaDataProperties: [*c]UA_QualifiedName = @import("std").mem.zeroes([*c]UA_QualifiedName),
};
pub const UA_PublishedDataItemsDataType = extern struct {
    publishedDataSize: usize = @import("std").mem.zeroes(usize),
    publishedData: [*c]UA_PublishedVariableDataType = @import("std").mem.zeroes([*c]UA_PublishedVariableDataType),
};
pub const UA_PublishedDataSetCustomSourceDataType = extern struct {
    cyclicDataSet: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
};
pub const UA_DataSetFieldContentMask = UA_UInt32;
pub const UA_DataSetWriterDataType = extern struct {
    name: UA_String = @import("std").mem.zeroes(UA_String),
    enabled: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    dataSetWriterId: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    dataSetFieldContentMask: UA_DataSetFieldContentMask = @import("std").mem.zeroes(UA_DataSetFieldContentMask),
    keyFrameCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    dataSetName: UA_String = @import("std").mem.zeroes(UA_String),
    dataSetWriterPropertiesSize: usize = @import("std").mem.zeroes(usize),
    dataSetWriterProperties: [*c]UA_KeyValuePair = @import("std").mem.zeroes([*c]UA_KeyValuePair),
    transportSettings: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
    messageSettings: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
};
pub const UA_NetworkAddressDataType = extern struct {
    networkInterface: UA_String = @import("std").mem.zeroes(UA_String),
};
pub const UA_NetworkAddressUrlDataType = extern struct {
    networkInterface: UA_String = @import("std").mem.zeroes(UA_String),
    url: UA_String = @import("std").mem.zeroes(UA_String),
};
pub const UA_OVERRIDEVALUEHANDLING_DISABLED: c_int = 0;
pub const UA_OVERRIDEVALUEHANDLING_LASTUSABLEVALUE: c_int = 1;
pub const UA_OVERRIDEVALUEHANDLING_OVERRIDEVALUE: c_int = 2;
pub const __UA_OVERRIDEVALUEHANDLING_FORCE32BIT: c_int = 2147483647;
pub const UA_OverrideValueHandling = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_StandaloneSubscribedDataSetRefDataType = extern struct {
    dataSetName: UA_String = @import("std").mem.zeroes(UA_String),
};
pub const UA_DATASETORDERINGTYPE_UNDEFINED: c_int = 0;
pub const UA_DATASETORDERINGTYPE_ASCENDINGWRITERID: c_int = 1;
pub const UA_DATASETORDERINGTYPE_ASCENDINGWRITERIDSINGLE: c_int = 2;
pub const __UA_DATASETORDERINGTYPE_FORCE32BIT: c_int = 2147483647;
pub const UA_DataSetOrderingType = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_UadpNetworkMessageContentMask = UA_UInt32;
pub const UA_UadpWriterGroupMessageDataType = extern struct {
    groupVersion: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    dataSetOrdering: UA_DataSetOrderingType = @import("std").mem.zeroes(UA_DataSetOrderingType),
    networkMessageContentMask: UA_UadpNetworkMessageContentMask = @import("std").mem.zeroes(UA_UadpNetworkMessageContentMask),
    samplingOffset: UA_Double = @import("std").mem.zeroes(UA_Double),
    publishingOffsetSize: usize = @import("std").mem.zeroes(usize),
    publishingOffset: [*c]UA_Double = @import("std").mem.zeroes([*c]UA_Double),
};
pub const UA_UadpDataSetMessageContentMask = UA_UInt32;
pub const UA_UadpDataSetWriterMessageDataType = extern struct {
    dataSetMessageContentMask: UA_UadpDataSetMessageContentMask = @import("std").mem.zeroes(UA_UadpDataSetMessageContentMask),
    configuredSize: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    networkMessageNumber: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    dataSetOffset: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
};
pub const UA_UadpDataSetReaderMessageDataType = extern struct {
    groupVersion: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    networkMessageNumber: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    dataSetOffset: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    dataSetClassId: UA_Guid = @import("std").mem.zeroes(UA_Guid),
    networkMessageContentMask: UA_UadpNetworkMessageContentMask = @import("std").mem.zeroes(UA_UadpNetworkMessageContentMask),
    dataSetMessageContentMask: UA_UadpDataSetMessageContentMask = @import("std").mem.zeroes(UA_UadpDataSetMessageContentMask),
    publishingInterval: UA_Double = @import("std").mem.zeroes(UA_Double),
    receiveOffset: UA_Double = @import("std").mem.zeroes(UA_Double),
    processingOffset: UA_Double = @import("std").mem.zeroes(UA_Double),
};
pub const UA_JsonNetworkMessageContentMask = UA_UInt32;
pub const UA_JsonWriterGroupMessageDataType = extern struct {
    networkMessageContentMask: UA_JsonNetworkMessageContentMask = @import("std").mem.zeroes(UA_JsonNetworkMessageContentMask),
};
pub const UA_JsonDataSetMessageContentMask = UA_UInt32;
pub const UA_JsonDataSetWriterMessageDataType = extern struct {
    dataSetMessageContentMask: UA_JsonDataSetMessageContentMask = @import("std").mem.zeroes(UA_JsonDataSetMessageContentMask),
};
pub const UA_JsonDataSetReaderMessageDataType = extern struct {
    networkMessageContentMask: UA_JsonNetworkMessageContentMask = @import("std").mem.zeroes(UA_JsonNetworkMessageContentMask),
    dataSetMessageContentMask: UA_JsonDataSetMessageContentMask = @import("std").mem.zeroes(UA_JsonDataSetMessageContentMask),
};
pub const UA_TransmitQosPriorityDataType = extern struct {
    priorityLabel: UA_String = @import("std").mem.zeroes(UA_String),
};
pub const UA_ReceiveQosPriorityDataType = extern struct {
    priorityLabel: UA_String = @import("std").mem.zeroes(UA_String),
};
pub const UA_DatagramConnectionTransportDataType = extern struct {
    discoveryAddress: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
};
pub const UA_DatagramConnectionTransport2DataType = extern struct {
    discoveryAddress: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
    discoveryAnnounceRate: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    discoveryMaxMessageSize: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    qosCategory: UA_String = @import("std").mem.zeroes(UA_String),
    datagramQosSize: usize = @import("std").mem.zeroes(usize),
    datagramQos: [*c]UA_ExtensionObject = @import("std").mem.zeroes([*c]UA_ExtensionObject),
};
pub const UA_DatagramWriterGroupTransportDataType = extern struct {
    messageRepeatCount: UA_Byte = @import("std").mem.zeroes(UA_Byte),
    messageRepeatDelay: UA_Double = @import("std").mem.zeroes(UA_Double),
};
pub const UA_DatagramWriterGroupTransport2DataType = extern struct {
    messageRepeatCount: UA_Byte = @import("std").mem.zeroes(UA_Byte),
    messageRepeatDelay: UA_Double = @import("std").mem.zeroes(UA_Double),
    address: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
    qosCategory: UA_String = @import("std").mem.zeroes(UA_String),
    datagramQosSize: usize = @import("std").mem.zeroes(usize),
    datagramQos: [*c]UA_ExtensionObject = @import("std").mem.zeroes([*c]UA_ExtensionObject),
    discoveryAnnounceRate: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    topic: UA_String = @import("std").mem.zeroes(UA_String),
};
pub const UA_DatagramDataSetReaderTransportDataType = extern struct {
    address: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
    qosCategory: UA_String = @import("std").mem.zeroes(UA_String),
    datagramQosSize: usize = @import("std").mem.zeroes(usize),
    datagramQos: [*c]UA_ExtensionObject = @import("std").mem.zeroes([*c]UA_ExtensionObject),
    topic: UA_String = @import("std").mem.zeroes(UA_String),
};
pub const UA_BrokerConnectionTransportDataType = extern struct {
    resourceUri: UA_String = @import("std").mem.zeroes(UA_String),
    authenticationProfileUri: UA_String = @import("std").mem.zeroes(UA_String),
};
pub const UA_BROKERTRANSPORTQUALITYOFSERVICE_NOTSPECIFIED: c_int = 0;
pub const UA_BROKERTRANSPORTQUALITYOFSERVICE_BESTEFFORT: c_int = 1;
pub const UA_BROKERTRANSPORTQUALITYOFSERVICE_ATLEASTONCE: c_int = 2;
pub const UA_BROKERTRANSPORTQUALITYOFSERVICE_ATMOSTONCE: c_int = 3;
pub const UA_BROKERTRANSPORTQUALITYOFSERVICE_EXACTLYONCE: c_int = 4;
pub const __UA_BROKERTRANSPORTQUALITYOFSERVICE_FORCE32BIT: c_int = 2147483647;
pub const UA_BrokerTransportQualityOfService = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_BrokerWriterGroupTransportDataType = extern struct {
    queueName: UA_String = @import("std").mem.zeroes(UA_String),
    resourceUri: UA_String = @import("std").mem.zeroes(UA_String),
    authenticationProfileUri: UA_String = @import("std").mem.zeroes(UA_String),
    requestedDeliveryGuarantee: UA_BrokerTransportQualityOfService = @import("std").mem.zeroes(UA_BrokerTransportQualityOfService),
};
pub const UA_BrokerDataSetWriterTransportDataType = extern struct {
    queueName: UA_String = @import("std").mem.zeroes(UA_String),
    resourceUri: UA_String = @import("std").mem.zeroes(UA_String),
    authenticationProfileUri: UA_String = @import("std").mem.zeroes(UA_String),
    requestedDeliveryGuarantee: UA_BrokerTransportQualityOfService = @import("std").mem.zeroes(UA_BrokerTransportQualityOfService),
    metaDataQueueName: UA_String = @import("std").mem.zeroes(UA_String),
    metaDataUpdateTime: UA_Double = @import("std").mem.zeroes(UA_Double),
};
pub const UA_BrokerDataSetReaderTransportDataType = extern struct {
    queueName: UA_String = @import("std").mem.zeroes(UA_String),
    resourceUri: UA_String = @import("std").mem.zeroes(UA_String),
    authenticationProfileUri: UA_String = @import("std").mem.zeroes(UA_String),
    requestedDeliveryGuarantee: UA_BrokerTransportQualityOfService = @import("std").mem.zeroes(UA_BrokerTransportQualityOfService),
    metaDataQueueName: UA_String = @import("std").mem.zeroes(UA_String),
};
pub const UA_PubSubConfigurationRefMask = UA_UInt32;
pub const UA_PubSubConfigurationRefDataType = extern struct {
    configurationMask: UA_PubSubConfigurationRefMask = @import("std").mem.zeroes(UA_PubSubConfigurationRefMask),
    elementIndex: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    connectionIndex: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    groupIndex: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
};
pub const UA_PubSubConfigurationValueDataType = extern struct {
    configurationElement: UA_PubSubConfigurationRefDataType = @import("std").mem.zeroes(UA_PubSubConfigurationRefDataType),
    name: UA_String = @import("std").mem.zeroes(UA_String),
    identifier: UA_Variant = @import("std").mem.zeroes(UA_Variant),
};
pub const UA_DIAGNOSTICSLEVEL_BASIC: c_int = 0;
pub const UA_DIAGNOSTICSLEVEL_ADVANCED: c_int = 1;
pub const UA_DIAGNOSTICSLEVEL_INFO: c_int = 2;
pub const UA_DIAGNOSTICSLEVEL_LOG: c_int = 3;
pub const UA_DIAGNOSTICSLEVEL_DEBUG: c_int = 4;
pub const __UA_DIAGNOSTICSLEVEL_FORCE32BIT: c_int = 2147483647;
pub const UA_DiagnosticsLevel = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_PUBSUBDIAGNOSTICSCOUNTERCLASSIFICATION_INFORMATION: c_int = 0;
pub const UA_PUBSUBDIAGNOSTICSCOUNTERCLASSIFICATION_ERROR: c_int = 1;
pub const __UA_PUBSUBDIAGNOSTICSCOUNTERCLASSIFICATION_FORCE32BIT: c_int = 2147483647;
pub const UA_PubSubDiagnosticsCounterClassification = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_AliasNameDataType = extern struct {
    aliasName: UA_QualifiedName = @import("std").mem.zeroes(UA_QualifiedName),
    referencedNodesSize: usize = @import("std").mem.zeroes(usize),
    referencedNodes: [*c]UA_ExpandedNodeId = @import("std").mem.zeroes([*c]UA_ExpandedNodeId),
};
pub const UA_PasswordOptionsMask = UA_UInt32;
pub const UA_UserConfigurationMask = UA_UInt32;
pub const UA_UserManagementDataType = extern struct {
    userName: UA_String = @import("std").mem.zeroes(UA_String),
    userConfiguration: UA_UserConfigurationMask = @import("std").mem.zeroes(UA_UserConfigurationMask),
    description: UA_String = @import("std").mem.zeroes(UA_String),
};
pub const UA_EncodedTicket = UA_ByteString;
pub const UA_DUPLEX_FULL: c_int = 0;
pub const UA_DUPLEX_HALF: c_int = 1;
pub const UA_DUPLEX_UNKNOWN: c_int = 2;
pub const __UA_DUPLEX_FORCE32BIT: c_int = 2147483647;
pub const UA_Duplex = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_INTERFACEADMINSTATUS_UP: c_int = 0;
pub const UA_INTERFACEADMINSTATUS_DOWN: c_int = 1;
pub const UA_INTERFACEADMINSTATUS_TESTING: c_int = 2;
pub const __UA_INTERFACEADMINSTATUS_FORCE32BIT: c_int = 2147483647;
pub const UA_InterfaceAdminStatus = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_INTERFACEOPERSTATUS_UP: c_int = 0;
pub const UA_INTERFACEOPERSTATUS_DOWN: c_int = 1;
pub const UA_INTERFACEOPERSTATUS_TESTING: c_int = 2;
pub const UA_INTERFACEOPERSTATUS_UNKNOWN: c_int = 3;
pub const UA_INTERFACEOPERSTATUS_DORMANT: c_int = 4;
pub const UA_INTERFACEOPERSTATUS_NOTPRESENT: c_int = 5;
pub const UA_INTERFACEOPERSTATUS_LOWERLAYERDOWN: c_int = 6;
pub const __UA_INTERFACEOPERSTATUS_FORCE32BIT: c_int = 2147483647;
pub const UA_InterfaceOperStatus = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_NEGOTIATIONSTATUS_INPROGRESS: c_int = 0;
pub const UA_NEGOTIATIONSTATUS_COMPLETE: c_int = 1;
pub const UA_NEGOTIATIONSTATUS_FAILED: c_int = 2;
pub const UA_NEGOTIATIONSTATUS_UNKNOWN: c_int = 3;
pub const UA_NEGOTIATIONSTATUS_NONEGOTIATION: c_int = 4;
pub const __UA_NEGOTIATIONSTATUS_FORCE32BIT: c_int = 2147483647;
pub const UA_NegotiationStatus = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_TSNFAILURECODE_NOFAILURE: c_int = 0;
pub const UA_TSNFAILURECODE_INSUFFICIENTBANDWIDTH: c_int = 1;
pub const UA_TSNFAILURECODE_INSUFFICIENTRESOURCES: c_int = 2;
pub const UA_TSNFAILURECODE_INSUFFICIENTTRAFFICCLASSBANDWIDTH: c_int = 3;
pub const UA_TSNFAILURECODE_STREAMIDINUSE: c_int = 4;
pub const UA_TSNFAILURECODE_STREAMDESTINATIONADDRESSINUSE: c_int = 5;
pub const UA_TSNFAILURECODE_STREAMPREEMPTEDBYHIGHERRANK: c_int = 6;
pub const UA_TSNFAILURECODE_LATENCYHASCHANGED: c_int = 7;
pub const UA_TSNFAILURECODE_EGRESSPORTNOTAVBCAPABLE: c_int = 8;
pub const UA_TSNFAILURECODE_USEDIFFERENTDESTINATIONADDRESS: c_int = 9;
pub const UA_TSNFAILURECODE_OUTOFMSRPRESOURCES: c_int = 10;
pub const UA_TSNFAILURECODE_OUTOFMMRPRESOURCES: c_int = 11;
pub const UA_TSNFAILURECODE_CANNOTSTOREDESTINATIONADDRESS: c_int = 12;
pub const UA_TSNFAILURECODE_PRIORITYISNOTANSRCCLASS: c_int = 13;
pub const UA_TSNFAILURECODE_MAXFRAMESIZETOOLARGE: c_int = 14;
pub const UA_TSNFAILURECODE_MAXFANINPORTSLIMITREACHED: c_int = 15;
pub const UA_TSNFAILURECODE_FIRSTVALUECHANGEDFORSTREAMID: c_int = 16;
pub const UA_TSNFAILURECODE_VLANBLOCKEDONEGRESS: c_int = 17;
pub const UA_TSNFAILURECODE_VLANTAGGINGDISABLEDONEGRESS: c_int = 18;
pub const UA_TSNFAILURECODE_SRCLASSPRIORITYMISMATCH: c_int = 19;
pub const UA_TSNFAILURECODE_FEATURENOTPROPAGATED: c_int = 20;
pub const UA_TSNFAILURECODE_MAXLATENCYEXCEEDED: c_int = 21;
pub const UA_TSNFAILURECODE_BRIDGEDOESNOTPROVIDENETWORKID: c_int = 22;
pub const UA_TSNFAILURECODE_STREAMTRANSFORMNOTSUPPORTED: c_int = 23;
pub const UA_TSNFAILURECODE_STREAMIDTYPENOTSUPPORTED: c_int = 24;
pub const UA_TSNFAILURECODE_FEATURENOTSUPPORTED: c_int = 25;
pub const __UA_TSNFAILURECODE_FORCE32BIT: c_int = 2147483647;
pub const UA_TsnFailureCode = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_TSNSTREAMSTATE_DISABLED: c_int = 0;
pub const UA_TSNSTREAMSTATE_CONFIGURING: c_int = 1;
pub const UA_TSNSTREAMSTATE_READY: c_int = 2;
pub const UA_TSNSTREAMSTATE_OPERATIONAL: c_int = 3;
pub const UA_TSNSTREAMSTATE_ERROR: c_int = 4;
pub const __UA_TSNSTREAMSTATE_FORCE32BIT: c_int = 2147483647;
pub const UA_TsnStreamState = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_TSNTALKERSTATUS_NONE: c_int = 0;
pub const UA_TSNTALKERSTATUS_READY: c_int = 1;
pub const UA_TSNTALKERSTATUS_FAILED: c_int = 2;
pub const __UA_TSNTALKERSTATUS_FORCE32BIT: c_int = 2147483647;
pub const UA_TsnTalkerStatus = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_TSNLISTENERSTATUS_NONE: c_int = 0;
pub const UA_TSNLISTENERSTATUS_READY: c_int = 1;
pub const UA_TSNLISTENERSTATUS_PARTIALFAILED: c_int = 2;
pub const UA_TSNLISTENERSTATUS_FAILED: c_int = 3;
pub const __UA_TSNLISTENERSTATUS_FORCE32BIT: c_int = 2147483647;
pub const UA_TsnListenerStatus = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_PriorityMappingEntryType = extern struct {
    mappingUri: UA_String = @import("std").mem.zeroes(UA_String),
    priorityLabel: UA_String = @import("std").mem.zeroes(UA_String),
    priorityValue_PCP: UA_Byte = @import("std").mem.zeroes(UA_Byte),
    priorityValue_DSCP: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_ReferenceDescriptionDataType = extern struct {
    sourceNode: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    referenceType: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    isForward: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    targetNode: UA_ExpandedNodeId = @import("std").mem.zeroes(UA_ExpandedNodeId),
};
pub const UA_ReferenceListEntryDataType = extern struct {
    referenceType: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    isForward: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    targetNode: UA_ExpandedNodeId = @import("std").mem.zeroes(UA_ExpandedNodeId),
};
pub const UA_IDTYPE_NUMERIC: c_int = 0;
pub const UA_IDTYPE_STRING: c_int = 1;
pub const UA_IDTYPE_GUID: c_int = 2;
pub const UA_IDTYPE_OPAQUE: c_int = 3;
pub const __UA_IDTYPE_FORCE32BIT: c_int = 2147483647;
pub const UA_IdType = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_NODECLASS_UNSPECIFIED: c_int = 0;
pub const UA_NODECLASS_OBJECT: c_int = 1;
pub const UA_NODECLASS_VARIABLE: c_int = 2;
pub const UA_NODECLASS_METHOD: c_int = 4;
pub const UA_NODECLASS_OBJECTTYPE: c_int = 8;
pub const UA_NODECLASS_VARIABLETYPE: c_int = 16;
pub const UA_NODECLASS_REFERENCETYPE: c_int = 32;
pub const UA_NODECLASS_DATATYPE: c_int = 64;
pub const UA_NODECLASS_VIEW: c_int = 128;
pub const __UA_NODECLASS_FORCE32BIT: c_int = 2147483647;
pub const UA_NodeClass = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_PermissionType = UA_UInt32;
pub const UA_AccessLevelType = UA_Byte;
pub const UA_AccessLevelExType = UA_UInt32;
pub const UA_EventNotifierType = UA_Byte;
pub const UA_AccessRestrictionType = UA_UInt16;
pub const UA_RolePermissionType = extern struct {
    roleId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    permissions: UA_PermissionType = @import("std").mem.zeroes(UA_PermissionType),
};
pub const UA_STRUCTURETYPE_STRUCTURE: c_int = 0;
pub const UA_STRUCTURETYPE_STRUCTUREWITHOPTIONALFIELDS: c_int = 1;
pub const UA_STRUCTURETYPE_UNION: c_int = 2;
pub const UA_STRUCTURETYPE_STRUCTUREWITHSUBTYPEDVALUES: c_int = 3;
pub const UA_STRUCTURETYPE_UNIONWITHSUBTYPEDVALUES: c_int = 4;
pub const __UA_STRUCTURETYPE_FORCE32BIT: c_int = 2147483647;
pub const UA_StructureType = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_StructureField = extern struct {
    name: UA_String = @import("std").mem.zeroes(UA_String),
    description: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    dataType: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    valueRank: UA_Int32 = @import("std").mem.zeroes(UA_Int32),
    arrayDimensionsSize: usize = @import("std").mem.zeroes(usize),
    arrayDimensions: [*c]UA_UInt32 = @import("std").mem.zeroes([*c]UA_UInt32),
    maxStringLength: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    isOptional: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
};
pub const UA_StructureDefinition = extern struct {
    defaultEncodingId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    baseDataType: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    structureType: UA_StructureType = @import("std").mem.zeroes(UA_StructureType),
    fieldsSize: usize = @import("std").mem.zeroes(usize),
    fields: [*c]UA_StructureField = @import("std").mem.zeroes([*c]UA_StructureField),
};
pub const UA_Argument = extern struct {
    name: UA_String = @import("std").mem.zeroes(UA_String),
    dataType: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    valueRank: UA_Int32 = @import("std").mem.zeroes(UA_Int32),
    arrayDimensionsSize: usize = @import("std").mem.zeroes(usize),
    arrayDimensions: [*c]UA_UInt32 = @import("std").mem.zeroes([*c]UA_UInt32),
    description: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
};
pub const UA_EnumValueType = extern struct {
    value: UA_Int64 = @import("std").mem.zeroes(UA_Int64),
    displayName: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    description: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
};
pub const UA_EnumField = extern struct {
    value: UA_Int64 = @import("std").mem.zeroes(UA_Int64),
    displayName: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    description: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    name: UA_String = @import("std").mem.zeroes(UA_String),
};
pub const UA_OptionSet = extern struct {
    value: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
    validBits: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
};
pub const UA_NormalizedString = UA_String;
pub const UA_DecimalString = UA_String;
pub const UA_DurationString = UA_String;
pub const UA_TimeString = UA_String;
pub const UA_DateString = UA_String;
pub const UA_Duration = UA_Double;
pub const UA_UtcTime = UA_DateTime;
pub const UA_LocaleId = UA_String;
pub const UA_TimeZoneDataType = extern struct {
    offset: UA_Int16 = @import("std").mem.zeroes(UA_Int16),
    daylightSavingInOffset: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
};
pub const UA_Index = UA_ByteString;
pub const UA_IntegerId = UA_UInt32;
pub const UA_APPLICATIONTYPE_SERVER: c_int = 0;
pub const UA_APPLICATIONTYPE_CLIENT: c_int = 1;
pub const UA_APPLICATIONTYPE_CLIENTANDSERVER: c_int = 2;
pub const UA_APPLICATIONTYPE_DISCOVERYSERVER: c_int = 3;
pub const __UA_APPLICATIONTYPE_FORCE32BIT: c_int = 2147483647;
pub const UA_ApplicationType = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_ApplicationDescription = extern struct {
    applicationUri: UA_String = @import("std").mem.zeroes(UA_String),
    productUri: UA_String = @import("std").mem.zeroes(UA_String),
    applicationName: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    applicationType: UA_ApplicationType = @import("std").mem.zeroes(UA_ApplicationType),
    gatewayServerUri: UA_String = @import("std").mem.zeroes(UA_String),
    discoveryProfileUri: UA_String = @import("std").mem.zeroes(UA_String),
    discoveryUrlsSize: usize = @import("std").mem.zeroes(usize),
    discoveryUrls: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
};
pub const UA_RequestHeader = extern struct {
    authenticationToken: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    timestamp: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
    requestHandle: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    returnDiagnostics: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    auditEntryId: UA_String = @import("std").mem.zeroes(UA_String),
    timeoutHint: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    additionalHeader: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
};
pub const UA_ResponseHeader = extern struct {
    timestamp: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
    requestHandle: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    serviceResult: UA_StatusCode = @import("std").mem.zeroes(UA_StatusCode),
    serviceDiagnostics: UA_DiagnosticInfo = @import("std").mem.zeroes(UA_DiagnosticInfo),
    stringTableSize: usize = @import("std").mem.zeroes(usize),
    stringTable: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
    additionalHeader: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
};
pub const UA_VersionTime = UA_ByteString;
pub const UA_ServiceFault = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
};
pub const UA_SessionlessInvokeRequestType = extern struct {
    urisVersion: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    namespaceUrisSize: usize = @import("std").mem.zeroes(usize),
    namespaceUris: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
    serverUrisSize: usize = @import("std").mem.zeroes(usize),
    serverUris: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
    localeIdsSize: usize = @import("std").mem.zeroes(usize),
    localeIds: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
    serviceId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_SessionlessInvokeResponseType = extern struct {
    namespaceUrisSize: usize = @import("std").mem.zeroes(usize),
    namespaceUris: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
    serverUrisSize: usize = @import("std").mem.zeroes(usize),
    serverUris: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
    serviceId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_FindServersRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    endpointUrl: UA_String = @import("std").mem.zeroes(UA_String),
    localeIdsSize: usize = @import("std").mem.zeroes(usize),
    localeIds: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
    serverUrisSize: usize = @import("std").mem.zeroes(usize),
    serverUris: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
};
pub const UA_FindServersResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    serversSize: usize = @import("std").mem.zeroes(usize),
    servers: [*c]UA_ApplicationDescription = @import("std").mem.zeroes([*c]UA_ApplicationDescription),
};
pub const UA_ServerOnNetwork = extern struct {
    recordId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    serverName: UA_String = @import("std").mem.zeroes(UA_String),
    discoveryUrl: UA_String = @import("std").mem.zeroes(UA_String),
    serverCapabilitiesSize: usize = @import("std").mem.zeroes(usize),
    serverCapabilities: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
};
pub const UA_FindServersOnNetworkRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    startingRecordId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    maxRecordsToReturn: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    serverCapabilityFilterSize: usize = @import("std").mem.zeroes(usize),
    serverCapabilityFilter: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
};
pub const UA_FindServersOnNetworkResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    lastCounterResetTime: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
    serversSize: usize = @import("std").mem.zeroes(usize),
    servers: [*c]UA_ServerOnNetwork = @import("std").mem.zeroes([*c]UA_ServerOnNetwork),
};
pub const UA_ApplicationInstanceCertificate = UA_ByteString;
pub const UA_MESSAGESECURITYMODE_INVALID: c_int = 0;
pub const UA_MESSAGESECURITYMODE_NONE: c_int = 1;
pub const UA_MESSAGESECURITYMODE_SIGN: c_int = 2;
pub const UA_MESSAGESECURITYMODE_SIGNANDENCRYPT: c_int = 3;
pub const __UA_MESSAGESECURITYMODE_FORCE32BIT: c_int = 2147483647;
pub const UA_MessageSecurityMode = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_USERTOKENTYPE_ANONYMOUS: c_int = 0;
pub const UA_USERTOKENTYPE_USERNAME: c_int = 1;
pub const UA_USERTOKENTYPE_CERTIFICATE: c_int = 2;
pub const UA_USERTOKENTYPE_ISSUEDTOKEN: c_int = 3;
pub const __UA_USERTOKENTYPE_FORCE32BIT: c_int = 2147483647;
pub const UA_UserTokenType = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_UserTokenPolicy = extern struct {
    policyId: UA_String = @import("std").mem.zeroes(UA_String),
    tokenType: UA_UserTokenType = @import("std").mem.zeroes(UA_UserTokenType),
    issuedTokenType: UA_String = @import("std").mem.zeroes(UA_String),
    issuerEndpointUrl: UA_String = @import("std").mem.zeroes(UA_String),
    securityPolicyUri: UA_String = @import("std").mem.zeroes(UA_String),
};
pub const UA_EndpointDescription = extern struct {
    endpointUrl: UA_String = @import("std").mem.zeroes(UA_String),
    server: UA_ApplicationDescription = @import("std").mem.zeroes(UA_ApplicationDescription),
    serverCertificate: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
    securityMode: UA_MessageSecurityMode = @import("std").mem.zeroes(UA_MessageSecurityMode),
    securityPolicyUri: UA_String = @import("std").mem.zeroes(UA_String),
    userIdentityTokensSize: usize = @import("std").mem.zeroes(usize),
    userIdentityTokens: [*c]UA_UserTokenPolicy = @import("std").mem.zeroes([*c]UA_UserTokenPolicy),
    transportProfileUri: UA_String = @import("std").mem.zeroes(UA_String),
    securityLevel: UA_Byte = @import("std").mem.zeroes(UA_Byte),
};
pub const UA_GetEndpointsRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    endpointUrl: UA_String = @import("std").mem.zeroes(UA_String),
    localeIdsSize: usize = @import("std").mem.zeroes(usize),
    localeIds: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
    profileUrisSize: usize = @import("std").mem.zeroes(usize),
    profileUris: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
};
pub const UA_GetEndpointsResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    endpointsSize: usize = @import("std").mem.zeroes(usize),
    endpoints: [*c]UA_EndpointDescription = @import("std").mem.zeroes([*c]UA_EndpointDescription),
};
pub const UA_RegisteredServer = extern struct {
    serverUri: UA_String = @import("std").mem.zeroes(UA_String),
    productUri: UA_String = @import("std").mem.zeroes(UA_String),
    serverNamesSize: usize = @import("std").mem.zeroes(usize),
    serverNames: [*c]UA_LocalizedText = @import("std").mem.zeroes([*c]UA_LocalizedText),
    serverType: UA_ApplicationType = @import("std").mem.zeroes(UA_ApplicationType),
    gatewayServerUri: UA_String = @import("std").mem.zeroes(UA_String),
    discoveryUrlsSize: usize = @import("std").mem.zeroes(usize),
    discoveryUrls: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
    semaphoreFilePath: UA_String = @import("std").mem.zeroes(UA_String),
    isOnline: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
};
pub const UA_RegisterServerRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    server: UA_RegisteredServer = @import("std").mem.zeroes(UA_RegisteredServer),
};
pub const UA_RegisterServerResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
};
pub const UA_MdnsDiscoveryConfiguration = extern struct {
    mdnsServerName: UA_String = @import("std").mem.zeroes(UA_String),
    serverCapabilitiesSize: usize = @import("std").mem.zeroes(usize),
    serverCapabilities: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
};
pub const UA_RegisterServer2Request = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    server: UA_RegisteredServer = @import("std").mem.zeroes(UA_RegisteredServer),
    discoveryConfigurationSize: usize = @import("std").mem.zeroes(usize),
    discoveryConfiguration: [*c]UA_ExtensionObject = @import("std").mem.zeroes([*c]UA_ExtensionObject),
};
pub const UA_RegisterServer2Response = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    configurationResultsSize: usize = @import("std").mem.zeroes(usize),
    configurationResults: [*c]UA_StatusCode = @import("std").mem.zeroes([*c]UA_StatusCode),
    diagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    diagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_SECURITYTOKENREQUESTTYPE_ISSUE: c_int = 0;
pub const UA_SECURITYTOKENREQUESTTYPE_RENEW: c_int = 1;
pub const __UA_SECURITYTOKENREQUESTTYPE_FORCE32BIT: c_int = 2147483647;
pub const UA_SecurityTokenRequestType = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_ChannelSecurityToken = extern struct {
    channelId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    tokenId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    createdAt: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
    revisedLifetime: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_OpenSecureChannelRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    clientProtocolVersion: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    requestType: UA_SecurityTokenRequestType = @import("std").mem.zeroes(UA_SecurityTokenRequestType),
    securityMode: UA_MessageSecurityMode = @import("std").mem.zeroes(UA_MessageSecurityMode),
    clientNonce: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
    requestedLifetime: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_OpenSecureChannelResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    serverProtocolVersion: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    securityToken: UA_ChannelSecurityToken = @import("std").mem.zeroes(UA_ChannelSecurityToken),
    serverNonce: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
};
pub const UA_CloseSecureChannelRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
};
pub const UA_CloseSecureChannelResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
};
pub const UA_SignedSoftwareCertificate = extern struct {
    certificateData: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
    signature: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
};
pub const UA_SessionAuthenticationToken = UA_NodeId;
pub const UA_SignatureData = extern struct {
    algorithm: UA_String = @import("std").mem.zeroes(UA_String),
    signature: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
};
pub const UA_CreateSessionRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    clientDescription: UA_ApplicationDescription = @import("std").mem.zeroes(UA_ApplicationDescription),
    serverUri: UA_String = @import("std").mem.zeroes(UA_String),
    endpointUrl: UA_String = @import("std").mem.zeroes(UA_String),
    sessionName: UA_String = @import("std").mem.zeroes(UA_String),
    clientNonce: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
    clientCertificate: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
    requestedSessionTimeout: UA_Double = @import("std").mem.zeroes(UA_Double),
    maxResponseMessageSize: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_CreateSessionResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    sessionId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    authenticationToken: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    revisedSessionTimeout: UA_Double = @import("std").mem.zeroes(UA_Double),
    serverNonce: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
    serverCertificate: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
    serverEndpointsSize: usize = @import("std").mem.zeroes(usize),
    serverEndpoints: [*c]UA_EndpointDescription = @import("std").mem.zeroes([*c]UA_EndpointDescription),
    serverSoftwareCertificatesSize: usize = @import("std").mem.zeroes(usize),
    serverSoftwareCertificates: [*c]UA_SignedSoftwareCertificate = @import("std").mem.zeroes([*c]UA_SignedSoftwareCertificate),
    serverSignature: UA_SignatureData = @import("std").mem.zeroes(UA_SignatureData),
    maxRequestMessageSize: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_UserIdentityToken = extern struct {
    policyId: UA_String = @import("std").mem.zeroes(UA_String),
};
pub const UA_AnonymousIdentityToken = extern struct {
    policyId: UA_String = @import("std").mem.zeroes(UA_String),
};
pub const UA_UserNameIdentityToken = extern struct {
    policyId: UA_String = @import("std").mem.zeroes(UA_String),
    userName: UA_String = @import("std").mem.zeroes(UA_String),
    password: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
    encryptionAlgorithm: UA_String = @import("std").mem.zeroes(UA_String),
};
pub const UA_X509IdentityToken = extern struct {
    policyId: UA_String = @import("std").mem.zeroes(UA_String),
    certificateData: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
};
pub const UA_IssuedIdentityToken = extern struct {
    policyId: UA_String = @import("std").mem.zeroes(UA_String),
    tokenData: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
    encryptionAlgorithm: UA_String = @import("std").mem.zeroes(UA_String),
};
pub const UA_RsaEncryptedSecret = UA_ByteString;
pub const UA_EccEncryptedSecret = UA_ByteString;
pub const UA_ActivateSessionRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    clientSignature: UA_SignatureData = @import("std").mem.zeroes(UA_SignatureData),
    clientSoftwareCertificatesSize: usize = @import("std").mem.zeroes(usize),
    clientSoftwareCertificates: [*c]UA_SignedSoftwareCertificate = @import("std").mem.zeroes([*c]UA_SignedSoftwareCertificate),
    localeIdsSize: usize = @import("std").mem.zeroes(usize),
    localeIds: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
    userIdentityToken: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
    userTokenSignature: UA_SignatureData = @import("std").mem.zeroes(UA_SignatureData),
};
pub const UA_ActivateSessionResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    serverNonce: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
    resultsSize: usize = @import("std").mem.zeroes(usize),
    results: [*c]UA_StatusCode = @import("std").mem.zeroes([*c]UA_StatusCode),
    diagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    diagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_CloseSessionRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    deleteSubscriptions: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
};
pub const UA_CloseSessionResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
};
pub const UA_CancelRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    requestHandle: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_CancelResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    cancelCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_NODEATTRIBUTESMASK_NONE: c_int = 0;
pub const UA_NODEATTRIBUTESMASK_ACCESSLEVEL: c_int = 1;
pub const UA_NODEATTRIBUTESMASK_ARRAYDIMENSIONS: c_int = 2;
pub const UA_NODEATTRIBUTESMASK_BROWSENAME: c_int = 4;
pub const UA_NODEATTRIBUTESMASK_CONTAINSNOLOOPS: c_int = 8;
pub const UA_NODEATTRIBUTESMASK_DATATYPE: c_int = 16;
pub const UA_NODEATTRIBUTESMASK_DESCRIPTION: c_int = 32;
pub const UA_NODEATTRIBUTESMASK_DISPLAYNAME: c_int = 64;
pub const UA_NODEATTRIBUTESMASK_EVENTNOTIFIER: c_int = 128;
pub const UA_NODEATTRIBUTESMASK_EXECUTABLE: c_int = 256;
pub const UA_NODEATTRIBUTESMASK_HISTORIZING: c_int = 512;
pub const UA_NODEATTRIBUTESMASK_INVERSENAME: c_int = 1024;
pub const UA_NODEATTRIBUTESMASK_ISABSTRACT: c_int = 2048;
pub const UA_NODEATTRIBUTESMASK_MINIMUMSAMPLINGINTERVAL: c_int = 4096;
pub const UA_NODEATTRIBUTESMASK_NODECLASS: c_int = 8192;
pub const UA_NODEATTRIBUTESMASK_NODEID: c_int = 16384;
pub const UA_NODEATTRIBUTESMASK_SYMMETRIC: c_int = 32768;
pub const UA_NODEATTRIBUTESMASK_USERACCESSLEVEL: c_int = 65536;
pub const UA_NODEATTRIBUTESMASK_USEREXECUTABLE: c_int = 131072;
pub const UA_NODEATTRIBUTESMASK_USERWRITEMASK: c_int = 262144;
pub const UA_NODEATTRIBUTESMASK_VALUERANK: c_int = 524288;
pub const UA_NODEATTRIBUTESMASK_WRITEMASK: c_int = 1048576;
pub const UA_NODEATTRIBUTESMASK_VALUE: c_int = 2097152;
pub const UA_NODEATTRIBUTESMASK_DATATYPEDEFINITION: c_int = 4194304;
pub const UA_NODEATTRIBUTESMASK_ROLEPERMISSIONS: c_int = 8388608;
pub const UA_NODEATTRIBUTESMASK_ACCESSRESTRICTIONS: c_int = 16777216;
pub const UA_NODEATTRIBUTESMASK_ALL: c_int = 33554431;
pub const UA_NODEATTRIBUTESMASK_BASENODE: c_int = 26501220;
pub const UA_NODEATTRIBUTESMASK_OBJECT: c_int = 26501348;
pub const UA_NODEATTRIBUTESMASK_OBJECTTYPE: c_int = 26503268;
pub const UA_NODEATTRIBUTESMASK_VARIABLE: c_int = 26571383;
pub const UA_NODEATTRIBUTESMASK_VARIABLETYPE: c_int = 28600438;
pub const UA_NODEATTRIBUTESMASK_METHOD: c_int = 26632548;
pub const UA_NODEATTRIBUTESMASK_REFERENCETYPE: c_int = 26537060;
pub const UA_NODEATTRIBUTESMASK_VIEW: c_int = 26501356;
pub const __UA_NODEATTRIBUTESMASK_FORCE32BIT: c_int = 2147483647;
pub const UA_NodeAttributesMask = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_NodeAttributes = extern struct {
    specifiedAttributes: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    displayName: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    description: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    writeMask: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    userWriteMask: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_ObjectAttributes = extern struct {
    specifiedAttributes: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    displayName: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    description: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    writeMask: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    userWriteMask: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    eventNotifier: UA_Byte = @import("std").mem.zeroes(UA_Byte),
};
pub const UA_VariableAttributes = extern struct {
    specifiedAttributes: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    displayName: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    description: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    writeMask: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    userWriteMask: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    value: UA_Variant = @import("std").mem.zeroes(UA_Variant),
    dataType: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    valueRank: UA_Int32 = @import("std").mem.zeroes(UA_Int32),
    arrayDimensionsSize: usize = @import("std").mem.zeroes(usize),
    arrayDimensions: [*c]UA_UInt32 = @import("std").mem.zeroes([*c]UA_UInt32),
    accessLevel: UA_Byte = @import("std").mem.zeroes(UA_Byte),
    userAccessLevel: UA_Byte = @import("std").mem.zeroes(UA_Byte),
    minimumSamplingInterval: UA_Double = @import("std").mem.zeroes(UA_Double),
    historizing: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
};
pub const UA_MethodAttributes = extern struct {
    specifiedAttributes: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    displayName: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    description: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    writeMask: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    userWriteMask: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    executable: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    userExecutable: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
};
pub const UA_ObjectTypeAttributes = extern struct {
    specifiedAttributes: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    displayName: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    description: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    writeMask: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    userWriteMask: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    isAbstract: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
};
pub const UA_VariableTypeAttributes = extern struct {
    specifiedAttributes: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    displayName: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    description: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    writeMask: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    userWriteMask: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    value: UA_Variant = @import("std").mem.zeroes(UA_Variant),
    dataType: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    valueRank: UA_Int32 = @import("std").mem.zeroes(UA_Int32),
    arrayDimensionsSize: usize = @import("std").mem.zeroes(usize),
    arrayDimensions: [*c]UA_UInt32 = @import("std").mem.zeroes([*c]UA_UInt32),
    isAbstract: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
};
pub const UA_ReferenceTypeAttributes = extern struct {
    specifiedAttributes: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    displayName: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    description: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    writeMask: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    userWriteMask: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    isAbstract: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    symmetric: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    inverseName: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
};
pub const UA_DataTypeAttributes = extern struct {
    specifiedAttributes: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    displayName: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    description: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    writeMask: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    userWriteMask: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    isAbstract: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
};
pub const UA_ViewAttributes = extern struct {
    specifiedAttributes: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    displayName: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    description: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    writeMask: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    userWriteMask: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    containsNoLoops: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    eventNotifier: UA_Byte = @import("std").mem.zeroes(UA_Byte),
};
pub const UA_GenericAttributeValue = extern struct {
    attributeId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    value: UA_Variant = @import("std").mem.zeroes(UA_Variant),
};
pub const UA_GenericAttributes = extern struct {
    specifiedAttributes: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    displayName: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    description: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    writeMask: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    userWriteMask: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    attributeValuesSize: usize = @import("std").mem.zeroes(usize),
    attributeValues: [*c]UA_GenericAttributeValue = @import("std").mem.zeroes([*c]UA_GenericAttributeValue),
};
pub const UA_AddNodesItem = extern struct {
    parentNodeId: UA_ExpandedNodeId = @import("std").mem.zeroes(UA_ExpandedNodeId),
    referenceTypeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    requestedNewNodeId: UA_ExpandedNodeId = @import("std").mem.zeroes(UA_ExpandedNodeId),
    browseName: UA_QualifiedName = @import("std").mem.zeroes(UA_QualifiedName),
    nodeClass: UA_NodeClass = @import("std").mem.zeroes(UA_NodeClass),
    nodeAttributes: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
    typeDefinition: UA_ExpandedNodeId = @import("std").mem.zeroes(UA_ExpandedNodeId),
};
pub const UA_AddNodesResult = extern struct {
    statusCode: UA_StatusCode = @import("std").mem.zeroes(UA_StatusCode),
    addedNodeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
};
pub const UA_AddNodesRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    nodesToAddSize: usize = @import("std").mem.zeroes(usize),
    nodesToAdd: [*c]UA_AddNodesItem = @import("std").mem.zeroes([*c]UA_AddNodesItem),
};
pub const UA_AddNodesResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    resultsSize: usize = @import("std").mem.zeroes(usize),
    results: [*c]UA_AddNodesResult = @import("std").mem.zeroes([*c]UA_AddNodesResult),
    diagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    diagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_AddReferencesItem = extern struct {
    sourceNodeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    referenceTypeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    isForward: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    targetServerUri: UA_String = @import("std").mem.zeroes(UA_String),
    targetNodeId: UA_ExpandedNodeId = @import("std").mem.zeroes(UA_ExpandedNodeId),
    targetNodeClass: UA_NodeClass = @import("std").mem.zeroes(UA_NodeClass),
};
pub const UA_AddReferencesRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    referencesToAddSize: usize = @import("std").mem.zeroes(usize),
    referencesToAdd: [*c]UA_AddReferencesItem = @import("std").mem.zeroes([*c]UA_AddReferencesItem),
};
pub const UA_AddReferencesResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    resultsSize: usize = @import("std").mem.zeroes(usize),
    results: [*c]UA_StatusCode = @import("std").mem.zeroes([*c]UA_StatusCode),
    diagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    diagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_DeleteNodesItem = extern struct {
    nodeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    deleteTargetReferences: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
};
pub const UA_DeleteNodesRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    nodesToDeleteSize: usize = @import("std").mem.zeroes(usize),
    nodesToDelete: [*c]UA_DeleteNodesItem = @import("std").mem.zeroes([*c]UA_DeleteNodesItem),
};
pub const UA_DeleteNodesResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    resultsSize: usize = @import("std").mem.zeroes(usize),
    results: [*c]UA_StatusCode = @import("std").mem.zeroes([*c]UA_StatusCode),
    diagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    diagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_DeleteReferencesItem = extern struct {
    sourceNodeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    referenceTypeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    isForward: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    targetNodeId: UA_ExpandedNodeId = @import("std").mem.zeroes(UA_ExpandedNodeId),
    deleteBidirectional: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
};
pub const UA_DeleteReferencesRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    referencesToDeleteSize: usize = @import("std").mem.zeroes(usize),
    referencesToDelete: [*c]UA_DeleteReferencesItem = @import("std").mem.zeroes([*c]UA_DeleteReferencesItem),
};
pub const UA_DeleteReferencesResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    resultsSize: usize = @import("std").mem.zeroes(usize),
    results: [*c]UA_StatusCode = @import("std").mem.zeroes([*c]UA_StatusCode),
    diagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    diagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_AttributeWriteMask = UA_UInt32;
pub const UA_BROWSEDIRECTION_FORWARD: c_int = 0;
pub const UA_BROWSEDIRECTION_INVERSE: c_int = 1;
pub const UA_BROWSEDIRECTION_BOTH: c_int = 2;
pub const UA_BROWSEDIRECTION_INVALID: c_int = 3;
pub const __UA_BROWSEDIRECTION_FORCE32BIT: c_int = 2147483647;
pub const UA_BrowseDirection = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_ViewDescription = extern struct {
    viewId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    timestamp: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
    viewVersion: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_BrowseDescription = extern struct {
    nodeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    browseDirection: UA_BrowseDirection = @import("std").mem.zeroes(UA_BrowseDirection),
    referenceTypeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    includeSubtypes: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    nodeClassMask: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    resultMask: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_BROWSERESULTMASK_NONE: c_int = 0;
pub const UA_BROWSERESULTMASK_REFERENCETYPEID: c_int = 1;
pub const UA_BROWSERESULTMASK_ISFORWARD: c_int = 2;
pub const UA_BROWSERESULTMASK_NODECLASS: c_int = 4;
pub const UA_BROWSERESULTMASK_BROWSENAME: c_int = 8;
pub const UA_BROWSERESULTMASK_DISPLAYNAME: c_int = 16;
pub const UA_BROWSERESULTMASK_TYPEDEFINITION: c_int = 32;
pub const UA_BROWSERESULTMASK_ALL: c_int = 63;
pub const UA_BROWSERESULTMASK_REFERENCETYPEINFO: c_int = 3;
pub const UA_BROWSERESULTMASK_TARGETINFO: c_int = 60;
pub const __UA_BROWSERESULTMASK_FORCE32BIT: c_int = 2147483647;
pub const UA_BrowseResultMask = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_ReferenceDescription = extern struct {
    referenceTypeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    isForward: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    nodeId: UA_ExpandedNodeId = @import("std").mem.zeroes(UA_ExpandedNodeId),
    browseName: UA_QualifiedName = @import("std").mem.zeroes(UA_QualifiedName),
    displayName: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    nodeClass: UA_NodeClass = @import("std").mem.zeroes(UA_NodeClass),
    typeDefinition: UA_ExpandedNodeId = @import("std").mem.zeroes(UA_ExpandedNodeId),
};
pub const UA_ContinuationPoint = UA_ByteString;
pub const UA_BrowseResult = extern struct {
    statusCode: UA_StatusCode = @import("std").mem.zeroes(UA_StatusCode),
    continuationPoint: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
    referencesSize: usize = @import("std").mem.zeroes(usize),
    references: [*c]UA_ReferenceDescription = @import("std").mem.zeroes([*c]UA_ReferenceDescription),
};
pub const UA_BrowseRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    view: UA_ViewDescription = @import("std").mem.zeroes(UA_ViewDescription),
    requestedMaxReferencesPerNode: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    nodesToBrowseSize: usize = @import("std").mem.zeroes(usize),
    nodesToBrowse: [*c]UA_BrowseDescription = @import("std").mem.zeroes([*c]UA_BrowseDescription),
};
pub const UA_BrowseResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    resultsSize: usize = @import("std").mem.zeroes(usize),
    results: [*c]UA_BrowseResult = @import("std").mem.zeroes([*c]UA_BrowseResult),
    diagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    diagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_BrowseNextRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    releaseContinuationPoints: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    continuationPointsSize: usize = @import("std").mem.zeroes(usize),
    continuationPoints: [*c]UA_ByteString = @import("std").mem.zeroes([*c]UA_ByteString),
};
pub const UA_BrowseNextResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    resultsSize: usize = @import("std").mem.zeroes(usize),
    results: [*c]UA_BrowseResult = @import("std").mem.zeroes([*c]UA_BrowseResult),
    diagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    diagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_RelativePathElement = extern struct {
    referenceTypeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    isInverse: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    includeSubtypes: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    targetName: UA_QualifiedName = @import("std").mem.zeroes(UA_QualifiedName),
};
pub const UA_RelativePath = extern struct {
    elementsSize: usize = @import("std").mem.zeroes(usize),
    elements: [*c]UA_RelativePathElement = @import("std").mem.zeroes([*c]UA_RelativePathElement),
};
pub const UA_BrowsePath = extern struct {
    startingNode: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    relativePath: UA_RelativePath = @import("std").mem.zeroes(UA_RelativePath),
};
pub const UA_BrowsePathTarget = extern struct {
    targetId: UA_ExpandedNodeId = @import("std").mem.zeroes(UA_ExpandedNodeId),
    remainingPathIndex: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_BrowsePathResult = extern struct {
    statusCode: UA_StatusCode = @import("std").mem.zeroes(UA_StatusCode),
    targetsSize: usize = @import("std").mem.zeroes(usize),
    targets: [*c]UA_BrowsePathTarget = @import("std").mem.zeroes([*c]UA_BrowsePathTarget),
};
pub const UA_TranslateBrowsePathsToNodeIdsRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    browsePathsSize: usize = @import("std").mem.zeroes(usize),
    browsePaths: [*c]UA_BrowsePath = @import("std").mem.zeroes([*c]UA_BrowsePath),
};
pub const UA_TranslateBrowsePathsToNodeIdsResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    resultsSize: usize = @import("std").mem.zeroes(usize),
    results: [*c]UA_BrowsePathResult = @import("std").mem.zeroes([*c]UA_BrowsePathResult),
    diagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    diagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_RegisterNodesRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    nodesToRegisterSize: usize = @import("std").mem.zeroes(usize),
    nodesToRegister: [*c]UA_NodeId = @import("std").mem.zeroes([*c]UA_NodeId),
};
pub const UA_RegisterNodesResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    registeredNodeIdsSize: usize = @import("std").mem.zeroes(usize),
    registeredNodeIds: [*c]UA_NodeId = @import("std").mem.zeroes([*c]UA_NodeId),
};
pub const UA_UnregisterNodesRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    nodesToUnregisterSize: usize = @import("std").mem.zeroes(usize),
    nodesToUnregister: [*c]UA_NodeId = @import("std").mem.zeroes([*c]UA_NodeId),
};
pub const UA_UnregisterNodesResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
};
pub const UA_Counter = UA_UInt32;
pub const UA_OpaqueNumericRange = UA_String;
pub const UA_EndpointConfiguration = extern struct {
    operationTimeout: UA_Int32 = @import("std").mem.zeroes(UA_Int32),
    useBinaryEncoding: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    maxStringLength: UA_Int32 = @import("std").mem.zeroes(UA_Int32),
    maxByteStringLength: UA_Int32 = @import("std").mem.zeroes(UA_Int32),
    maxArrayLength: UA_Int32 = @import("std").mem.zeroes(UA_Int32),
    maxMessageSize: UA_Int32 = @import("std").mem.zeroes(UA_Int32),
    maxBufferSize: UA_Int32 = @import("std").mem.zeroes(UA_Int32),
    channelLifetime: UA_Int32 = @import("std").mem.zeroes(UA_Int32),
    securityTokenLifetime: UA_Int32 = @import("std").mem.zeroes(UA_Int32),
};
pub const UA_QueryDataDescription = extern struct {
    relativePath: UA_RelativePath = @import("std").mem.zeroes(UA_RelativePath),
    attributeId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    indexRange: UA_String = @import("std").mem.zeroes(UA_String),
};
pub const UA_NodeTypeDescription = extern struct {
    typeDefinitionNode: UA_ExpandedNodeId = @import("std").mem.zeroes(UA_ExpandedNodeId),
    includeSubTypes: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    dataToReturnSize: usize = @import("std").mem.zeroes(usize),
    dataToReturn: [*c]UA_QueryDataDescription = @import("std").mem.zeroes([*c]UA_QueryDataDescription),
};
pub const UA_FILTEROPERATOR_EQUALS: c_int = 0;
pub const UA_FILTEROPERATOR_ISNULL: c_int = 1;
pub const UA_FILTEROPERATOR_GREATERTHAN: c_int = 2;
pub const UA_FILTEROPERATOR_LESSTHAN: c_int = 3;
pub const UA_FILTEROPERATOR_GREATERTHANOREQUAL: c_int = 4;
pub const UA_FILTEROPERATOR_LESSTHANOREQUAL: c_int = 5;
pub const UA_FILTEROPERATOR_LIKE: c_int = 6;
pub const UA_FILTEROPERATOR_NOT: c_int = 7;
pub const UA_FILTEROPERATOR_BETWEEN: c_int = 8;
pub const UA_FILTEROPERATOR_INLIST: c_int = 9;
pub const UA_FILTEROPERATOR_AND: c_int = 10;
pub const UA_FILTEROPERATOR_OR: c_int = 11;
pub const UA_FILTEROPERATOR_CAST: c_int = 12;
pub const UA_FILTEROPERATOR_INVIEW: c_int = 13;
pub const UA_FILTEROPERATOR_OFTYPE: c_int = 14;
pub const UA_FILTEROPERATOR_RELATEDTO: c_int = 15;
pub const UA_FILTEROPERATOR_BITWISEAND: c_int = 16;
pub const UA_FILTEROPERATOR_BITWISEOR: c_int = 17;
pub const __UA_FILTEROPERATOR_FORCE32BIT: c_int = 2147483647;
pub const UA_FilterOperator = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_QueryDataSet = extern struct {
    nodeId: UA_ExpandedNodeId = @import("std").mem.zeroes(UA_ExpandedNodeId),
    typeDefinitionNode: UA_ExpandedNodeId = @import("std").mem.zeroes(UA_ExpandedNodeId),
    valuesSize: usize = @import("std").mem.zeroes(usize),
    values: [*c]UA_Variant = @import("std").mem.zeroes([*c]UA_Variant),
};
pub const UA_NodeReference = extern struct {
    nodeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    referenceTypeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    isForward: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    referencedNodeIdsSize: usize = @import("std").mem.zeroes(usize),
    referencedNodeIds: [*c]UA_NodeId = @import("std").mem.zeroes([*c]UA_NodeId),
};
pub const UA_ContentFilterElement = extern struct {
    filterOperator: UA_FilterOperator = @import("std").mem.zeroes(UA_FilterOperator),
    filterOperandsSize: usize = @import("std").mem.zeroes(usize),
    filterOperands: [*c]UA_ExtensionObject = @import("std").mem.zeroes([*c]UA_ExtensionObject),
};
pub const UA_ContentFilter = extern struct {
    elementsSize: usize = @import("std").mem.zeroes(usize),
    elements: [*c]UA_ContentFilterElement = @import("std").mem.zeroes([*c]UA_ContentFilterElement),
};
pub const UA_ElementOperand = extern struct {
    index: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_LiteralOperand = extern struct {
    value: UA_Variant = @import("std").mem.zeroes(UA_Variant),
};
pub const UA_AttributeOperand = extern struct {
    nodeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    alias: UA_String = @import("std").mem.zeroes(UA_String),
    browsePath: UA_RelativePath = @import("std").mem.zeroes(UA_RelativePath),
    attributeId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    indexRange: UA_String = @import("std").mem.zeroes(UA_String),
};
pub const UA_SimpleAttributeOperand = extern struct {
    typeDefinitionId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    browsePathSize: usize = @import("std").mem.zeroes(usize),
    browsePath: [*c]UA_QualifiedName = @import("std").mem.zeroes([*c]UA_QualifiedName),
    attributeId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    indexRange: UA_String = @import("std").mem.zeroes(UA_String),
};
pub const UA_ContentFilterElementResult = extern struct {
    statusCode: UA_StatusCode = @import("std").mem.zeroes(UA_StatusCode),
    operandStatusCodesSize: usize = @import("std").mem.zeroes(usize),
    operandStatusCodes: [*c]UA_StatusCode = @import("std").mem.zeroes([*c]UA_StatusCode),
    operandDiagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    operandDiagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_ContentFilterResult = extern struct {
    elementResultsSize: usize = @import("std").mem.zeroes(usize),
    elementResults: [*c]UA_ContentFilterElementResult = @import("std").mem.zeroes([*c]UA_ContentFilterElementResult),
    elementDiagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    elementDiagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_ParsingResult = extern struct {
    statusCode: UA_StatusCode = @import("std").mem.zeroes(UA_StatusCode),
    dataStatusCodesSize: usize = @import("std").mem.zeroes(usize),
    dataStatusCodes: [*c]UA_StatusCode = @import("std").mem.zeroes([*c]UA_StatusCode),
    dataDiagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    dataDiagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_QueryFirstRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    view: UA_ViewDescription = @import("std").mem.zeroes(UA_ViewDescription),
    nodeTypesSize: usize = @import("std").mem.zeroes(usize),
    nodeTypes: [*c]UA_NodeTypeDescription = @import("std").mem.zeroes([*c]UA_NodeTypeDescription),
    filter: UA_ContentFilter = @import("std").mem.zeroes(UA_ContentFilter),
    maxDataSetsToReturn: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    maxReferencesToReturn: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_QueryFirstResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    queryDataSetsSize: usize = @import("std").mem.zeroes(usize),
    queryDataSets: [*c]UA_QueryDataSet = @import("std").mem.zeroes([*c]UA_QueryDataSet),
    continuationPoint: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
    parsingResultsSize: usize = @import("std").mem.zeroes(usize),
    parsingResults: [*c]UA_ParsingResult = @import("std").mem.zeroes([*c]UA_ParsingResult),
    diagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    diagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
    filterResult: UA_ContentFilterResult = @import("std").mem.zeroes(UA_ContentFilterResult),
};
pub const UA_QueryNextRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    releaseContinuationPoint: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    continuationPoint: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
};
pub const UA_QueryNextResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    queryDataSetsSize: usize = @import("std").mem.zeroes(usize),
    queryDataSets: [*c]UA_QueryDataSet = @import("std").mem.zeroes([*c]UA_QueryDataSet),
    revisedContinuationPoint: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
};
pub const UA_TIMESTAMPSTORETURN_SOURCE: c_int = 0;
pub const UA_TIMESTAMPSTORETURN_SERVER: c_int = 1;
pub const UA_TIMESTAMPSTORETURN_BOTH: c_int = 2;
pub const UA_TIMESTAMPSTORETURN_NEITHER: c_int = 3;
pub const UA_TIMESTAMPSTORETURN_INVALID: c_int = 4;
pub const __UA_TIMESTAMPSTORETURN_FORCE32BIT: c_int = 2147483647;
pub const UA_TimestampsToReturn = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_ReadValueId = extern struct {
    nodeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    attributeId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    indexRange: UA_String = @import("std").mem.zeroes(UA_String),
    dataEncoding: UA_QualifiedName = @import("std").mem.zeroes(UA_QualifiedName),
};
pub const UA_ReadRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    maxAge: UA_Double = @import("std").mem.zeroes(UA_Double),
    timestampsToReturn: UA_TimestampsToReturn = @import("std").mem.zeroes(UA_TimestampsToReturn),
    nodesToReadSize: usize = @import("std").mem.zeroes(usize),
    nodesToRead: [*c]UA_ReadValueId = @import("std").mem.zeroes([*c]UA_ReadValueId),
};
pub const UA_ReadResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    resultsSize: usize = @import("std").mem.zeroes(usize),
    results: ?*UA_DataValue = @import("std").mem.zeroes(?*UA_DataValue),
    diagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    diagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_HistoryReadValueId = extern struct {
    nodeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    indexRange: UA_String = @import("std").mem.zeroes(UA_String),
    dataEncoding: UA_QualifiedName = @import("std").mem.zeroes(UA_QualifiedName),
    continuationPoint: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
};
pub const UA_HistoryReadResult = extern struct {
    statusCode: UA_StatusCode = @import("std").mem.zeroes(UA_StatusCode),
    continuationPoint: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
    historyData: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
};
pub const UA_ReadRawModifiedDetails = extern struct {
    isReadModified: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    startTime: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
    endTime: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
    numValuesPerNode: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    returnBounds: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
};
pub const UA_ReadAtTimeDetails = extern struct {
    reqTimesSize: usize = @import("std").mem.zeroes(usize),
    reqTimes: [*c]UA_DateTime = @import("std").mem.zeroes([*c]UA_DateTime),
    useSimpleBounds: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
};
pub const UA_ReadAnnotationDataDetails = extern struct {
    reqTimesSize: usize = @import("std").mem.zeroes(usize),
    reqTimes: [*c]UA_DateTime = @import("std").mem.zeroes([*c]UA_DateTime),
};
pub const UA_HistoryData = extern struct {
    dataValuesSize: usize = @import("std").mem.zeroes(usize),
    dataValues: ?*UA_DataValue = @import("std").mem.zeroes(?*UA_DataValue),
};
pub const UA_HistoryReadRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    historyReadDetails: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
    timestampsToReturn: UA_TimestampsToReturn = @import("std").mem.zeroes(UA_TimestampsToReturn),
    releaseContinuationPoints: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    nodesToReadSize: usize = @import("std").mem.zeroes(usize),
    nodesToRead: [*c]UA_HistoryReadValueId = @import("std").mem.zeroes([*c]UA_HistoryReadValueId),
};
pub const UA_HistoryReadResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    resultsSize: usize = @import("std").mem.zeroes(usize),
    results: [*c]UA_HistoryReadResult = @import("std").mem.zeroes([*c]UA_HistoryReadResult),
    diagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    diagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_WriteValue = extern struct {
    nodeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    attributeId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    indexRange: UA_String = @import("std").mem.zeroes(UA_String),
    value: UA_DataValue = @import("std").mem.zeroes(UA_DataValue),
};
pub const UA_WriteRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    nodesToWriteSize: usize = @import("std").mem.zeroes(usize),
    nodesToWrite: ?*UA_WriteValue = @import("std").mem.zeroes(?*UA_WriteValue),
};
pub const UA_WriteResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    resultsSize: usize = @import("std").mem.zeroes(usize),
    results: [*c]UA_StatusCode = @import("std").mem.zeroes([*c]UA_StatusCode),
    diagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    diagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_HistoryUpdateDetails = extern struct {
    nodeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
};
pub const UA_HISTORYUPDATETYPE_INSERT: c_int = 1;
pub const UA_HISTORYUPDATETYPE_REPLACE: c_int = 2;
pub const UA_HISTORYUPDATETYPE_UPDATE: c_int = 3;
pub const UA_HISTORYUPDATETYPE_DELETE: c_int = 4;
pub const __UA_HISTORYUPDATETYPE_FORCE32BIT: c_int = 2147483647;
pub const UA_HistoryUpdateType = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_PERFORMUPDATETYPE_INSERT: c_int = 1;
pub const UA_PERFORMUPDATETYPE_REPLACE: c_int = 2;
pub const UA_PERFORMUPDATETYPE_UPDATE: c_int = 3;
pub const UA_PERFORMUPDATETYPE_REMOVE: c_int = 4;
pub const __UA_PERFORMUPDATETYPE_FORCE32BIT: c_int = 2147483647;
pub const UA_PerformUpdateType = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_UpdateDataDetails = extern struct {
    nodeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    performInsertReplace: UA_PerformUpdateType = @import("std").mem.zeroes(UA_PerformUpdateType),
    updateValuesSize: usize = @import("std").mem.zeroes(usize),
    updateValues: ?*UA_DataValue = @import("std").mem.zeroes(?*UA_DataValue),
};
pub const UA_UpdateStructureDataDetails = extern struct {
    nodeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    performInsertReplace: UA_PerformUpdateType = @import("std").mem.zeroes(UA_PerformUpdateType),
    updateValuesSize: usize = @import("std").mem.zeroes(usize),
    updateValues: ?*UA_DataValue = @import("std").mem.zeroes(?*UA_DataValue),
};
pub const UA_DeleteRawModifiedDetails = extern struct {
    nodeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    isDeleteModified: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    startTime: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
    endTime: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
};
pub const UA_DeleteAtTimeDetails = extern struct {
    nodeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    reqTimesSize: usize = @import("std").mem.zeroes(usize),
    reqTimes: [*c]UA_DateTime = @import("std").mem.zeroes([*c]UA_DateTime),
};
pub const UA_DeleteEventDetails = extern struct {
    nodeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    eventIdsSize: usize = @import("std").mem.zeroes(usize),
    eventIds: [*c]UA_ByteString = @import("std").mem.zeroes([*c]UA_ByteString),
};
pub const UA_HistoryUpdateResult = extern struct {
    statusCode: UA_StatusCode = @import("std").mem.zeroes(UA_StatusCode),
    operationResultsSize: usize = @import("std").mem.zeroes(usize),
    operationResults: [*c]UA_StatusCode = @import("std").mem.zeroes([*c]UA_StatusCode),
    diagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    diagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_HistoryUpdateRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    historyUpdateDetailsSize: usize = @import("std").mem.zeroes(usize),
    historyUpdateDetails: [*c]UA_ExtensionObject = @import("std").mem.zeroes([*c]UA_ExtensionObject),
};
pub const UA_HistoryUpdateResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    resultsSize: usize = @import("std").mem.zeroes(usize),
    results: [*c]UA_HistoryUpdateResult = @import("std").mem.zeroes([*c]UA_HistoryUpdateResult),
    diagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    diagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_CallMethodRequest = extern struct {
    objectId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    methodId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    inputArgumentsSize: usize = @import("std").mem.zeroes(usize),
    inputArguments: [*c]UA_Variant = @import("std").mem.zeroes([*c]UA_Variant),
};
pub const UA_CallMethodResult = extern struct {
    statusCode: UA_StatusCode = @import("std").mem.zeroes(UA_StatusCode),
    inputArgumentResultsSize: usize = @import("std").mem.zeroes(usize),
    inputArgumentResults: [*c]UA_StatusCode = @import("std").mem.zeroes([*c]UA_StatusCode),
    inputArgumentDiagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    inputArgumentDiagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
    outputArgumentsSize: usize = @import("std").mem.zeroes(usize),
    outputArguments: [*c]UA_Variant = @import("std").mem.zeroes([*c]UA_Variant),
};
pub const UA_CallRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    methodsToCallSize: usize = @import("std").mem.zeroes(usize),
    methodsToCall: [*c]UA_CallMethodRequest = @import("std").mem.zeroes([*c]UA_CallMethodRequest),
};
pub const UA_CallResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    resultsSize: usize = @import("std").mem.zeroes(usize),
    results: [*c]UA_CallMethodResult = @import("std").mem.zeroes([*c]UA_CallMethodResult),
    diagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    diagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_MONITORINGMODE_DISABLED: c_int = 0;
pub const UA_MONITORINGMODE_SAMPLING: c_int = 1;
pub const UA_MONITORINGMODE_REPORTING: c_int = 2;
pub const __UA_MONITORINGMODE_FORCE32BIT: c_int = 2147483647;
pub const UA_MonitoringMode = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_DATACHANGETRIGGER_STATUS: c_int = 0;
pub const UA_DATACHANGETRIGGER_STATUSVALUE: c_int = 1;
pub const UA_DATACHANGETRIGGER_STATUSVALUETIMESTAMP: c_int = 2;
pub const __UA_DATACHANGETRIGGER_FORCE32BIT: c_int = 2147483647;
pub const UA_DataChangeTrigger = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_DEADBANDTYPE_NONE: c_int = 0;
pub const UA_DEADBANDTYPE_ABSOLUTE: c_int = 1;
pub const UA_DEADBANDTYPE_PERCENT: c_int = 2;
pub const __UA_DEADBANDTYPE_FORCE32BIT: c_int = 2147483647;
pub const UA_DeadbandType = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_DataChangeFilter = extern struct {
    trigger: UA_DataChangeTrigger = @import("std").mem.zeroes(UA_DataChangeTrigger),
    deadbandType: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    deadbandValue: UA_Double = @import("std").mem.zeroes(UA_Double),
};
pub const UA_EventFilter = extern struct {
    selectClausesSize: usize = @import("std").mem.zeroes(usize),
    selectClauses: [*c]UA_SimpleAttributeOperand = @import("std").mem.zeroes([*c]UA_SimpleAttributeOperand),
    whereClause: UA_ContentFilter = @import("std").mem.zeroes(UA_ContentFilter),
};
pub const UA_AggregateConfiguration = extern struct {
    useServerCapabilitiesDefaults: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    treatUncertainAsBad: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    percentDataBad: UA_Byte = @import("std").mem.zeroes(UA_Byte),
    percentDataGood: UA_Byte = @import("std").mem.zeroes(UA_Byte),
    useSlopedExtrapolation: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
};
pub const UA_AggregateFilter = extern struct {
    startTime: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
    aggregateType: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    processingInterval: UA_Double = @import("std").mem.zeroes(UA_Double),
    aggregateConfiguration: UA_AggregateConfiguration = @import("std").mem.zeroes(UA_AggregateConfiguration),
};
pub const UA_EventFilterResult = extern struct {
    selectClauseResultsSize: usize = @import("std").mem.zeroes(usize),
    selectClauseResults: [*c]UA_StatusCode = @import("std").mem.zeroes([*c]UA_StatusCode),
    selectClauseDiagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    selectClauseDiagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
    whereClauseResult: UA_ContentFilterResult = @import("std").mem.zeroes(UA_ContentFilterResult),
};
pub const UA_AggregateFilterResult = extern struct {
    revisedStartTime: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
    revisedProcessingInterval: UA_Double = @import("std").mem.zeroes(UA_Double),
    revisedAggregateConfiguration: UA_AggregateConfiguration = @import("std").mem.zeroes(UA_AggregateConfiguration),
};
pub const UA_MonitoringParameters = extern struct {
    clientHandle: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    samplingInterval: UA_Double = @import("std").mem.zeroes(UA_Double),
    filter: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
    queueSize: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    discardOldest: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
};
pub const UA_MonitoredItemCreateRequest = extern struct {
    itemToMonitor: UA_ReadValueId = @import("std").mem.zeroes(UA_ReadValueId),
    monitoringMode: UA_MonitoringMode = @import("std").mem.zeroes(UA_MonitoringMode),
    requestedParameters: UA_MonitoringParameters = @import("std").mem.zeroes(UA_MonitoringParameters),
};
pub const UA_MonitoredItemCreateResult = extern struct {
    statusCode: UA_StatusCode = @import("std").mem.zeroes(UA_StatusCode),
    monitoredItemId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    revisedSamplingInterval: UA_Double = @import("std").mem.zeroes(UA_Double),
    revisedQueueSize: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    filterResult: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
};
pub const UA_CreateMonitoredItemsRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    subscriptionId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    timestampsToReturn: UA_TimestampsToReturn = @import("std").mem.zeroes(UA_TimestampsToReturn),
    itemsToCreateSize: usize = @import("std").mem.zeroes(usize),
    itemsToCreate: [*c]UA_MonitoredItemCreateRequest = @import("std").mem.zeroes([*c]UA_MonitoredItemCreateRequest),
};
pub const UA_CreateMonitoredItemsResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    resultsSize: usize = @import("std").mem.zeroes(usize),
    results: [*c]UA_MonitoredItemCreateResult = @import("std").mem.zeroes([*c]UA_MonitoredItemCreateResult),
    diagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    diagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_MonitoredItemModifyRequest = extern struct {
    monitoredItemId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    requestedParameters: UA_MonitoringParameters = @import("std").mem.zeroes(UA_MonitoringParameters),
};
pub const UA_MonitoredItemModifyResult = extern struct {
    statusCode: UA_StatusCode = @import("std").mem.zeroes(UA_StatusCode),
    revisedSamplingInterval: UA_Double = @import("std").mem.zeroes(UA_Double),
    revisedQueueSize: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    filterResult: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
};
pub const UA_ModifyMonitoredItemsRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    subscriptionId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    timestampsToReturn: UA_TimestampsToReturn = @import("std").mem.zeroes(UA_TimestampsToReturn),
    itemsToModifySize: usize = @import("std").mem.zeroes(usize),
    itemsToModify: [*c]UA_MonitoredItemModifyRequest = @import("std").mem.zeroes([*c]UA_MonitoredItemModifyRequest),
};
pub const UA_ModifyMonitoredItemsResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    resultsSize: usize = @import("std").mem.zeroes(usize),
    results: [*c]UA_MonitoredItemModifyResult = @import("std").mem.zeroes([*c]UA_MonitoredItemModifyResult),
    diagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    diagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_SetMonitoringModeRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    subscriptionId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    monitoringMode: UA_MonitoringMode = @import("std").mem.zeroes(UA_MonitoringMode),
    monitoredItemIdsSize: usize = @import("std").mem.zeroes(usize),
    monitoredItemIds: [*c]UA_UInt32 = @import("std").mem.zeroes([*c]UA_UInt32),
};
pub const UA_SetMonitoringModeResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    resultsSize: usize = @import("std").mem.zeroes(usize),
    results: [*c]UA_StatusCode = @import("std").mem.zeroes([*c]UA_StatusCode),
    diagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    diagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_SetTriggeringRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    subscriptionId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    triggeringItemId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    linksToAddSize: usize = @import("std").mem.zeroes(usize),
    linksToAdd: [*c]UA_UInt32 = @import("std").mem.zeroes([*c]UA_UInt32),
    linksToRemoveSize: usize = @import("std").mem.zeroes(usize),
    linksToRemove: [*c]UA_UInt32 = @import("std").mem.zeroes([*c]UA_UInt32),
};
pub const UA_SetTriggeringResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    addResultsSize: usize = @import("std").mem.zeroes(usize),
    addResults: [*c]UA_StatusCode = @import("std").mem.zeroes([*c]UA_StatusCode),
    addDiagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    addDiagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
    removeResultsSize: usize = @import("std").mem.zeroes(usize),
    removeResults: [*c]UA_StatusCode = @import("std").mem.zeroes([*c]UA_StatusCode),
    removeDiagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    removeDiagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_DeleteMonitoredItemsRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    subscriptionId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    monitoredItemIdsSize: usize = @import("std").mem.zeroes(usize),
    monitoredItemIds: [*c]UA_UInt32 = @import("std").mem.zeroes([*c]UA_UInt32),
};
pub const UA_DeleteMonitoredItemsResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    resultsSize: usize = @import("std").mem.zeroes(usize),
    results: [*c]UA_StatusCode = @import("std").mem.zeroes([*c]UA_StatusCode),
    diagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    diagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_CreateSubscriptionRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    requestedPublishingInterval: UA_Double = @import("std").mem.zeroes(UA_Double),
    requestedLifetimeCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    requestedMaxKeepAliveCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    maxNotificationsPerPublish: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    publishingEnabled: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    priority: UA_Byte = @import("std").mem.zeroes(UA_Byte),
};
pub const UA_CreateSubscriptionResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    subscriptionId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    revisedPublishingInterval: UA_Double = @import("std").mem.zeroes(UA_Double),
    revisedLifetimeCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    revisedMaxKeepAliveCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_ModifySubscriptionRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    subscriptionId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    requestedPublishingInterval: UA_Double = @import("std").mem.zeroes(UA_Double),
    requestedLifetimeCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    requestedMaxKeepAliveCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    maxNotificationsPerPublish: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    priority: UA_Byte = @import("std").mem.zeroes(UA_Byte),
};
pub const UA_ModifySubscriptionResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    revisedPublishingInterval: UA_Double = @import("std").mem.zeroes(UA_Double),
    revisedLifetimeCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    revisedMaxKeepAliveCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_SetPublishingModeRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    publishingEnabled: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    subscriptionIdsSize: usize = @import("std").mem.zeroes(usize),
    subscriptionIds: [*c]UA_UInt32 = @import("std").mem.zeroes([*c]UA_UInt32),
};
pub const UA_SetPublishingModeResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    resultsSize: usize = @import("std").mem.zeroes(usize),
    results: [*c]UA_StatusCode = @import("std").mem.zeroes([*c]UA_StatusCode),
    diagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    diagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_NotificationMessage = extern struct {
    sequenceNumber: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    publishTime: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
    notificationDataSize: usize = @import("std").mem.zeroes(usize),
    notificationData: [*c]UA_ExtensionObject = @import("std").mem.zeroes([*c]UA_ExtensionObject),
};
pub const UA_MonitoredItemNotification = extern struct {
    clientHandle: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    value: UA_DataValue = @import("std").mem.zeroes(UA_DataValue),
};
pub const UA_EventFieldList = extern struct {
    clientHandle: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    eventFieldsSize: usize = @import("std").mem.zeroes(usize),
    eventFields: [*c]UA_Variant = @import("std").mem.zeroes([*c]UA_Variant),
};
pub const UA_HistoryEventFieldList = extern struct {
    eventFieldsSize: usize = @import("std").mem.zeroes(usize),
    eventFields: [*c]UA_Variant = @import("std").mem.zeroes([*c]UA_Variant),
};
pub const UA_StatusChangeNotification = extern struct {
    status: UA_StatusCode = @import("std").mem.zeroes(UA_StatusCode),
    diagnosticInfo: UA_DiagnosticInfo = @import("std").mem.zeroes(UA_DiagnosticInfo),
};
pub const UA_SubscriptionAcknowledgement = extern struct {
    subscriptionId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    sequenceNumber: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_PublishRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    subscriptionAcknowledgementsSize: usize = @import("std").mem.zeroes(usize),
    subscriptionAcknowledgements: [*c]UA_SubscriptionAcknowledgement = @import("std").mem.zeroes([*c]UA_SubscriptionAcknowledgement),
};
pub const UA_PublishResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    subscriptionId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    availableSequenceNumbersSize: usize = @import("std").mem.zeroes(usize),
    availableSequenceNumbers: [*c]UA_UInt32 = @import("std").mem.zeroes([*c]UA_UInt32),
    moreNotifications: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    notificationMessage: UA_NotificationMessage = @import("std").mem.zeroes(UA_NotificationMessage),
    resultsSize: usize = @import("std").mem.zeroes(usize),
    results: [*c]UA_StatusCode = @import("std").mem.zeroes([*c]UA_StatusCode),
    diagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    diagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_RepublishRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    subscriptionId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    retransmitSequenceNumber: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_RepublishResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    notificationMessage: UA_NotificationMessage = @import("std").mem.zeroes(UA_NotificationMessage),
};
pub const UA_TransferResult = extern struct {
    statusCode: UA_StatusCode = @import("std").mem.zeroes(UA_StatusCode),
    availableSequenceNumbersSize: usize = @import("std").mem.zeroes(usize),
    availableSequenceNumbers: [*c]UA_UInt32 = @import("std").mem.zeroes([*c]UA_UInt32),
};
pub const UA_TransferSubscriptionsRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    subscriptionIdsSize: usize = @import("std").mem.zeroes(usize),
    subscriptionIds: [*c]UA_UInt32 = @import("std").mem.zeroes([*c]UA_UInt32),
    sendInitialValues: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
};
pub const UA_TransferSubscriptionsResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    resultsSize: usize = @import("std").mem.zeroes(usize),
    results: [*c]UA_TransferResult = @import("std").mem.zeroes([*c]UA_TransferResult),
    diagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    diagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_DeleteSubscriptionsRequest = extern struct {
    requestHeader: UA_RequestHeader = @import("std").mem.zeroes(UA_RequestHeader),
    subscriptionIdsSize: usize = @import("std").mem.zeroes(usize),
    subscriptionIds: [*c]UA_UInt32 = @import("std").mem.zeroes([*c]UA_UInt32),
};
pub const UA_DeleteSubscriptionsResponse = extern struct {
    responseHeader: UA_ResponseHeader = @import("std").mem.zeroes(UA_ResponseHeader),
    resultsSize: usize = @import("std").mem.zeroes(usize),
    results: [*c]UA_StatusCode = @import("std").mem.zeroes([*c]UA_StatusCode),
    diagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    diagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_BuildInfo = extern struct {
    productUri: UA_String = @import("std").mem.zeroes(UA_String),
    manufacturerName: UA_String = @import("std").mem.zeroes(UA_String),
    productName: UA_String = @import("std").mem.zeroes(UA_String),
    softwareVersion: UA_String = @import("std").mem.zeroes(UA_String),
    buildNumber: UA_String = @import("std").mem.zeroes(UA_String),
    buildDate: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
};
pub const UA_REDUNDANCYSUPPORT_NONE: c_int = 0;
pub const UA_REDUNDANCYSUPPORT_COLD: c_int = 1;
pub const UA_REDUNDANCYSUPPORT_WARM: c_int = 2;
pub const UA_REDUNDANCYSUPPORT_HOT: c_int = 3;
pub const UA_REDUNDANCYSUPPORT_TRANSPARENT: c_int = 4;
pub const UA_REDUNDANCYSUPPORT_HOTANDMIRRORED: c_int = 5;
pub const __UA_REDUNDANCYSUPPORT_FORCE32BIT: c_int = 2147483647;
pub const UA_RedundancySupport = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_SERVERSTATE_RUNNING: c_int = 0;
pub const UA_SERVERSTATE_FAILED: c_int = 1;
pub const UA_SERVERSTATE_NOCONFIGURATION: c_int = 2;
pub const UA_SERVERSTATE_SUSPENDED: c_int = 3;
pub const UA_SERVERSTATE_SHUTDOWN: c_int = 4;
pub const UA_SERVERSTATE_TEST: c_int = 5;
pub const UA_SERVERSTATE_COMMUNICATIONFAULT: c_int = 6;
pub const UA_SERVERSTATE_UNKNOWN: c_int = 7;
pub const __UA_SERVERSTATE_FORCE32BIT: c_int = 2147483647;
pub const UA_ServerState = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_RedundantServerDataType = extern struct {
    serverId: UA_String = @import("std").mem.zeroes(UA_String),
    serviceLevel: UA_Byte = @import("std").mem.zeroes(UA_Byte),
    serverState: UA_ServerState = @import("std").mem.zeroes(UA_ServerState),
};
pub const UA_EndpointUrlListDataType = extern struct {
    endpointUrlListSize: usize = @import("std").mem.zeroes(usize),
    endpointUrlList: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
};
pub const UA_NetworkGroupDataType = extern struct {
    serverUri: UA_String = @import("std").mem.zeroes(UA_String),
    networkPathsSize: usize = @import("std").mem.zeroes(usize),
    networkPaths: [*c]UA_EndpointUrlListDataType = @import("std").mem.zeroes([*c]UA_EndpointUrlListDataType),
};
pub const UA_SamplingIntervalDiagnosticsDataType = extern struct {
    samplingInterval: UA_Double = @import("std").mem.zeroes(UA_Double),
    monitoredItemCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    maxMonitoredItemCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    disabledMonitoredItemCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_ServerDiagnosticsSummaryDataType = extern struct {
    serverViewCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    currentSessionCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    cumulatedSessionCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    securityRejectedSessionCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    rejectedSessionCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    sessionTimeoutCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    sessionAbortCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    currentSubscriptionCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    cumulatedSubscriptionCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    publishingIntervalCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    securityRejectedRequestsCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    rejectedRequestsCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_ServerStatusDataType = extern struct {
    startTime: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
    currentTime: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
    state: UA_ServerState = @import("std").mem.zeroes(UA_ServerState),
    buildInfo: UA_BuildInfo = @import("std").mem.zeroes(UA_BuildInfo),
    secondsTillShutdown: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    shutdownReason: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
};
pub const UA_SessionSecurityDiagnosticsDataType = extern struct {
    sessionId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    clientUserIdOfSession: UA_String = @import("std").mem.zeroes(UA_String),
    clientUserIdHistorySize: usize = @import("std").mem.zeroes(usize),
    clientUserIdHistory: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
    authenticationMechanism: UA_String = @import("std").mem.zeroes(UA_String),
    encoding: UA_String = @import("std").mem.zeroes(UA_String),
    transportProtocol: UA_String = @import("std").mem.zeroes(UA_String),
    securityMode: UA_MessageSecurityMode = @import("std").mem.zeroes(UA_MessageSecurityMode),
    securityPolicyUri: UA_String = @import("std").mem.zeroes(UA_String),
    clientCertificate: UA_ByteString = @import("std").mem.zeroes(UA_ByteString),
};
pub const UA_ServiceCounterDataType = extern struct {
    totalCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    errorCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_StatusResult = extern struct {
    statusCode: UA_StatusCode = @import("std").mem.zeroes(UA_StatusCode),
    diagnosticInfo: UA_DiagnosticInfo = @import("std").mem.zeroes(UA_DiagnosticInfo),
};
pub const UA_SubscriptionDiagnosticsDataType = extern struct {
    sessionId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    subscriptionId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    priority: UA_Byte = @import("std").mem.zeroes(UA_Byte),
    publishingInterval: UA_Double = @import("std").mem.zeroes(UA_Double),
    maxKeepAliveCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    maxLifetimeCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    maxNotificationsPerPublish: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    publishingEnabled: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    modifyCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    enableCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    disableCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    republishRequestCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    republishMessageRequestCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    republishMessageCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    transferRequestCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    transferredToAltClientCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    transferredToSameClientCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    publishRequestCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    dataChangeNotificationsCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    eventNotificationsCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    notificationsCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    latePublishRequestCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    currentKeepAliveCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    currentLifetimeCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    unacknowledgedMessageCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    discardedMessageCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    monitoredItemCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    disabledMonitoredItemCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    monitoringQueueOverflowCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    nextSequenceNumber: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    eventQueueOverFlowCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_MODELCHANGESTRUCTUREVERBMASK_NODEADDED: c_int = 1;
pub const UA_MODELCHANGESTRUCTUREVERBMASK_NODEDELETED: c_int = 2;
pub const UA_MODELCHANGESTRUCTUREVERBMASK_REFERENCEADDED: c_int = 4;
pub const UA_MODELCHANGESTRUCTUREVERBMASK_REFERENCEDELETED: c_int = 8;
pub const UA_MODELCHANGESTRUCTUREVERBMASK_DATATYPECHANGED: c_int = 16;
pub const __UA_MODELCHANGESTRUCTUREVERBMASK_FORCE32BIT: c_int = 2147483647;
pub const UA_ModelChangeStructureVerbMask = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_ModelChangeStructureDataType = extern struct {
    affected: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    affectedType: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    verb: UA_Byte = @import("std").mem.zeroes(UA_Byte),
};
pub const UA_SemanticChangeStructureDataType = extern struct {
    affected: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    affectedType: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
};
pub const UA_Range = extern struct {
    low: UA_Double = @import("std").mem.zeroes(UA_Double),
    high: UA_Double = @import("std").mem.zeroes(UA_Double),
};
pub const UA_EUInformation = extern struct {
    namespaceUri: UA_String = @import("std").mem.zeroes(UA_String),
    unitId: UA_Int32 = @import("std").mem.zeroes(UA_Int32),
    displayName: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    description: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
};
pub const UA_AXISSCALEENUMERATION_LINEAR: c_int = 0;
pub const UA_AXISSCALEENUMERATION_LOG: c_int = 1;
pub const UA_AXISSCALEENUMERATION_LN: c_int = 2;
pub const __UA_AXISSCALEENUMERATION_FORCE32BIT: c_int = 2147483647;
pub const UA_AxisScaleEnumeration = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_ComplexNumberType = extern struct {
    real: UA_Float = @import("std").mem.zeroes(UA_Float),
    imaginary: UA_Float = @import("std").mem.zeroes(UA_Float),
};
pub const UA_DoubleComplexNumberType = extern struct {
    real: UA_Double = @import("std").mem.zeroes(UA_Double),
    imaginary: UA_Double = @import("std").mem.zeroes(UA_Double),
};
pub const UA_AxisInformation = extern struct {
    engineeringUnits: UA_EUInformation = @import("std").mem.zeroes(UA_EUInformation),
    eURange: UA_Range = @import("std").mem.zeroes(UA_Range),
    title: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    axisScaleType: UA_AxisScaleEnumeration = @import("std").mem.zeroes(UA_AxisScaleEnumeration),
    axisStepsSize: usize = @import("std").mem.zeroes(usize),
    axisSteps: [*c]UA_Double = @import("std").mem.zeroes([*c]UA_Double),
};
pub const UA_XVType = extern struct {
    x: UA_Double = @import("std").mem.zeroes(UA_Double),
    value: UA_Float = @import("std").mem.zeroes(UA_Float),
};
pub const UA_ProgramDiagnosticDataType = extern struct {
    createSessionId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    createClientName: UA_String = @import("std").mem.zeroes(UA_String),
    invocationCreationTime: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
    lastTransitionTime: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
    lastMethodCall: UA_String = @import("std").mem.zeroes(UA_String),
    lastMethodSessionId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    lastMethodInputArgumentsSize: usize = @import("std").mem.zeroes(usize),
    lastMethodInputArguments: [*c]UA_Argument = @import("std").mem.zeroes([*c]UA_Argument),
    lastMethodOutputArgumentsSize: usize = @import("std").mem.zeroes(usize),
    lastMethodOutputArguments: [*c]UA_Argument = @import("std").mem.zeroes([*c]UA_Argument),
    lastMethodCallTime: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
    lastMethodReturnStatus: UA_StatusResult = @import("std").mem.zeroes(UA_StatusResult),
};
pub const UA_ProgramDiagnostic2DataType = extern struct {
    createSessionId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    createClientName: UA_String = @import("std").mem.zeroes(UA_String),
    invocationCreationTime: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
    lastTransitionTime: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
    lastMethodCall: UA_String = @import("std").mem.zeroes(UA_String),
    lastMethodSessionId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    lastMethodInputArgumentsSize: usize = @import("std").mem.zeroes(usize),
    lastMethodInputArguments: [*c]UA_Argument = @import("std").mem.zeroes([*c]UA_Argument),
    lastMethodOutputArgumentsSize: usize = @import("std").mem.zeroes(usize),
    lastMethodOutputArguments: [*c]UA_Argument = @import("std").mem.zeroes([*c]UA_Argument),
    lastMethodInputValuesSize: usize = @import("std").mem.zeroes(usize),
    lastMethodInputValues: [*c]UA_Variant = @import("std").mem.zeroes([*c]UA_Variant),
    lastMethodOutputValuesSize: usize = @import("std").mem.zeroes(usize),
    lastMethodOutputValues: [*c]UA_Variant = @import("std").mem.zeroes([*c]UA_Variant),
    lastMethodCallTime: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
    lastMethodReturnStatus: UA_StatusCode = @import("std").mem.zeroes(UA_StatusCode),
};
pub const UA_Annotation = extern struct {
    message: UA_String = @import("std").mem.zeroes(UA_String),
    userName: UA_String = @import("std").mem.zeroes(UA_String),
    annotationTime: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
};
pub const UA_EXCEPTIONDEVIATIONFORMAT_ABSOLUTEVALUE: c_int = 0;
pub const UA_EXCEPTIONDEVIATIONFORMAT_PERCENTOFVALUE: c_int = 1;
pub const UA_EXCEPTIONDEVIATIONFORMAT_PERCENTOFRANGE: c_int = 2;
pub const UA_EXCEPTIONDEVIATIONFORMAT_PERCENTOFEURANGE: c_int = 3;
pub const UA_EXCEPTIONDEVIATIONFORMAT_UNKNOWN: c_int = 4;
pub const __UA_EXCEPTIONDEVIATIONFORMAT_FORCE32BIT: c_int = 2147483647;
pub const UA_ExceptionDeviationFormat = c_uint;
// ./vendor/open62541.h:357:37: warning: ignoring StaticAssert declaration
pub const UA_EndpointType = extern struct {
    endpointUrl: UA_String = @import("std").mem.zeroes(UA_String),
    securityMode: UA_MessageSecurityMode = @import("std").mem.zeroes(UA_MessageSecurityMode),
    securityPolicyUri: UA_String = @import("std").mem.zeroes(UA_String),
    transportProfileUri: UA_String = @import("std").mem.zeroes(UA_String),
};
pub const UA_StructureDescription = extern struct {
    dataTypeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    name: UA_QualifiedName = @import("std").mem.zeroes(UA_QualifiedName),
    structureDefinition: UA_StructureDefinition = @import("std").mem.zeroes(UA_StructureDefinition),
};
pub const UA_FieldMetaData = extern struct {
    name: UA_String = @import("std").mem.zeroes(UA_String),
    description: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    fieldFlags: UA_DataSetFieldFlags = @import("std").mem.zeroes(UA_DataSetFieldFlags),
    builtInType: UA_Byte = @import("std").mem.zeroes(UA_Byte),
    dataType: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    valueRank: UA_Int32 = @import("std").mem.zeroes(UA_Int32),
    arrayDimensionsSize: usize = @import("std").mem.zeroes(usize),
    arrayDimensions: [*c]UA_UInt32 = @import("std").mem.zeroes([*c]UA_UInt32),
    maxStringLength: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    dataSetFieldId: UA_Guid = @import("std").mem.zeroes(UA_Guid),
    propertiesSize: usize = @import("std").mem.zeroes(usize),
    properties: [*c]UA_KeyValuePair = @import("std").mem.zeroes([*c]UA_KeyValuePair),
};
pub const UA_PublishedEventsDataType = extern struct {
    eventNotifier: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    selectedFieldsSize: usize = @import("std").mem.zeroes(usize),
    selectedFields: [*c]UA_SimpleAttributeOperand = @import("std").mem.zeroes([*c]UA_SimpleAttributeOperand),
    filter: UA_ContentFilter = @import("std").mem.zeroes(UA_ContentFilter),
};
pub const UA_PubSubGroupDataType = extern struct {
    name: UA_String = @import("std").mem.zeroes(UA_String),
    enabled: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    securityMode: UA_MessageSecurityMode = @import("std").mem.zeroes(UA_MessageSecurityMode),
    securityGroupId: UA_String = @import("std").mem.zeroes(UA_String),
    securityKeyServicesSize: usize = @import("std").mem.zeroes(usize),
    securityKeyServices: [*c]UA_EndpointDescription = @import("std").mem.zeroes([*c]UA_EndpointDescription),
    maxNetworkMessageSize: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    groupPropertiesSize: usize = @import("std").mem.zeroes(usize),
    groupProperties: [*c]UA_KeyValuePair = @import("std").mem.zeroes([*c]UA_KeyValuePair),
};
pub const UA_WriterGroupDataType = extern struct {
    name: UA_String = @import("std").mem.zeroes(UA_String),
    enabled: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    securityMode: UA_MessageSecurityMode = @import("std").mem.zeroes(UA_MessageSecurityMode),
    securityGroupId: UA_String = @import("std").mem.zeroes(UA_String),
    securityKeyServicesSize: usize = @import("std").mem.zeroes(usize),
    securityKeyServices: [*c]UA_EndpointDescription = @import("std").mem.zeroes([*c]UA_EndpointDescription),
    maxNetworkMessageSize: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    groupPropertiesSize: usize = @import("std").mem.zeroes(usize),
    groupProperties: [*c]UA_KeyValuePair = @import("std").mem.zeroes([*c]UA_KeyValuePair),
    writerGroupId: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    publishingInterval: UA_Double = @import("std").mem.zeroes(UA_Double),
    keepAliveTime: UA_Double = @import("std").mem.zeroes(UA_Double),
    priority: UA_Byte = @import("std").mem.zeroes(UA_Byte),
    localeIdsSize: usize = @import("std").mem.zeroes(usize),
    localeIds: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
    headerLayoutUri: UA_String = @import("std").mem.zeroes(UA_String),
    transportSettings: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
    messageSettings: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
    dataSetWritersSize: usize = @import("std").mem.zeroes(usize),
    dataSetWriters: [*c]UA_DataSetWriterDataType = @import("std").mem.zeroes([*c]UA_DataSetWriterDataType),
};
pub const UA_FieldTargetDataType = extern struct {
    dataSetFieldId: UA_Guid = @import("std").mem.zeroes(UA_Guid),
    receiverIndexRange: UA_String = @import("std").mem.zeroes(UA_String),
    targetNodeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    attributeId: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    writeIndexRange: UA_String = @import("std").mem.zeroes(UA_String),
    overrideValueHandling: UA_OverrideValueHandling = @import("std").mem.zeroes(UA_OverrideValueHandling),
    overrideValue: UA_Variant = @import("std").mem.zeroes(UA_Variant),
};
pub const UA_SubscribedDataSetMirrorDataType = extern struct {
    parentNodeName: UA_String = @import("std").mem.zeroes(UA_String),
    rolePermissionsSize: usize = @import("std").mem.zeroes(usize),
    rolePermissions: [*c]UA_RolePermissionType = @import("std").mem.zeroes([*c]UA_RolePermissionType),
};
pub const UA_SecurityGroupDataType = extern struct {
    name: UA_String = @import("std").mem.zeroes(UA_String),
    securityGroupFolderSize: usize = @import("std").mem.zeroes(usize),
    securityGroupFolder: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
    keyLifetime: UA_Double = @import("std").mem.zeroes(UA_Double),
    securityPolicyUri: UA_String = @import("std").mem.zeroes(UA_String),
    maxFutureKeyCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    maxPastKeyCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    securityGroupId: UA_String = @import("std").mem.zeroes(UA_String),
    rolePermissionsSize: usize = @import("std").mem.zeroes(usize),
    rolePermissions: [*c]UA_RolePermissionType = @import("std").mem.zeroes([*c]UA_RolePermissionType),
    groupPropertiesSize: usize = @import("std").mem.zeroes(usize),
    groupProperties: [*c]UA_KeyValuePair = @import("std").mem.zeroes([*c]UA_KeyValuePair),
};
pub const UA_PubSubKeyPushTargetDataType = extern struct {
    applicationUri: UA_String = @import("std").mem.zeroes(UA_String),
    pushTargetFolderSize: usize = @import("std").mem.zeroes(usize),
    pushTargetFolder: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
    endpointUrl: UA_String = @import("std").mem.zeroes(UA_String),
    securityPolicyUri: UA_String = @import("std").mem.zeroes(UA_String),
    userTokenType: UA_UserTokenPolicy = @import("std").mem.zeroes(UA_UserTokenPolicy),
    requestedKeyCount: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    retryInterval: UA_Double = @import("std").mem.zeroes(UA_Double),
    pushTargetPropertiesSize: usize = @import("std").mem.zeroes(usize),
    pushTargetProperties: [*c]UA_KeyValuePair = @import("std").mem.zeroes([*c]UA_KeyValuePair),
    securityGroupsSize: usize = @import("std").mem.zeroes(usize),
    securityGroups: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
};
pub const UA_EnumDefinition = extern struct {
    fieldsSize: usize = @import("std").mem.zeroes(usize),
    fields: [*c]UA_EnumField = @import("std").mem.zeroes([*c]UA_EnumField),
};
pub const UA_ReadEventDetails = extern struct {
    numValuesPerNode: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    startTime: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
    endTime: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
    filter: UA_EventFilter = @import("std").mem.zeroes(UA_EventFilter),
};
pub const UA_ReadProcessedDetails = extern struct {
    startTime: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
    endTime: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
    processingInterval: UA_Double = @import("std").mem.zeroes(UA_Double),
    aggregateTypeSize: usize = @import("std").mem.zeroes(usize),
    aggregateType: [*c]UA_NodeId = @import("std").mem.zeroes([*c]UA_NodeId),
    aggregateConfiguration: UA_AggregateConfiguration = @import("std").mem.zeroes(UA_AggregateConfiguration),
};
pub const UA_ModificationInfo = extern struct {
    modificationTime: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
    updateType: UA_HistoryUpdateType = @import("std").mem.zeroes(UA_HistoryUpdateType),
    userName: UA_String = @import("std").mem.zeroes(UA_String),
};
pub const UA_HistoryModifiedData = extern struct {
    dataValuesSize: usize = @import("std").mem.zeroes(usize),
    dataValues: ?*UA_DataValue = @import("std").mem.zeroes(?*UA_DataValue),
    modificationInfosSize: usize = @import("std").mem.zeroes(usize),
    modificationInfos: [*c]UA_ModificationInfo = @import("std").mem.zeroes([*c]UA_ModificationInfo),
};
pub const UA_HistoryEvent = extern struct {
    eventsSize: usize = @import("std").mem.zeroes(usize),
    events: [*c]UA_HistoryEventFieldList = @import("std").mem.zeroes([*c]UA_HistoryEventFieldList),
};
pub const UA_UpdateEventDetails = extern struct {
    nodeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    performInsertReplace: UA_PerformUpdateType = @import("std").mem.zeroes(UA_PerformUpdateType),
    filter: UA_EventFilter = @import("std").mem.zeroes(UA_EventFilter),
    eventDataSize: usize = @import("std").mem.zeroes(usize),
    eventData: [*c]UA_HistoryEventFieldList = @import("std").mem.zeroes([*c]UA_HistoryEventFieldList),
};
pub const UA_DataChangeNotification = extern struct {
    monitoredItemsSize: usize = @import("std").mem.zeroes(usize),
    monitoredItems: ?*UA_MonitoredItemNotification = @import("std").mem.zeroes(?*UA_MonitoredItemNotification),
    diagnosticInfosSize: usize = @import("std").mem.zeroes(usize),
    diagnosticInfos: ?*UA_DiagnosticInfo = @import("std").mem.zeroes(?*UA_DiagnosticInfo),
};
pub const UA_EventNotificationList = extern struct {
    eventsSize: usize = @import("std").mem.zeroes(usize),
    events: [*c]UA_EventFieldList = @import("std").mem.zeroes([*c]UA_EventFieldList),
};
pub const UA_SessionDiagnosticsDataType = extern struct {
    sessionId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    sessionName: UA_String = @import("std").mem.zeroes(UA_String),
    clientDescription: UA_ApplicationDescription = @import("std").mem.zeroes(UA_ApplicationDescription),
    serverUri: UA_String = @import("std").mem.zeroes(UA_String),
    endpointUrl: UA_String = @import("std").mem.zeroes(UA_String),
    localeIdsSize: usize = @import("std").mem.zeroes(usize),
    localeIds: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
    actualSessionTimeout: UA_Double = @import("std").mem.zeroes(UA_Double),
    maxResponseMessageSize: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    clientConnectionTime: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
    clientLastContactTime: UA_DateTime = @import("std").mem.zeroes(UA_DateTime),
    currentSubscriptionsCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    currentMonitoredItemsCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    currentPublishRequestsInQueue: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    totalRequestCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    unauthorizedRequestCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    readCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    historyReadCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    writeCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    historyUpdateCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    callCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    createMonitoredItemsCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    modifyMonitoredItemsCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    setMonitoringModeCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    setTriggeringCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    deleteMonitoredItemsCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    createSubscriptionCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    modifySubscriptionCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    setPublishingModeCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    publishCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    republishCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    transferSubscriptionsCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    deleteSubscriptionsCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    addNodesCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    addReferencesCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    deleteNodesCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    deleteReferencesCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    browseCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    browseNextCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    translateBrowsePathsToNodeIdsCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    queryFirstCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    queryNextCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    registerNodesCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
    unregisterNodesCount: UA_ServiceCounterDataType = @import("std").mem.zeroes(UA_ServiceCounterDataType),
};
pub const UA_EnumDescription = extern struct {
    dataTypeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    name: UA_QualifiedName = @import("std").mem.zeroes(UA_QualifiedName),
    enumDefinition: UA_EnumDefinition = @import("std").mem.zeroes(UA_EnumDefinition),
    builtInType: UA_Byte = @import("std").mem.zeroes(UA_Byte),
};
pub const UA_UABinaryFileDataType = extern struct {
    namespacesSize: usize = @import("std").mem.zeroes(usize),
    namespaces: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
    structureDataTypesSize: usize = @import("std").mem.zeroes(usize),
    structureDataTypes: [*c]UA_StructureDescription = @import("std").mem.zeroes([*c]UA_StructureDescription),
    enumDataTypesSize: usize = @import("std").mem.zeroes(usize),
    enumDataTypes: [*c]UA_EnumDescription = @import("std").mem.zeroes([*c]UA_EnumDescription),
    simpleDataTypesSize: usize = @import("std").mem.zeroes(usize),
    simpleDataTypes: [*c]UA_SimpleTypeDescription = @import("std").mem.zeroes([*c]UA_SimpleTypeDescription),
    schemaLocation: UA_String = @import("std").mem.zeroes(UA_String),
    fileHeaderSize: usize = @import("std").mem.zeroes(usize),
    fileHeader: [*c]UA_KeyValuePair = @import("std").mem.zeroes([*c]UA_KeyValuePair),
    body: UA_Variant = @import("std").mem.zeroes(UA_Variant),
};
pub const UA_DataSetMetaDataType = extern struct {
    namespacesSize: usize = @import("std").mem.zeroes(usize),
    namespaces: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
    structureDataTypesSize: usize = @import("std").mem.zeroes(usize),
    structureDataTypes: [*c]UA_StructureDescription = @import("std").mem.zeroes([*c]UA_StructureDescription),
    enumDataTypesSize: usize = @import("std").mem.zeroes(usize),
    enumDataTypes: [*c]UA_EnumDescription = @import("std").mem.zeroes([*c]UA_EnumDescription),
    simpleDataTypesSize: usize = @import("std").mem.zeroes(usize),
    simpleDataTypes: [*c]UA_SimpleTypeDescription = @import("std").mem.zeroes([*c]UA_SimpleTypeDescription),
    name: UA_String = @import("std").mem.zeroes(UA_String),
    description: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    fieldsSize: usize = @import("std").mem.zeroes(usize),
    fields: [*c]UA_FieldMetaData = @import("std").mem.zeroes([*c]UA_FieldMetaData),
    dataSetClassId: UA_Guid = @import("std").mem.zeroes(UA_Guid),
    configurationVersion: UA_ConfigurationVersionDataType = @import("std").mem.zeroes(UA_ConfigurationVersionDataType),
};
pub const UA_PublishedDataSetDataType = extern struct {
    name: UA_String = @import("std").mem.zeroes(UA_String),
    dataSetFolderSize: usize = @import("std").mem.zeroes(usize),
    dataSetFolder: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
    dataSetMetaData: UA_DataSetMetaDataType = @import("std").mem.zeroes(UA_DataSetMetaDataType),
    extensionFieldsSize: usize = @import("std").mem.zeroes(usize),
    extensionFields: [*c]UA_KeyValuePair = @import("std").mem.zeroes([*c]UA_KeyValuePair),
    dataSetSource: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
};
pub const UA_DataSetReaderDataType = extern struct {
    name: UA_String = @import("std").mem.zeroes(UA_String),
    enabled: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    publisherId: UA_Variant = @import("std").mem.zeroes(UA_Variant),
    writerGroupId: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    dataSetWriterId: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    dataSetMetaData: UA_DataSetMetaDataType = @import("std").mem.zeroes(UA_DataSetMetaDataType),
    dataSetFieldContentMask: UA_DataSetFieldContentMask = @import("std").mem.zeroes(UA_DataSetFieldContentMask),
    messageReceiveTimeout: UA_Double = @import("std").mem.zeroes(UA_Double),
    keyFrameCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    headerLayoutUri: UA_String = @import("std").mem.zeroes(UA_String),
    securityMode: UA_MessageSecurityMode = @import("std").mem.zeroes(UA_MessageSecurityMode),
    securityGroupId: UA_String = @import("std").mem.zeroes(UA_String),
    securityKeyServicesSize: usize = @import("std").mem.zeroes(usize),
    securityKeyServices: [*c]UA_EndpointDescription = @import("std").mem.zeroes([*c]UA_EndpointDescription),
    dataSetReaderPropertiesSize: usize = @import("std").mem.zeroes(usize),
    dataSetReaderProperties: [*c]UA_KeyValuePair = @import("std").mem.zeroes([*c]UA_KeyValuePair),
    transportSettings: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
    messageSettings: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
    subscribedDataSet: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
};
pub const UA_TargetVariablesDataType = extern struct {
    targetVariablesSize: usize = @import("std").mem.zeroes(usize),
    targetVariables: [*c]UA_FieldTargetDataType = @import("std").mem.zeroes([*c]UA_FieldTargetDataType),
};
pub const UA_StandaloneSubscribedDataSetDataType = extern struct {
    name: UA_String = @import("std").mem.zeroes(UA_String),
    dataSetFolderSize: usize = @import("std").mem.zeroes(usize),
    dataSetFolder: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
    dataSetMetaData: UA_DataSetMetaDataType = @import("std").mem.zeroes(UA_DataSetMetaDataType),
    subscribedDataSet: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
};
pub const UA_DataTypeSchemaHeader = extern struct {
    namespacesSize: usize = @import("std").mem.zeroes(usize),
    namespaces: [*c]UA_String = @import("std").mem.zeroes([*c]UA_String),
    structureDataTypesSize: usize = @import("std").mem.zeroes(usize),
    structureDataTypes: [*c]UA_StructureDescription = @import("std").mem.zeroes([*c]UA_StructureDescription),
    enumDataTypesSize: usize = @import("std").mem.zeroes(usize),
    enumDataTypes: [*c]UA_EnumDescription = @import("std").mem.zeroes([*c]UA_EnumDescription),
    simpleDataTypesSize: usize = @import("std").mem.zeroes(usize),
    simpleDataTypes: [*c]UA_SimpleTypeDescription = @import("std").mem.zeroes([*c]UA_SimpleTypeDescription),
};
pub const UA_ReaderGroupDataType = extern struct {
    name: UA_String = @import("std").mem.zeroes(UA_String),
    enabled: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    securityMode: UA_MessageSecurityMode = @import("std").mem.zeroes(UA_MessageSecurityMode),
    securityGroupId: UA_String = @import("std").mem.zeroes(UA_String),
    securityKeyServicesSize: usize = @import("std").mem.zeroes(usize),
    securityKeyServices: [*c]UA_EndpointDescription = @import("std").mem.zeroes([*c]UA_EndpointDescription),
    maxNetworkMessageSize: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    groupPropertiesSize: usize = @import("std").mem.zeroes(usize),
    groupProperties: [*c]UA_KeyValuePair = @import("std").mem.zeroes([*c]UA_KeyValuePair),
    transportSettings: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
    messageSettings: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
    dataSetReadersSize: usize = @import("std").mem.zeroes(usize),
    dataSetReaders: [*c]UA_DataSetReaderDataType = @import("std").mem.zeroes([*c]UA_DataSetReaderDataType),
};
pub const UA_PubSubConnectionDataType = extern struct {
    name: UA_String = @import("std").mem.zeroes(UA_String),
    enabled: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    publisherId: UA_Variant = @import("std").mem.zeroes(UA_Variant),
    transportProfileUri: UA_String = @import("std").mem.zeroes(UA_String),
    address: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
    connectionPropertiesSize: usize = @import("std").mem.zeroes(usize),
    connectionProperties: [*c]UA_KeyValuePair = @import("std").mem.zeroes([*c]UA_KeyValuePair),
    transportSettings: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
    writerGroupsSize: usize = @import("std").mem.zeroes(usize),
    writerGroups: [*c]UA_WriterGroupDataType = @import("std").mem.zeroes([*c]UA_WriterGroupDataType),
    readerGroupsSize: usize = @import("std").mem.zeroes(usize),
    readerGroups: [*c]UA_ReaderGroupDataType = @import("std").mem.zeroes([*c]UA_ReaderGroupDataType),
};
pub const UA_PubSubConfigurationDataType = extern struct {
    publishedDataSetsSize: usize = @import("std").mem.zeroes(usize),
    publishedDataSets: [*c]UA_PublishedDataSetDataType = @import("std").mem.zeroes([*c]UA_PublishedDataSetDataType),
    connectionsSize: usize = @import("std").mem.zeroes(usize),
    connections: [*c]UA_PubSubConnectionDataType = @import("std").mem.zeroes([*c]UA_PubSubConnectionDataType),
    enabled: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
};
pub const UA_PubSubConfiguration2DataType = extern struct {
    publishedDataSetsSize: usize = @import("std").mem.zeroes(usize),
    publishedDataSets: [*c]UA_PublishedDataSetDataType = @import("std").mem.zeroes([*c]UA_PublishedDataSetDataType),
    connectionsSize: usize = @import("std").mem.zeroes(usize),
    connections: [*c]UA_PubSubConnectionDataType = @import("std").mem.zeroes([*c]UA_PubSubConnectionDataType),
    enabled: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    subscribedDataSetsSize: usize = @import("std").mem.zeroes(usize),
    subscribedDataSets: [*c]UA_StandaloneSubscribedDataSetDataType = @import("std").mem.zeroes([*c]UA_StandaloneSubscribedDataSetDataType),
    dataSetClassesSize: usize = @import("std").mem.zeroes(usize),
    dataSetClasses: [*c]UA_DataSetMetaDataType = @import("std").mem.zeroes([*c]UA_DataSetMetaDataType),
    defaultSecurityKeyServicesSize: usize = @import("std").mem.zeroes(usize),
    defaultSecurityKeyServices: [*c]UA_EndpointDescription = @import("std").mem.zeroes([*c]UA_EndpointDescription),
    securityGroupsSize: usize = @import("std").mem.zeroes(usize),
    securityGroups: [*c]UA_SecurityGroupDataType = @import("std").mem.zeroes([*c]UA_SecurityGroupDataType),
    pubSubKeyPushTargetsSize: usize = @import("std").mem.zeroes(usize),
    pubSubKeyPushTargets: [*c]UA_PubSubKeyPushTargetDataType = @import("std").mem.zeroes([*c]UA_PubSubKeyPushTargetDataType),
    configurationVersion: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    configurationPropertiesSize: usize = @import("std").mem.zeroes(usize),
    configurationProperties: [*c]UA_KeyValuePair = @import("std").mem.zeroes([*c]UA_KeyValuePair),
};
pub fn UA_Boolean_init(arg_p: [*c]UA_Boolean) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_Boolean));
}
pub fn UA_Boolean_new() callconv(.c) [*c]UA_Boolean {
    return @as([*c]UA_Boolean, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))]))));
}
pub fn UA_Boolean_copy(arg_src: [*c]const UA_Boolean, arg_dst: [*c]UA_Boolean) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))]);
}
pub fn UA_Boolean_deleteMembers(arg_p: [*c]UA_Boolean) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))]);
}
pub fn UA_Boolean_clear(arg_p: [*c]UA_Boolean) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))]);
}
pub fn UA_Boolean_delete(arg_p: [*c]UA_Boolean) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))]);
}
pub fn UA_Boolean_equal(arg_p1: [*c]const UA_Boolean, arg_p2: [*c]const UA_Boolean) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))]) == UA_ORDER_EQ;
}
pub fn UA_SByte_init(arg_p: [*c]UA_SByte) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_SByte));
}
pub fn UA_SByte_new() callconv(.c) [*c]UA_SByte {
    return @as([*c]UA_SByte, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 1)))]))));
}
pub fn UA_SByte_copy(arg_src: [*c]const UA_SByte, arg_dst: [*c]UA_SByte) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 1)))]);
}
pub fn UA_SByte_deleteMembers(arg_p: [*c]UA_SByte) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 1)))]);
}
pub fn UA_SByte_clear(arg_p: [*c]UA_SByte) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 1)))]);
}
pub fn UA_SByte_delete(arg_p: [*c]UA_SByte) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 1)))]);
}
pub fn UA_SByte_equal(arg_p1: [*c]const UA_SByte, arg_p2: [*c]const UA_SByte) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 1)))]) == UA_ORDER_EQ;
}
pub fn UA_Byte_init(arg_p: [*c]UA_Byte) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_Byte));
}
pub fn UA_Byte_new() callconv(.c) [*c]UA_Byte {
    return @as([*c]UA_Byte, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 2)))]))));
}
pub fn UA_Byte_copy(arg_src: [*c]const UA_Byte, arg_dst: [*c]UA_Byte) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 2)))]);
}
pub fn UA_Byte_deleteMembers(arg_p: [*c]UA_Byte) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 2)))]);
}
pub fn UA_Byte_clear(arg_p: [*c]UA_Byte) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 2)))]);
}
pub fn UA_Byte_delete(arg_p: [*c]UA_Byte) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 2)))]);
}
pub fn UA_Byte_equal(arg_p1: [*c]const UA_Byte, arg_p2: [*c]const UA_Byte) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 2)))]) == UA_ORDER_EQ;
}
pub fn UA_Int16_init(arg_p: [*c]UA_Int16) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_Int16));
}
pub fn UA_Int16_new() callconv(.c) [*c]UA_Int16 {
    return @as([*c]UA_Int16, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 3)))]))));
}
pub fn UA_Int16_copy(arg_src: [*c]const UA_Int16, arg_dst: [*c]UA_Int16) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 3)))]);
}
pub fn UA_Int16_deleteMembers(arg_p: [*c]UA_Int16) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 3)))]);
}
pub fn UA_Int16_clear(arg_p: [*c]UA_Int16) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 3)))]);
}
pub fn UA_Int16_delete(arg_p: [*c]UA_Int16) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 3)))]);
}
pub fn UA_Int16_equal(arg_p1: [*c]const UA_Int16, arg_p2: [*c]const UA_Int16) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 3)))]) == UA_ORDER_EQ;
}
pub fn UA_UInt16_init(arg_p: [*c]UA_UInt16) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_UInt16));
}
pub fn UA_UInt16_new() callconv(.c) [*c]UA_UInt16 {
    return @as([*c]UA_UInt16, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 4)))]))));
}
pub fn UA_UInt16_copy(arg_src: [*c]const UA_UInt16, arg_dst: [*c]UA_UInt16) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 4)))]);
}
pub fn UA_UInt16_deleteMembers(arg_p: [*c]UA_UInt16) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 4)))]);
}
pub fn UA_UInt16_clear(arg_p: [*c]UA_UInt16) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 4)))]);
}
pub fn UA_UInt16_delete(arg_p: [*c]UA_UInt16) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 4)))]);
}
pub fn UA_UInt16_equal(arg_p1: [*c]const UA_UInt16, arg_p2: [*c]const UA_UInt16) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 4)))]) == UA_ORDER_EQ;
}
pub fn UA_Int32_init(arg_p: [*c]UA_Int32) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_Int32));
}
pub fn UA_Int32_new() callconv(.c) [*c]UA_Int32 {
    return @as([*c]UA_Int32, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 5)))]))));
}
pub fn UA_Int32_copy(arg_src: [*c]const UA_Int32, arg_dst: [*c]UA_Int32) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 5)))]);
}
pub fn UA_Int32_deleteMembers(arg_p: [*c]UA_Int32) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 5)))]);
}
pub fn UA_Int32_clear(arg_p: [*c]UA_Int32) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 5)))]);
}
pub fn UA_Int32_delete(arg_p: [*c]UA_Int32) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 5)))]);
}
pub fn UA_Int32_equal(arg_p1: [*c]const UA_Int32, arg_p2: [*c]const UA_Int32) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 5)))]) == UA_ORDER_EQ;
}
pub fn UA_UInt32_init(arg_p: [*c]UA_UInt32) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_UInt32));
}
pub fn UA_UInt32_new() callconv(.c) [*c]UA_UInt32 {
    return @as([*c]UA_UInt32, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 6)))]))));
}
pub fn UA_UInt32_copy(arg_src: [*c]const UA_UInt32, arg_dst: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 6)))]);
}
pub fn UA_UInt32_deleteMembers(arg_p: [*c]UA_UInt32) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 6)))]);
}
pub fn UA_UInt32_clear(arg_p: [*c]UA_UInt32) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 6)))]);
}
pub fn UA_UInt32_delete(arg_p: [*c]UA_UInt32) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 6)))]);
}
pub fn UA_UInt32_equal(arg_p1: [*c]const UA_UInt32, arg_p2: [*c]const UA_UInt32) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 6)))]) == UA_ORDER_EQ;
}
pub fn UA_Int64_init(arg_p: [*c]UA_Int64) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_Int64));
}
pub fn UA_Int64_new() callconv(.c) [*c]UA_Int64 {
    return @as([*c]UA_Int64, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 7)))]))));
}
pub fn UA_Int64_copy(arg_src: [*c]const UA_Int64, arg_dst: [*c]UA_Int64) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 7)))]);
}
pub fn UA_Int64_deleteMembers(arg_p: [*c]UA_Int64) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 7)))]);
}
pub fn UA_Int64_clear(arg_p: [*c]UA_Int64) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 7)))]);
}
pub fn UA_Int64_delete(arg_p: [*c]UA_Int64) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 7)))]);
}
pub fn UA_Int64_equal(arg_p1: [*c]const UA_Int64, arg_p2: [*c]const UA_Int64) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 7)))]) == UA_ORDER_EQ;
}
pub fn UA_UInt64_init(arg_p: [*c]UA_UInt64) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_UInt64));
}
pub fn UA_UInt64_new() callconv(.c) [*c]UA_UInt64 {
    return @as([*c]UA_UInt64, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 8)))]))));
}
pub fn UA_UInt64_copy(arg_src: [*c]const UA_UInt64, arg_dst: [*c]UA_UInt64) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 8)))]);
}
pub fn UA_UInt64_deleteMembers(arg_p: [*c]UA_UInt64) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 8)))]);
}
pub fn UA_UInt64_clear(arg_p: [*c]UA_UInt64) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 8)))]);
}
pub fn UA_UInt64_delete(arg_p: [*c]UA_UInt64) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 8)))]);
}
pub fn UA_UInt64_equal(arg_p1: [*c]const UA_UInt64, arg_p2: [*c]const UA_UInt64) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 8)))]) == UA_ORDER_EQ;
}
pub fn UA_Float_init(arg_p: [*c]UA_Float) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_Float));
}
pub fn UA_Float_new() callconv(.c) [*c]UA_Float {
    return @as([*c]UA_Float, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 9)))]))));
}
pub fn UA_Float_copy(arg_src: [*c]const UA_Float, arg_dst: [*c]UA_Float) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 9)))]);
}
pub fn UA_Float_deleteMembers(arg_p: [*c]UA_Float) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 9)))]);
}
pub fn UA_Float_clear(arg_p: [*c]UA_Float) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 9)))]);
}
pub fn UA_Float_delete(arg_p: [*c]UA_Float) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 9)))]);
}
pub fn UA_Float_equal(arg_p1: [*c]const UA_Float, arg_p2: [*c]const UA_Float) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 9)))]) == UA_ORDER_EQ;
}
pub fn UA_Double_init(arg_p: [*c]UA_Double) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_Double));
}
pub fn UA_Double_new() callconv(.c) [*c]UA_Double {
    return @as([*c]UA_Double, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 10)))]))));
}
pub fn UA_Double_copy(arg_src: [*c]const UA_Double, arg_dst: [*c]UA_Double) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 10)))]);
}
pub fn UA_Double_deleteMembers(arg_p: [*c]UA_Double) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 10)))]);
}
pub fn UA_Double_clear(arg_p: [*c]UA_Double) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 10)))]);
}
pub fn UA_Double_delete(arg_p: [*c]UA_Double) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 10)))]);
}
pub fn UA_Double_equal(arg_p1: [*c]const UA_Double, arg_p2: [*c]const UA_Double) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 10)))]) == UA_ORDER_EQ;
}
pub fn UA_String_init(arg_p: [*c]UA_String) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_String));
}
pub fn UA_String_new() callconv(.c) [*c]UA_String {
    return @as([*c]UA_String, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 11)))]))));
}
pub fn UA_String_copy(arg_src: [*c]const UA_String, arg_dst: [*c]UA_String) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 11)))]);
}
pub fn UA_String_deleteMembers(arg_p: [*c]UA_String) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 11)))]);
}
pub fn UA_String_clear(arg_p: [*c]UA_String) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 11)))]);
}
pub fn UA_String_delete(arg_p: [*c]UA_String) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 11)))]);
}
pub fn UA_String_equal(arg_p1: [*c]const UA_String, arg_p2: [*c]const UA_String) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 11)))]) == UA_ORDER_EQ;
}
pub fn UA_DateTime_init(arg_p: [*c]UA_DateTime) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DateTime));
}
pub fn UA_DateTime_new() callconv(.c) [*c]UA_DateTime {
    return @as([*c]UA_DateTime, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 12)))]))));
}
pub fn UA_DateTime_copy(arg_src: [*c]const UA_DateTime, arg_dst: [*c]UA_DateTime) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 12)))]);
}
pub fn UA_DateTime_deleteMembers(arg_p: [*c]UA_DateTime) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 12)))]);
}
pub fn UA_DateTime_clear(arg_p: [*c]UA_DateTime) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 12)))]);
}
pub fn UA_DateTime_delete(arg_p: [*c]UA_DateTime) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 12)))]);
}
pub fn UA_DateTime_equal(arg_p1: [*c]const UA_DateTime, arg_p2: [*c]const UA_DateTime) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 12)))]) == UA_ORDER_EQ;
}
pub fn UA_Guid_init(arg_p: [*c]UA_Guid) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_Guid));
}
pub fn UA_Guid_new() callconv(.c) [*c]UA_Guid {
    return @as([*c]UA_Guid, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 13)))]))));
}
pub fn UA_Guid_copy(arg_src: [*c]const UA_Guid, arg_dst: [*c]UA_Guid) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 13)))]);
}
pub fn UA_Guid_deleteMembers(arg_p: [*c]UA_Guid) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 13)))]);
}
pub fn UA_Guid_clear(arg_p: [*c]UA_Guid) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 13)))]);
}
pub fn UA_Guid_delete(arg_p: [*c]UA_Guid) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 13)))]);
}
pub fn UA_Guid_equal(arg_p1: [*c]const UA_Guid, arg_p2: [*c]const UA_Guid) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 13)))]) == UA_ORDER_EQ;
}
pub fn UA_ByteString_init(arg_p: [*c]UA_ByteString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ByteString));
}
pub fn UA_ByteString_new() callconv(.c) [*c]UA_ByteString {
    return @as([*c]UA_ByteString, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 14)))]))));
}
pub fn UA_ByteString_copy(arg_src: [*c]const UA_ByteString, arg_dst: [*c]UA_ByteString) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 14)))]);
}
pub fn UA_ByteString_deleteMembers(arg_p: [*c]UA_ByteString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 14)))]);
}
pub fn UA_ByteString_clear(arg_p: [*c]UA_ByteString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 14)))]);
}
pub fn UA_ByteString_delete(arg_p: [*c]UA_ByteString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 14)))]);
}
pub fn UA_ByteString_equal(arg_p1: [*c]const UA_ByteString, arg_p2: [*c]const UA_ByteString) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 14)))]) == UA_ORDER_EQ;
}
pub fn UA_XmlElement_init(arg_p: [*c]UA_XmlElement) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_XmlElement));
}
pub fn UA_XmlElement_new() callconv(.c) [*c]UA_XmlElement {
    return @as([*c]UA_XmlElement, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 15)))]))));
}
pub fn UA_XmlElement_copy(arg_src: [*c]const UA_XmlElement, arg_dst: [*c]UA_XmlElement) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 15)))]);
}
pub fn UA_XmlElement_deleteMembers(arg_p: [*c]UA_XmlElement) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 15)))]);
}
pub fn UA_XmlElement_clear(arg_p: [*c]UA_XmlElement) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 15)))]);
}
pub fn UA_XmlElement_delete(arg_p: [*c]UA_XmlElement) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 15)))]);
}
pub fn UA_XmlElement_equal(arg_p1: [*c]const UA_XmlElement, arg_p2: [*c]const UA_XmlElement) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 15)))]) == UA_ORDER_EQ;
}
pub fn UA_NodeId_init(arg_p: [*c]UA_NodeId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_NodeId));
}
pub fn UA_NodeId_new() callconv(.c) [*c]UA_NodeId {
    return @as([*c]UA_NodeId, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 16)))]))));
}
pub fn UA_NodeId_copy(arg_src: [*c]const UA_NodeId, arg_dst: [*c]UA_NodeId) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 16)))]);
}
pub fn UA_NodeId_deleteMembers(arg_p: [*c]UA_NodeId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 16)))]);
}
pub fn UA_NodeId_clear(arg_p: [*c]UA_NodeId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 16)))]);
}
pub fn UA_NodeId_delete(arg_p: [*c]UA_NodeId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 16)))]);
}
pub fn UA_NodeId_equal(arg_p1: [*c]const UA_NodeId, arg_p2: [*c]const UA_NodeId) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 16)))]) == UA_ORDER_EQ;
}
pub fn UA_ExpandedNodeId_init(arg_p: [*c]UA_ExpandedNodeId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ExpandedNodeId));
}
pub fn UA_ExpandedNodeId_new() callconv(.c) [*c]UA_ExpandedNodeId {
    return @as([*c]UA_ExpandedNodeId, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 17)))]))));
}
pub fn UA_ExpandedNodeId_copy(arg_src: [*c]const UA_ExpandedNodeId, arg_dst: [*c]UA_ExpandedNodeId) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 17)))]);
}
pub fn UA_ExpandedNodeId_deleteMembers(arg_p: [*c]UA_ExpandedNodeId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 17)))]);
}
pub fn UA_ExpandedNodeId_clear(arg_p: [*c]UA_ExpandedNodeId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 17)))]);
}
pub fn UA_ExpandedNodeId_delete(arg_p: [*c]UA_ExpandedNodeId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 17)))]);
}
pub fn UA_ExpandedNodeId_equal(arg_p1: [*c]const UA_ExpandedNodeId, arg_p2: [*c]const UA_ExpandedNodeId) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 17)))]) == UA_ORDER_EQ;
}
pub fn UA_StatusCode_init(arg_p: [*c]UA_StatusCode) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_StatusCode));
}
pub fn UA_StatusCode_new() callconv(.c) [*c]UA_StatusCode {
    return @as([*c]UA_StatusCode, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 18)))]))));
}
pub fn UA_StatusCode_copy(arg_src: [*c]const UA_StatusCode, arg_dst: [*c]UA_StatusCode) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 18)))]);
}
pub fn UA_StatusCode_deleteMembers(arg_p: [*c]UA_StatusCode) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 18)))]);
}
pub fn UA_StatusCode_clear(arg_p: [*c]UA_StatusCode) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 18)))]);
}
pub fn UA_StatusCode_delete(arg_p: [*c]UA_StatusCode) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 18)))]);
}
pub fn UA_StatusCode_equal(arg_p1: [*c]const UA_StatusCode, arg_p2: [*c]const UA_StatusCode) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 18)))]) == UA_ORDER_EQ;
}
pub fn UA_QualifiedName_init(arg_p: [*c]UA_QualifiedName) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_QualifiedName));
}
pub fn UA_QualifiedName_new() callconv(.c) [*c]UA_QualifiedName {
    return @as([*c]UA_QualifiedName, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 19)))]))));
}
pub fn UA_QualifiedName_copy(arg_src: [*c]const UA_QualifiedName, arg_dst: [*c]UA_QualifiedName) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 19)))]);
}
pub fn UA_QualifiedName_deleteMembers(arg_p: [*c]UA_QualifiedName) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 19)))]);
}
pub fn UA_QualifiedName_clear(arg_p: [*c]UA_QualifiedName) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 19)))]);
}
pub fn UA_QualifiedName_delete(arg_p: [*c]UA_QualifiedName) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 19)))]);
}
pub fn UA_QualifiedName_equal(arg_p1: [*c]const UA_QualifiedName, arg_p2: [*c]const UA_QualifiedName) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 19)))]) == UA_ORDER_EQ;
}
pub fn UA_LocalizedText_init(arg_p: [*c]UA_LocalizedText) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_LocalizedText));
}
pub fn UA_LocalizedText_new() callconv(.c) [*c]UA_LocalizedText {
    return @as([*c]UA_LocalizedText, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 20)))]))));
}
pub fn UA_LocalizedText_copy(arg_src: [*c]const UA_LocalizedText, arg_dst: [*c]UA_LocalizedText) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 20)))]);
}
pub fn UA_LocalizedText_deleteMembers(arg_p: [*c]UA_LocalizedText) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 20)))]);
}
pub fn UA_LocalizedText_clear(arg_p: [*c]UA_LocalizedText) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 20)))]);
}
pub fn UA_LocalizedText_delete(arg_p: [*c]UA_LocalizedText) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 20)))]);
}
pub fn UA_LocalizedText_equal(arg_p1: [*c]const UA_LocalizedText, arg_p2: [*c]const UA_LocalizedText) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 20)))]) == UA_ORDER_EQ;
}
pub fn UA_ExtensionObject_init(arg_p: [*c]UA_ExtensionObject) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ExtensionObject));
}
pub fn UA_ExtensionObject_new() callconv(.c) [*c]UA_ExtensionObject {
    return @as([*c]UA_ExtensionObject, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 21)))]))));
}
pub fn UA_ExtensionObject_copy(arg_src: [*c]const UA_ExtensionObject, arg_dst: [*c]UA_ExtensionObject) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 21)))]);
}
pub fn UA_ExtensionObject_deleteMembers(arg_p: [*c]UA_ExtensionObject) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 21)))]);
}
pub fn UA_ExtensionObject_clear(arg_p: [*c]UA_ExtensionObject) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 21)))]);
}
pub fn UA_ExtensionObject_delete(arg_p: [*c]UA_ExtensionObject) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 21)))]);
}
pub fn UA_ExtensionObject_equal(arg_p1: [*c]const UA_ExtensionObject, arg_p2: [*c]const UA_ExtensionObject) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 21)))]) == UA_ORDER_EQ;
}
pub fn UA_DataValue_init(arg_p: ?*UA_DataValue) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DataValue));
}
pub fn UA_DataValue_new() callconv(.c) ?*UA_DataValue {
    return @as(?*UA_DataValue, @ptrCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 22)))])));
}
pub fn UA_DataValue_copy(arg_src: ?*const UA_DataValue, arg_dst: ?*UA_DataValue) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 22)))]);
}
pub fn UA_DataValue_deleteMembers(arg_p: ?*UA_DataValue) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 22)))]);
}
pub fn UA_DataValue_clear(arg_p: ?*UA_DataValue) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 22)))]);
}
pub fn UA_DataValue_delete(arg_p: ?*UA_DataValue) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 22)))]);
}
pub fn UA_DataValue_equal(arg_p1: ?*const UA_DataValue, arg_p2: ?*const UA_DataValue) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 22)))]) == UA_ORDER_EQ;
}
pub fn UA_Variant_init(arg_p: [*c]UA_Variant) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_Variant));
}
pub fn UA_Variant_new() callconv(.c) [*c]UA_Variant {
    return @as([*c]UA_Variant, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 23)))]))));
}
pub fn UA_Variant_copy(arg_src: [*c]const UA_Variant, arg_dst: [*c]UA_Variant) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 23)))]);
}
pub fn UA_Variant_deleteMembers(arg_p: [*c]UA_Variant) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 23)))]);
}
pub fn UA_Variant_clear(arg_p: [*c]UA_Variant) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 23)))]);
}
pub fn UA_Variant_delete(arg_p: [*c]UA_Variant) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 23)))]);
}
pub fn UA_Variant_equal(arg_p1: [*c]const UA_Variant, arg_p2: [*c]const UA_Variant) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 23)))]) == UA_ORDER_EQ;
}
pub fn UA_DiagnosticInfo_init(arg_p: ?*UA_DiagnosticInfo) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DiagnosticInfo));
}
pub fn UA_DiagnosticInfo_new() callconv(.c) ?*UA_DiagnosticInfo {
    return @as(?*UA_DiagnosticInfo, @ptrCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 24)))])));
}
pub fn UA_DiagnosticInfo_copy(arg_src: ?*const UA_DiagnosticInfo, arg_dst: ?*UA_DiagnosticInfo) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 24)))]);
}
pub fn UA_DiagnosticInfo_deleteMembers(arg_p: ?*UA_DiagnosticInfo) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 24)))]);
}
pub fn UA_DiagnosticInfo_clear(arg_p: ?*UA_DiagnosticInfo) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 24)))]);
}
pub fn UA_DiagnosticInfo_delete(arg_p: ?*UA_DiagnosticInfo) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 24)))]);
}
pub fn UA_DiagnosticInfo_equal(arg_p1: ?*const UA_DiagnosticInfo, arg_p2: ?*const UA_DiagnosticInfo) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 24)))]) == UA_ORDER_EQ;
}
pub fn UA_NamingRuleType_init(arg_p: [*c]UA_NamingRuleType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_NamingRuleType));
}
pub fn UA_NamingRuleType_new() callconv(.c) [*c]UA_NamingRuleType {
    return @as([*c]UA_NamingRuleType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 25)))]))));
}
pub fn UA_NamingRuleType_copy(arg_src: [*c]const UA_NamingRuleType, arg_dst: [*c]UA_NamingRuleType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 25)))]);
}
pub fn UA_NamingRuleType_deleteMembers(arg_p: [*c]UA_NamingRuleType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 25)))]);
}
pub fn UA_NamingRuleType_clear(arg_p: [*c]UA_NamingRuleType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 25)))]);
}
pub fn UA_NamingRuleType_delete(arg_p: [*c]UA_NamingRuleType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 25)))]);
}
pub fn UA_NamingRuleType_equal(arg_p1: [*c]const UA_NamingRuleType, arg_p2: [*c]const UA_NamingRuleType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 25)))]) == UA_ORDER_EQ;
}
pub fn UA_Enumeration_init(arg_p: [*c]UA_Enumeration) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_Enumeration));
}
pub fn UA_Enumeration_new() callconv(.c) [*c]UA_Enumeration {
    return @as([*c]UA_Enumeration, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 26)))]))));
}
pub fn UA_Enumeration_copy(arg_src: [*c]const UA_Enumeration, arg_dst: [*c]UA_Enumeration) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 26)))]);
}
pub fn UA_Enumeration_deleteMembers(arg_p: [*c]UA_Enumeration) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 26)))]);
}
pub fn UA_Enumeration_clear(arg_p: [*c]UA_Enumeration) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 26)))]);
}
pub fn UA_Enumeration_delete(arg_p: [*c]UA_Enumeration) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 26)))]);
}
pub fn UA_Enumeration_equal(arg_p1: [*c]const UA_Enumeration, arg_p2: [*c]const UA_Enumeration) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 26)))]) == UA_ORDER_EQ;
}
pub fn UA_ImageBMP_init(arg_p: [*c]UA_ImageBMP) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ImageBMP));
}
pub fn UA_ImageBMP_new() callconv(.c) [*c]UA_ImageBMP {
    return @as([*c]UA_ImageBMP, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 27)))]))));
}
pub fn UA_ImageBMP_copy(arg_src: [*c]const UA_ImageBMP, arg_dst: [*c]UA_ImageBMP) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 27)))]);
}
pub fn UA_ImageBMP_deleteMembers(arg_p: [*c]UA_ImageBMP) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 27)))]);
}
pub fn UA_ImageBMP_clear(arg_p: [*c]UA_ImageBMP) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 27)))]);
}
pub fn UA_ImageBMP_delete(arg_p: [*c]UA_ImageBMP) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 27)))]);
}
pub fn UA_ImageBMP_equal(arg_p1: [*c]const UA_ImageBMP, arg_p2: [*c]const UA_ImageBMP) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 27)))]) == UA_ORDER_EQ;
}
pub fn UA_ImageGIF_init(arg_p: [*c]UA_ImageGIF) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ImageGIF));
}
pub fn UA_ImageGIF_new() callconv(.c) [*c]UA_ImageGIF {
    return @as([*c]UA_ImageGIF, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 28)))]))));
}
pub fn UA_ImageGIF_copy(arg_src: [*c]const UA_ImageGIF, arg_dst: [*c]UA_ImageGIF) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 28)))]);
}
pub fn UA_ImageGIF_deleteMembers(arg_p: [*c]UA_ImageGIF) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 28)))]);
}
pub fn UA_ImageGIF_clear(arg_p: [*c]UA_ImageGIF) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 28)))]);
}
pub fn UA_ImageGIF_delete(arg_p: [*c]UA_ImageGIF) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 28)))]);
}
pub fn UA_ImageGIF_equal(arg_p1: [*c]const UA_ImageGIF, arg_p2: [*c]const UA_ImageGIF) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 28)))]) == UA_ORDER_EQ;
}
pub fn UA_ImageJPG_init(arg_p: [*c]UA_ImageJPG) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ImageJPG));
}
pub fn UA_ImageJPG_new() callconv(.c) [*c]UA_ImageJPG {
    return @as([*c]UA_ImageJPG, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 29)))]))));
}
pub fn UA_ImageJPG_copy(arg_src: [*c]const UA_ImageJPG, arg_dst: [*c]UA_ImageJPG) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 29)))]);
}
pub fn UA_ImageJPG_deleteMembers(arg_p: [*c]UA_ImageJPG) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 29)))]);
}
pub fn UA_ImageJPG_clear(arg_p: [*c]UA_ImageJPG) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 29)))]);
}
pub fn UA_ImageJPG_delete(arg_p: [*c]UA_ImageJPG) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 29)))]);
}
pub fn UA_ImageJPG_equal(arg_p1: [*c]const UA_ImageJPG, arg_p2: [*c]const UA_ImageJPG) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 29)))]) == UA_ORDER_EQ;
}
pub fn UA_ImagePNG_init(arg_p: [*c]UA_ImagePNG) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ImagePNG));
}
pub fn UA_ImagePNG_new() callconv(.c) [*c]UA_ImagePNG {
    return @as([*c]UA_ImagePNG, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 30)))]))));
}
pub fn UA_ImagePNG_copy(arg_src: [*c]const UA_ImagePNG, arg_dst: [*c]UA_ImagePNG) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 30)))]);
}
pub fn UA_ImagePNG_deleteMembers(arg_p: [*c]UA_ImagePNG) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 30)))]);
}
pub fn UA_ImagePNG_clear(arg_p: [*c]UA_ImagePNG) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 30)))]);
}
pub fn UA_ImagePNG_delete(arg_p: [*c]UA_ImagePNG) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 30)))]);
}
pub fn UA_ImagePNG_equal(arg_p1: [*c]const UA_ImagePNG, arg_p2: [*c]const UA_ImagePNG) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 30)))]) == UA_ORDER_EQ;
}
pub fn UA_AudioDataType_init(arg_p: [*c]UA_AudioDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_AudioDataType));
}
pub fn UA_AudioDataType_new() callconv(.c) [*c]UA_AudioDataType {
    return @as([*c]UA_AudioDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 31)))]))));
}
pub fn UA_AudioDataType_copy(arg_src: [*c]const UA_AudioDataType, arg_dst: [*c]UA_AudioDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 31)))]);
}
pub fn UA_AudioDataType_deleteMembers(arg_p: [*c]UA_AudioDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 31)))]);
}
pub fn UA_AudioDataType_clear(arg_p: [*c]UA_AudioDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 31)))]);
}
pub fn UA_AudioDataType_delete(arg_p: [*c]UA_AudioDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 31)))]);
}
pub fn UA_AudioDataType_equal(arg_p1: [*c]const UA_AudioDataType, arg_p2: [*c]const UA_AudioDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 31)))]) == UA_ORDER_EQ;
}
pub fn UA_UriString_init(arg_p: [*c]UA_UriString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_UriString));
}
pub fn UA_UriString_new() callconv(.c) [*c]UA_UriString {
    return @as([*c]UA_UriString, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 32)))]))));
}
pub fn UA_UriString_copy(arg_src: [*c]const UA_UriString, arg_dst: [*c]UA_UriString) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 32)))]);
}
pub fn UA_UriString_deleteMembers(arg_p: [*c]UA_UriString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 32)))]);
}
pub fn UA_UriString_clear(arg_p: [*c]UA_UriString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 32)))]);
}
pub fn UA_UriString_delete(arg_p: [*c]UA_UriString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 32)))]);
}
pub fn UA_UriString_equal(arg_p1: [*c]const UA_UriString, arg_p2: [*c]const UA_UriString) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 32)))]) == UA_ORDER_EQ;
}
pub fn UA_BitFieldMaskDataType_init(arg_p: [*c]UA_BitFieldMaskDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_BitFieldMaskDataType));
}
pub fn UA_BitFieldMaskDataType_new() callconv(.c) [*c]UA_BitFieldMaskDataType {
    return @as([*c]UA_BitFieldMaskDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 33)))]))));
}
pub fn UA_BitFieldMaskDataType_copy(arg_src: [*c]const UA_BitFieldMaskDataType, arg_dst: [*c]UA_BitFieldMaskDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 33)))]);
}
pub fn UA_BitFieldMaskDataType_deleteMembers(arg_p: [*c]UA_BitFieldMaskDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 33)))]);
}
pub fn UA_BitFieldMaskDataType_clear(arg_p: [*c]UA_BitFieldMaskDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 33)))]);
}
pub fn UA_BitFieldMaskDataType_delete(arg_p: [*c]UA_BitFieldMaskDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 33)))]);
}
pub fn UA_BitFieldMaskDataType_equal(arg_p1: [*c]const UA_BitFieldMaskDataType, arg_p2: [*c]const UA_BitFieldMaskDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 33)))]) == UA_ORDER_EQ;
}
pub fn UA_SemanticVersionString_init(arg_p: [*c]UA_SemanticVersionString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_SemanticVersionString));
}
pub fn UA_SemanticVersionString_new() callconv(.c) [*c]UA_SemanticVersionString {
    return @as([*c]UA_SemanticVersionString, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 34)))]))));
}
pub fn UA_SemanticVersionString_copy(arg_src: [*c]const UA_SemanticVersionString, arg_dst: [*c]UA_SemanticVersionString) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 34)))]);
}
pub fn UA_SemanticVersionString_deleteMembers(arg_p: [*c]UA_SemanticVersionString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 34)))]);
}
pub fn UA_SemanticVersionString_clear(arg_p: [*c]UA_SemanticVersionString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 34)))]);
}
pub fn UA_SemanticVersionString_delete(arg_p: [*c]UA_SemanticVersionString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 34)))]);
}
pub fn UA_SemanticVersionString_equal(arg_p1: [*c]const UA_SemanticVersionString, arg_p2: [*c]const UA_SemanticVersionString) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 34)))]) == UA_ORDER_EQ;
}
pub fn UA_KeyValuePair_init(arg_p: [*c]UA_KeyValuePair) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_KeyValuePair));
}
pub fn UA_KeyValuePair_new() callconv(.c) [*c]UA_KeyValuePair {
    return @as([*c]UA_KeyValuePair, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 35)))]))));
}
pub fn UA_KeyValuePair_copy(arg_src: [*c]const UA_KeyValuePair, arg_dst: [*c]UA_KeyValuePair) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 35)))]);
}
pub fn UA_KeyValuePair_deleteMembers(arg_p: [*c]UA_KeyValuePair) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 35)))]);
}
pub fn UA_KeyValuePair_clear(arg_p: [*c]UA_KeyValuePair) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 35)))]);
}
pub fn UA_KeyValuePair_delete(arg_p: [*c]UA_KeyValuePair) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 35)))]);
}
pub fn UA_KeyValuePair_equal(arg_p1: [*c]const UA_KeyValuePair, arg_p2: [*c]const UA_KeyValuePair) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 35)))]) == UA_ORDER_EQ;
}
pub fn UA_AdditionalParametersType_init(arg_p: [*c]UA_AdditionalParametersType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_AdditionalParametersType));
}
pub fn UA_AdditionalParametersType_new() callconv(.c) [*c]UA_AdditionalParametersType {
    return @as([*c]UA_AdditionalParametersType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 36)))]))));
}
pub fn UA_AdditionalParametersType_copy(arg_src: [*c]const UA_AdditionalParametersType, arg_dst: [*c]UA_AdditionalParametersType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 36)))]);
}
pub fn UA_AdditionalParametersType_deleteMembers(arg_p: [*c]UA_AdditionalParametersType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 36)))]);
}
pub fn UA_AdditionalParametersType_clear(arg_p: [*c]UA_AdditionalParametersType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 36)))]);
}
pub fn UA_AdditionalParametersType_delete(arg_p: [*c]UA_AdditionalParametersType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 36)))]);
}
pub fn UA_AdditionalParametersType_equal(arg_p1: [*c]const UA_AdditionalParametersType, arg_p2: [*c]const UA_AdditionalParametersType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 36)))]) == UA_ORDER_EQ;
}
pub fn UA_EphemeralKeyType_init(arg_p: [*c]UA_EphemeralKeyType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_EphemeralKeyType));
}
pub fn UA_EphemeralKeyType_new() callconv(.c) [*c]UA_EphemeralKeyType {
    return @as([*c]UA_EphemeralKeyType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 37)))]))));
}
pub fn UA_EphemeralKeyType_copy(arg_src: [*c]const UA_EphemeralKeyType, arg_dst: [*c]UA_EphemeralKeyType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 37)))]);
}
pub fn UA_EphemeralKeyType_deleteMembers(arg_p: [*c]UA_EphemeralKeyType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 37)))]);
}
pub fn UA_EphemeralKeyType_clear(arg_p: [*c]UA_EphemeralKeyType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 37)))]);
}
pub fn UA_EphemeralKeyType_delete(arg_p: [*c]UA_EphemeralKeyType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 37)))]);
}
pub fn UA_EphemeralKeyType_equal(arg_p1: [*c]const UA_EphemeralKeyType, arg_p2: [*c]const UA_EphemeralKeyType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 37)))]) == UA_ORDER_EQ;
}
pub fn UA_Handle_init(arg_p: [*c]UA_Handle) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_Handle));
}
pub fn UA_Handle_new() callconv(.c) [*c]UA_Handle {
    return @as([*c]UA_Handle, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 38)))]))));
}
pub fn UA_Handle_copy(arg_src: [*c]const UA_Handle, arg_dst: [*c]UA_Handle) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 38)))]);
}
pub fn UA_Handle_deleteMembers(arg_p: [*c]UA_Handle) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 38)))]);
}
pub fn UA_Handle_clear(arg_p: [*c]UA_Handle) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 38)))]);
}
pub fn UA_Handle_delete(arg_p: [*c]UA_Handle) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 38)))]);
}
pub fn UA_Handle_equal(arg_p1: [*c]const UA_Handle, arg_p2: [*c]const UA_Handle) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 38)))]) == UA_ORDER_EQ;
}
pub fn UA_TrimmedString_init(arg_p: [*c]UA_TrimmedString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_TrimmedString));
}
pub fn UA_TrimmedString_new() callconv(.c) [*c]UA_TrimmedString {
    return @as([*c]UA_TrimmedString, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 39)))]))));
}
pub fn UA_TrimmedString_copy(arg_src: [*c]const UA_TrimmedString, arg_dst: [*c]UA_TrimmedString) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 39)))]);
}
pub fn UA_TrimmedString_deleteMembers(arg_p: [*c]UA_TrimmedString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 39)))]);
}
pub fn UA_TrimmedString_clear(arg_p: [*c]UA_TrimmedString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 39)))]);
}
pub fn UA_TrimmedString_delete(arg_p: [*c]UA_TrimmedString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 39)))]);
}
pub fn UA_TrimmedString_equal(arg_p1: [*c]const UA_TrimmedString, arg_p2: [*c]const UA_TrimmedString) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 39)))]) == UA_ORDER_EQ;
}
pub fn UA_RationalNumber_init(arg_p: [*c]UA_RationalNumber) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_RationalNumber));
}
pub fn UA_RationalNumber_new() callconv(.c) [*c]UA_RationalNumber {
    return @as([*c]UA_RationalNumber, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 40)))]))));
}
pub fn UA_RationalNumber_copy(arg_src: [*c]const UA_RationalNumber, arg_dst: [*c]UA_RationalNumber) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 40)))]);
}
pub fn UA_RationalNumber_deleteMembers(arg_p: [*c]UA_RationalNumber) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 40)))]);
}
pub fn UA_RationalNumber_clear(arg_p: [*c]UA_RationalNumber) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 40)))]);
}
pub fn UA_RationalNumber_delete(arg_p: [*c]UA_RationalNumber) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 40)))]);
}
pub fn UA_RationalNumber_equal(arg_p1: [*c]const UA_RationalNumber, arg_p2: [*c]const UA_RationalNumber) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 40)))]) == UA_ORDER_EQ;
}
pub fn UA_ThreeDVector_init(arg_p: [*c]UA_ThreeDVector) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ThreeDVector));
}
pub fn UA_ThreeDVector_new() callconv(.c) [*c]UA_ThreeDVector {
    return @as([*c]UA_ThreeDVector, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 41)))]))));
}
pub fn UA_ThreeDVector_copy(arg_src: [*c]const UA_ThreeDVector, arg_dst: [*c]UA_ThreeDVector) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 41)))]);
}
pub fn UA_ThreeDVector_deleteMembers(arg_p: [*c]UA_ThreeDVector) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 41)))]);
}
pub fn UA_ThreeDVector_clear(arg_p: [*c]UA_ThreeDVector) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 41)))]);
}
pub fn UA_ThreeDVector_delete(arg_p: [*c]UA_ThreeDVector) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 41)))]);
}
pub fn UA_ThreeDVector_equal(arg_p1: [*c]const UA_ThreeDVector, arg_p2: [*c]const UA_ThreeDVector) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 41)))]) == UA_ORDER_EQ;
}
pub fn UA_ThreeDCartesianCoordinates_init(arg_p: [*c]UA_ThreeDCartesianCoordinates) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ThreeDCartesianCoordinates));
}
pub fn UA_ThreeDCartesianCoordinates_new() callconv(.c) [*c]UA_ThreeDCartesianCoordinates {
    return @as([*c]UA_ThreeDCartesianCoordinates, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 42)))]))));
}
pub fn UA_ThreeDCartesianCoordinates_copy(arg_src: [*c]const UA_ThreeDCartesianCoordinates, arg_dst: [*c]UA_ThreeDCartesianCoordinates) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 42)))]);
}
pub fn UA_ThreeDCartesianCoordinates_deleteMembers(arg_p: [*c]UA_ThreeDCartesianCoordinates) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 42)))]);
}
pub fn UA_ThreeDCartesianCoordinates_clear(arg_p: [*c]UA_ThreeDCartesianCoordinates) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 42)))]);
}
pub fn UA_ThreeDCartesianCoordinates_delete(arg_p: [*c]UA_ThreeDCartesianCoordinates) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 42)))]);
}
pub fn UA_ThreeDCartesianCoordinates_equal(arg_p1: [*c]const UA_ThreeDCartesianCoordinates, arg_p2: [*c]const UA_ThreeDCartesianCoordinates) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 42)))]) == UA_ORDER_EQ;
}
pub fn UA_ThreeDOrientation_init(arg_p: [*c]UA_ThreeDOrientation) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ThreeDOrientation));
}
pub fn UA_ThreeDOrientation_new() callconv(.c) [*c]UA_ThreeDOrientation {
    return @as([*c]UA_ThreeDOrientation, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 43)))]))));
}
pub fn UA_ThreeDOrientation_copy(arg_src: [*c]const UA_ThreeDOrientation, arg_dst: [*c]UA_ThreeDOrientation) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 43)))]);
}
pub fn UA_ThreeDOrientation_deleteMembers(arg_p: [*c]UA_ThreeDOrientation) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 43)))]);
}
pub fn UA_ThreeDOrientation_clear(arg_p: [*c]UA_ThreeDOrientation) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 43)))]);
}
pub fn UA_ThreeDOrientation_delete(arg_p: [*c]UA_ThreeDOrientation) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 43)))]);
}
pub fn UA_ThreeDOrientation_equal(arg_p1: [*c]const UA_ThreeDOrientation, arg_p2: [*c]const UA_ThreeDOrientation) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 43)))]) == UA_ORDER_EQ;
}
pub fn UA_ThreeDFrame_init(arg_p: [*c]UA_ThreeDFrame) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ThreeDFrame));
}
pub fn UA_ThreeDFrame_new() callconv(.c) [*c]UA_ThreeDFrame {
    return @as([*c]UA_ThreeDFrame, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 44)))]))));
}
pub fn UA_ThreeDFrame_copy(arg_src: [*c]const UA_ThreeDFrame, arg_dst: [*c]UA_ThreeDFrame) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 44)))]);
}
pub fn UA_ThreeDFrame_deleteMembers(arg_p: [*c]UA_ThreeDFrame) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 44)))]);
}
pub fn UA_ThreeDFrame_clear(arg_p: [*c]UA_ThreeDFrame) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 44)))]);
}
pub fn UA_ThreeDFrame_delete(arg_p: [*c]UA_ThreeDFrame) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 44)))]);
}
pub fn UA_ThreeDFrame_equal(arg_p1: [*c]const UA_ThreeDFrame, arg_p2: [*c]const UA_ThreeDFrame) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 44)))]) == UA_ORDER_EQ;
}
pub fn UA_OpenFileMode_init(arg_p: [*c]UA_OpenFileMode) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_OpenFileMode));
}
pub fn UA_OpenFileMode_new() callconv(.c) [*c]UA_OpenFileMode {
    return @as([*c]UA_OpenFileMode, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 45)))]))));
}
pub fn UA_OpenFileMode_copy(arg_src: [*c]const UA_OpenFileMode, arg_dst: [*c]UA_OpenFileMode) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 45)))]);
}
pub fn UA_OpenFileMode_deleteMembers(arg_p: [*c]UA_OpenFileMode) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 45)))]);
}
pub fn UA_OpenFileMode_clear(arg_p: [*c]UA_OpenFileMode) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 45)))]);
}
pub fn UA_OpenFileMode_delete(arg_p: [*c]UA_OpenFileMode) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 45)))]);
}
pub fn UA_OpenFileMode_equal(arg_p1: [*c]const UA_OpenFileMode, arg_p2: [*c]const UA_OpenFileMode) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 45)))]) == UA_ORDER_EQ;
}
pub fn UA_IdentityCriteriaType_init(arg_p: [*c]UA_IdentityCriteriaType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_IdentityCriteriaType));
}
pub fn UA_IdentityCriteriaType_new() callconv(.c) [*c]UA_IdentityCriteriaType {
    return @as([*c]UA_IdentityCriteriaType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 46)))]))));
}
pub fn UA_IdentityCriteriaType_copy(arg_src: [*c]const UA_IdentityCriteriaType, arg_dst: [*c]UA_IdentityCriteriaType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 46)))]);
}
pub fn UA_IdentityCriteriaType_deleteMembers(arg_p: [*c]UA_IdentityCriteriaType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 46)))]);
}
pub fn UA_IdentityCriteriaType_clear(arg_p: [*c]UA_IdentityCriteriaType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 46)))]);
}
pub fn UA_IdentityCriteriaType_delete(arg_p: [*c]UA_IdentityCriteriaType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 46)))]);
}
pub fn UA_IdentityCriteriaType_equal(arg_p1: [*c]const UA_IdentityCriteriaType, arg_p2: [*c]const UA_IdentityCriteriaType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 46)))]) == UA_ORDER_EQ;
}
pub fn UA_IdentityMappingRuleType_init(arg_p: [*c]UA_IdentityMappingRuleType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_IdentityMappingRuleType));
}
pub fn UA_IdentityMappingRuleType_new() callconv(.c) [*c]UA_IdentityMappingRuleType {
    return @as([*c]UA_IdentityMappingRuleType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 47)))]))));
}
pub fn UA_IdentityMappingRuleType_copy(arg_src: [*c]const UA_IdentityMappingRuleType, arg_dst: [*c]UA_IdentityMappingRuleType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 47)))]);
}
pub fn UA_IdentityMappingRuleType_deleteMembers(arg_p: [*c]UA_IdentityMappingRuleType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 47)))]);
}
pub fn UA_IdentityMappingRuleType_clear(arg_p: [*c]UA_IdentityMappingRuleType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 47)))]);
}
pub fn UA_IdentityMappingRuleType_delete(arg_p: [*c]UA_IdentityMappingRuleType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 47)))]);
}
pub fn UA_IdentityMappingRuleType_equal(arg_p1: [*c]const UA_IdentityMappingRuleType, arg_p2: [*c]const UA_IdentityMappingRuleType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 47)))]) == UA_ORDER_EQ;
}
pub fn UA_CurrencyUnitType_init(arg_p: [*c]UA_CurrencyUnitType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_CurrencyUnitType));
}
pub fn UA_CurrencyUnitType_new() callconv(.c) [*c]UA_CurrencyUnitType {
    return @as([*c]UA_CurrencyUnitType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 48)))]))));
}
pub fn UA_CurrencyUnitType_copy(arg_src: [*c]const UA_CurrencyUnitType, arg_dst: [*c]UA_CurrencyUnitType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 48)))]);
}
pub fn UA_CurrencyUnitType_deleteMembers(arg_p: [*c]UA_CurrencyUnitType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 48)))]);
}
pub fn UA_CurrencyUnitType_clear(arg_p: [*c]UA_CurrencyUnitType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 48)))]);
}
pub fn UA_CurrencyUnitType_delete(arg_p: [*c]UA_CurrencyUnitType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 48)))]);
}
pub fn UA_CurrencyUnitType_equal(arg_p1: [*c]const UA_CurrencyUnitType, arg_p2: [*c]const UA_CurrencyUnitType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 48)))]) == UA_ORDER_EQ;
}
pub fn UA_AlarmMask_init(arg_p: [*c]UA_AlarmMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_AlarmMask));
}
pub fn UA_AlarmMask_new() callconv(.c) [*c]UA_AlarmMask {
    return @as([*c]UA_AlarmMask, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 49)))]))));
}
pub fn UA_AlarmMask_copy(arg_src: [*c]const UA_AlarmMask, arg_dst: [*c]UA_AlarmMask) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 49)))]);
}
pub fn UA_AlarmMask_deleteMembers(arg_p: [*c]UA_AlarmMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 49)))]);
}
pub fn UA_AlarmMask_clear(arg_p: [*c]UA_AlarmMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 49)))]);
}
pub fn UA_AlarmMask_delete(arg_p: [*c]UA_AlarmMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 49)))]);
}
pub fn UA_AlarmMask_equal(arg_p1: [*c]const UA_AlarmMask, arg_p2: [*c]const UA_AlarmMask) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 49)))]) == UA_ORDER_EQ;
}
pub fn UA_TrustListValidationOptions_init(arg_p: [*c]UA_TrustListValidationOptions) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_TrustListValidationOptions));
}
pub fn UA_TrustListValidationOptions_new() callconv(.c) [*c]UA_TrustListValidationOptions {
    return @as([*c]UA_TrustListValidationOptions, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 50)))]))));
}
pub fn UA_TrustListValidationOptions_copy(arg_src: [*c]const UA_TrustListValidationOptions, arg_dst: [*c]UA_TrustListValidationOptions) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 50)))]);
}
pub fn UA_TrustListValidationOptions_deleteMembers(arg_p: [*c]UA_TrustListValidationOptions) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 50)))]);
}
pub fn UA_TrustListValidationOptions_clear(arg_p: [*c]UA_TrustListValidationOptions) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 50)))]);
}
pub fn UA_TrustListValidationOptions_delete(arg_p: [*c]UA_TrustListValidationOptions) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 50)))]);
}
pub fn UA_TrustListValidationOptions_equal(arg_p1: [*c]const UA_TrustListValidationOptions, arg_p2: [*c]const UA_TrustListValidationOptions) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 50)))]) == UA_ORDER_EQ;
}
pub fn UA_TrustListMasks_init(arg_p: [*c]UA_TrustListMasks) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_TrustListMasks));
}
pub fn UA_TrustListMasks_new() callconv(.c) [*c]UA_TrustListMasks {
    return @as([*c]UA_TrustListMasks, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 51)))]))));
}
pub fn UA_TrustListMasks_copy(arg_src: [*c]const UA_TrustListMasks, arg_dst: [*c]UA_TrustListMasks) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 51)))]);
}
pub fn UA_TrustListMasks_deleteMembers(arg_p: [*c]UA_TrustListMasks) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 51)))]);
}
pub fn UA_TrustListMasks_clear(arg_p: [*c]UA_TrustListMasks) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 51)))]);
}
pub fn UA_TrustListMasks_delete(arg_p: [*c]UA_TrustListMasks) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 51)))]);
}
pub fn UA_TrustListMasks_equal(arg_p1: [*c]const UA_TrustListMasks, arg_p2: [*c]const UA_TrustListMasks) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 51)))]) == UA_ORDER_EQ;
}
pub fn UA_TrustListDataType_init(arg_p: [*c]UA_TrustListDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_TrustListDataType));
}
pub fn UA_TrustListDataType_new() callconv(.c) [*c]UA_TrustListDataType {
    return @as([*c]UA_TrustListDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 52)))]))));
}
pub fn UA_TrustListDataType_copy(arg_src: [*c]const UA_TrustListDataType, arg_dst: [*c]UA_TrustListDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 52)))]);
}
pub fn UA_TrustListDataType_deleteMembers(arg_p: [*c]UA_TrustListDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 52)))]);
}
pub fn UA_TrustListDataType_clear(arg_p: [*c]UA_TrustListDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 52)))]);
}
pub fn UA_TrustListDataType_delete(arg_p: [*c]UA_TrustListDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 52)))]);
}
pub fn UA_TrustListDataType_equal(arg_p1: [*c]const UA_TrustListDataType, arg_p2: [*c]const UA_TrustListDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 52)))]) == UA_ORDER_EQ;
}
pub fn UA_TransactionErrorType_init(arg_p: [*c]UA_TransactionErrorType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_TransactionErrorType));
}
pub fn UA_TransactionErrorType_new() callconv(.c) [*c]UA_TransactionErrorType {
    return @as([*c]UA_TransactionErrorType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 53)))]))));
}
pub fn UA_TransactionErrorType_copy(arg_src: [*c]const UA_TransactionErrorType, arg_dst: [*c]UA_TransactionErrorType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 53)))]);
}
pub fn UA_TransactionErrorType_deleteMembers(arg_p: [*c]UA_TransactionErrorType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 53)))]);
}
pub fn UA_TransactionErrorType_clear(arg_p: [*c]UA_TransactionErrorType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 53)))]);
}
pub fn UA_TransactionErrorType_delete(arg_p: [*c]UA_TransactionErrorType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 53)))]);
}
pub fn UA_TransactionErrorType_equal(arg_p1: [*c]const UA_TransactionErrorType, arg_p2: [*c]const UA_TransactionErrorType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 53)))]) == UA_ORDER_EQ;
}
pub fn UA_DataTypeDescription_init(arg_p: [*c]UA_DataTypeDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DataTypeDescription));
}
pub fn UA_DataTypeDescription_new() callconv(.c) [*c]UA_DataTypeDescription {
    return @as([*c]UA_DataTypeDescription, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 54)))]))));
}
pub fn UA_DataTypeDescription_copy(arg_src: [*c]const UA_DataTypeDescription, arg_dst: [*c]UA_DataTypeDescription) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 54)))]);
}
pub fn UA_DataTypeDescription_deleteMembers(arg_p: [*c]UA_DataTypeDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 54)))]);
}
pub fn UA_DataTypeDescription_clear(arg_p: [*c]UA_DataTypeDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 54)))]);
}
pub fn UA_DataTypeDescription_delete(arg_p: [*c]UA_DataTypeDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 54)))]);
}
pub fn UA_DataTypeDescription_equal(arg_p1: [*c]const UA_DataTypeDescription, arg_p2: [*c]const UA_DataTypeDescription) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 54)))]) == UA_ORDER_EQ;
}
pub fn UA_SimpleTypeDescription_init(arg_p: [*c]UA_SimpleTypeDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_SimpleTypeDescription));
}
pub fn UA_SimpleTypeDescription_new() callconv(.c) [*c]UA_SimpleTypeDescription {
    return @as([*c]UA_SimpleTypeDescription, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 55)))]))));
}
pub fn UA_SimpleTypeDescription_copy(arg_src: [*c]const UA_SimpleTypeDescription, arg_dst: [*c]UA_SimpleTypeDescription) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 55)))]);
}
pub fn UA_SimpleTypeDescription_deleteMembers(arg_p: [*c]UA_SimpleTypeDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 55)))]);
}
pub fn UA_SimpleTypeDescription_clear(arg_p: [*c]UA_SimpleTypeDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 55)))]);
}
pub fn UA_SimpleTypeDescription_delete(arg_p: [*c]UA_SimpleTypeDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 55)))]);
}
pub fn UA_SimpleTypeDescription_equal(arg_p1: [*c]const UA_SimpleTypeDescription, arg_p2: [*c]const UA_SimpleTypeDescription) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 55)))]) == UA_ORDER_EQ;
}
pub fn UA_PortableQualifiedName_init(arg_p: [*c]UA_PortableQualifiedName) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_PortableQualifiedName));
}
pub fn UA_PortableQualifiedName_new() callconv(.c) [*c]UA_PortableQualifiedName {
    return @as([*c]UA_PortableQualifiedName, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 56)))]))));
}
pub fn UA_PortableQualifiedName_copy(arg_src: [*c]const UA_PortableQualifiedName, arg_dst: [*c]UA_PortableQualifiedName) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 56)))]);
}
pub fn UA_PortableQualifiedName_deleteMembers(arg_p: [*c]UA_PortableQualifiedName) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 56)))]);
}
pub fn UA_PortableQualifiedName_clear(arg_p: [*c]UA_PortableQualifiedName) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 56)))]);
}
pub fn UA_PortableQualifiedName_delete(arg_p: [*c]UA_PortableQualifiedName) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 56)))]);
}
pub fn UA_PortableQualifiedName_equal(arg_p1: [*c]const UA_PortableQualifiedName, arg_p2: [*c]const UA_PortableQualifiedName) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 56)))]) == UA_ORDER_EQ;
}
pub fn UA_PortableNodeId_init(arg_p: [*c]UA_PortableNodeId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_PortableNodeId));
}
pub fn UA_PortableNodeId_new() callconv(.c) [*c]UA_PortableNodeId {
    return @as([*c]UA_PortableNodeId, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 57)))]))));
}
pub fn UA_PortableNodeId_copy(arg_src: [*c]const UA_PortableNodeId, arg_dst: [*c]UA_PortableNodeId) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 57)))]);
}
pub fn UA_PortableNodeId_deleteMembers(arg_p: [*c]UA_PortableNodeId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 57)))]);
}
pub fn UA_PortableNodeId_clear(arg_p: [*c]UA_PortableNodeId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 57)))]);
}
pub fn UA_PortableNodeId_delete(arg_p: [*c]UA_PortableNodeId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 57)))]);
}
pub fn UA_PortableNodeId_equal(arg_p1: [*c]const UA_PortableNodeId, arg_p2: [*c]const UA_PortableNodeId) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 57)))]) == UA_ORDER_EQ;
}
pub fn UA_UnsignedRationalNumber_init(arg_p: [*c]UA_UnsignedRationalNumber) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_UnsignedRationalNumber));
}
pub fn UA_UnsignedRationalNumber_new() callconv(.c) [*c]UA_UnsignedRationalNumber {
    return @as([*c]UA_UnsignedRationalNumber, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 58)))]))));
}
pub fn UA_UnsignedRationalNumber_copy(arg_src: [*c]const UA_UnsignedRationalNumber, arg_dst: [*c]UA_UnsignedRationalNumber) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 58)))]);
}
pub fn UA_UnsignedRationalNumber_deleteMembers(arg_p: [*c]UA_UnsignedRationalNumber) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 58)))]);
}
pub fn UA_UnsignedRationalNumber_clear(arg_p: [*c]UA_UnsignedRationalNumber) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 58)))]);
}
pub fn UA_UnsignedRationalNumber_delete(arg_p: [*c]UA_UnsignedRationalNumber) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 58)))]);
}
pub fn UA_UnsignedRationalNumber_equal(arg_p1: [*c]const UA_UnsignedRationalNumber, arg_p2: [*c]const UA_UnsignedRationalNumber) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 58)))]) == UA_ORDER_EQ;
}
pub fn UA_PubSubState_init(arg_p: [*c]UA_PubSubState) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_PubSubState));
}
pub fn UA_PubSubState_new() callconv(.c) [*c]UA_PubSubState {
    return @as([*c]UA_PubSubState, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 59)))]))));
}
pub fn UA_PubSubState_copy(arg_src: [*c]const UA_PubSubState, arg_dst: [*c]UA_PubSubState) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 59)))]);
}
pub fn UA_PubSubState_deleteMembers(arg_p: [*c]UA_PubSubState) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 59)))]);
}
pub fn UA_PubSubState_clear(arg_p: [*c]UA_PubSubState) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 59)))]);
}
pub fn UA_PubSubState_delete(arg_p: [*c]UA_PubSubState) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 59)))]);
}
pub fn UA_PubSubState_equal(arg_p1: [*c]const UA_PubSubState, arg_p2: [*c]const UA_PubSubState) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 59)))]) == UA_ORDER_EQ;
}
pub fn UA_DataSetFieldFlags_init(arg_p: [*c]UA_DataSetFieldFlags) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DataSetFieldFlags));
}
pub fn UA_DataSetFieldFlags_new() callconv(.c) [*c]UA_DataSetFieldFlags {
    return @as([*c]UA_DataSetFieldFlags, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 60)))]))));
}
pub fn UA_DataSetFieldFlags_copy(arg_src: [*c]const UA_DataSetFieldFlags, arg_dst: [*c]UA_DataSetFieldFlags) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 60)))]);
}
pub fn UA_DataSetFieldFlags_deleteMembers(arg_p: [*c]UA_DataSetFieldFlags) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 60)))]);
}
pub fn UA_DataSetFieldFlags_clear(arg_p: [*c]UA_DataSetFieldFlags) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 60)))]);
}
pub fn UA_DataSetFieldFlags_delete(arg_p: [*c]UA_DataSetFieldFlags) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 60)))]);
}
pub fn UA_DataSetFieldFlags_equal(arg_p1: [*c]const UA_DataSetFieldFlags, arg_p2: [*c]const UA_DataSetFieldFlags) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 60)))]) == UA_ORDER_EQ;
}
pub fn UA_ConfigurationVersionDataType_init(arg_p: [*c]UA_ConfigurationVersionDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ConfigurationVersionDataType));
}
pub fn UA_ConfigurationVersionDataType_new() callconv(.c) [*c]UA_ConfigurationVersionDataType {
    return @as([*c]UA_ConfigurationVersionDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 61)))]))));
}
pub fn UA_ConfigurationVersionDataType_copy(arg_src: [*c]const UA_ConfigurationVersionDataType, arg_dst: [*c]UA_ConfigurationVersionDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 61)))]);
}
pub fn UA_ConfigurationVersionDataType_deleteMembers(arg_p: [*c]UA_ConfigurationVersionDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 61)))]);
}
pub fn UA_ConfigurationVersionDataType_clear(arg_p: [*c]UA_ConfigurationVersionDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 61)))]);
}
pub fn UA_ConfigurationVersionDataType_delete(arg_p: [*c]UA_ConfigurationVersionDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 61)))]);
}
pub fn UA_ConfigurationVersionDataType_equal(arg_p1: [*c]const UA_ConfigurationVersionDataType, arg_p2: [*c]const UA_ConfigurationVersionDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 61)))]) == UA_ORDER_EQ;
}
pub fn UA_PublishedVariableDataType_init(arg_p: [*c]UA_PublishedVariableDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_PublishedVariableDataType));
}
pub fn UA_PublishedVariableDataType_new() callconv(.c) [*c]UA_PublishedVariableDataType {
    return @as([*c]UA_PublishedVariableDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 62)))]))));
}
pub fn UA_PublishedVariableDataType_copy(arg_src: [*c]const UA_PublishedVariableDataType, arg_dst: [*c]UA_PublishedVariableDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 62)))]);
}
pub fn UA_PublishedVariableDataType_deleteMembers(arg_p: [*c]UA_PublishedVariableDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 62)))]);
}
pub fn UA_PublishedVariableDataType_clear(arg_p: [*c]UA_PublishedVariableDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 62)))]);
}
pub fn UA_PublishedVariableDataType_delete(arg_p: [*c]UA_PublishedVariableDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 62)))]);
}
pub fn UA_PublishedVariableDataType_equal(arg_p1: [*c]const UA_PublishedVariableDataType, arg_p2: [*c]const UA_PublishedVariableDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 62)))]) == UA_ORDER_EQ;
}
pub fn UA_PublishedDataItemsDataType_init(arg_p: [*c]UA_PublishedDataItemsDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_PublishedDataItemsDataType));
}
pub fn UA_PublishedDataItemsDataType_new() callconv(.c) [*c]UA_PublishedDataItemsDataType {
    return @as([*c]UA_PublishedDataItemsDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 63)))]))));
}
pub fn UA_PublishedDataItemsDataType_copy(arg_src: [*c]const UA_PublishedDataItemsDataType, arg_dst: [*c]UA_PublishedDataItemsDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 63)))]);
}
pub fn UA_PublishedDataItemsDataType_deleteMembers(arg_p: [*c]UA_PublishedDataItemsDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 63)))]);
}
pub fn UA_PublishedDataItemsDataType_clear(arg_p: [*c]UA_PublishedDataItemsDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 63)))]);
}
pub fn UA_PublishedDataItemsDataType_delete(arg_p: [*c]UA_PublishedDataItemsDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 63)))]);
}
pub fn UA_PublishedDataItemsDataType_equal(arg_p1: [*c]const UA_PublishedDataItemsDataType, arg_p2: [*c]const UA_PublishedDataItemsDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 63)))]) == UA_ORDER_EQ;
}
pub fn UA_PublishedDataSetCustomSourceDataType_init(arg_p: [*c]UA_PublishedDataSetCustomSourceDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_PublishedDataSetCustomSourceDataType));
}
pub fn UA_PublishedDataSetCustomSourceDataType_new() callconv(.c) [*c]UA_PublishedDataSetCustomSourceDataType {
    return @as([*c]UA_PublishedDataSetCustomSourceDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 64)))]))));
}
pub fn UA_PublishedDataSetCustomSourceDataType_copy(arg_src: [*c]const UA_PublishedDataSetCustomSourceDataType, arg_dst: [*c]UA_PublishedDataSetCustomSourceDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 64)))]);
}
pub fn UA_PublishedDataSetCustomSourceDataType_deleteMembers(arg_p: [*c]UA_PublishedDataSetCustomSourceDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 64)))]);
}
pub fn UA_PublishedDataSetCustomSourceDataType_clear(arg_p: [*c]UA_PublishedDataSetCustomSourceDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 64)))]);
}
pub fn UA_PublishedDataSetCustomSourceDataType_delete(arg_p: [*c]UA_PublishedDataSetCustomSourceDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 64)))]);
}
pub fn UA_PublishedDataSetCustomSourceDataType_equal(arg_p1: [*c]const UA_PublishedDataSetCustomSourceDataType, arg_p2: [*c]const UA_PublishedDataSetCustomSourceDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 64)))]) == UA_ORDER_EQ;
}
pub fn UA_DataSetFieldContentMask_init(arg_p: [*c]UA_DataSetFieldContentMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DataSetFieldContentMask));
}
pub fn UA_DataSetFieldContentMask_new() callconv(.c) [*c]UA_DataSetFieldContentMask {
    return @as([*c]UA_DataSetFieldContentMask, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 65)))]))));
}
pub fn UA_DataSetFieldContentMask_copy(arg_src: [*c]const UA_DataSetFieldContentMask, arg_dst: [*c]UA_DataSetFieldContentMask) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 65)))]);
}
pub fn UA_DataSetFieldContentMask_deleteMembers(arg_p: [*c]UA_DataSetFieldContentMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 65)))]);
}
pub fn UA_DataSetFieldContentMask_clear(arg_p: [*c]UA_DataSetFieldContentMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 65)))]);
}
pub fn UA_DataSetFieldContentMask_delete(arg_p: [*c]UA_DataSetFieldContentMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 65)))]);
}
pub fn UA_DataSetFieldContentMask_equal(arg_p1: [*c]const UA_DataSetFieldContentMask, arg_p2: [*c]const UA_DataSetFieldContentMask) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 65)))]) == UA_ORDER_EQ;
}
pub fn UA_DataSetWriterDataType_init(arg_p: [*c]UA_DataSetWriterDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DataSetWriterDataType));
}
pub fn UA_DataSetWriterDataType_new() callconv(.c) [*c]UA_DataSetWriterDataType {
    return @as([*c]UA_DataSetWriterDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 66)))]))));
}
pub fn UA_DataSetWriterDataType_copy(arg_src: [*c]const UA_DataSetWriterDataType, arg_dst: [*c]UA_DataSetWriterDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 66)))]);
}
pub fn UA_DataSetWriterDataType_deleteMembers(arg_p: [*c]UA_DataSetWriterDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 66)))]);
}
pub fn UA_DataSetWriterDataType_clear(arg_p: [*c]UA_DataSetWriterDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 66)))]);
}
pub fn UA_DataSetWriterDataType_delete(arg_p: [*c]UA_DataSetWriterDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 66)))]);
}
pub fn UA_DataSetWriterDataType_equal(arg_p1: [*c]const UA_DataSetWriterDataType, arg_p2: [*c]const UA_DataSetWriterDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 66)))]) == UA_ORDER_EQ;
}
pub fn UA_NetworkAddressDataType_init(arg_p: [*c]UA_NetworkAddressDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_NetworkAddressDataType));
}
pub fn UA_NetworkAddressDataType_new() callconv(.c) [*c]UA_NetworkAddressDataType {
    return @as([*c]UA_NetworkAddressDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 67)))]))));
}
pub fn UA_NetworkAddressDataType_copy(arg_src: [*c]const UA_NetworkAddressDataType, arg_dst: [*c]UA_NetworkAddressDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 67)))]);
}
pub fn UA_NetworkAddressDataType_deleteMembers(arg_p: [*c]UA_NetworkAddressDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 67)))]);
}
pub fn UA_NetworkAddressDataType_clear(arg_p: [*c]UA_NetworkAddressDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 67)))]);
}
pub fn UA_NetworkAddressDataType_delete(arg_p: [*c]UA_NetworkAddressDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 67)))]);
}
pub fn UA_NetworkAddressDataType_equal(arg_p1: [*c]const UA_NetworkAddressDataType, arg_p2: [*c]const UA_NetworkAddressDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 67)))]) == UA_ORDER_EQ;
}
pub fn UA_NetworkAddressUrlDataType_init(arg_p: [*c]UA_NetworkAddressUrlDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_NetworkAddressUrlDataType));
}
pub fn UA_NetworkAddressUrlDataType_new() callconv(.c) [*c]UA_NetworkAddressUrlDataType {
    return @as([*c]UA_NetworkAddressUrlDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 68)))]))));
}
pub fn UA_NetworkAddressUrlDataType_copy(arg_src: [*c]const UA_NetworkAddressUrlDataType, arg_dst: [*c]UA_NetworkAddressUrlDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 68)))]);
}
pub fn UA_NetworkAddressUrlDataType_deleteMembers(arg_p: [*c]UA_NetworkAddressUrlDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 68)))]);
}
pub fn UA_NetworkAddressUrlDataType_clear(arg_p: [*c]UA_NetworkAddressUrlDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 68)))]);
}
pub fn UA_NetworkAddressUrlDataType_delete(arg_p: [*c]UA_NetworkAddressUrlDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 68)))]);
}
pub fn UA_NetworkAddressUrlDataType_equal(arg_p1: [*c]const UA_NetworkAddressUrlDataType, arg_p2: [*c]const UA_NetworkAddressUrlDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 68)))]) == UA_ORDER_EQ;
}
pub fn UA_OverrideValueHandling_init(arg_p: [*c]UA_OverrideValueHandling) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_OverrideValueHandling));
}
pub fn UA_OverrideValueHandling_new() callconv(.c) [*c]UA_OverrideValueHandling {
    return @as([*c]UA_OverrideValueHandling, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 69)))]))));
}
pub fn UA_OverrideValueHandling_copy(arg_src: [*c]const UA_OverrideValueHandling, arg_dst: [*c]UA_OverrideValueHandling) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 69)))]);
}
pub fn UA_OverrideValueHandling_deleteMembers(arg_p: [*c]UA_OverrideValueHandling) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 69)))]);
}
pub fn UA_OverrideValueHandling_clear(arg_p: [*c]UA_OverrideValueHandling) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 69)))]);
}
pub fn UA_OverrideValueHandling_delete(arg_p: [*c]UA_OverrideValueHandling) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 69)))]);
}
pub fn UA_OverrideValueHandling_equal(arg_p1: [*c]const UA_OverrideValueHandling, arg_p2: [*c]const UA_OverrideValueHandling) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 69)))]) == UA_ORDER_EQ;
}
pub fn UA_StandaloneSubscribedDataSetRefDataType_init(arg_p: [*c]UA_StandaloneSubscribedDataSetRefDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_StandaloneSubscribedDataSetRefDataType));
}
pub fn UA_StandaloneSubscribedDataSetRefDataType_new() callconv(.c) [*c]UA_StandaloneSubscribedDataSetRefDataType {
    return @as([*c]UA_StandaloneSubscribedDataSetRefDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 70)))]))));
}
pub fn UA_StandaloneSubscribedDataSetRefDataType_copy(arg_src: [*c]const UA_StandaloneSubscribedDataSetRefDataType, arg_dst: [*c]UA_StandaloneSubscribedDataSetRefDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 70)))]);
}
pub fn UA_StandaloneSubscribedDataSetRefDataType_deleteMembers(arg_p: [*c]UA_StandaloneSubscribedDataSetRefDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 70)))]);
}
pub fn UA_StandaloneSubscribedDataSetRefDataType_clear(arg_p: [*c]UA_StandaloneSubscribedDataSetRefDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 70)))]);
}
pub fn UA_StandaloneSubscribedDataSetRefDataType_delete(arg_p: [*c]UA_StandaloneSubscribedDataSetRefDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 70)))]);
}
pub fn UA_StandaloneSubscribedDataSetRefDataType_equal(arg_p1: [*c]const UA_StandaloneSubscribedDataSetRefDataType, arg_p2: [*c]const UA_StandaloneSubscribedDataSetRefDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 70)))]) == UA_ORDER_EQ;
}
pub fn UA_DataSetOrderingType_init(arg_p: [*c]UA_DataSetOrderingType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DataSetOrderingType));
}
pub fn UA_DataSetOrderingType_new() callconv(.c) [*c]UA_DataSetOrderingType {
    return @as([*c]UA_DataSetOrderingType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 71)))]))));
}
pub fn UA_DataSetOrderingType_copy(arg_src: [*c]const UA_DataSetOrderingType, arg_dst: [*c]UA_DataSetOrderingType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 71)))]);
}
pub fn UA_DataSetOrderingType_deleteMembers(arg_p: [*c]UA_DataSetOrderingType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 71)))]);
}
pub fn UA_DataSetOrderingType_clear(arg_p: [*c]UA_DataSetOrderingType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 71)))]);
}
pub fn UA_DataSetOrderingType_delete(arg_p: [*c]UA_DataSetOrderingType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 71)))]);
}
pub fn UA_DataSetOrderingType_equal(arg_p1: [*c]const UA_DataSetOrderingType, arg_p2: [*c]const UA_DataSetOrderingType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 71)))]) == UA_ORDER_EQ;
}
pub fn UA_UadpNetworkMessageContentMask_init(arg_p: [*c]UA_UadpNetworkMessageContentMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_UadpNetworkMessageContentMask));
}
pub fn UA_UadpNetworkMessageContentMask_new() callconv(.c) [*c]UA_UadpNetworkMessageContentMask {
    return @as([*c]UA_UadpNetworkMessageContentMask, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 72)))]))));
}
pub fn UA_UadpNetworkMessageContentMask_copy(arg_src: [*c]const UA_UadpNetworkMessageContentMask, arg_dst: [*c]UA_UadpNetworkMessageContentMask) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 72)))]);
}
pub fn UA_UadpNetworkMessageContentMask_deleteMembers(arg_p: [*c]UA_UadpNetworkMessageContentMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 72)))]);
}
pub fn UA_UadpNetworkMessageContentMask_clear(arg_p: [*c]UA_UadpNetworkMessageContentMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 72)))]);
}
pub fn UA_UadpNetworkMessageContentMask_delete(arg_p: [*c]UA_UadpNetworkMessageContentMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 72)))]);
}
pub fn UA_UadpNetworkMessageContentMask_equal(arg_p1: [*c]const UA_UadpNetworkMessageContentMask, arg_p2: [*c]const UA_UadpNetworkMessageContentMask) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 72)))]) == UA_ORDER_EQ;
}
pub fn UA_UadpWriterGroupMessageDataType_init(arg_p: [*c]UA_UadpWriterGroupMessageDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_UadpWriterGroupMessageDataType));
}
pub fn UA_UadpWriterGroupMessageDataType_new() callconv(.c) [*c]UA_UadpWriterGroupMessageDataType {
    return @as([*c]UA_UadpWriterGroupMessageDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 73)))]))));
}
pub fn UA_UadpWriterGroupMessageDataType_copy(arg_src: [*c]const UA_UadpWriterGroupMessageDataType, arg_dst: [*c]UA_UadpWriterGroupMessageDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 73)))]);
}
pub fn UA_UadpWriterGroupMessageDataType_deleteMembers(arg_p: [*c]UA_UadpWriterGroupMessageDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 73)))]);
}
pub fn UA_UadpWriterGroupMessageDataType_clear(arg_p: [*c]UA_UadpWriterGroupMessageDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 73)))]);
}
pub fn UA_UadpWriterGroupMessageDataType_delete(arg_p: [*c]UA_UadpWriterGroupMessageDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 73)))]);
}
pub fn UA_UadpWriterGroupMessageDataType_equal(arg_p1: [*c]const UA_UadpWriterGroupMessageDataType, arg_p2: [*c]const UA_UadpWriterGroupMessageDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 73)))]) == UA_ORDER_EQ;
}
pub fn UA_UadpDataSetMessageContentMask_init(arg_p: [*c]UA_UadpDataSetMessageContentMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_UadpDataSetMessageContentMask));
}
pub fn UA_UadpDataSetMessageContentMask_new() callconv(.c) [*c]UA_UadpDataSetMessageContentMask {
    return @as([*c]UA_UadpDataSetMessageContentMask, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 74)))]))));
}
pub fn UA_UadpDataSetMessageContentMask_copy(arg_src: [*c]const UA_UadpDataSetMessageContentMask, arg_dst: [*c]UA_UadpDataSetMessageContentMask) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 74)))]);
}
pub fn UA_UadpDataSetMessageContentMask_deleteMembers(arg_p: [*c]UA_UadpDataSetMessageContentMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 74)))]);
}
pub fn UA_UadpDataSetMessageContentMask_clear(arg_p: [*c]UA_UadpDataSetMessageContentMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 74)))]);
}
pub fn UA_UadpDataSetMessageContentMask_delete(arg_p: [*c]UA_UadpDataSetMessageContentMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 74)))]);
}
pub fn UA_UadpDataSetMessageContentMask_equal(arg_p1: [*c]const UA_UadpDataSetMessageContentMask, arg_p2: [*c]const UA_UadpDataSetMessageContentMask) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 74)))]) == UA_ORDER_EQ;
}
pub fn UA_UadpDataSetWriterMessageDataType_init(arg_p: [*c]UA_UadpDataSetWriterMessageDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_UadpDataSetWriterMessageDataType));
}
pub fn UA_UadpDataSetWriterMessageDataType_new() callconv(.c) [*c]UA_UadpDataSetWriterMessageDataType {
    return @as([*c]UA_UadpDataSetWriterMessageDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 75)))]))));
}
pub fn UA_UadpDataSetWriterMessageDataType_copy(arg_src: [*c]const UA_UadpDataSetWriterMessageDataType, arg_dst: [*c]UA_UadpDataSetWriterMessageDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 75)))]);
}
pub fn UA_UadpDataSetWriterMessageDataType_deleteMembers(arg_p: [*c]UA_UadpDataSetWriterMessageDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 75)))]);
}
pub fn UA_UadpDataSetWriterMessageDataType_clear(arg_p: [*c]UA_UadpDataSetWriterMessageDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 75)))]);
}
pub fn UA_UadpDataSetWriterMessageDataType_delete(arg_p: [*c]UA_UadpDataSetWriterMessageDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 75)))]);
}
pub fn UA_UadpDataSetWriterMessageDataType_equal(arg_p1: [*c]const UA_UadpDataSetWriterMessageDataType, arg_p2: [*c]const UA_UadpDataSetWriterMessageDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 75)))]) == UA_ORDER_EQ;
}
pub fn UA_UadpDataSetReaderMessageDataType_init(arg_p: [*c]UA_UadpDataSetReaderMessageDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_UadpDataSetReaderMessageDataType));
}
pub fn UA_UadpDataSetReaderMessageDataType_new() callconv(.c) [*c]UA_UadpDataSetReaderMessageDataType {
    return @as([*c]UA_UadpDataSetReaderMessageDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 76)))]))));
}
pub fn UA_UadpDataSetReaderMessageDataType_copy(arg_src: [*c]const UA_UadpDataSetReaderMessageDataType, arg_dst: [*c]UA_UadpDataSetReaderMessageDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 76)))]);
}
pub fn UA_UadpDataSetReaderMessageDataType_deleteMembers(arg_p: [*c]UA_UadpDataSetReaderMessageDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 76)))]);
}
pub fn UA_UadpDataSetReaderMessageDataType_clear(arg_p: [*c]UA_UadpDataSetReaderMessageDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 76)))]);
}
pub fn UA_UadpDataSetReaderMessageDataType_delete(arg_p: [*c]UA_UadpDataSetReaderMessageDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 76)))]);
}
pub fn UA_UadpDataSetReaderMessageDataType_equal(arg_p1: [*c]const UA_UadpDataSetReaderMessageDataType, arg_p2: [*c]const UA_UadpDataSetReaderMessageDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 76)))]) == UA_ORDER_EQ;
}
pub fn UA_JsonNetworkMessageContentMask_init(arg_p: [*c]UA_JsonNetworkMessageContentMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_JsonNetworkMessageContentMask));
}
pub fn UA_JsonNetworkMessageContentMask_new() callconv(.c) [*c]UA_JsonNetworkMessageContentMask {
    return @as([*c]UA_JsonNetworkMessageContentMask, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 77)))]))));
}
pub fn UA_JsonNetworkMessageContentMask_copy(arg_src: [*c]const UA_JsonNetworkMessageContentMask, arg_dst: [*c]UA_JsonNetworkMessageContentMask) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 77)))]);
}
pub fn UA_JsonNetworkMessageContentMask_deleteMembers(arg_p: [*c]UA_JsonNetworkMessageContentMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 77)))]);
}
pub fn UA_JsonNetworkMessageContentMask_clear(arg_p: [*c]UA_JsonNetworkMessageContentMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 77)))]);
}
pub fn UA_JsonNetworkMessageContentMask_delete(arg_p: [*c]UA_JsonNetworkMessageContentMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 77)))]);
}
pub fn UA_JsonNetworkMessageContentMask_equal(arg_p1: [*c]const UA_JsonNetworkMessageContentMask, arg_p2: [*c]const UA_JsonNetworkMessageContentMask) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 77)))]) == UA_ORDER_EQ;
}
pub fn UA_JsonWriterGroupMessageDataType_init(arg_p: [*c]UA_JsonWriterGroupMessageDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_JsonWriterGroupMessageDataType));
}
pub fn UA_JsonWriterGroupMessageDataType_new() callconv(.c) [*c]UA_JsonWriterGroupMessageDataType {
    return @as([*c]UA_JsonWriterGroupMessageDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 78)))]))));
}
pub fn UA_JsonWriterGroupMessageDataType_copy(arg_src: [*c]const UA_JsonWriterGroupMessageDataType, arg_dst: [*c]UA_JsonWriterGroupMessageDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 78)))]);
}
pub fn UA_JsonWriterGroupMessageDataType_deleteMembers(arg_p: [*c]UA_JsonWriterGroupMessageDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 78)))]);
}
pub fn UA_JsonWriterGroupMessageDataType_clear(arg_p: [*c]UA_JsonWriterGroupMessageDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 78)))]);
}
pub fn UA_JsonWriterGroupMessageDataType_delete(arg_p: [*c]UA_JsonWriterGroupMessageDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 78)))]);
}
pub fn UA_JsonWriterGroupMessageDataType_equal(arg_p1: [*c]const UA_JsonWriterGroupMessageDataType, arg_p2: [*c]const UA_JsonWriterGroupMessageDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 78)))]) == UA_ORDER_EQ;
}
pub fn UA_JsonDataSetMessageContentMask_init(arg_p: [*c]UA_JsonDataSetMessageContentMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_JsonDataSetMessageContentMask));
}
pub fn UA_JsonDataSetMessageContentMask_new() callconv(.c) [*c]UA_JsonDataSetMessageContentMask {
    return @as([*c]UA_JsonDataSetMessageContentMask, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 79)))]))));
}
pub fn UA_JsonDataSetMessageContentMask_copy(arg_src: [*c]const UA_JsonDataSetMessageContentMask, arg_dst: [*c]UA_JsonDataSetMessageContentMask) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 79)))]);
}
pub fn UA_JsonDataSetMessageContentMask_deleteMembers(arg_p: [*c]UA_JsonDataSetMessageContentMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 79)))]);
}
pub fn UA_JsonDataSetMessageContentMask_clear(arg_p: [*c]UA_JsonDataSetMessageContentMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 79)))]);
}
pub fn UA_JsonDataSetMessageContentMask_delete(arg_p: [*c]UA_JsonDataSetMessageContentMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 79)))]);
}
pub fn UA_JsonDataSetMessageContentMask_equal(arg_p1: [*c]const UA_JsonDataSetMessageContentMask, arg_p2: [*c]const UA_JsonDataSetMessageContentMask) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 79)))]) == UA_ORDER_EQ;
}
pub fn UA_JsonDataSetWriterMessageDataType_init(arg_p: [*c]UA_JsonDataSetWriterMessageDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_JsonDataSetWriterMessageDataType));
}
pub fn UA_JsonDataSetWriterMessageDataType_new() callconv(.c) [*c]UA_JsonDataSetWriterMessageDataType {
    return @as([*c]UA_JsonDataSetWriterMessageDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 80)))]))));
}
pub fn UA_JsonDataSetWriterMessageDataType_copy(arg_src: [*c]const UA_JsonDataSetWriterMessageDataType, arg_dst: [*c]UA_JsonDataSetWriterMessageDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 80)))]);
}
pub fn UA_JsonDataSetWriterMessageDataType_deleteMembers(arg_p: [*c]UA_JsonDataSetWriterMessageDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 80)))]);
}
pub fn UA_JsonDataSetWriterMessageDataType_clear(arg_p: [*c]UA_JsonDataSetWriterMessageDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 80)))]);
}
pub fn UA_JsonDataSetWriterMessageDataType_delete(arg_p: [*c]UA_JsonDataSetWriterMessageDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 80)))]);
}
pub fn UA_JsonDataSetWriterMessageDataType_equal(arg_p1: [*c]const UA_JsonDataSetWriterMessageDataType, arg_p2: [*c]const UA_JsonDataSetWriterMessageDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 80)))]) == UA_ORDER_EQ;
}
pub fn UA_JsonDataSetReaderMessageDataType_init(arg_p: [*c]UA_JsonDataSetReaderMessageDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_JsonDataSetReaderMessageDataType));
}
pub fn UA_JsonDataSetReaderMessageDataType_new() callconv(.c) [*c]UA_JsonDataSetReaderMessageDataType {
    return @as([*c]UA_JsonDataSetReaderMessageDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 81)))]))));
}
pub fn UA_JsonDataSetReaderMessageDataType_copy(arg_src: [*c]const UA_JsonDataSetReaderMessageDataType, arg_dst: [*c]UA_JsonDataSetReaderMessageDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 81)))]);
}
pub fn UA_JsonDataSetReaderMessageDataType_deleteMembers(arg_p: [*c]UA_JsonDataSetReaderMessageDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 81)))]);
}
pub fn UA_JsonDataSetReaderMessageDataType_clear(arg_p: [*c]UA_JsonDataSetReaderMessageDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 81)))]);
}
pub fn UA_JsonDataSetReaderMessageDataType_delete(arg_p: [*c]UA_JsonDataSetReaderMessageDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 81)))]);
}
pub fn UA_JsonDataSetReaderMessageDataType_equal(arg_p1: [*c]const UA_JsonDataSetReaderMessageDataType, arg_p2: [*c]const UA_JsonDataSetReaderMessageDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 81)))]) == UA_ORDER_EQ;
}
pub fn UA_TransmitQosPriorityDataType_init(arg_p: [*c]UA_TransmitQosPriorityDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_TransmitQosPriorityDataType));
}
pub fn UA_TransmitQosPriorityDataType_new() callconv(.c) [*c]UA_TransmitQosPriorityDataType {
    return @as([*c]UA_TransmitQosPriorityDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 82)))]))));
}
pub fn UA_TransmitQosPriorityDataType_copy(arg_src: [*c]const UA_TransmitQosPriorityDataType, arg_dst: [*c]UA_TransmitQosPriorityDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 82)))]);
}
pub fn UA_TransmitQosPriorityDataType_deleteMembers(arg_p: [*c]UA_TransmitQosPriorityDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 82)))]);
}
pub fn UA_TransmitQosPriorityDataType_clear(arg_p: [*c]UA_TransmitQosPriorityDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 82)))]);
}
pub fn UA_TransmitQosPriorityDataType_delete(arg_p: [*c]UA_TransmitQosPriorityDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 82)))]);
}
pub fn UA_TransmitQosPriorityDataType_equal(arg_p1: [*c]const UA_TransmitQosPriorityDataType, arg_p2: [*c]const UA_TransmitQosPriorityDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 82)))]) == UA_ORDER_EQ;
}
pub fn UA_ReceiveQosPriorityDataType_init(arg_p: [*c]UA_ReceiveQosPriorityDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ReceiveQosPriorityDataType));
}
pub fn UA_ReceiveQosPriorityDataType_new() callconv(.c) [*c]UA_ReceiveQosPriorityDataType {
    return @as([*c]UA_ReceiveQosPriorityDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 83)))]))));
}
pub fn UA_ReceiveQosPriorityDataType_copy(arg_src: [*c]const UA_ReceiveQosPriorityDataType, arg_dst: [*c]UA_ReceiveQosPriorityDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 83)))]);
}
pub fn UA_ReceiveQosPriorityDataType_deleteMembers(arg_p: [*c]UA_ReceiveQosPriorityDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 83)))]);
}
pub fn UA_ReceiveQosPriorityDataType_clear(arg_p: [*c]UA_ReceiveQosPriorityDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 83)))]);
}
pub fn UA_ReceiveQosPriorityDataType_delete(arg_p: [*c]UA_ReceiveQosPriorityDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 83)))]);
}
pub fn UA_ReceiveQosPriorityDataType_equal(arg_p1: [*c]const UA_ReceiveQosPriorityDataType, arg_p2: [*c]const UA_ReceiveQosPriorityDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 83)))]) == UA_ORDER_EQ;
}
pub fn UA_DatagramConnectionTransportDataType_init(arg_p: [*c]UA_DatagramConnectionTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DatagramConnectionTransportDataType));
}
pub fn UA_DatagramConnectionTransportDataType_new() callconv(.c) [*c]UA_DatagramConnectionTransportDataType {
    return @as([*c]UA_DatagramConnectionTransportDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 84)))]))));
}
pub fn UA_DatagramConnectionTransportDataType_copy(arg_src: [*c]const UA_DatagramConnectionTransportDataType, arg_dst: [*c]UA_DatagramConnectionTransportDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 84)))]);
}
pub fn UA_DatagramConnectionTransportDataType_deleteMembers(arg_p: [*c]UA_DatagramConnectionTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 84)))]);
}
pub fn UA_DatagramConnectionTransportDataType_clear(arg_p: [*c]UA_DatagramConnectionTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 84)))]);
}
pub fn UA_DatagramConnectionTransportDataType_delete(arg_p: [*c]UA_DatagramConnectionTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 84)))]);
}
pub fn UA_DatagramConnectionTransportDataType_equal(arg_p1: [*c]const UA_DatagramConnectionTransportDataType, arg_p2: [*c]const UA_DatagramConnectionTransportDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 84)))]) == UA_ORDER_EQ;
}
pub fn UA_DatagramConnectionTransport2DataType_init(arg_p: [*c]UA_DatagramConnectionTransport2DataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DatagramConnectionTransport2DataType));
}
pub fn UA_DatagramConnectionTransport2DataType_new() callconv(.c) [*c]UA_DatagramConnectionTransport2DataType {
    return @as([*c]UA_DatagramConnectionTransport2DataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 85)))]))));
}
pub fn UA_DatagramConnectionTransport2DataType_copy(arg_src: [*c]const UA_DatagramConnectionTransport2DataType, arg_dst: [*c]UA_DatagramConnectionTransport2DataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 85)))]);
}
pub fn UA_DatagramConnectionTransport2DataType_deleteMembers(arg_p: [*c]UA_DatagramConnectionTransport2DataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 85)))]);
}
pub fn UA_DatagramConnectionTransport2DataType_clear(arg_p: [*c]UA_DatagramConnectionTransport2DataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 85)))]);
}
pub fn UA_DatagramConnectionTransport2DataType_delete(arg_p: [*c]UA_DatagramConnectionTransport2DataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 85)))]);
}
pub fn UA_DatagramConnectionTransport2DataType_equal(arg_p1: [*c]const UA_DatagramConnectionTransport2DataType, arg_p2: [*c]const UA_DatagramConnectionTransport2DataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 85)))]) == UA_ORDER_EQ;
}
pub fn UA_DatagramWriterGroupTransportDataType_init(arg_p: [*c]UA_DatagramWriterGroupTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DatagramWriterGroupTransportDataType));
}
pub fn UA_DatagramWriterGroupTransportDataType_new() callconv(.c) [*c]UA_DatagramWriterGroupTransportDataType {
    return @as([*c]UA_DatagramWriterGroupTransportDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 86)))]))));
}
pub fn UA_DatagramWriterGroupTransportDataType_copy(arg_src: [*c]const UA_DatagramWriterGroupTransportDataType, arg_dst: [*c]UA_DatagramWriterGroupTransportDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 86)))]);
}
pub fn UA_DatagramWriterGroupTransportDataType_deleteMembers(arg_p: [*c]UA_DatagramWriterGroupTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 86)))]);
}
pub fn UA_DatagramWriterGroupTransportDataType_clear(arg_p: [*c]UA_DatagramWriterGroupTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 86)))]);
}
pub fn UA_DatagramWriterGroupTransportDataType_delete(arg_p: [*c]UA_DatagramWriterGroupTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 86)))]);
}
pub fn UA_DatagramWriterGroupTransportDataType_equal(arg_p1: [*c]const UA_DatagramWriterGroupTransportDataType, arg_p2: [*c]const UA_DatagramWriterGroupTransportDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 86)))]) == UA_ORDER_EQ;
}
pub fn UA_DatagramWriterGroupTransport2DataType_init(arg_p: [*c]UA_DatagramWriterGroupTransport2DataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DatagramWriterGroupTransport2DataType));
}
pub fn UA_DatagramWriterGroupTransport2DataType_new() callconv(.c) [*c]UA_DatagramWriterGroupTransport2DataType {
    return @as([*c]UA_DatagramWriterGroupTransport2DataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 87)))]))));
}
pub fn UA_DatagramWriterGroupTransport2DataType_copy(arg_src: [*c]const UA_DatagramWriterGroupTransport2DataType, arg_dst: [*c]UA_DatagramWriterGroupTransport2DataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 87)))]);
}
pub fn UA_DatagramWriterGroupTransport2DataType_deleteMembers(arg_p: [*c]UA_DatagramWriterGroupTransport2DataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 87)))]);
}
pub fn UA_DatagramWriterGroupTransport2DataType_clear(arg_p: [*c]UA_DatagramWriterGroupTransport2DataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 87)))]);
}
pub fn UA_DatagramWriterGroupTransport2DataType_delete(arg_p: [*c]UA_DatagramWriterGroupTransport2DataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 87)))]);
}
pub fn UA_DatagramWriterGroupTransport2DataType_equal(arg_p1: [*c]const UA_DatagramWriterGroupTransport2DataType, arg_p2: [*c]const UA_DatagramWriterGroupTransport2DataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 87)))]) == UA_ORDER_EQ;
}
pub fn UA_DatagramDataSetReaderTransportDataType_init(arg_p: [*c]UA_DatagramDataSetReaderTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DatagramDataSetReaderTransportDataType));
}
pub fn UA_DatagramDataSetReaderTransportDataType_new() callconv(.c) [*c]UA_DatagramDataSetReaderTransportDataType {
    return @as([*c]UA_DatagramDataSetReaderTransportDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 88)))]))));
}
pub fn UA_DatagramDataSetReaderTransportDataType_copy(arg_src: [*c]const UA_DatagramDataSetReaderTransportDataType, arg_dst: [*c]UA_DatagramDataSetReaderTransportDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 88)))]);
}
pub fn UA_DatagramDataSetReaderTransportDataType_deleteMembers(arg_p: [*c]UA_DatagramDataSetReaderTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 88)))]);
}
pub fn UA_DatagramDataSetReaderTransportDataType_clear(arg_p: [*c]UA_DatagramDataSetReaderTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 88)))]);
}
pub fn UA_DatagramDataSetReaderTransportDataType_delete(arg_p: [*c]UA_DatagramDataSetReaderTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 88)))]);
}
pub fn UA_DatagramDataSetReaderTransportDataType_equal(arg_p1: [*c]const UA_DatagramDataSetReaderTransportDataType, arg_p2: [*c]const UA_DatagramDataSetReaderTransportDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 88)))]) == UA_ORDER_EQ;
}
pub fn UA_BrokerConnectionTransportDataType_init(arg_p: [*c]UA_BrokerConnectionTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_BrokerConnectionTransportDataType));
}
pub fn UA_BrokerConnectionTransportDataType_new() callconv(.c) [*c]UA_BrokerConnectionTransportDataType {
    return @as([*c]UA_BrokerConnectionTransportDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 89)))]))));
}
pub fn UA_BrokerConnectionTransportDataType_copy(arg_src: [*c]const UA_BrokerConnectionTransportDataType, arg_dst: [*c]UA_BrokerConnectionTransportDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 89)))]);
}
pub fn UA_BrokerConnectionTransportDataType_deleteMembers(arg_p: [*c]UA_BrokerConnectionTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 89)))]);
}
pub fn UA_BrokerConnectionTransportDataType_clear(arg_p: [*c]UA_BrokerConnectionTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 89)))]);
}
pub fn UA_BrokerConnectionTransportDataType_delete(arg_p: [*c]UA_BrokerConnectionTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 89)))]);
}
pub fn UA_BrokerConnectionTransportDataType_equal(arg_p1: [*c]const UA_BrokerConnectionTransportDataType, arg_p2: [*c]const UA_BrokerConnectionTransportDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 89)))]) == UA_ORDER_EQ;
}
pub fn UA_BrokerTransportQualityOfService_init(arg_p: [*c]UA_BrokerTransportQualityOfService) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_BrokerTransportQualityOfService));
}
pub fn UA_BrokerTransportQualityOfService_new() callconv(.c) [*c]UA_BrokerTransportQualityOfService {
    return @as([*c]UA_BrokerTransportQualityOfService, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 90)))]))));
}
pub fn UA_BrokerTransportQualityOfService_copy(arg_src: [*c]const UA_BrokerTransportQualityOfService, arg_dst: [*c]UA_BrokerTransportQualityOfService) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 90)))]);
}
pub fn UA_BrokerTransportQualityOfService_deleteMembers(arg_p: [*c]UA_BrokerTransportQualityOfService) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 90)))]);
}
pub fn UA_BrokerTransportQualityOfService_clear(arg_p: [*c]UA_BrokerTransportQualityOfService) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 90)))]);
}
pub fn UA_BrokerTransportQualityOfService_delete(arg_p: [*c]UA_BrokerTransportQualityOfService) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 90)))]);
}
pub fn UA_BrokerTransportQualityOfService_equal(arg_p1: [*c]const UA_BrokerTransportQualityOfService, arg_p2: [*c]const UA_BrokerTransportQualityOfService) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 90)))]) == UA_ORDER_EQ;
}
pub fn UA_BrokerWriterGroupTransportDataType_init(arg_p: [*c]UA_BrokerWriterGroupTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_BrokerWriterGroupTransportDataType));
}
pub fn UA_BrokerWriterGroupTransportDataType_new() callconv(.c) [*c]UA_BrokerWriterGroupTransportDataType {
    return @as([*c]UA_BrokerWriterGroupTransportDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 91)))]))));
}
pub fn UA_BrokerWriterGroupTransportDataType_copy(arg_src: [*c]const UA_BrokerWriterGroupTransportDataType, arg_dst: [*c]UA_BrokerWriterGroupTransportDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 91)))]);
}
pub fn UA_BrokerWriterGroupTransportDataType_deleteMembers(arg_p: [*c]UA_BrokerWriterGroupTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 91)))]);
}
pub fn UA_BrokerWriterGroupTransportDataType_clear(arg_p: [*c]UA_BrokerWriterGroupTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 91)))]);
}
pub fn UA_BrokerWriterGroupTransportDataType_delete(arg_p: [*c]UA_BrokerWriterGroupTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 91)))]);
}
pub fn UA_BrokerWriterGroupTransportDataType_equal(arg_p1: [*c]const UA_BrokerWriterGroupTransportDataType, arg_p2: [*c]const UA_BrokerWriterGroupTransportDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 91)))]) == UA_ORDER_EQ;
}
pub fn UA_BrokerDataSetWriterTransportDataType_init(arg_p: [*c]UA_BrokerDataSetWriterTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_BrokerDataSetWriterTransportDataType));
}
pub fn UA_BrokerDataSetWriterTransportDataType_new() callconv(.c) [*c]UA_BrokerDataSetWriterTransportDataType {
    return @as([*c]UA_BrokerDataSetWriterTransportDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 92)))]))));
}
pub fn UA_BrokerDataSetWriterTransportDataType_copy(arg_src: [*c]const UA_BrokerDataSetWriterTransportDataType, arg_dst: [*c]UA_BrokerDataSetWriterTransportDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 92)))]);
}
pub fn UA_BrokerDataSetWriterTransportDataType_deleteMembers(arg_p: [*c]UA_BrokerDataSetWriterTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 92)))]);
}
pub fn UA_BrokerDataSetWriterTransportDataType_clear(arg_p: [*c]UA_BrokerDataSetWriterTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 92)))]);
}
pub fn UA_BrokerDataSetWriterTransportDataType_delete(arg_p: [*c]UA_BrokerDataSetWriterTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 92)))]);
}
pub fn UA_BrokerDataSetWriterTransportDataType_equal(arg_p1: [*c]const UA_BrokerDataSetWriterTransportDataType, arg_p2: [*c]const UA_BrokerDataSetWriterTransportDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 92)))]) == UA_ORDER_EQ;
}
pub fn UA_BrokerDataSetReaderTransportDataType_init(arg_p: [*c]UA_BrokerDataSetReaderTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_BrokerDataSetReaderTransportDataType));
}
pub fn UA_BrokerDataSetReaderTransportDataType_new() callconv(.c) [*c]UA_BrokerDataSetReaderTransportDataType {
    return @as([*c]UA_BrokerDataSetReaderTransportDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 93)))]))));
}
pub fn UA_BrokerDataSetReaderTransportDataType_copy(arg_src: [*c]const UA_BrokerDataSetReaderTransportDataType, arg_dst: [*c]UA_BrokerDataSetReaderTransportDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 93)))]);
}
pub fn UA_BrokerDataSetReaderTransportDataType_deleteMembers(arg_p: [*c]UA_BrokerDataSetReaderTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 93)))]);
}
pub fn UA_BrokerDataSetReaderTransportDataType_clear(arg_p: [*c]UA_BrokerDataSetReaderTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 93)))]);
}
pub fn UA_BrokerDataSetReaderTransportDataType_delete(arg_p: [*c]UA_BrokerDataSetReaderTransportDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 93)))]);
}
pub fn UA_BrokerDataSetReaderTransportDataType_equal(arg_p1: [*c]const UA_BrokerDataSetReaderTransportDataType, arg_p2: [*c]const UA_BrokerDataSetReaderTransportDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 93)))]) == UA_ORDER_EQ;
}
pub fn UA_PubSubConfigurationRefMask_init(arg_p: [*c]UA_PubSubConfigurationRefMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_PubSubConfigurationRefMask));
}
pub fn UA_PubSubConfigurationRefMask_new() callconv(.c) [*c]UA_PubSubConfigurationRefMask {
    return @as([*c]UA_PubSubConfigurationRefMask, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 94)))]))));
}
pub fn UA_PubSubConfigurationRefMask_copy(arg_src: [*c]const UA_PubSubConfigurationRefMask, arg_dst: [*c]UA_PubSubConfigurationRefMask) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 94)))]);
}
pub fn UA_PubSubConfigurationRefMask_deleteMembers(arg_p: [*c]UA_PubSubConfigurationRefMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 94)))]);
}
pub fn UA_PubSubConfigurationRefMask_clear(arg_p: [*c]UA_PubSubConfigurationRefMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 94)))]);
}
pub fn UA_PubSubConfigurationRefMask_delete(arg_p: [*c]UA_PubSubConfigurationRefMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 94)))]);
}
pub fn UA_PubSubConfigurationRefMask_equal(arg_p1: [*c]const UA_PubSubConfigurationRefMask, arg_p2: [*c]const UA_PubSubConfigurationRefMask) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 94)))]) == UA_ORDER_EQ;
}
pub fn UA_PubSubConfigurationRefDataType_init(arg_p: [*c]UA_PubSubConfigurationRefDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_PubSubConfigurationRefDataType));
}
pub fn UA_PubSubConfigurationRefDataType_new() callconv(.c) [*c]UA_PubSubConfigurationRefDataType {
    return @as([*c]UA_PubSubConfigurationRefDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 95)))]))));
}
pub fn UA_PubSubConfigurationRefDataType_copy(arg_src: [*c]const UA_PubSubConfigurationRefDataType, arg_dst: [*c]UA_PubSubConfigurationRefDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 95)))]);
}
pub fn UA_PubSubConfigurationRefDataType_deleteMembers(arg_p: [*c]UA_PubSubConfigurationRefDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 95)))]);
}
pub fn UA_PubSubConfigurationRefDataType_clear(arg_p: [*c]UA_PubSubConfigurationRefDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 95)))]);
}
pub fn UA_PubSubConfigurationRefDataType_delete(arg_p: [*c]UA_PubSubConfigurationRefDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 95)))]);
}
pub fn UA_PubSubConfigurationRefDataType_equal(arg_p1: [*c]const UA_PubSubConfigurationRefDataType, arg_p2: [*c]const UA_PubSubConfigurationRefDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 95)))]) == UA_ORDER_EQ;
}
pub fn UA_PubSubConfigurationValueDataType_init(arg_p: [*c]UA_PubSubConfigurationValueDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_PubSubConfigurationValueDataType));
}
pub fn UA_PubSubConfigurationValueDataType_new() callconv(.c) [*c]UA_PubSubConfigurationValueDataType {
    return @as([*c]UA_PubSubConfigurationValueDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 96)))]))));
}
pub fn UA_PubSubConfigurationValueDataType_copy(arg_src: [*c]const UA_PubSubConfigurationValueDataType, arg_dst: [*c]UA_PubSubConfigurationValueDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 96)))]);
}
pub fn UA_PubSubConfigurationValueDataType_deleteMembers(arg_p: [*c]UA_PubSubConfigurationValueDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 96)))]);
}
pub fn UA_PubSubConfigurationValueDataType_clear(arg_p: [*c]UA_PubSubConfigurationValueDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 96)))]);
}
pub fn UA_PubSubConfigurationValueDataType_delete(arg_p: [*c]UA_PubSubConfigurationValueDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 96)))]);
}
pub fn UA_PubSubConfigurationValueDataType_equal(arg_p1: [*c]const UA_PubSubConfigurationValueDataType, arg_p2: [*c]const UA_PubSubConfigurationValueDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 96)))]) == UA_ORDER_EQ;
}
pub fn UA_DiagnosticsLevel_init(arg_p: [*c]UA_DiagnosticsLevel) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DiagnosticsLevel));
}
pub fn UA_DiagnosticsLevel_new() callconv(.c) [*c]UA_DiagnosticsLevel {
    return @as([*c]UA_DiagnosticsLevel, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 97)))]))));
}
pub fn UA_DiagnosticsLevel_copy(arg_src: [*c]const UA_DiagnosticsLevel, arg_dst: [*c]UA_DiagnosticsLevel) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 97)))]);
}
pub fn UA_DiagnosticsLevel_deleteMembers(arg_p: [*c]UA_DiagnosticsLevel) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 97)))]);
}
pub fn UA_DiagnosticsLevel_clear(arg_p: [*c]UA_DiagnosticsLevel) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 97)))]);
}
pub fn UA_DiagnosticsLevel_delete(arg_p: [*c]UA_DiagnosticsLevel) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 97)))]);
}
pub fn UA_DiagnosticsLevel_equal(arg_p1: [*c]const UA_DiagnosticsLevel, arg_p2: [*c]const UA_DiagnosticsLevel) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 97)))]) == UA_ORDER_EQ;
}
pub fn UA_PubSubDiagnosticsCounterClassification_init(arg_p: [*c]UA_PubSubDiagnosticsCounterClassification) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_PubSubDiagnosticsCounterClassification));
}
pub fn UA_PubSubDiagnosticsCounterClassification_new() callconv(.c) [*c]UA_PubSubDiagnosticsCounterClassification {
    return @as([*c]UA_PubSubDiagnosticsCounterClassification, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 98)))]))));
}
pub fn UA_PubSubDiagnosticsCounterClassification_copy(arg_src: [*c]const UA_PubSubDiagnosticsCounterClassification, arg_dst: [*c]UA_PubSubDiagnosticsCounterClassification) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 98)))]);
}
pub fn UA_PubSubDiagnosticsCounterClassification_deleteMembers(arg_p: [*c]UA_PubSubDiagnosticsCounterClassification) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 98)))]);
}
pub fn UA_PubSubDiagnosticsCounterClassification_clear(arg_p: [*c]UA_PubSubDiagnosticsCounterClassification) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 98)))]);
}
pub fn UA_PubSubDiagnosticsCounterClassification_delete(arg_p: [*c]UA_PubSubDiagnosticsCounterClassification) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 98)))]);
}
pub fn UA_PubSubDiagnosticsCounterClassification_equal(arg_p1: [*c]const UA_PubSubDiagnosticsCounterClassification, arg_p2: [*c]const UA_PubSubDiagnosticsCounterClassification) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 98)))]) == UA_ORDER_EQ;
}
pub fn UA_AliasNameDataType_init(arg_p: [*c]UA_AliasNameDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_AliasNameDataType));
}
pub fn UA_AliasNameDataType_new() callconv(.c) [*c]UA_AliasNameDataType {
    return @as([*c]UA_AliasNameDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 99)))]))));
}
pub fn UA_AliasNameDataType_copy(arg_src: [*c]const UA_AliasNameDataType, arg_dst: [*c]UA_AliasNameDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 99)))]);
}
pub fn UA_AliasNameDataType_deleteMembers(arg_p: [*c]UA_AliasNameDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 99)))]);
}
pub fn UA_AliasNameDataType_clear(arg_p: [*c]UA_AliasNameDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 99)))]);
}
pub fn UA_AliasNameDataType_delete(arg_p: [*c]UA_AliasNameDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 99)))]);
}
pub fn UA_AliasNameDataType_equal(arg_p1: [*c]const UA_AliasNameDataType, arg_p2: [*c]const UA_AliasNameDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 99)))]) == UA_ORDER_EQ;
}
pub fn UA_PasswordOptionsMask_init(arg_p: [*c]UA_PasswordOptionsMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_PasswordOptionsMask));
}
pub fn UA_PasswordOptionsMask_new() callconv(.c) [*c]UA_PasswordOptionsMask {
    return @as([*c]UA_PasswordOptionsMask, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 100)))]))));
}
pub fn UA_PasswordOptionsMask_copy(arg_src: [*c]const UA_PasswordOptionsMask, arg_dst: [*c]UA_PasswordOptionsMask) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 100)))]);
}
pub fn UA_PasswordOptionsMask_deleteMembers(arg_p: [*c]UA_PasswordOptionsMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 100)))]);
}
pub fn UA_PasswordOptionsMask_clear(arg_p: [*c]UA_PasswordOptionsMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 100)))]);
}
pub fn UA_PasswordOptionsMask_delete(arg_p: [*c]UA_PasswordOptionsMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 100)))]);
}
pub fn UA_PasswordOptionsMask_equal(arg_p1: [*c]const UA_PasswordOptionsMask, arg_p2: [*c]const UA_PasswordOptionsMask) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 100)))]) == UA_ORDER_EQ;
}
pub fn UA_UserConfigurationMask_init(arg_p: [*c]UA_UserConfigurationMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_UserConfigurationMask));
}
pub fn UA_UserConfigurationMask_new() callconv(.c) [*c]UA_UserConfigurationMask {
    return @as([*c]UA_UserConfigurationMask, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 101)))]))));
}
pub fn UA_UserConfigurationMask_copy(arg_src: [*c]const UA_UserConfigurationMask, arg_dst: [*c]UA_UserConfigurationMask) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 101)))]);
}
pub fn UA_UserConfigurationMask_deleteMembers(arg_p: [*c]UA_UserConfigurationMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 101)))]);
}
pub fn UA_UserConfigurationMask_clear(arg_p: [*c]UA_UserConfigurationMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 101)))]);
}
pub fn UA_UserConfigurationMask_delete(arg_p: [*c]UA_UserConfigurationMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 101)))]);
}
pub fn UA_UserConfigurationMask_equal(arg_p1: [*c]const UA_UserConfigurationMask, arg_p2: [*c]const UA_UserConfigurationMask) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 101)))]) == UA_ORDER_EQ;
}
pub fn UA_UserManagementDataType_init(arg_p: [*c]UA_UserManagementDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_UserManagementDataType));
}
pub fn UA_UserManagementDataType_new() callconv(.c) [*c]UA_UserManagementDataType {
    return @as([*c]UA_UserManagementDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 102)))]))));
}
pub fn UA_UserManagementDataType_copy(arg_src: [*c]const UA_UserManagementDataType, arg_dst: [*c]UA_UserManagementDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 102)))]);
}
pub fn UA_UserManagementDataType_deleteMembers(arg_p: [*c]UA_UserManagementDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 102)))]);
}
pub fn UA_UserManagementDataType_clear(arg_p: [*c]UA_UserManagementDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 102)))]);
}
pub fn UA_UserManagementDataType_delete(arg_p: [*c]UA_UserManagementDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 102)))]);
}
pub fn UA_UserManagementDataType_equal(arg_p1: [*c]const UA_UserManagementDataType, arg_p2: [*c]const UA_UserManagementDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 102)))]) == UA_ORDER_EQ;
}
pub fn UA_EncodedTicket_init(arg_p: [*c]UA_EncodedTicket) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_EncodedTicket));
}
pub fn UA_EncodedTicket_new() callconv(.c) [*c]UA_EncodedTicket {
    return @as([*c]UA_EncodedTicket, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 103)))]))));
}
pub fn UA_EncodedTicket_copy(arg_src: [*c]const UA_EncodedTicket, arg_dst: [*c]UA_EncodedTicket) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 103)))]);
}
pub fn UA_EncodedTicket_deleteMembers(arg_p: [*c]UA_EncodedTicket) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 103)))]);
}
pub fn UA_EncodedTicket_clear(arg_p: [*c]UA_EncodedTicket) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 103)))]);
}
pub fn UA_EncodedTicket_delete(arg_p: [*c]UA_EncodedTicket) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 103)))]);
}
pub fn UA_EncodedTicket_equal(arg_p1: [*c]const UA_EncodedTicket, arg_p2: [*c]const UA_EncodedTicket) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 103)))]) == UA_ORDER_EQ;
}
pub fn UA_Duplex_init(arg_p: [*c]UA_Duplex) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_Duplex));
}
pub fn UA_Duplex_new() callconv(.c) [*c]UA_Duplex {
    return @as([*c]UA_Duplex, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 104)))]))));
}
pub fn UA_Duplex_copy(arg_src: [*c]const UA_Duplex, arg_dst: [*c]UA_Duplex) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 104)))]);
}
pub fn UA_Duplex_deleteMembers(arg_p: [*c]UA_Duplex) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 104)))]);
}
pub fn UA_Duplex_clear(arg_p: [*c]UA_Duplex) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 104)))]);
}
pub fn UA_Duplex_delete(arg_p: [*c]UA_Duplex) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 104)))]);
}
pub fn UA_Duplex_equal(arg_p1: [*c]const UA_Duplex, arg_p2: [*c]const UA_Duplex) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 104)))]) == UA_ORDER_EQ;
}
pub fn UA_InterfaceAdminStatus_init(arg_p: [*c]UA_InterfaceAdminStatus) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_InterfaceAdminStatus));
}
pub fn UA_InterfaceAdminStatus_new() callconv(.c) [*c]UA_InterfaceAdminStatus {
    return @as([*c]UA_InterfaceAdminStatus, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 105)))]))));
}
pub fn UA_InterfaceAdminStatus_copy(arg_src: [*c]const UA_InterfaceAdminStatus, arg_dst: [*c]UA_InterfaceAdminStatus) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 105)))]);
}
pub fn UA_InterfaceAdminStatus_deleteMembers(arg_p: [*c]UA_InterfaceAdminStatus) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 105)))]);
}
pub fn UA_InterfaceAdminStatus_clear(arg_p: [*c]UA_InterfaceAdminStatus) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 105)))]);
}
pub fn UA_InterfaceAdminStatus_delete(arg_p: [*c]UA_InterfaceAdminStatus) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 105)))]);
}
pub fn UA_InterfaceAdminStatus_equal(arg_p1: [*c]const UA_InterfaceAdminStatus, arg_p2: [*c]const UA_InterfaceAdminStatus) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 105)))]) == UA_ORDER_EQ;
}
pub fn UA_InterfaceOperStatus_init(arg_p: [*c]UA_InterfaceOperStatus) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_InterfaceOperStatus));
}
pub fn UA_InterfaceOperStatus_new() callconv(.c) [*c]UA_InterfaceOperStatus {
    return @as([*c]UA_InterfaceOperStatus, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 106)))]))));
}
pub fn UA_InterfaceOperStatus_copy(arg_src: [*c]const UA_InterfaceOperStatus, arg_dst: [*c]UA_InterfaceOperStatus) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 106)))]);
}
pub fn UA_InterfaceOperStatus_deleteMembers(arg_p: [*c]UA_InterfaceOperStatus) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 106)))]);
}
pub fn UA_InterfaceOperStatus_clear(arg_p: [*c]UA_InterfaceOperStatus) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 106)))]);
}
pub fn UA_InterfaceOperStatus_delete(arg_p: [*c]UA_InterfaceOperStatus) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 106)))]);
}
pub fn UA_InterfaceOperStatus_equal(arg_p1: [*c]const UA_InterfaceOperStatus, arg_p2: [*c]const UA_InterfaceOperStatus) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 106)))]) == UA_ORDER_EQ;
}
pub fn UA_NegotiationStatus_init(arg_p: [*c]UA_NegotiationStatus) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_NegotiationStatus));
}
pub fn UA_NegotiationStatus_new() callconv(.c) [*c]UA_NegotiationStatus {
    return @as([*c]UA_NegotiationStatus, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 107)))]))));
}
pub fn UA_NegotiationStatus_copy(arg_src: [*c]const UA_NegotiationStatus, arg_dst: [*c]UA_NegotiationStatus) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 107)))]);
}
pub fn UA_NegotiationStatus_deleteMembers(arg_p: [*c]UA_NegotiationStatus) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 107)))]);
}
pub fn UA_NegotiationStatus_clear(arg_p: [*c]UA_NegotiationStatus) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 107)))]);
}
pub fn UA_NegotiationStatus_delete(arg_p: [*c]UA_NegotiationStatus) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 107)))]);
}
pub fn UA_NegotiationStatus_equal(arg_p1: [*c]const UA_NegotiationStatus, arg_p2: [*c]const UA_NegotiationStatus) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 107)))]) == UA_ORDER_EQ;
}
pub fn UA_TsnFailureCode_init(arg_p: [*c]UA_TsnFailureCode) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_TsnFailureCode));
}
pub fn UA_TsnFailureCode_new() callconv(.c) [*c]UA_TsnFailureCode {
    return @as([*c]UA_TsnFailureCode, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 108)))]))));
}
pub fn UA_TsnFailureCode_copy(arg_src: [*c]const UA_TsnFailureCode, arg_dst: [*c]UA_TsnFailureCode) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 108)))]);
}
pub fn UA_TsnFailureCode_deleteMembers(arg_p: [*c]UA_TsnFailureCode) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 108)))]);
}
pub fn UA_TsnFailureCode_clear(arg_p: [*c]UA_TsnFailureCode) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 108)))]);
}
pub fn UA_TsnFailureCode_delete(arg_p: [*c]UA_TsnFailureCode) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 108)))]);
}
pub fn UA_TsnFailureCode_equal(arg_p1: [*c]const UA_TsnFailureCode, arg_p2: [*c]const UA_TsnFailureCode) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 108)))]) == UA_ORDER_EQ;
}
pub fn UA_TsnStreamState_init(arg_p: [*c]UA_TsnStreamState) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_TsnStreamState));
}
pub fn UA_TsnStreamState_new() callconv(.c) [*c]UA_TsnStreamState {
    return @as([*c]UA_TsnStreamState, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 109)))]))));
}
pub fn UA_TsnStreamState_copy(arg_src: [*c]const UA_TsnStreamState, arg_dst: [*c]UA_TsnStreamState) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 109)))]);
}
pub fn UA_TsnStreamState_deleteMembers(arg_p: [*c]UA_TsnStreamState) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 109)))]);
}
pub fn UA_TsnStreamState_clear(arg_p: [*c]UA_TsnStreamState) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 109)))]);
}
pub fn UA_TsnStreamState_delete(arg_p: [*c]UA_TsnStreamState) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 109)))]);
}
pub fn UA_TsnStreamState_equal(arg_p1: [*c]const UA_TsnStreamState, arg_p2: [*c]const UA_TsnStreamState) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 109)))]) == UA_ORDER_EQ;
}
pub fn UA_TsnTalkerStatus_init(arg_p: [*c]UA_TsnTalkerStatus) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_TsnTalkerStatus));
}
pub fn UA_TsnTalkerStatus_new() callconv(.c) [*c]UA_TsnTalkerStatus {
    return @as([*c]UA_TsnTalkerStatus, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 110)))]))));
}
pub fn UA_TsnTalkerStatus_copy(arg_src: [*c]const UA_TsnTalkerStatus, arg_dst: [*c]UA_TsnTalkerStatus) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 110)))]);
}
pub fn UA_TsnTalkerStatus_deleteMembers(arg_p: [*c]UA_TsnTalkerStatus) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 110)))]);
}
pub fn UA_TsnTalkerStatus_clear(arg_p: [*c]UA_TsnTalkerStatus) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 110)))]);
}
pub fn UA_TsnTalkerStatus_delete(arg_p: [*c]UA_TsnTalkerStatus) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 110)))]);
}
pub fn UA_TsnTalkerStatus_equal(arg_p1: [*c]const UA_TsnTalkerStatus, arg_p2: [*c]const UA_TsnTalkerStatus) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 110)))]) == UA_ORDER_EQ;
}
pub fn UA_TsnListenerStatus_init(arg_p: [*c]UA_TsnListenerStatus) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_TsnListenerStatus));
}
pub fn UA_TsnListenerStatus_new() callconv(.c) [*c]UA_TsnListenerStatus {
    return @as([*c]UA_TsnListenerStatus, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 111)))]))));
}
pub fn UA_TsnListenerStatus_copy(arg_src: [*c]const UA_TsnListenerStatus, arg_dst: [*c]UA_TsnListenerStatus) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 111)))]);
}
pub fn UA_TsnListenerStatus_deleteMembers(arg_p: [*c]UA_TsnListenerStatus) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 111)))]);
}
pub fn UA_TsnListenerStatus_clear(arg_p: [*c]UA_TsnListenerStatus) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 111)))]);
}
pub fn UA_TsnListenerStatus_delete(arg_p: [*c]UA_TsnListenerStatus) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 111)))]);
}
pub fn UA_TsnListenerStatus_equal(arg_p1: [*c]const UA_TsnListenerStatus, arg_p2: [*c]const UA_TsnListenerStatus) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 111)))]) == UA_ORDER_EQ;
}
pub fn UA_PriorityMappingEntryType_init(arg_p: [*c]UA_PriorityMappingEntryType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_PriorityMappingEntryType));
}
pub fn UA_PriorityMappingEntryType_new() callconv(.c) [*c]UA_PriorityMappingEntryType {
    return @as([*c]UA_PriorityMappingEntryType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 112)))]))));
}
pub fn UA_PriorityMappingEntryType_copy(arg_src: [*c]const UA_PriorityMappingEntryType, arg_dst: [*c]UA_PriorityMappingEntryType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 112)))]);
}
pub fn UA_PriorityMappingEntryType_deleteMembers(arg_p: [*c]UA_PriorityMappingEntryType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 112)))]);
}
pub fn UA_PriorityMappingEntryType_clear(arg_p: [*c]UA_PriorityMappingEntryType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 112)))]);
}
pub fn UA_PriorityMappingEntryType_delete(arg_p: [*c]UA_PriorityMappingEntryType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 112)))]);
}
pub fn UA_PriorityMappingEntryType_equal(arg_p1: [*c]const UA_PriorityMappingEntryType, arg_p2: [*c]const UA_PriorityMappingEntryType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 112)))]) == UA_ORDER_EQ;
}
pub fn UA_ReferenceDescriptionDataType_init(arg_p: [*c]UA_ReferenceDescriptionDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ReferenceDescriptionDataType));
}
pub fn UA_ReferenceDescriptionDataType_new() callconv(.c) [*c]UA_ReferenceDescriptionDataType {
    return @as([*c]UA_ReferenceDescriptionDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 113)))]))));
}
pub fn UA_ReferenceDescriptionDataType_copy(arg_src: [*c]const UA_ReferenceDescriptionDataType, arg_dst: [*c]UA_ReferenceDescriptionDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 113)))]);
}
pub fn UA_ReferenceDescriptionDataType_deleteMembers(arg_p: [*c]UA_ReferenceDescriptionDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 113)))]);
}
pub fn UA_ReferenceDescriptionDataType_clear(arg_p: [*c]UA_ReferenceDescriptionDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 113)))]);
}
pub fn UA_ReferenceDescriptionDataType_delete(arg_p: [*c]UA_ReferenceDescriptionDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 113)))]);
}
pub fn UA_ReferenceDescriptionDataType_equal(arg_p1: [*c]const UA_ReferenceDescriptionDataType, arg_p2: [*c]const UA_ReferenceDescriptionDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 113)))]) == UA_ORDER_EQ;
}
pub fn UA_ReferenceListEntryDataType_init(arg_p: [*c]UA_ReferenceListEntryDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ReferenceListEntryDataType));
}
pub fn UA_ReferenceListEntryDataType_new() callconv(.c) [*c]UA_ReferenceListEntryDataType {
    return @as([*c]UA_ReferenceListEntryDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 114)))]))));
}
pub fn UA_ReferenceListEntryDataType_copy(arg_src: [*c]const UA_ReferenceListEntryDataType, arg_dst: [*c]UA_ReferenceListEntryDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 114)))]);
}
pub fn UA_ReferenceListEntryDataType_deleteMembers(arg_p: [*c]UA_ReferenceListEntryDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 114)))]);
}
pub fn UA_ReferenceListEntryDataType_clear(arg_p: [*c]UA_ReferenceListEntryDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 114)))]);
}
pub fn UA_ReferenceListEntryDataType_delete(arg_p: [*c]UA_ReferenceListEntryDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 114)))]);
}
pub fn UA_ReferenceListEntryDataType_equal(arg_p1: [*c]const UA_ReferenceListEntryDataType, arg_p2: [*c]const UA_ReferenceListEntryDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 114)))]) == UA_ORDER_EQ;
}
pub fn UA_IdType_init(arg_p: [*c]UA_IdType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_IdType));
}
pub fn UA_IdType_new() callconv(.c) [*c]UA_IdType {
    return @as([*c]UA_IdType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 115)))]))));
}
pub fn UA_IdType_copy(arg_src: [*c]const UA_IdType, arg_dst: [*c]UA_IdType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 115)))]);
}
pub fn UA_IdType_deleteMembers(arg_p: [*c]UA_IdType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 115)))]);
}
pub fn UA_IdType_clear(arg_p: [*c]UA_IdType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 115)))]);
}
pub fn UA_IdType_delete(arg_p: [*c]UA_IdType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 115)))]);
}
pub fn UA_IdType_equal(arg_p1: [*c]const UA_IdType, arg_p2: [*c]const UA_IdType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 115)))]) == UA_ORDER_EQ;
}
pub fn UA_NodeClass_init(arg_p: [*c]UA_NodeClass) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_NodeClass));
}
pub fn UA_NodeClass_new() callconv(.c) [*c]UA_NodeClass {
    return @as([*c]UA_NodeClass, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 116)))]))));
}
pub fn UA_NodeClass_copy(arg_src: [*c]const UA_NodeClass, arg_dst: [*c]UA_NodeClass) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 116)))]);
}
pub fn UA_NodeClass_deleteMembers(arg_p: [*c]UA_NodeClass) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 116)))]);
}
pub fn UA_NodeClass_clear(arg_p: [*c]UA_NodeClass) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 116)))]);
}
pub fn UA_NodeClass_delete(arg_p: [*c]UA_NodeClass) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 116)))]);
}
pub fn UA_NodeClass_equal(arg_p1: [*c]const UA_NodeClass, arg_p2: [*c]const UA_NodeClass) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 116)))]) == UA_ORDER_EQ;
}
pub fn UA_PermissionType_init(arg_p: [*c]UA_PermissionType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_PermissionType));
}
pub fn UA_PermissionType_new() callconv(.c) [*c]UA_PermissionType {
    return @as([*c]UA_PermissionType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 117)))]))));
}
pub fn UA_PermissionType_copy(arg_src: [*c]const UA_PermissionType, arg_dst: [*c]UA_PermissionType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 117)))]);
}
pub fn UA_PermissionType_deleteMembers(arg_p: [*c]UA_PermissionType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 117)))]);
}
pub fn UA_PermissionType_clear(arg_p: [*c]UA_PermissionType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 117)))]);
}
pub fn UA_PermissionType_delete(arg_p: [*c]UA_PermissionType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 117)))]);
}
pub fn UA_PermissionType_equal(arg_p1: [*c]const UA_PermissionType, arg_p2: [*c]const UA_PermissionType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 117)))]) == UA_ORDER_EQ;
}
pub fn UA_AccessLevelType_init(arg_p: [*c]UA_AccessLevelType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_AccessLevelType));
}
pub fn UA_AccessLevelType_new() callconv(.c) [*c]UA_AccessLevelType {
    return @as([*c]UA_AccessLevelType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 118)))]))));
}
pub fn UA_AccessLevelType_copy(arg_src: [*c]const UA_AccessLevelType, arg_dst: [*c]UA_AccessLevelType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 118)))]);
}
pub fn UA_AccessLevelType_deleteMembers(arg_p: [*c]UA_AccessLevelType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 118)))]);
}
pub fn UA_AccessLevelType_clear(arg_p: [*c]UA_AccessLevelType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 118)))]);
}
pub fn UA_AccessLevelType_delete(arg_p: [*c]UA_AccessLevelType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 118)))]);
}
pub fn UA_AccessLevelType_equal(arg_p1: [*c]const UA_AccessLevelType, arg_p2: [*c]const UA_AccessLevelType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 118)))]) == UA_ORDER_EQ;
}
pub fn UA_AccessLevelExType_init(arg_p: [*c]UA_AccessLevelExType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_AccessLevelExType));
}
pub fn UA_AccessLevelExType_new() callconv(.c) [*c]UA_AccessLevelExType {
    return @as([*c]UA_AccessLevelExType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 119)))]))));
}
pub fn UA_AccessLevelExType_copy(arg_src: [*c]const UA_AccessLevelExType, arg_dst: [*c]UA_AccessLevelExType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 119)))]);
}
pub fn UA_AccessLevelExType_deleteMembers(arg_p: [*c]UA_AccessLevelExType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 119)))]);
}
pub fn UA_AccessLevelExType_clear(arg_p: [*c]UA_AccessLevelExType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 119)))]);
}
pub fn UA_AccessLevelExType_delete(arg_p: [*c]UA_AccessLevelExType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 119)))]);
}
pub fn UA_AccessLevelExType_equal(arg_p1: [*c]const UA_AccessLevelExType, arg_p2: [*c]const UA_AccessLevelExType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 119)))]) == UA_ORDER_EQ;
}
pub fn UA_EventNotifierType_init(arg_p: [*c]UA_EventNotifierType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_EventNotifierType));
}
pub fn UA_EventNotifierType_new() callconv(.c) [*c]UA_EventNotifierType {
    return @as([*c]UA_EventNotifierType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 120)))]))));
}
pub fn UA_EventNotifierType_copy(arg_src: [*c]const UA_EventNotifierType, arg_dst: [*c]UA_EventNotifierType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 120)))]);
}
pub fn UA_EventNotifierType_deleteMembers(arg_p: [*c]UA_EventNotifierType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 120)))]);
}
pub fn UA_EventNotifierType_clear(arg_p: [*c]UA_EventNotifierType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 120)))]);
}
pub fn UA_EventNotifierType_delete(arg_p: [*c]UA_EventNotifierType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 120)))]);
}
pub fn UA_EventNotifierType_equal(arg_p1: [*c]const UA_EventNotifierType, arg_p2: [*c]const UA_EventNotifierType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 120)))]) == UA_ORDER_EQ;
}
pub fn UA_AccessRestrictionType_init(arg_p: [*c]UA_AccessRestrictionType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_AccessRestrictionType));
}
pub fn UA_AccessRestrictionType_new() callconv(.c) [*c]UA_AccessRestrictionType {
    return @as([*c]UA_AccessRestrictionType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 121)))]))));
}
pub fn UA_AccessRestrictionType_copy(arg_src: [*c]const UA_AccessRestrictionType, arg_dst: [*c]UA_AccessRestrictionType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 121)))]);
}
pub fn UA_AccessRestrictionType_deleteMembers(arg_p: [*c]UA_AccessRestrictionType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 121)))]);
}
pub fn UA_AccessRestrictionType_clear(arg_p: [*c]UA_AccessRestrictionType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 121)))]);
}
pub fn UA_AccessRestrictionType_delete(arg_p: [*c]UA_AccessRestrictionType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 121)))]);
}
pub fn UA_AccessRestrictionType_equal(arg_p1: [*c]const UA_AccessRestrictionType, arg_p2: [*c]const UA_AccessRestrictionType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 121)))]) == UA_ORDER_EQ;
}
pub fn UA_RolePermissionType_init(arg_p: [*c]UA_RolePermissionType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_RolePermissionType));
}
pub fn UA_RolePermissionType_new() callconv(.c) [*c]UA_RolePermissionType {
    return @as([*c]UA_RolePermissionType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 122)))]))));
}
pub fn UA_RolePermissionType_copy(arg_src: [*c]const UA_RolePermissionType, arg_dst: [*c]UA_RolePermissionType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 122)))]);
}
pub fn UA_RolePermissionType_deleteMembers(arg_p: [*c]UA_RolePermissionType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 122)))]);
}
pub fn UA_RolePermissionType_clear(arg_p: [*c]UA_RolePermissionType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 122)))]);
}
pub fn UA_RolePermissionType_delete(arg_p: [*c]UA_RolePermissionType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 122)))]);
}
pub fn UA_RolePermissionType_equal(arg_p1: [*c]const UA_RolePermissionType, arg_p2: [*c]const UA_RolePermissionType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 122)))]) == UA_ORDER_EQ;
}
pub fn UA_StructureType_init(arg_p: [*c]UA_StructureType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_StructureType));
}
pub fn UA_StructureType_new() callconv(.c) [*c]UA_StructureType {
    return @as([*c]UA_StructureType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 123)))]))));
}
pub fn UA_StructureType_copy(arg_src: [*c]const UA_StructureType, arg_dst: [*c]UA_StructureType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 123)))]);
}
pub fn UA_StructureType_deleteMembers(arg_p: [*c]UA_StructureType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 123)))]);
}
pub fn UA_StructureType_clear(arg_p: [*c]UA_StructureType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 123)))]);
}
pub fn UA_StructureType_delete(arg_p: [*c]UA_StructureType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 123)))]);
}
pub fn UA_StructureType_equal(arg_p1: [*c]const UA_StructureType, arg_p2: [*c]const UA_StructureType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 123)))]) == UA_ORDER_EQ;
}
pub fn UA_StructureField_init(arg_p: [*c]UA_StructureField) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_StructureField));
}
pub fn UA_StructureField_new() callconv(.c) [*c]UA_StructureField {
    return @as([*c]UA_StructureField, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 124)))]))));
}
pub fn UA_StructureField_copy(arg_src: [*c]const UA_StructureField, arg_dst: [*c]UA_StructureField) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 124)))]);
}
pub fn UA_StructureField_deleteMembers(arg_p: [*c]UA_StructureField) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 124)))]);
}
pub fn UA_StructureField_clear(arg_p: [*c]UA_StructureField) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 124)))]);
}
pub fn UA_StructureField_delete(arg_p: [*c]UA_StructureField) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 124)))]);
}
pub fn UA_StructureField_equal(arg_p1: [*c]const UA_StructureField, arg_p2: [*c]const UA_StructureField) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 124)))]) == UA_ORDER_EQ;
}
pub fn UA_StructureDefinition_init(arg_p: [*c]UA_StructureDefinition) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_StructureDefinition));
}
pub fn UA_StructureDefinition_new() callconv(.c) [*c]UA_StructureDefinition {
    return @as([*c]UA_StructureDefinition, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 125)))]))));
}
pub fn UA_StructureDefinition_copy(arg_src: [*c]const UA_StructureDefinition, arg_dst: [*c]UA_StructureDefinition) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 125)))]);
}
pub fn UA_StructureDefinition_deleteMembers(arg_p: [*c]UA_StructureDefinition) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 125)))]);
}
pub fn UA_StructureDefinition_clear(arg_p: [*c]UA_StructureDefinition) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 125)))]);
}
pub fn UA_StructureDefinition_delete(arg_p: [*c]UA_StructureDefinition) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 125)))]);
}
pub fn UA_StructureDefinition_equal(arg_p1: [*c]const UA_StructureDefinition, arg_p2: [*c]const UA_StructureDefinition) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 125)))]) == UA_ORDER_EQ;
}
pub fn UA_Argument_init(arg_p: [*c]UA_Argument) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_Argument));
}
pub fn UA_Argument_new() callconv(.c) [*c]UA_Argument {
    return @as([*c]UA_Argument, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 126)))]))));
}
pub fn UA_Argument_copy(arg_src: [*c]const UA_Argument, arg_dst: [*c]UA_Argument) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 126)))]);
}
pub fn UA_Argument_deleteMembers(arg_p: [*c]UA_Argument) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 126)))]);
}
pub fn UA_Argument_clear(arg_p: [*c]UA_Argument) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 126)))]);
}
pub fn UA_Argument_delete(arg_p: [*c]UA_Argument) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 126)))]);
}
pub fn UA_Argument_equal(arg_p1: [*c]const UA_Argument, arg_p2: [*c]const UA_Argument) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 126)))]) == UA_ORDER_EQ;
}
pub fn UA_EnumValueType_init(arg_p: [*c]UA_EnumValueType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_EnumValueType));
}
pub fn UA_EnumValueType_new() callconv(.c) [*c]UA_EnumValueType {
    return @as([*c]UA_EnumValueType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 127)))]))));
}
pub fn UA_EnumValueType_copy(arg_src: [*c]const UA_EnumValueType, arg_dst: [*c]UA_EnumValueType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 127)))]);
}
pub fn UA_EnumValueType_deleteMembers(arg_p: [*c]UA_EnumValueType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 127)))]);
}
pub fn UA_EnumValueType_clear(arg_p: [*c]UA_EnumValueType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 127)))]);
}
pub fn UA_EnumValueType_delete(arg_p: [*c]UA_EnumValueType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 127)))]);
}
pub fn UA_EnumValueType_equal(arg_p1: [*c]const UA_EnumValueType, arg_p2: [*c]const UA_EnumValueType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 127)))]) == UA_ORDER_EQ;
}
pub fn UA_EnumField_init(arg_p: [*c]UA_EnumField) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_EnumField));
}
pub fn UA_EnumField_new() callconv(.c) [*c]UA_EnumField {
    return @as([*c]UA_EnumField, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 128)))]))));
}
pub fn UA_EnumField_copy(arg_src: [*c]const UA_EnumField, arg_dst: [*c]UA_EnumField) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 128)))]);
}
pub fn UA_EnumField_deleteMembers(arg_p: [*c]UA_EnumField) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 128)))]);
}
pub fn UA_EnumField_clear(arg_p: [*c]UA_EnumField) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 128)))]);
}
pub fn UA_EnumField_delete(arg_p: [*c]UA_EnumField) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 128)))]);
}
pub fn UA_EnumField_equal(arg_p1: [*c]const UA_EnumField, arg_p2: [*c]const UA_EnumField) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 128)))]) == UA_ORDER_EQ;
}
pub fn UA_OptionSet_init(arg_p: [*c]UA_OptionSet) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_OptionSet));
}
pub fn UA_OptionSet_new() callconv(.c) [*c]UA_OptionSet {
    return @as([*c]UA_OptionSet, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 129)))]))));
}
pub fn UA_OptionSet_copy(arg_src: [*c]const UA_OptionSet, arg_dst: [*c]UA_OptionSet) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 129)))]);
}
pub fn UA_OptionSet_deleteMembers(arg_p: [*c]UA_OptionSet) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 129)))]);
}
pub fn UA_OptionSet_clear(arg_p: [*c]UA_OptionSet) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 129)))]);
}
pub fn UA_OptionSet_delete(arg_p: [*c]UA_OptionSet) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 129)))]);
}
pub fn UA_OptionSet_equal(arg_p1: [*c]const UA_OptionSet, arg_p2: [*c]const UA_OptionSet) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 129)))]) == UA_ORDER_EQ;
}
pub fn UA_NormalizedString_init(arg_p: [*c]UA_NormalizedString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_NormalizedString));
}
pub fn UA_NormalizedString_new() callconv(.c) [*c]UA_NormalizedString {
    return @as([*c]UA_NormalizedString, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 130)))]))));
}
pub fn UA_NormalizedString_copy(arg_src: [*c]const UA_NormalizedString, arg_dst: [*c]UA_NormalizedString) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 130)))]);
}
pub fn UA_NormalizedString_deleteMembers(arg_p: [*c]UA_NormalizedString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 130)))]);
}
pub fn UA_NormalizedString_clear(arg_p: [*c]UA_NormalizedString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 130)))]);
}
pub fn UA_NormalizedString_delete(arg_p: [*c]UA_NormalizedString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 130)))]);
}
pub fn UA_NormalizedString_equal(arg_p1: [*c]const UA_NormalizedString, arg_p2: [*c]const UA_NormalizedString) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 130)))]) == UA_ORDER_EQ;
}
pub fn UA_DecimalString_init(arg_p: [*c]UA_DecimalString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DecimalString));
}
pub fn UA_DecimalString_new() callconv(.c) [*c]UA_DecimalString {
    return @as([*c]UA_DecimalString, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 131)))]))));
}
pub fn UA_DecimalString_copy(arg_src: [*c]const UA_DecimalString, arg_dst: [*c]UA_DecimalString) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 131)))]);
}
pub fn UA_DecimalString_deleteMembers(arg_p: [*c]UA_DecimalString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 131)))]);
}
pub fn UA_DecimalString_clear(arg_p: [*c]UA_DecimalString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 131)))]);
}
pub fn UA_DecimalString_delete(arg_p: [*c]UA_DecimalString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 131)))]);
}
pub fn UA_DecimalString_equal(arg_p1: [*c]const UA_DecimalString, arg_p2: [*c]const UA_DecimalString) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 131)))]) == UA_ORDER_EQ;
}
pub fn UA_DurationString_init(arg_p: [*c]UA_DurationString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DurationString));
}
pub fn UA_DurationString_new() callconv(.c) [*c]UA_DurationString {
    return @as([*c]UA_DurationString, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 132)))]))));
}
pub fn UA_DurationString_copy(arg_src: [*c]const UA_DurationString, arg_dst: [*c]UA_DurationString) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 132)))]);
}
pub fn UA_DurationString_deleteMembers(arg_p: [*c]UA_DurationString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 132)))]);
}
pub fn UA_DurationString_clear(arg_p: [*c]UA_DurationString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 132)))]);
}
pub fn UA_DurationString_delete(arg_p: [*c]UA_DurationString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 132)))]);
}
pub fn UA_DurationString_equal(arg_p1: [*c]const UA_DurationString, arg_p2: [*c]const UA_DurationString) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 132)))]) == UA_ORDER_EQ;
}
pub fn UA_TimeString_init(arg_p: [*c]UA_TimeString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_TimeString));
}
pub fn UA_TimeString_new() callconv(.c) [*c]UA_TimeString {
    return @as([*c]UA_TimeString, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 133)))]))));
}
pub fn UA_TimeString_copy(arg_src: [*c]const UA_TimeString, arg_dst: [*c]UA_TimeString) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 133)))]);
}
pub fn UA_TimeString_deleteMembers(arg_p: [*c]UA_TimeString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 133)))]);
}
pub fn UA_TimeString_clear(arg_p: [*c]UA_TimeString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 133)))]);
}
pub fn UA_TimeString_delete(arg_p: [*c]UA_TimeString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 133)))]);
}
pub fn UA_TimeString_equal(arg_p1: [*c]const UA_TimeString, arg_p2: [*c]const UA_TimeString) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 133)))]) == UA_ORDER_EQ;
}
pub fn UA_DateString_init(arg_p: [*c]UA_DateString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DateString));
}
pub fn UA_DateString_new() callconv(.c) [*c]UA_DateString {
    return @as([*c]UA_DateString, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 134)))]))));
}
pub fn UA_DateString_copy(arg_src: [*c]const UA_DateString, arg_dst: [*c]UA_DateString) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 134)))]);
}
pub fn UA_DateString_deleteMembers(arg_p: [*c]UA_DateString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 134)))]);
}
pub fn UA_DateString_clear(arg_p: [*c]UA_DateString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 134)))]);
}
pub fn UA_DateString_delete(arg_p: [*c]UA_DateString) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 134)))]);
}
pub fn UA_DateString_equal(arg_p1: [*c]const UA_DateString, arg_p2: [*c]const UA_DateString) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 134)))]) == UA_ORDER_EQ;
}
pub fn UA_Duration_init(arg_p: [*c]UA_Duration) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_Duration));
}
pub fn UA_Duration_new() callconv(.c) [*c]UA_Duration {
    return @as([*c]UA_Duration, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 135)))]))));
}
pub fn UA_Duration_copy(arg_src: [*c]const UA_Duration, arg_dst: [*c]UA_Duration) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 135)))]);
}
pub fn UA_Duration_deleteMembers(arg_p: [*c]UA_Duration) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 135)))]);
}
pub fn UA_Duration_clear(arg_p: [*c]UA_Duration) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 135)))]);
}
pub fn UA_Duration_delete(arg_p: [*c]UA_Duration) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 135)))]);
}
pub fn UA_Duration_equal(arg_p1: [*c]const UA_Duration, arg_p2: [*c]const UA_Duration) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 135)))]) == UA_ORDER_EQ;
}
pub fn UA_UtcTime_init(arg_p: [*c]UA_UtcTime) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_UtcTime));
}
pub fn UA_UtcTime_new() callconv(.c) [*c]UA_UtcTime {
    return @as([*c]UA_UtcTime, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 136)))]))));
}
pub fn UA_UtcTime_copy(arg_src: [*c]const UA_UtcTime, arg_dst: [*c]UA_UtcTime) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 136)))]);
}
pub fn UA_UtcTime_deleteMembers(arg_p: [*c]UA_UtcTime) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 136)))]);
}
pub fn UA_UtcTime_clear(arg_p: [*c]UA_UtcTime) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 136)))]);
}
pub fn UA_UtcTime_delete(arg_p: [*c]UA_UtcTime) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 136)))]);
}
pub fn UA_UtcTime_equal(arg_p1: [*c]const UA_UtcTime, arg_p2: [*c]const UA_UtcTime) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 136)))]) == UA_ORDER_EQ;
}
pub fn UA_LocaleId_init(arg_p: [*c]UA_LocaleId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_LocaleId));
}
pub fn UA_LocaleId_new() callconv(.c) [*c]UA_LocaleId {
    return @as([*c]UA_LocaleId, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 137)))]))));
}
pub fn UA_LocaleId_copy(arg_src: [*c]const UA_LocaleId, arg_dst: [*c]UA_LocaleId) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 137)))]);
}
pub fn UA_LocaleId_deleteMembers(arg_p: [*c]UA_LocaleId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 137)))]);
}
pub fn UA_LocaleId_clear(arg_p: [*c]UA_LocaleId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 137)))]);
}
pub fn UA_LocaleId_delete(arg_p: [*c]UA_LocaleId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 137)))]);
}
pub fn UA_LocaleId_equal(arg_p1: [*c]const UA_LocaleId, arg_p2: [*c]const UA_LocaleId) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 137)))]) == UA_ORDER_EQ;
}
pub fn UA_TimeZoneDataType_init(arg_p: [*c]UA_TimeZoneDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_TimeZoneDataType));
}
pub fn UA_TimeZoneDataType_new() callconv(.c) [*c]UA_TimeZoneDataType {
    return @as([*c]UA_TimeZoneDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 138)))]))));
}
pub fn UA_TimeZoneDataType_copy(arg_src: [*c]const UA_TimeZoneDataType, arg_dst: [*c]UA_TimeZoneDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 138)))]);
}
pub fn UA_TimeZoneDataType_deleteMembers(arg_p: [*c]UA_TimeZoneDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 138)))]);
}
pub fn UA_TimeZoneDataType_clear(arg_p: [*c]UA_TimeZoneDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 138)))]);
}
pub fn UA_TimeZoneDataType_delete(arg_p: [*c]UA_TimeZoneDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 138)))]);
}
pub fn UA_TimeZoneDataType_equal(arg_p1: [*c]const UA_TimeZoneDataType, arg_p2: [*c]const UA_TimeZoneDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 138)))]) == UA_ORDER_EQ;
}
pub fn UA_Index_init(arg_p: [*c]UA_Index) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_Index));
}
pub fn UA_Index_new() callconv(.c) [*c]UA_Index {
    return @as([*c]UA_Index, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 139)))]))));
}
pub fn UA_Index_copy(arg_src: [*c]const UA_Index, arg_dst: [*c]UA_Index) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 139)))]);
}
pub fn UA_Index_deleteMembers(arg_p: [*c]UA_Index) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 139)))]);
}
pub fn UA_Index_clear(arg_p: [*c]UA_Index) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 139)))]);
}
pub fn UA_Index_delete(arg_p: [*c]UA_Index) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 139)))]);
}
pub fn UA_Index_equal(arg_p1: [*c]const UA_Index, arg_p2: [*c]const UA_Index) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 139)))]) == UA_ORDER_EQ;
}
pub fn UA_IntegerId_init(arg_p: [*c]UA_IntegerId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_IntegerId));
}
pub fn UA_IntegerId_new() callconv(.c) [*c]UA_IntegerId {
    return @as([*c]UA_IntegerId, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 140)))]))));
}
pub fn UA_IntegerId_copy(arg_src: [*c]const UA_IntegerId, arg_dst: [*c]UA_IntegerId) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 140)))]);
}
pub fn UA_IntegerId_deleteMembers(arg_p: [*c]UA_IntegerId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 140)))]);
}
pub fn UA_IntegerId_clear(arg_p: [*c]UA_IntegerId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 140)))]);
}
pub fn UA_IntegerId_delete(arg_p: [*c]UA_IntegerId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 140)))]);
}
pub fn UA_IntegerId_equal(arg_p1: [*c]const UA_IntegerId, arg_p2: [*c]const UA_IntegerId) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 140)))]) == UA_ORDER_EQ;
}
pub fn UA_ApplicationType_init(arg_p: [*c]UA_ApplicationType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ApplicationType));
}
pub fn UA_ApplicationType_new() callconv(.c) [*c]UA_ApplicationType {
    return @as([*c]UA_ApplicationType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 141)))]))));
}
pub fn UA_ApplicationType_copy(arg_src: [*c]const UA_ApplicationType, arg_dst: [*c]UA_ApplicationType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 141)))]);
}
pub fn UA_ApplicationType_deleteMembers(arg_p: [*c]UA_ApplicationType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 141)))]);
}
pub fn UA_ApplicationType_clear(arg_p: [*c]UA_ApplicationType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 141)))]);
}
pub fn UA_ApplicationType_delete(arg_p: [*c]UA_ApplicationType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 141)))]);
}
pub fn UA_ApplicationType_equal(arg_p1: [*c]const UA_ApplicationType, arg_p2: [*c]const UA_ApplicationType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 141)))]) == UA_ORDER_EQ;
}
pub fn UA_ApplicationDescription_init(arg_p: [*c]UA_ApplicationDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ApplicationDescription));
}
pub fn UA_ApplicationDescription_new() callconv(.c) [*c]UA_ApplicationDescription {
    return @as([*c]UA_ApplicationDescription, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 142)))]))));
}
pub fn UA_ApplicationDescription_copy(arg_src: [*c]const UA_ApplicationDescription, arg_dst: [*c]UA_ApplicationDescription) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 142)))]);
}
pub fn UA_ApplicationDescription_deleteMembers(arg_p: [*c]UA_ApplicationDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 142)))]);
}
pub fn UA_ApplicationDescription_clear(arg_p: [*c]UA_ApplicationDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 142)))]);
}
pub fn UA_ApplicationDescription_delete(arg_p: [*c]UA_ApplicationDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 142)))]);
}
pub fn UA_ApplicationDescription_equal(arg_p1: [*c]const UA_ApplicationDescription, arg_p2: [*c]const UA_ApplicationDescription) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 142)))]) == UA_ORDER_EQ;
}
pub fn UA_RequestHeader_init(arg_p: [*c]UA_RequestHeader) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_RequestHeader));
}
pub fn UA_RequestHeader_new() callconv(.c) [*c]UA_RequestHeader {
    return @as([*c]UA_RequestHeader, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 143)))]))));
}
pub fn UA_RequestHeader_copy(arg_src: [*c]const UA_RequestHeader, arg_dst: [*c]UA_RequestHeader) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 143)))]);
}
pub fn UA_RequestHeader_deleteMembers(arg_p: [*c]UA_RequestHeader) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 143)))]);
}
pub fn UA_RequestHeader_clear(arg_p: [*c]UA_RequestHeader) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 143)))]);
}
pub fn UA_RequestHeader_delete(arg_p: [*c]UA_RequestHeader) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 143)))]);
}
pub fn UA_RequestHeader_equal(arg_p1: [*c]const UA_RequestHeader, arg_p2: [*c]const UA_RequestHeader) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 143)))]) == UA_ORDER_EQ;
}
pub fn UA_ResponseHeader_init(arg_p: ?*UA_ResponseHeader) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ResponseHeader));
}
pub fn UA_ResponseHeader_new() callconv(.c) ?*UA_ResponseHeader {
    return @as(?*UA_ResponseHeader, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 144)))]))));
}
pub fn UA_ResponseHeader_copy(arg_src: ?*const UA_ResponseHeader, arg_dst: ?*UA_ResponseHeader) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 144)))]);
}
pub fn UA_ResponseHeader_deleteMembers(arg_p: ?*UA_ResponseHeader) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 144)))]);
}
pub fn UA_ResponseHeader_clear(arg_p: ?*UA_ResponseHeader) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 144)))]);
}
pub fn UA_ResponseHeader_delete(arg_p: ?*UA_ResponseHeader) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 144)))]);
}
pub fn UA_ResponseHeader_equal(arg_p1: ?*const UA_ResponseHeader, arg_p2: ?*const UA_ResponseHeader) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 144)))]) == UA_ORDER_EQ;
}
pub fn UA_VersionTime_init(arg_p: [*c]UA_VersionTime) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_VersionTime));
}
pub fn UA_VersionTime_new() callconv(.c) [*c]UA_VersionTime {
    return @as([*c]UA_VersionTime, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 145)))]))));
}
pub fn UA_VersionTime_copy(arg_src: [*c]const UA_VersionTime, arg_dst: [*c]UA_VersionTime) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 145)))]);
}
pub fn UA_VersionTime_deleteMembers(arg_p: [*c]UA_VersionTime) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 145)))]);
}
pub fn UA_VersionTime_clear(arg_p: [*c]UA_VersionTime) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 145)))]);
}
pub fn UA_VersionTime_delete(arg_p: [*c]UA_VersionTime) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 145)))]);
}
pub fn UA_VersionTime_equal(arg_p1: [*c]const UA_VersionTime, arg_p2: [*c]const UA_VersionTime) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 145)))]) == UA_ORDER_EQ;
}
pub fn UA_ServiceFault_init(arg_p: ?*UA_ServiceFault) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ServiceFault));
}
pub fn UA_ServiceFault_new() callconv(.c) ?*UA_ServiceFault {
    return @as(?*UA_ServiceFault, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 146)))]))));
}
pub fn UA_ServiceFault_copy(arg_src: ?*const UA_ServiceFault, arg_dst: ?*UA_ServiceFault) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 146)))]);
}
pub fn UA_ServiceFault_deleteMembers(arg_p: ?*UA_ServiceFault) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 146)))]);
}
pub fn UA_ServiceFault_clear(arg_p: ?*UA_ServiceFault) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 146)))]);
}
pub fn UA_ServiceFault_delete(arg_p: ?*UA_ServiceFault) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 146)))]);
}
pub fn UA_ServiceFault_equal(arg_p1: ?*const UA_ServiceFault, arg_p2: ?*const UA_ServiceFault) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 146)))]) == UA_ORDER_EQ;
}
pub fn UA_SessionlessInvokeRequestType_init(arg_p: [*c]UA_SessionlessInvokeRequestType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_SessionlessInvokeRequestType));
}
pub fn UA_SessionlessInvokeRequestType_new() callconv(.c) [*c]UA_SessionlessInvokeRequestType {
    return @as([*c]UA_SessionlessInvokeRequestType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 147)))]))));
}
pub fn UA_SessionlessInvokeRequestType_copy(arg_src: [*c]const UA_SessionlessInvokeRequestType, arg_dst: [*c]UA_SessionlessInvokeRequestType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 147)))]);
}
pub fn UA_SessionlessInvokeRequestType_deleteMembers(arg_p: [*c]UA_SessionlessInvokeRequestType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 147)))]);
}
pub fn UA_SessionlessInvokeRequestType_clear(arg_p: [*c]UA_SessionlessInvokeRequestType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 147)))]);
}
pub fn UA_SessionlessInvokeRequestType_delete(arg_p: [*c]UA_SessionlessInvokeRequestType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 147)))]);
}
pub fn UA_SessionlessInvokeRequestType_equal(arg_p1: [*c]const UA_SessionlessInvokeRequestType, arg_p2: [*c]const UA_SessionlessInvokeRequestType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 147)))]) == UA_ORDER_EQ;
}
pub fn UA_SessionlessInvokeResponseType_init(arg_p: [*c]UA_SessionlessInvokeResponseType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_SessionlessInvokeResponseType));
}
pub fn UA_SessionlessInvokeResponseType_new() callconv(.c) [*c]UA_SessionlessInvokeResponseType {
    return @as([*c]UA_SessionlessInvokeResponseType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 148)))]))));
}
pub fn UA_SessionlessInvokeResponseType_copy(arg_src: [*c]const UA_SessionlessInvokeResponseType, arg_dst: [*c]UA_SessionlessInvokeResponseType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 148)))]);
}
pub fn UA_SessionlessInvokeResponseType_deleteMembers(arg_p: [*c]UA_SessionlessInvokeResponseType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 148)))]);
}
pub fn UA_SessionlessInvokeResponseType_clear(arg_p: [*c]UA_SessionlessInvokeResponseType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 148)))]);
}
pub fn UA_SessionlessInvokeResponseType_delete(arg_p: [*c]UA_SessionlessInvokeResponseType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 148)))]);
}
pub fn UA_SessionlessInvokeResponseType_equal(arg_p1: [*c]const UA_SessionlessInvokeResponseType, arg_p2: [*c]const UA_SessionlessInvokeResponseType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 148)))]) == UA_ORDER_EQ;
}
pub fn UA_FindServersRequest_init(arg_p: [*c]UA_FindServersRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_FindServersRequest));
}
pub fn UA_FindServersRequest_new() callconv(.c) [*c]UA_FindServersRequest {
    return @as([*c]UA_FindServersRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 149)))]))));
}
pub fn UA_FindServersRequest_copy(arg_src: [*c]const UA_FindServersRequest, arg_dst: [*c]UA_FindServersRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 149)))]);
}
pub fn UA_FindServersRequest_deleteMembers(arg_p: [*c]UA_FindServersRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 149)))]);
}
pub fn UA_FindServersRequest_clear(arg_p: [*c]UA_FindServersRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 149)))]);
}
pub fn UA_FindServersRequest_delete(arg_p: [*c]UA_FindServersRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 149)))]);
}
pub fn UA_FindServersRequest_equal(arg_p1: [*c]const UA_FindServersRequest, arg_p2: [*c]const UA_FindServersRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 149)))]) == UA_ORDER_EQ;
}
pub fn UA_FindServersResponse_init(arg_p: ?*UA_FindServersResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_FindServersResponse));
}
pub fn UA_FindServersResponse_new() callconv(.c) ?*UA_FindServersResponse {
    return @as(?*UA_FindServersResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 150)))]))));
}
pub fn UA_FindServersResponse_copy(arg_src: ?*const UA_FindServersResponse, arg_dst: ?*UA_FindServersResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 150)))]);
}
pub fn UA_FindServersResponse_deleteMembers(arg_p: ?*UA_FindServersResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 150)))]);
}
pub fn UA_FindServersResponse_clear(arg_p: ?*UA_FindServersResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 150)))]);
}
pub fn UA_FindServersResponse_delete(arg_p: ?*UA_FindServersResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 150)))]);
}
pub fn UA_FindServersResponse_equal(arg_p1: ?*const UA_FindServersResponse, arg_p2: ?*const UA_FindServersResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 150)))]) == UA_ORDER_EQ;
}
pub fn UA_ServerOnNetwork_init(arg_p: [*c]UA_ServerOnNetwork) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ServerOnNetwork));
}
pub fn UA_ServerOnNetwork_new() callconv(.c) [*c]UA_ServerOnNetwork {
    return @as([*c]UA_ServerOnNetwork, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 151)))]))));
}
pub fn UA_ServerOnNetwork_copy(arg_src: [*c]const UA_ServerOnNetwork, arg_dst: [*c]UA_ServerOnNetwork) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 151)))]);
}
pub fn UA_ServerOnNetwork_deleteMembers(arg_p: [*c]UA_ServerOnNetwork) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 151)))]);
}
pub fn UA_ServerOnNetwork_clear(arg_p: [*c]UA_ServerOnNetwork) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 151)))]);
}
pub fn UA_ServerOnNetwork_delete(arg_p: [*c]UA_ServerOnNetwork) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 151)))]);
}
pub fn UA_ServerOnNetwork_equal(arg_p1: [*c]const UA_ServerOnNetwork, arg_p2: [*c]const UA_ServerOnNetwork) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 151)))]) == UA_ORDER_EQ;
}
pub fn UA_FindServersOnNetworkRequest_init(arg_p: [*c]UA_FindServersOnNetworkRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_FindServersOnNetworkRequest));
}
pub fn UA_FindServersOnNetworkRequest_new() callconv(.c) [*c]UA_FindServersOnNetworkRequest {
    return @as([*c]UA_FindServersOnNetworkRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 152)))]))));
}
pub fn UA_FindServersOnNetworkRequest_copy(arg_src: [*c]const UA_FindServersOnNetworkRequest, arg_dst: [*c]UA_FindServersOnNetworkRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 152)))]);
}
pub fn UA_FindServersOnNetworkRequest_deleteMembers(arg_p: [*c]UA_FindServersOnNetworkRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 152)))]);
}
pub fn UA_FindServersOnNetworkRequest_clear(arg_p: [*c]UA_FindServersOnNetworkRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 152)))]);
}
pub fn UA_FindServersOnNetworkRequest_delete(arg_p: [*c]UA_FindServersOnNetworkRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 152)))]);
}
pub fn UA_FindServersOnNetworkRequest_equal(arg_p1: [*c]const UA_FindServersOnNetworkRequest, arg_p2: [*c]const UA_FindServersOnNetworkRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 152)))]) == UA_ORDER_EQ;
}
pub fn UA_FindServersOnNetworkResponse_init(arg_p: ?*UA_FindServersOnNetworkResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_FindServersOnNetworkResponse));
}
pub fn UA_FindServersOnNetworkResponse_new() callconv(.c) ?*UA_FindServersOnNetworkResponse {
    return @as(?*UA_FindServersOnNetworkResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 153)))]))));
}
pub fn UA_FindServersOnNetworkResponse_copy(arg_src: ?*const UA_FindServersOnNetworkResponse, arg_dst: ?*UA_FindServersOnNetworkResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 153)))]);
}
pub fn UA_FindServersOnNetworkResponse_deleteMembers(arg_p: ?*UA_FindServersOnNetworkResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 153)))]);
}
pub fn UA_FindServersOnNetworkResponse_clear(arg_p: ?*UA_FindServersOnNetworkResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 153)))]);
}
pub fn UA_FindServersOnNetworkResponse_delete(arg_p: ?*UA_FindServersOnNetworkResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 153)))]);
}
pub fn UA_FindServersOnNetworkResponse_equal(arg_p1: ?*const UA_FindServersOnNetworkResponse, arg_p2: ?*const UA_FindServersOnNetworkResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 153)))]) == UA_ORDER_EQ;
}
pub fn UA_ApplicationInstanceCertificate_init(arg_p: [*c]UA_ApplicationInstanceCertificate) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ApplicationInstanceCertificate));
}
pub fn UA_ApplicationInstanceCertificate_new() callconv(.c) [*c]UA_ApplicationInstanceCertificate {
    return @as([*c]UA_ApplicationInstanceCertificate, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 154)))]))));
}
pub fn UA_ApplicationInstanceCertificate_copy(arg_src: [*c]const UA_ApplicationInstanceCertificate, arg_dst: [*c]UA_ApplicationInstanceCertificate) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 154)))]);
}
pub fn UA_ApplicationInstanceCertificate_deleteMembers(arg_p: [*c]UA_ApplicationInstanceCertificate) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 154)))]);
}
pub fn UA_ApplicationInstanceCertificate_clear(arg_p: [*c]UA_ApplicationInstanceCertificate) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 154)))]);
}
pub fn UA_ApplicationInstanceCertificate_delete(arg_p: [*c]UA_ApplicationInstanceCertificate) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 154)))]);
}
pub fn UA_ApplicationInstanceCertificate_equal(arg_p1: [*c]const UA_ApplicationInstanceCertificate, arg_p2: [*c]const UA_ApplicationInstanceCertificate) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 154)))]) == UA_ORDER_EQ;
}
pub fn UA_MessageSecurityMode_init(arg_p: [*c]UA_MessageSecurityMode) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_MessageSecurityMode));
}
pub fn UA_MessageSecurityMode_new() callconv(.c) [*c]UA_MessageSecurityMode {
    return @as([*c]UA_MessageSecurityMode, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 155)))]))));
}
pub fn UA_MessageSecurityMode_copy(arg_src: [*c]const UA_MessageSecurityMode, arg_dst: [*c]UA_MessageSecurityMode) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 155)))]);
}
pub fn UA_MessageSecurityMode_deleteMembers(arg_p: [*c]UA_MessageSecurityMode) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 155)))]);
}
pub fn UA_MessageSecurityMode_clear(arg_p: [*c]UA_MessageSecurityMode) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 155)))]);
}
pub fn UA_MessageSecurityMode_delete(arg_p: [*c]UA_MessageSecurityMode) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 155)))]);
}
pub fn UA_MessageSecurityMode_equal(arg_p1: [*c]const UA_MessageSecurityMode, arg_p2: [*c]const UA_MessageSecurityMode) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 155)))]) == UA_ORDER_EQ;
}
pub fn UA_UserTokenType_init(arg_p: [*c]UA_UserTokenType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_UserTokenType));
}
pub fn UA_UserTokenType_new() callconv(.c) [*c]UA_UserTokenType {
    return @as([*c]UA_UserTokenType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 156)))]))));
}
pub fn UA_UserTokenType_copy(arg_src: [*c]const UA_UserTokenType, arg_dst: [*c]UA_UserTokenType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 156)))]);
}
pub fn UA_UserTokenType_deleteMembers(arg_p: [*c]UA_UserTokenType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 156)))]);
}
pub fn UA_UserTokenType_clear(arg_p: [*c]UA_UserTokenType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 156)))]);
}
pub fn UA_UserTokenType_delete(arg_p: [*c]UA_UserTokenType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 156)))]);
}
pub fn UA_UserTokenType_equal(arg_p1: [*c]const UA_UserTokenType, arg_p2: [*c]const UA_UserTokenType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 156)))]) == UA_ORDER_EQ;
}
pub fn UA_UserTokenPolicy_init(arg_p: [*c]UA_UserTokenPolicy) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_UserTokenPolicy));
}
pub fn UA_UserTokenPolicy_new() callconv(.c) [*c]UA_UserTokenPolicy {
    return @as([*c]UA_UserTokenPolicy, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 157)))]))));
}
pub fn UA_UserTokenPolicy_copy(arg_src: [*c]const UA_UserTokenPolicy, arg_dst: [*c]UA_UserTokenPolicy) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 157)))]);
}
pub fn UA_UserTokenPolicy_deleteMembers(arg_p: [*c]UA_UserTokenPolicy) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 157)))]);
}
pub fn UA_UserTokenPolicy_clear(arg_p: [*c]UA_UserTokenPolicy) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 157)))]);
}
pub fn UA_UserTokenPolicy_delete(arg_p: [*c]UA_UserTokenPolicy) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 157)))]);
}
pub fn UA_UserTokenPolicy_equal(arg_p1: [*c]const UA_UserTokenPolicy, arg_p2: [*c]const UA_UserTokenPolicy) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 157)))]) == UA_ORDER_EQ;
}
pub fn UA_EndpointDescription_init(arg_p: [*c]UA_EndpointDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_EndpointDescription));
}
pub fn UA_EndpointDescription_new() callconv(.c) [*c]UA_EndpointDescription {
    return @as([*c]UA_EndpointDescription, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 158)))]))));
}
pub fn UA_EndpointDescription_copy(arg_src: [*c]const UA_EndpointDescription, arg_dst: [*c]UA_EndpointDescription) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 158)))]);
}
pub fn UA_EndpointDescription_deleteMembers(arg_p: [*c]UA_EndpointDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 158)))]);
}
pub fn UA_EndpointDescription_clear(arg_p: [*c]UA_EndpointDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 158)))]);
}
pub fn UA_EndpointDescription_delete(arg_p: [*c]UA_EndpointDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 158)))]);
}
pub fn UA_EndpointDescription_equal(arg_p1: [*c]const UA_EndpointDescription, arg_p2: [*c]const UA_EndpointDescription) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 158)))]) == UA_ORDER_EQ;
}
pub fn UA_GetEndpointsRequest_init(arg_p: [*c]UA_GetEndpointsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_GetEndpointsRequest));
}
pub fn UA_GetEndpointsRequest_new() callconv(.c) [*c]UA_GetEndpointsRequest {
    return @as([*c]UA_GetEndpointsRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 159)))]))));
}
pub fn UA_GetEndpointsRequest_copy(arg_src: [*c]const UA_GetEndpointsRequest, arg_dst: [*c]UA_GetEndpointsRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 159)))]);
}
pub fn UA_GetEndpointsRequest_deleteMembers(arg_p: [*c]UA_GetEndpointsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 159)))]);
}
pub fn UA_GetEndpointsRequest_clear(arg_p: [*c]UA_GetEndpointsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 159)))]);
}
pub fn UA_GetEndpointsRequest_delete(arg_p: [*c]UA_GetEndpointsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 159)))]);
}
pub fn UA_GetEndpointsRequest_equal(arg_p1: [*c]const UA_GetEndpointsRequest, arg_p2: [*c]const UA_GetEndpointsRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 159)))]) == UA_ORDER_EQ;
}
pub fn UA_GetEndpointsResponse_init(arg_p: ?*UA_GetEndpointsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_GetEndpointsResponse));
}
pub fn UA_GetEndpointsResponse_new() callconv(.c) ?*UA_GetEndpointsResponse {
    return @as(?*UA_GetEndpointsResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 160)))]))));
}
pub fn UA_GetEndpointsResponse_copy(arg_src: ?*const UA_GetEndpointsResponse, arg_dst: ?*UA_GetEndpointsResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 160)))]);
}
pub fn UA_GetEndpointsResponse_deleteMembers(arg_p: ?*UA_GetEndpointsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 160)))]);
}
pub fn UA_GetEndpointsResponse_clear(arg_p: ?*UA_GetEndpointsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 160)))]);
}
pub fn UA_GetEndpointsResponse_delete(arg_p: ?*UA_GetEndpointsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 160)))]);
}
pub fn UA_GetEndpointsResponse_equal(arg_p1: ?*const UA_GetEndpointsResponse, arg_p2: ?*const UA_GetEndpointsResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 160)))]) == UA_ORDER_EQ;
}
pub fn UA_RegisteredServer_init(arg_p: [*c]UA_RegisteredServer) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_RegisteredServer));
}
pub fn UA_RegisteredServer_new() callconv(.c) [*c]UA_RegisteredServer {
    return @as([*c]UA_RegisteredServer, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 161)))]))));
}
pub fn UA_RegisteredServer_copy(arg_src: [*c]const UA_RegisteredServer, arg_dst: [*c]UA_RegisteredServer) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 161)))]);
}
pub fn UA_RegisteredServer_deleteMembers(arg_p: [*c]UA_RegisteredServer) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 161)))]);
}
pub fn UA_RegisteredServer_clear(arg_p: [*c]UA_RegisteredServer) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 161)))]);
}
pub fn UA_RegisteredServer_delete(arg_p: [*c]UA_RegisteredServer) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 161)))]);
}
pub fn UA_RegisteredServer_equal(arg_p1: [*c]const UA_RegisteredServer, arg_p2: [*c]const UA_RegisteredServer) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 161)))]) == UA_ORDER_EQ;
}
pub fn UA_RegisterServerRequest_init(arg_p: [*c]UA_RegisterServerRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_RegisterServerRequest));
}
pub fn UA_RegisterServerRequest_new() callconv(.c) [*c]UA_RegisterServerRequest {
    return @as([*c]UA_RegisterServerRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 162)))]))));
}
pub fn UA_RegisterServerRequest_copy(arg_src: [*c]const UA_RegisterServerRequest, arg_dst: [*c]UA_RegisterServerRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 162)))]);
}
pub fn UA_RegisterServerRequest_deleteMembers(arg_p: [*c]UA_RegisterServerRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 162)))]);
}
pub fn UA_RegisterServerRequest_clear(arg_p: [*c]UA_RegisterServerRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 162)))]);
}
pub fn UA_RegisterServerRequest_delete(arg_p: [*c]UA_RegisterServerRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 162)))]);
}
pub fn UA_RegisterServerRequest_equal(arg_p1: [*c]const UA_RegisterServerRequest, arg_p2: [*c]const UA_RegisterServerRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 162)))]) == UA_ORDER_EQ;
}
pub fn UA_RegisterServerResponse_init(arg_p: ?*UA_RegisterServerResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_RegisterServerResponse));
}
pub fn UA_RegisterServerResponse_new() callconv(.c) ?*UA_RegisterServerResponse {
    return @as(?*UA_RegisterServerResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 163)))]))));
}
pub fn UA_RegisterServerResponse_copy(arg_src: ?*const UA_RegisterServerResponse, arg_dst: ?*UA_RegisterServerResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 163)))]);
}
pub fn UA_RegisterServerResponse_deleteMembers(arg_p: ?*UA_RegisterServerResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 163)))]);
}
pub fn UA_RegisterServerResponse_clear(arg_p: ?*UA_RegisterServerResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 163)))]);
}
pub fn UA_RegisterServerResponse_delete(arg_p: ?*UA_RegisterServerResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 163)))]);
}
pub fn UA_RegisterServerResponse_equal(arg_p1: ?*const UA_RegisterServerResponse, arg_p2: ?*const UA_RegisterServerResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 163)))]) == UA_ORDER_EQ;
}
pub fn UA_MdnsDiscoveryConfiguration_init(arg_p: [*c]UA_MdnsDiscoveryConfiguration) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_MdnsDiscoveryConfiguration));
}
pub fn UA_MdnsDiscoveryConfiguration_new() callconv(.c) [*c]UA_MdnsDiscoveryConfiguration {
    return @as([*c]UA_MdnsDiscoveryConfiguration, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 164)))]))));
}
pub fn UA_MdnsDiscoveryConfiguration_copy(arg_src: [*c]const UA_MdnsDiscoveryConfiguration, arg_dst: [*c]UA_MdnsDiscoveryConfiguration) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 164)))]);
}
pub fn UA_MdnsDiscoveryConfiguration_deleteMembers(arg_p: [*c]UA_MdnsDiscoveryConfiguration) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 164)))]);
}
pub fn UA_MdnsDiscoveryConfiguration_clear(arg_p: [*c]UA_MdnsDiscoveryConfiguration) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 164)))]);
}
pub fn UA_MdnsDiscoveryConfiguration_delete(arg_p: [*c]UA_MdnsDiscoveryConfiguration) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 164)))]);
}
pub fn UA_MdnsDiscoveryConfiguration_equal(arg_p1: [*c]const UA_MdnsDiscoveryConfiguration, arg_p2: [*c]const UA_MdnsDiscoveryConfiguration) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 164)))]) == UA_ORDER_EQ;
}
pub fn UA_RegisterServer2Request_init(arg_p: [*c]UA_RegisterServer2Request) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_RegisterServer2Request));
}
pub fn UA_RegisterServer2Request_new() callconv(.c) [*c]UA_RegisterServer2Request {
    return @as([*c]UA_RegisterServer2Request, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 165)))]))));
}
pub fn UA_RegisterServer2Request_copy(arg_src: [*c]const UA_RegisterServer2Request, arg_dst: [*c]UA_RegisterServer2Request) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 165)))]);
}
pub fn UA_RegisterServer2Request_deleteMembers(arg_p: [*c]UA_RegisterServer2Request) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 165)))]);
}
pub fn UA_RegisterServer2Request_clear(arg_p: [*c]UA_RegisterServer2Request) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 165)))]);
}
pub fn UA_RegisterServer2Request_delete(arg_p: [*c]UA_RegisterServer2Request) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 165)))]);
}
pub fn UA_RegisterServer2Request_equal(arg_p1: [*c]const UA_RegisterServer2Request, arg_p2: [*c]const UA_RegisterServer2Request) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 165)))]) == UA_ORDER_EQ;
}
pub fn UA_RegisterServer2Response_init(arg_p: ?*UA_RegisterServer2Response) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_RegisterServer2Response));
}
pub fn UA_RegisterServer2Response_new() callconv(.c) ?*UA_RegisterServer2Response {
    return @as(?*UA_RegisterServer2Response, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 166)))]))));
}
pub fn UA_RegisterServer2Response_copy(arg_src: ?*const UA_RegisterServer2Response, arg_dst: ?*UA_RegisterServer2Response) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 166)))]);
}
pub fn UA_RegisterServer2Response_deleteMembers(arg_p: ?*UA_RegisterServer2Response) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 166)))]);
}
pub fn UA_RegisterServer2Response_clear(arg_p: ?*UA_RegisterServer2Response) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 166)))]);
}
pub fn UA_RegisterServer2Response_delete(arg_p: ?*UA_RegisterServer2Response) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 166)))]);
}
pub fn UA_RegisterServer2Response_equal(arg_p1: ?*const UA_RegisterServer2Response, arg_p2: ?*const UA_RegisterServer2Response) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 166)))]) == UA_ORDER_EQ;
}
pub fn UA_SecurityTokenRequestType_init(arg_p: [*c]UA_SecurityTokenRequestType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_SecurityTokenRequestType));
}
pub fn UA_SecurityTokenRequestType_new() callconv(.c) [*c]UA_SecurityTokenRequestType {
    return @as([*c]UA_SecurityTokenRequestType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 167)))]))));
}
pub fn UA_SecurityTokenRequestType_copy(arg_src: [*c]const UA_SecurityTokenRequestType, arg_dst: [*c]UA_SecurityTokenRequestType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 167)))]);
}
pub fn UA_SecurityTokenRequestType_deleteMembers(arg_p: [*c]UA_SecurityTokenRequestType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 167)))]);
}
pub fn UA_SecurityTokenRequestType_clear(arg_p: [*c]UA_SecurityTokenRequestType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 167)))]);
}
pub fn UA_SecurityTokenRequestType_delete(arg_p: [*c]UA_SecurityTokenRequestType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 167)))]);
}
pub fn UA_SecurityTokenRequestType_equal(arg_p1: [*c]const UA_SecurityTokenRequestType, arg_p2: [*c]const UA_SecurityTokenRequestType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 167)))]) == UA_ORDER_EQ;
}
pub fn UA_ChannelSecurityToken_init(arg_p: [*c]UA_ChannelSecurityToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ChannelSecurityToken));
}
pub fn UA_ChannelSecurityToken_new() callconv(.c) [*c]UA_ChannelSecurityToken {
    return @as([*c]UA_ChannelSecurityToken, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 168)))]))));
}
pub fn UA_ChannelSecurityToken_copy(arg_src: [*c]const UA_ChannelSecurityToken, arg_dst: [*c]UA_ChannelSecurityToken) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 168)))]);
}
pub fn UA_ChannelSecurityToken_deleteMembers(arg_p: [*c]UA_ChannelSecurityToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 168)))]);
}
pub fn UA_ChannelSecurityToken_clear(arg_p: [*c]UA_ChannelSecurityToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 168)))]);
}
pub fn UA_ChannelSecurityToken_delete(arg_p: [*c]UA_ChannelSecurityToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 168)))]);
}
pub fn UA_ChannelSecurityToken_equal(arg_p1: [*c]const UA_ChannelSecurityToken, arg_p2: [*c]const UA_ChannelSecurityToken) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 168)))]) == UA_ORDER_EQ;
}
pub fn UA_OpenSecureChannelRequest_init(arg_p: [*c]UA_OpenSecureChannelRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_OpenSecureChannelRequest));
}
pub fn UA_OpenSecureChannelRequest_new() callconv(.c) [*c]UA_OpenSecureChannelRequest {
    return @as([*c]UA_OpenSecureChannelRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 169)))]))));
}
pub fn UA_OpenSecureChannelRequest_copy(arg_src: [*c]const UA_OpenSecureChannelRequest, arg_dst: [*c]UA_OpenSecureChannelRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 169)))]);
}
pub fn UA_OpenSecureChannelRequest_deleteMembers(arg_p: [*c]UA_OpenSecureChannelRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 169)))]);
}
pub fn UA_OpenSecureChannelRequest_clear(arg_p: [*c]UA_OpenSecureChannelRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 169)))]);
}
pub fn UA_OpenSecureChannelRequest_delete(arg_p: [*c]UA_OpenSecureChannelRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 169)))]);
}
pub fn UA_OpenSecureChannelRequest_equal(arg_p1: [*c]const UA_OpenSecureChannelRequest, arg_p2: [*c]const UA_OpenSecureChannelRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 169)))]) == UA_ORDER_EQ;
}
pub fn UA_OpenSecureChannelResponse_init(arg_p: ?*UA_OpenSecureChannelResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_OpenSecureChannelResponse));
}
pub fn UA_OpenSecureChannelResponse_new() callconv(.c) ?*UA_OpenSecureChannelResponse {
    return @as(?*UA_OpenSecureChannelResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 170)))]))));
}
pub fn UA_OpenSecureChannelResponse_copy(arg_src: ?*const UA_OpenSecureChannelResponse, arg_dst: ?*UA_OpenSecureChannelResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 170)))]);
}
pub fn UA_OpenSecureChannelResponse_deleteMembers(arg_p: ?*UA_OpenSecureChannelResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 170)))]);
}
pub fn UA_OpenSecureChannelResponse_clear(arg_p: ?*UA_OpenSecureChannelResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 170)))]);
}
pub fn UA_OpenSecureChannelResponse_delete(arg_p: ?*UA_OpenSecureChannelResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 170)))]);
}
pub fn UA_OpenSecureChannelResponse_equal(arg_p1: ?*const UA_OpenSecureChannelResponse, arg_p2: ?*const UA_OpenSecureChannelResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 170)))]) == UA_ORDER_EQ;
}
pub fn UA_CloseSecureChannelRequest_init(arg_p: [*c]UA_CloseSecureChannelRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_CloseSecureChannelRequest));
}
pub fn UA_CloseSecureChannelRequest_new() callconv(.c) [*c]UA_CloseSecureChannelRequest {
    return @as([*c]UA_CloseSecureChannelRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 171)))]))));
}
pub fn UA_CloseSecureChannelRequest_copy(arg_src: [*c]const UA_CloseSecureChannelRequest, arg_dst: [*c]UA_CloseSecureChannelRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 171)))]);
}
pub fn UA_CloseSecureChannelRequest_deleteMembers(arg_p: [*c]UA_CloseSecureChannelRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 171)))]);
}
pub fn UA_CloseSecureChannelRequest_clear(arg_p: [*c]UA_CloseSecureChannelRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 171)))]);
}
pub fn UA_CloseSecureChannelRequest_delete(arg_p: [*c]UA_CloseSecureChannelRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 171)))]);
}
pub fn UA_CloseSecureChannelRequest_equal(arg_p1: [*c]const UA_CloseSecureChannelRequest, arg_p2: [*c]const UA_CloseSecureChannelRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 171)))]) == UA_ORDER_EQ;
}
pub fn UA_CloseSecureChannelResponse_init(arg_p: ?*UA_CloseSecureChannelResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_CloseSecureChannelResponse));
}
pub fn UA_CloseSecureChannelResponse_new() callconv(.c) ?*UA_CloseSecureChannelResponse {
    return @as(?*UA_CloseSecureChannelResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 172)))]))));
}
pub fn UA_CloseSecureChannelResponse_copy(arg_src: ?*const UA_CloseSecureChannelResponse, arg_dst: ?*UA_CloseSecureChannelResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 172)))]);
}
pub fn UA_CloseSecureChannelResponse_deleteMembers(arg_p: ?*UA_CloseSecureChannelResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 172)))]);
}
pub fn UA_CloseSecureChannelResponse_clear(arg_p: ?*UA_CloseSecureChannelResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 172)))]);
}
pub fn UA_CloseSecureChannelResponse_delete(arg_p: ?*UA_CloseSecureChannelResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 172)))]);
}
pub fn UA_CloseSecureChannelResponse_equal(arg_p1: ?*const UA_CloseSecureChannelResponse, arg_p2: ?*const UA_CloseSecureChannelResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 172)))]) == UA_ORDER_EQ;
}
pub fn UA_SignedSoftwareCertificate_init(arg_p: [*c]UA_SignedSoftwareCertificate) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_SignedSoftwareCertificate));
}
pub fn UA_SignedSoftwareCertificate_new() callconv(.c) [*c]UA_SignedSoftwareCertificate {
    return @as([*c]UA_SignedSoftwareCertificate, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 173)))]))));
}
pub fn UA_SignedSoftwareCertificate_copy(arg_src: [*c]const UA_SignedSoftwareCertificate, arg_dst: [*c]UA_SignedSoftwareCertificate) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 173)))]);
}
pub fn UA_SignedSoftwareCertificate_deleteMembers(arg_p: [*c]UA_SignedSoftwareCertificate) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 173)))]);
}
pub fn UA_SignedSoftwareCertificate_clear(arg_p: [*c]UA_SignedSoftwareCertificate) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 173)))]);
}
pub fn UA_SignedSoftwareCertificate_delete(arg_p: [*c]UA_SignedSoftwareCertificate) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 173)))]);
}
pub fn UA_SignedSoftwareCertificate_equal(arg_p1: [*c]const UA_SignedSoftwareCertificate, arg_p2: [*c]const UA_SignedSoftwareCertificate) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 173)))]) == UA_ORDER_EQ;
}
pub fn UA_SessionAuthenticationToken_init(arg_p: [*c]UA_SessionAuthenticationToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_SessionAuthenticationToken));
}
pub fn UA_SessionAuthenticationToken_new() callconv(.c) [*c]UA_SessionAuthenticationToken {
    return @as([*c]UA_SessionAuthenticationToken, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 174)))]))));
}
pub fn UA_SessionAuthenticationToken_copy(arg_src: [*c]const UA_SessionAuthenticationToken, arg_dst: [*c]UA_SessionAuthenticationToken) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 174)))]);
}
pub fn UA_SessionAuthenticationToken_deleteMembers(arg_p: [*c]UA_SessionAuthenticationToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 174)))]);
}
pub fn UA_SessionAuthenticationToken_clear(arg_p: [*c]UA_SessionAuthenticationToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 174)))]);
}
pub fn UA_SessionAuthenticationToken_delete(arg_p: [*c]UA_SessionAuthenticationToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 174)))]);
}
pub fn UA_SessionAuthenticationToken_equal(arg_p1: [*c]const UA_SessionAuthenticationToken, arg_p2: [*c]const UA_SessionAuthenticationToken) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 174)))]) == UA_ORDER_EQ;
}
pub fn UA_SignatureData_init(arg_p: [*c]UA_SignatureData) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_SignatureData));
}
pub fn UA_SignatureData_new() callconv(.c) [*c]UA_SignatureData {
    return @as([*c]UA_SignatureData, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 175)))]))));
}
pub fn UA_SignatureData_copy(arg_src: [*c]const UA_SignatureData, arg_dst: [*c]UA_SignatureData) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 175)))]);
}
pub fn UA_SignatureData_deleteMembers(arg_p: [*c]UA_SignatureData) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 175)))]);
}
pub fn UA_SignatureData_clear(arg_p: [*c]UA_SignatureData) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 175)))]);
}
pub fn UA_SignatureData_delete(arg_p: [*c]UA_SignatureData) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 175)))]);
}
pub fn UA_SignatureData_equal(arg_p1: [*c]const UA_SignatureData, arg_p2: [*c]const UA_SignatureData) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 175)))]) == UA_ORDER_EQ;
}
pub fn UA_CreateSessionRequest_init(arg_p: [*c]UA_CreateSessionRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_CreateSessionRequest));
}
pub fn UA_CreateSessionRequest_new() callconv(.c) [*c]UA_CreateSessionRequest {
    return @as([*c]UA_CreateSessionRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 176)))]))));
}
pub fn UA_CreateSessionRequest_copy(arg_src: [*c]const UA_CreateSessionRequest, arg_dst: [*c]UA_CreateSessionRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 176)))]);
}
pub fn UA_CreateSessionRequest_deleteMembers(arg_p: [*c]UA_CreateSessionRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 176)))]);
}
pub fn UA_CreateSessionRequest_clear(arg_p: [*c]UA_CreateSessionRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 176)))]);
}
pub fn UA_CreateSessionRequest_delete(arg_p: [*c]UA_CreateSessionRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 176)))]);
}
pub fn UA_CreateSessionRequest_equal(arg_p1: [*c]const UA_CreateSessionRequest, arg_p2: [*c]const UA_CreateSessionRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 176)))]) == UA_ORDER_EQ;
}
pub fn UA_CreateSessionResponse_init(arg_p: ?*UA_CreateSessionResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_CreateSessionResponse));
}
pub fn UA_CreateSessionResponse_new() callconv(.c) ?*UA_CreateSessionResponse {
    return @as(?*UA_CreateSessionResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 177)))]))));
}
pub fn UA_CreateSessionResponse_copy(arg_src: ?*const UA_CreateSessionResponse, arg_dst: ?*UA_CreateSessionResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 177)))]);
}
pub fn UA_CreateSessionResponse_deleteMembers(arg_p: ?*UA_CreateSessionResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 177)))]);
}
pub fn UA_CreateSessionResponse_clear(arg_p: ?*UA_CreateSessionResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 177)))]);
}
pub fn UA_CreateSessionResponse_delete(arg_p: ?*UA_CreateSessionResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 177)))]);
}
pub fn UA_CreateSessionResponse_equal(arg_p1: ?*const UA_CreateSessionResponse, arg_p2: ?*const UA_CreateSessionResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 177)))]) == UA_ORDER_EQ;
}
pub fn UA_UserIdentityToken_init(arg_p: [*c]UA_UserIdentityToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_UserIdentityToken));
}
pub fn UA_UserIdentityToken_new() callconv(.c) [*c]UA_UserIdentityToken {
    return @as([*c]UA_UserIdentityToken, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 178)))]))));
}
pub fn UA_UserIdentityToken_copy(arg_src: [*c]const UA_UserIdentityToken, arg_dst: [*c]UA_UserIdentityToken) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 178)))]);
}
pub fn UA_UserIdentityToken_deleteMembers(arg_p: [*c]UA_UserIdentityToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 178)))]);
}
pub fn UA_UserIdentityToken_clear(arg_p: [*c]UA_UserIdentityToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 178)))]);
}
pub fn UA_UserIdentityToken_delete(arg_p: [*c]UA_UserIdentityToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 178)))]);
}
pub fn UA_UserIdentityToken_equal(arg_p1: [*c]const UA_UserIdentityToken, arg_p2: [*c]const UA_UserIdentityToken) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 178)))]) == UA_ORDER_EQ;
}
pub fn UA_AnonymousIdentityToken_init(arg_p: [*c]UA_AnonymousIdentityToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_AnonymousIdentityToken));
}
pub fn UA_AnonymousIdentityToken_new() callconv(.c) [*c]UA_AnonymousIdentityToken {
    return @as([*c]UA_AnonymousIdentityToken, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 179)))]))));
}
pub fn UA_AnonymousIdentityToken_copy(arg_src: [*c]const UA_AnonymousIdentityToken, arg_dst: [*c]UA_AnonymousIdentityToken) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 179)))]);
}
pub fn UA_AnonymousIdentityToken_deleteMembers(arg_p: [*c]UA_AnonymousIdentityToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 179)))]);
}
pub fn UA_AnonymousIdentityToken_clear(arg_p: [*c]UA_AnonymousIdentityToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 179)))]);
}
pub fn UA_AnonymousIdentityToken_delete(arg_p: [*c]UA_AnonymousIdentityToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 179)))]);
}
pub fn UA_AnonymousIdentityToken_equal(arg_p1: [*c]const UA_AnonymousIdentityToken, arg_p2: [*c]const UA_AnonymousIdentityToken) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 179)))]) == UA_ORDER_EQ;
}
pub fn UA_UserNameIdentityToken_init(arg_p: [*c]UA_UserNameIdentityToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_UserNameIdentityToken));
}
pub fn UA_UserNameIdentityToken_new() callconv(.c) [*c]UA_UserNameIdentityToken {
    return @as([*c]UA_UserNameIdentityToken, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 180)))]))));
}
pub fn UA_UserNameIdentityToken_copy(arg_src: [*c]const UA_UserNameIdentityToken, arg_dst: [*c]UA_UserNameIdentityToken) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 180)))]);
}
pub fn UA_UserNameIdentityToken_deleteMembers(arg_p: [*c]UA_UserNameIdentityToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 180)))]);
}
pub fn UA_UserNameIdentityToken_clear(arg_p: [*c]UA_UserNameIdentityToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 180)))]);
}
pub fn UA_UserNameIdentityToken_delete(arg_p: [*c]UA_UserNameIdentityToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 180)))]);
}
pub fn UA_UserNameIdentityToken_equal(arg_p1: [*c]const UA_UserNameIdentityToken, arg_p2: [*c]const UA_UserNameIdentityToken) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 180)))]) == UA_ORDER_EQ;
}
pub fn UA_X509IdentityToken_init(arg_p: [*c]UA_X509IdentityToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_X509IdentityToken));
}
pub fn UA_X509IdentityToken_new() callconv(.c) [*c]UA_X509IdentityToken {
    return @as([*c]UA_X509IdentityToken, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 181)))]))));
}
pub fn UA_X509IdentityToken_copy(arg_src: [*c]const UA_X509IdentityToken, arg_dst: [*c]UA_X509IdentityToken) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 181)))]);
}
pub fn UA_X509IdentityToken_deleteMembers(arg_p: [*c]UA_X509IdentityToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 181)))]);
}
pub fn UA_X509IdentityToken_clear(arg_p: [*c]UA_X509IdentityToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 181)))]);
}
pub fn UA_X509IdentityToken_delete(arg_p: [*c]UA_X509IdentityToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 181)))]);
}
pub fn UA_X509IdentityToken_equal(arg_p1: [*c]const UA_X509IdentityToken, arg_p2: [*c]const UA_X509IdentityToken) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 181)))]) == UA_ORDER_EQ;
}
pub fn UA_IssuedIdentityToken_init(arg_p: [*c]UA_IssuedIdentityToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_IssuedIdentityToken));
}
pub fn UA_IssuedIdentityToken_new() callconv(.c) [*c]UA_IssuedIdentityToken {
    return @as([*c]UA_IssuedIdentityToken, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 182)))]))));
}
pub fn UA_IssuedIdentityToken_copy(arg_src: [*c]const UA_IssuedIdentityToken, arg_dst: [*c]UA_IssuedIdentityToken) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 182)))]);
}
pub fn UA_IssuedIdentityToken_deleteMembers(arg_p: [*c]UA_IssuedIdentityToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 182)))]);
}
pub fn UA_IssuedIdentityToken_clear(arg_p: [*c]UA_IssuedIdentityToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 182)))]);
}
pub fn UA_IssuedIdentityToken_delete(arg_p: [*c]UA_IssuedIdentityToken) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 182)))]);
}
pub fn UA_IssuedIdentityToken_equal(arg_p1: [*c]const UA_IssuedIdentityToken, arg_p2: [*c]const UA_IssuedIdentityToken) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 182)))]) == UA_ORDER_EQ;
}
pub fn UA_RsaEncryptedSecret_init(arg_p: [*c]UA_RsaEncryptedSecret) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_RsaEncryptedSecret));
}
pub fn UA_RsaEncryptedSecret_new() callconv(.c) [*c]UA_RsaEncryptedSecret {
    return @as([*c]UA_RsaEncryptedSecret, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 183)))]))));
}
pub fn UA_RsaEncryptedSecret_copy(arg_src: [*c]const UA_RsaEncryptedSecret, arg_dst: [*c]UA_RsaEncryptedSecret) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 183)))]);
}
pub fn UA_RsaEncryptedSecret_deleteMembers(arg_p: [*c]UA_RsaEncryptedSecret) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 183)))]);
}
pub fn UA_RsaEncryptedSecret_clear(arg_p: [*c]UA_RsaEncryptedSecret) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 183)))]);
}
pub fn UA_RsaEncryptedSecret_delete(arg_p: [*c]UA_RsaEncryptedSecret) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 183)))]);
}
pub fn UA_RsaEncryptedSecret_equal(arg_p1: [*c]const UA_RsaEncryptedSecret, arg_p2: [*c]const UA_RsaEncryptedSecret) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 183)))]) == UA_ORDER_EQ;
}
pub fn UA_EccEncryptedSecret_init(arg_p: [*c]UA_EccEncryptedSecret) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_EccEncryptedSecret));
}
pub fn UA_EccEncryptedSecret_new() callconv(.c) [*c]UA_EccEncryptedSecret {
    return @as([*c]UA_EccEncryptedSecret, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 184)))]))));
}
pub fn UA_EccEncryptedSecret_copy(arg_src: [*c]const UA_EccEncryptedSecret, arg_dst: [*c]UA_EccEncryptedSecret) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 184)))]);
}
pub fn UA_EccEncryptedSecret_deleteMembers(arg_p: [*c]UA_EccEncryptedSecret) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 184)))]);
}
pub fn UA_EccEncryptedSecret_clear(arg_p: [*c]UA_EccEncryptedSecret) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 184)))]);
}
pub fn UA_EccEncryptedSecret_delete(arg_p: [*c]UA_EccEncryptedSecret) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 184)))]);
}
pub fn UA_EccEncryptedSecret_equal(arg_p1: [*c]const UA_EccEncryptedSecret, arg_p2: [*c]const UA_EccEncryptedSecret) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 184)))]) == UA_ORDER_EQ;
}
pub fn UA_ActivateSessionRequest_init(arg_p: [*c]UA_ActivateSessionRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ActivateSessionRequest));
}
pub fn UA_ActivateSessionRequest_new() callconv(.c) [*c]UA_ActivateSessionRequest {
    return @as([*c]UA_ActivateSessionRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 185)))]))));
}
pub fn UA_ActivateSessionRequest_copy(arg_src: [*c]const UA_ActivateSessionRequest, arg_dst: [*c]UA_ActivateSessionRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 185)))]);
}
pub fn UA_ActivateSessionRequest_deleteMembers(arg_p: [*c]UA_ActivateSessionRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 185)))]);
}
pub fn UA_ActivateSessionRequest_clear(arg_p: [*c]UA_ActivateSessionRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 185)))]);
}
pub fn UA_ActivateSessionRequest_delete(arg_p: [*c]UA_ActivateSessionRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 185)))]);
}
pub fn UA_ActivateSessionRequest_equal(arg_p1: [*c]const UA_ActivateSessionRequest, arg_p2: [*c]const UA_ActivateSessionRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 185)))]) == UA_ORDER_EQ;
}
pub fn UA_ActivateSessionResponse_init(arg_p: ?*UA_ActivateSessionResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ActivateSessionResponse));
}
pub fn UA_ActivateSessionResponse_new() callconv(.c) ?*UA_ActivateSessionResponse {
    return @as(?*UA_ActivateSessionResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 186)))]))));
}
pub fn UA_ActivateSessionResponse_copy(arg_src: ?*const UA_ActivateSessionResponse, arg_dst: ?*UA_ActivateSessionResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 186)))]);
}
pub fn UA_ActivateSessionResponse_deleteMembers(arg_p: ?*UA_ActivateSessionResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 186)))]);
}
pub fn UA_ActivateSessionResponse_clear(arg_p: ?*UA_ActivateSessionResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 186)))]);
}
pub fn UA_ActivateSessionResponse_delete(arg_p: ?*UA_ActivateSessionResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 186)))]);
}
pub fn UA_ActivateSessionResponse_equal(arg_p1: ?*const UA_ActivateSessionResponse, arg_p2: ?*const UA_ActivateSessionResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 186)))]) == UA_ORDER_EQ;
}
pub fn UA_CloseSessionRequest_init(arg_p: [*c]UA_CloseSessionRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_CloseSessionRequest));
}
pub fn UA_CloseSessionRequest_new() callconv(.c) [*c]UA_CloseSessionRequest {
    return @as([*c]UA_CloseSessionRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 187)))]))));
}
pub fn UA_CloseSessionRequest_copy(arg_src: [*c]const UA_CloseSessionRequest, arg_dst: [*c]UA_CloseSessionRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 187)))]);
}
pub fn UA_CloseSessionRequest_deleteMembers(arg_p: [*c]UA_CloseSessionRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 187)))]);
}
pub fn UA_CloseSessionRequest_clear(arg_p: [*c]UA_CloseSessionRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 187)))]);
}
pub fn UA_CloseSessionRequest_delete(arg_p: [*c]UA_CloseSessionRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 187)))]);
}
pub fn UA_CloseSessionRequest_equal(arg_p1: [*c]const UA_CloseSessionRequest, arg_p2: [*c]const UA_CloseSessionRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 187)))]) == UA_ORDER_EQ;
}
pub fn UA_CloseSessionResponse_init(arg_p: ?*UA_CloseSessionResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_CloseSessionResponse));
}
pub fn UA_CloseSessionResponse_new() callconv(.c) ?*UA_CloseSessionResponse {
    return @as(?*UA_CloseSessionResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 188)))]))));
}
pub fn UA_CloseSessionResponse_copy(arg_src: ?*const UA_CloseSessionResponse, arg_dst: ?*UA_CloseSessionResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 188)))]);
}
pub fn UA_CloseSessionResponse_deleteMembers(arg_p: ?*UA_CloseSessionResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 188)))]);
}
pub fn UA_CloseSessionResponse_clear(arg_p: ?*UA_CloseSessionResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 188)))]);
}
pub fn UA_CloseSessionResponse_delete(arg_p: ?*UA_CloseSessionResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 188)))]);
}
pub fn UA_CloseSessionResponse_equal(arg_p1: ?*const UA_CloseSessionResponse, arg_p2: ?*const UA_CloseSessionResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 188)))]) == UA_ORDER_EQ;
}
pub fn UA_CancelRequest_init(arg_p: [*c]UA_CancelRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_CancelRequest));
}
pub fn UA_CancelRequest_new() callconv(.c) [*c]UA_CancelRequest {
    return @as([*c]UA_CancelRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 189)))]))));
}
pub fn UA_CancelRequest_copy(arg_src: [*c]const UA_CancelRequest, arg_dst: [*c]UA_CancelRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 189)))]);
}
pub fn UA_CancelRequest_deleteMembers(arg_p: [*c]UA_CancelRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 189)))]);
}
pub fn UA_CancelRequest_clear(arg_p: [*c]UA_CancelRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 189)))]);
}
pub fn UA_CancelRequest_delete(arg_p: [*c]UA_CancelRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 189)))]);
}
pub fn UA_CancelRequest_equal(arg_p1: [*c]const UA_CancelRequest, arg_p2: [*c]const UA_CancelRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 189)))]) == UA_ORDER_EQ;
}
pub fn UA_CancelResponse_init(arg_p: ?*UA_CancelResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_CancelResponse));
}
pub fn UA_CancelResponse_new() callconv(.c) ?*UA_CancelResponse {
    return @as(?*UA_CancelResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 190)))]))));
}
pub fn UA_CancelResponse_copy(arg_src: ?*const UA_CancelResponse, arg_dst: ?*UA_CancelResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 190)))]);
}
pub fn UA_CancelResponse_deleteMembers(arg_p: ?*UA_CancelResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 190)))]);
}
pub fn UA_CancelResponse_clear(arg_p: ?*UA_CancelResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 190)))]);
}
pub fn UA_CancelResponse_delete(arg_p: ?*UA_CancelResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 190)))]);
}
pub fn UA_CancelResponse_equal(arg_p1: ?*const UA_CancelResponse, arg_p2: ?*const UA_CancelResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 190)))]) == UA_ORDER_EQ;
}
pub fn UA_NodeAttributesMask_init(arg_p: [*c]UA_NodeAttributesMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_NodeAttributesMask));
}
pub fn UA_NodeAttributesMask_new() callconv(.c) [*c]UA_NodeAttributesMask {
    return @as([*c]UA_NodeAttributesMask, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 191)))]))));
}
pub fn UA_NodeAttributesMask_copy(arg_src: [*c]const UA_NodeAttributesMask, arg_dst: [*c]UA_NodeAttributesMask) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 191)))]);
}
pub fn UA_NodeAttributesMask_deleteMembers(arg_p: [*c]UA_NodeAttributesMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 191)))]);
}
pub fn UA_NodeAttributesMask_clear(arg_p: [*c]UA_NodeAttributesMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 191)))]);
}
pub fn UA_NodeAttributesMask_delete(arg_p: [*c]UA_NodeAttributesMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 191)))]);
}
pub fn UA_NodeAttributesMask_equal(arg_p1: [*c]const UA_NodeAttributesMask, arg_p2: [*c]const UA_NodeAttributesMask) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 191)))]) == UA_ORDER_EQ;
}
pub fn UA_NodeAttributes_init(arg_p: [*c]UA_NodeAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_NodeAttributes));
}
pub fn UA_NodeAttributes_new() callconv(.c) [*c]UA_NodeAttributes {
    return @as([*c]UA_NodeAttributes, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 192)))]))));
}
pub fn UA_NodeAttributes_copy(arg_src: [*c]const UA_NodeAttributes, arg_dst: [*c]UA_NodeAttributes) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 192)))]);
}
pub fn UA_NodeAttributes_deleteMembers(arg_p: [*c]UA_NodeAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 192)))]);
}
pub fn UA_NodeAttributes_clear(arg_p: [*c]UA_NodeAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 192)))]);
}
pub fn UA_NodeAttributes_delete(arg_p: [*c]UA_NodeAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 192)))]);
}
pub fn UA_NodeAttributes_equal(arg_p1: [*c]const UA_NodeAttributes, arg_p2: [*c]const UA_NodeAttributes) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 192)))]) == UA_ORDER_EQ;
}
pub fn UA_ObjectAttributes_init(arg_p: [*c]UA_ObjectAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ObjectAttributes));
}
pub fn UA_ObjectAttributes_new() callconv(.c) [*c]UA_ObjectAttributes {
    return @as([*c]UA_ObjectAttributes, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 193)))]))));
}
pub fn UA_ObjectAttributes_copy(arg_src: [*c]const UA_ObjectAttributes, arg_dst: [*c]UA_ObjectAttributes) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 193)))]);
}
pub fn UA_ObjectAttributes_deleteMembers(arg_p: [*c]UA_ObjectAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 193)))]);
}
pub fn UA_ObjectAttributes_clear(arg_p: [*c]UA_ObjectAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 193)))]);
}
pub fn UA_ObjectAttributes_delete(arg_p: [*c]UA_ObjectAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 193)))]);
}
pub fn UA_ObjectAttributes_equal(arg_p1: [*c]const UA_ObjectAttributes, arg_p2: [*c]const UA_ObjectAttributes) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 193)))]) == UA_ORDER_EQ;
}
pub fn UA_VariableAttributes_init(arg_p: [*c]UA_VariableAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_VariableAttributes));
}
pub fn UA_VariableAttributes_new() callconv(.c) [*c]UA_VariableAttributes {
    return @as([*c]UA_VariableAttributes, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 194)))]))));
}
pub fn UA_VariableAttributes_copy(arg_src: [*c]const UA_VariableAttributes, arg_dst: [*c]UA_VariableAttributes) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 194)))]);
}
pub fn UA_VariableAttributes_deleteMembers(arg_p: [*c]UA_VariableAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 194)))]);
}
pub fn UA_VariableAttributes_clear(arg_p: [*c]UA_VariableAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 194)))]);
}
pub fn UA_VariableAttributes_delete(arg_p: [*c]UA_VariableAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 194)))]);
}
pub fn UA_VariableAttributes_equal(arg_p1: [*c]const UA_VariableAttributes, arg_p2: [*c]const UA_VariableAttributes) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 194)))]) == UA_ORDER_EQ;
}
pub fn UA_MethodAttributes_init(arg_p: [*c]UA_MethodAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_MethodAttributes));
}
pub fn UA_MethodAttributes_new() callconv(.c) [*c]UA_MethodAttributes {
    return @as([*c]UA_MethodAttributes, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 195)))]))));
}
pub fn UA_MethodAttributes_copy(arg_src: [*c]const UA_MethodAttributes, arg_dst: [*c]UA_MethodAttributes) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 195)))]);
}
pub fn UA_MethodAttributes_deleteMembers(arg_p: [*c]UA_MethodAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 195)))]);
}
pub fn UA_MethodAttributes_clear(arg_p: [*c]UA_MethodAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 195)))]);
}
pub fn UA_MethodAttributes_delete(arg_p: [*c]UA_MethodAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 195)))]);
}
pub fn UA_MethodAttributes_equal(arg_p1: [*c]const UA_MethodAttributes, arg_p2: [*c]const UA_MethodAttributes) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 195)))]) == UA_ORDER_EQ;
}
pub fn UA_ObjectTypeAttributes_init(arg_p: [*c]UA_ObjectTypeAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ObjectTypeAttributes));
}
pub fn UA_ObjectTypeAttributes_new() callconv(.c) [*c]UA_ObjectTypeAttributes {
    return @as([*c]UA_ObjectTypeAttributes, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 196)))]))));
}
pub fn UA_ObjectTypeAttributes_copy(arg_src: [*c]const UA_ObjectTypeAttributes, arg_dst: [*c]UA_ObjectTypeAttributes) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 196)))]);
}
pub fn UA_ObjectTypeAttributes_deleteMembers(arg_p: [*c]UA_ObjectTypeAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 196)))]);
}
pub fn UA_ObjectTypeAttributes_clear(arg_p: [*c]UA_ObjectTypeAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 196)))]);
}
pub fn UA_ObjectTypeAttributes_delete(arg_p: [*c]UA_ObjectTypeAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 196)))]);
}
pub fn UA_ObjectTypeAttributes_equal(arg_p1: [*c]const UA_ObjectTypeAttributes, arg_p2: [*c]const UA_ObjectTypeAttributes) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 196)))]) == UA_ORDER_EQ;
}
pub fn UA_VariableTypeAttributes_init(arg_p: [*c]UA_VariableTypeAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_VariableTypeAttributes));
}
pub fn UA_VariableTypeAttributes_new() callconv(.c) [*c]UA_VariableTypeAttributes {
    return @as([*c]UA_VariableTypeAttributes, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 197)))]))));
}
pub fn UA_VariableTypeAttributes_copy(arg_src: [*c]const UA_VariableTypeAttributes, arg_dst: [*c]UA_VariableTypeAttributes) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 197)))]);
}
pub fn UA_VariableTypeAttributes_deleteMembers(arg_p: [*c]UA_VariableTypeAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 197)))]);
}
pub fn UA_VariableTypeAttributes_clear(arg_p: [*c]UA_VariableTypeAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 197)))]);
}
pub fn UA_VariableTypeAttributes_delete(arg_p: [*c]UA_VariableTypeAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 197)))]);
}
pub fn UA_VariableTypeAttributes_equal(arg_p1: [*c]const UA_VariableTypeAttributes, arg_p2: [*c]const UA_VariableTypeAttributes) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 197)))]) == UA_ORDER_EQ;
}
pub fn UA_ReferenceTypeAttributes_init(arg_p: [*c]UA_ReferenceTypeAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ReferenceTypeAttributes));
}
pub fn UA_ReferenceTypeAttributes_new() callconv(.c) [*c]UA_ReferenceTypeAttributes {
    return @as([*c]UA_ReferenceTypeAttributes, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 198)))]))));
}
pub fn UA_ReferenceTypeAttributes_copy(arg_src: [*c]const UA_ReferenceTypeAttributes, arg_dst: [*c]UA_ReferenceTypeAttributes) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 198)))]);
}
pub fn UA_ReferenceTypeAttributes_deleteMembers(arg_p: [*c]UA_ReferenceTypeAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 198)))]);
}
pub fn UA_ReferenceTypeAttributes_clear(arg_p: [*c]UA_ReferenceTypeAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 198)))]);
}
pub fn UA_ReferenceTypeAttributes_delete(arg_p: [*c]UA_ReferenceTypeAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 198)))]);
}
pub fn UA_ReferenceTypeAttributes_equal(arg_p1: [*c]const UA_ReferenceTypeAttributes, arg_p2: [*c]const UA_ReferenceTypeAttributes) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 198)))]) == UA_ORDER_EQ;
}
pub fn UA_DataTypeAttributes_init(arg_p: [*c]UA_DataTypeAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DataTypeAttributes));
}
pub fn UA_DataTypeAttributes_new() callconv(.c) [*c]UA_DataTypeAttributes {
    return @as([*c]UA_DataTypeAttributes, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 199)))]))));
}
pub fn UA_DataTypeAttributes_copy(arg_src: [*c]const UA_DataTypeAttributes, arg_dst: [*c]UA_DataTypeAttributes) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 199)))]);
}
pub fn UA_DataTypeAttributes_deleteMembers(arg_p: [*c]UA_DataTypeAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 199)))]);
}
pub fn UA_DataTypeAttributes_clear(arg_p: [*c]UA_DataTypeAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 199)))]);
}
pub fn UA_DataTypeAttributes_delete(arg_p: [*c]UA_DataTypeAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 199)))]);
}
pub fn UA_DataTypeAttributes_equal(arg_p1: [*c]const UA_DataTypeAttributes, arg_p2: [*c]const UA_DataTypeAttributes) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 199)))]) == UA_ORDER_EQ;
}
pub fn UA_ViewAttributes_init(arg_p: [*c]UA_ViewAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ViewAttributes));
}
pub fn UA_ViewAttributes_new() callconv(.c) [*c]UA_ViewAttributes {
    return @as([*c]UA_ViewAttributes, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 200)))]))));
}
pub fn UA_ViewAttributes_copy(arg_src: [*c]const UA_ViewAttributes, arg_dst: [*c]UA_ViewAttributes) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 200)))]);
}
pub fn UA_ViewAttributes_deleteMembers(arg_p: [*c]UA_ViewAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 200)))]);
}
pub fn UA_ViewAttributes_clear(arg_p: [*c]UA_ViewAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 200)))]);
}
pub fn UA_ViewAttributes_delete(arg_p: [*c]UA_ViewAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 200)))]);
}
pub fn UA_ViewAttributes_equal(arg_p1: [*c]const UA_ViewAttributes, arg_p2: [*c]const UA_ViewAttributes) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 200)))]) == UA_ORDER_EQ;
}
pub fn UA_GenericAttributeValue_init(arg_p: [*c]UA_GenericAttributeValue) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_GenericAttributeValue));
}
pub fn UA_GenericAttributeValue_new() callconv(.c) [*c]UA_GenericAttributeValue {
    return @as([*c]UA_GenericAttributeValue, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 201)))]))));
}
pub fn UA_GenericAttributeValue_copy(arg_src: [*c]const UA_GenericAttributeValue, arg_dst: [*c]UA_GenericAttributeValue) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 201)))]);
}
pub fn UA_GenericAttributeValue_deleteMembers(arg_p: [*c]UA_GenericAttributeValue) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 201)))]);
}
pub fn UA_GenericAttributeValue_clear(arg_p: [*c]UA_GenericAttributeValue) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 201)))]);
}
pub fn UA_GenericAttributeValue_delete(arg_p: [*c]UA_GenericAttributeValue) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 201)))]);
}
pub fn UA_GenericAttributeValue_equal(arg_p1: [*c]const UA_GenericAttributeValue, arg_p2: [*c]const UA_GenericAttributeValue) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 201)))]) == UA_ORDER_EQ;
}
pub fn UA_GenericAttributes_init(arg_p: [*c]UA_GenericAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_GenericAttributes));
}
pub fn UA_GenericAttributes_new() callconv(.c) [*c]UA_GenericAttributes {
    return @as([*c]UA_GenericAttributes, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 202)))]))));
}
pub fn UA_GenericAttributes_copy(arg_src: [*c]const UA_GenericAttributes, arg_dst: [*c]UA_GenericAttributes) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 202)))]);
}
pub fn UA_GenericAttributes_deleteMembers(arg_p: [*c]UA_GenericAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 202)))]);
}
pub fn UA_GenericAttributes_clear(arg_p: [*c]UA_GenericAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 202)))]);
}
pub fn UA_GenericAttributes_delete(arg_p: [*c]UA_GenericAttributes) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 202)))]);
}
pub fn UA_GenericAttributes_equal(arg_p1: [*c]const UA_GenericAttributes, arg_p2: [*c]const UA_GenericAttributes) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 202)))]) == UA_ORDER_EQ;
}
pub fn UA_AddNodesItem_init(arg_p: [*c]UA_AddNodesItem) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_AddNodesItem));
}
pub fn UA_AddNodesItem_new() callconv(.c) [*c]UA_AddNodesItem {
    return @as([*c]UA_AddNodesItem, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 203)))]))));
}
pub fn UA_AddNodesItem_copy(arg_src: [*c]const UA_AddNodesItem, arg_dst: [*c]UA_AddNodesItem) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 203)))]);
}
pub fn UA_AddNodesItem_deleteMembers(arg_p: [*c]UA_AddNodesItem) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 203)))]);
}
pub fn UA_AddNodesItem_clear(arg_p: [*c]UA_AddNodesItem) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 203)))]);
}
pub fn UA_AddNodesItem_delete(arg_p: [*c]UA_AddNodesItem) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 203)))]);
}
pub fn UA_AddNodesItem_equal(arg_p1: [*c]const UA_AddNodesItem, arg_p2: [*c]const UA_AddNodesItem) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 203)))]) == UA_ORDER_EQ;
}
pub fn UA_AddNodesResult_init(arg_p: [*c]UA_AddNodesResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_AddNodesResult));
}
pub fn UA_AddNodesResult_new() callconv(.c) [*c]UA_AddNodesResult {
    return @as([*c]UA_AddNodesResult, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 204)))]))));
}
pub fn UA_AddNodesResult_copy(arg_src: [*c]const UA_AddNodesResult, arg_dst: [*c]UA_AddNodesResult) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 204)))]);
}
pub fn UA_AddNodesResult_deleteMembers(arg_p: [*c]UA_AddNodesResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 204)))]);
}
pub fn UA_AddNodesResult_clear(arg_p: [*c]UA_AddNodesResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 204)))]);
}
pub fn UA_AddNodesResult_delete(arg_p: [*c]UA_AddNodesResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 204)))]);
}
pub fn UA_AddNodesResult_equal(arg_p1: [*c]const UA_AddNodesResult, arg_p2: [*c]const UA_AddNodesResult) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 204)))]) == UA_ORDER_EQ;
}
pub fn UA_AddNodesRequest_init(arg_p: [*c]UA_AddNodesRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_AddNodesRequest));
}
pub fn UA_AddNodesRequest_new() callconv(.c) [*c]UA_AddNodesRequest {
    return @as([*c]UA_AddNodesRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 205)))]))));
}
pub fn UA_AddNodesRequest_copy(arg_src: [*c]const UA_AddNodesRequest, arg_dst: [*c]UA_AddNodesRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 205)))]);
}
pub fn UA_AddNodesRequest_deleteMembers(arg_p: [*c]UA_AddNodesRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 205)))]);
}
pub fn UA_AddNodesRequest_clear(arg_p: [*c]UA_AddNodesRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 205)))]);
}
pub fn UA_AddNodesRequest_delete(arg_p: [*c]UA_AddNodesRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 205)))]);
}
pub fn UA_AddNodesRequest_equal(arg_p1: [*c]const UA_AddNodesRequest, arg_p2: [*c]const UA_AddNodesRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 205)))]) == UA_ORDER_EQ;
}
pub fn UA_AddNodesResponse_init(arg_p: ?*UA_AddNodesResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_AddNodesResponse));
}
pub fn UA_AddNodesResponse_new() callconv(.c) ?*UA_AddNodesResponse {
    return @as(?*UA_AddNodesResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 206)))]))));
}
pub fn UA_AddNodesResponse_copy(arg_src: ?*const UA_AddNodesResponse, arg_dst: ?*UA_AddNodesResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 206)))]);
}
pub fn UA_AddNodesResponse_deleteMembers(arg_p: ?*UA_AddNodesResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 206)))]);
}
pub fn UA_AddNodesResponse_clear(arg_p: ?*UA_AddNodesResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 206)))]);
}
pub fn UA_AddNodesResponse_delete(arg_p: ?*UA_AddNodesResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 206)))]);
}
pub fn UA_AddNodesResponse_equal(arg_p1: ?*const UA_AddNodesResponse, arg_p2: ?*const UA_AddNodesResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 206)))]) == UA_ORDER_EQ;
}
pub fn UA_AddReferencesItem_init(arg_p: [*c]UA_AddReferencesItem) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_AddReferencesItem));
}
pub fn UA_AddReferencesItem_new() callconv(.c) [*c]UA_AddReferencesItem {
    return @as([*c]UA_AddReferencesItem, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 207)))]))));
}
pub fn UA_AddReferencesItem_copy(arg_src: [*c]const UA_AddReferencesItem, arg_dst: [*c]UA_AddReferencesItem) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 207)))]);
}
pub fn UA_AddReferencesItem_deleteMembers(arg_p: [*c]UA_AddReferencesItem) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 207)))]);
}
pub fn UA_AddReferencesItem_clear(arg_p: [*c]UA_AddReferencesItem) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 207)))]);
}
pub fn UA_AddReferencesItem_delete(arg_p: [*c]UA_AddReferencesItem) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 207)))]);
}
pub fn UA_AddReferencesItem_equal(arg_p1: [*c]const UA_AddReferencesItem, arg_p2: [*c]const UA_AddReferencesItem) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 207)))]) == UA_ORDER_EQ;
}
pub fn UA_AddReferencesRequest_init(arg_p: [*c]UA_AddReferencesRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_AddReferencesRequest));
}
pub fn UA_AddReferencesRequest_new() callconv(.c) [*c]UA_AddReferencesRequest {
    return @as([*c]UA_AddReferencesRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 208)))]))));
}
pub fn UA_AddReferencesRequest_copy(arg_src: [*c]const UA_AddReferencesRequest, arg_dst: [*c]UA_AddReferencesRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 208)))]);
}
pub fn UA_AddReferencesRequest_deleteMembers(arg_p: [*c]UA_AddReferencesRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 208)))]);
}
pub fn UA_AddReferencesRequest_clear(arg_p: [*c]UA_AddReferencesRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 208)))]);
}
pub fn UA_AddReferencesRequest_delete(arg_p: [*c]UA_AddReferencesRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 208)))]);
}
pub fn UA_AddReferencesRequest_equal(arg_p1: [*c]const UA_AddReferencesRequest, arg_p2: [*c]const UA_AddReferencesRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 208)))]) == UA_ORDER_EQ;
}
pub fn UA_AddReferencesResponse_init(arg_p: ?*UA_AddReferencesResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_AddReferencesResponse));
}
pub fn UA_AddReferencesResponse_new() callconv(.c) ?*UA_AddReferencesResponse {
    return @as(?*UA_AddReferencesResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 209)))]))));
}
pub fn UA_AddReferencesResponse_copy(arg_src: ?*const UA_AddReferencesResponse, arg_dst: ?*UA_AddReferencesResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 209)))]);
}
pub fn UA_AddReferencesResponse_deleteMembers(arg_p: ?*UA_AddReferencesResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 209)))]);
}
pub fn UA_AddReferencesResponse_clear(arg_p: ?*UA_AddReferencesResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 209)))]);
}
pub fn UA_AddReferencesResponse_delete(arg_p: ?*UA_AddReferencesResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 209)))]);
}
pub fn UA_AddReferencesResponse_equal(arg_p1: ?*const UA_AddReferencesResponse, arg_p2: ?*const UA_AddReferencesResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 209)))]) == UA_ORDER_EQ;
}
pub fn UA_DeleteNodesItem_init(arg_p: [*c]UA_DeleteNodesItem) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DeleteNodesItem));
}
pub fn UA_DeleteNodesItem_new() callconv(.c) [*c]UA_DeleteNodesItem {
    return @as([*c]UA_DeleteNodesItem, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 210)))]))));
}
pub fn UA_DeleteNodesItem_copy(arg_src: [*c]const UA_DeleteNodesItem, arg_dst: [*c]UA_DeleteNodesItem) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 210)))]);
}
pub fn UA_DeleteNodesItem_deleteMembers(arg_p: [*c]UA_DeleteNodesItem) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 210)))]);
}
pub fn UA_DeleteNodesItem_clear(arg_p: [*c]UA_DeleteNodesItem) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 210)))]);
}
pub fn UA_DeleteNodesItem_delete(arg_p: [*c]UA_DeleteNodesItem) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 210)))]);
}
pub fn UA_DeleteNodesItem_equal(arg_p1: [*c]const UA_DeleteNodesItem, arg_p2: [*c]const UA_DeleteNodesItem) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 210)))]) == UA_ORDER_EQ;
}
pub fn UA_DeleteNodesRequest_init(arg_p: [*c]UA_DeleteNodesRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DeleteNodesRequest));
}
pub fn UA_DeleteNodesRequest_new() callconv(.c) [*c]UA_DeleteNodesRequest {
    return @as([*c]UA_DeleteNodesRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 211)))]))));
}
pub fn UA_DeleteNodesRequest_copy(arg_src: [*c]const UA_DeleteNodesRequest, arg_dst: [*c]UA_DeleteNodesRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 211)))]);
}
pub fn UA_DeleteNodesRequest_deleteMembers(arg_p: [*c]UA_DeleteNodesRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 211)))]);
}
pub fn UA_DeleteNodesRequest_clear(arg_p: [*c]UA_DeleteNodesRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 211)))]);
}
pub fn UA_DeleteNodesRequest_delete(arg_p: [*c]UA_DeleteNodesRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 211)))]);
}
pub fn UA_DeleteNodesRequest_equal(arg_p1: [*c]const UA_DeleteNodesRequest, arg_p2: [*c]const UA_DeleteNodesRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 211)))]) == UA_ORDER_EQ;
}
pub fn UA_DeleteNodesResponse_init(arg_p: ?*UA_DeleteNodesResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DeleteNodesResponse));
}
pub fn UA_DeleteNodesResponse_new() callconv(.c) ?*UA_DeleteNodesResponse {
    return @as(?*UA_DeleteNodesResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 212)))]))));
}
pub fn UA_DeleteNodesResponse_copy(arg_src: ?*const UA_DeleteNodesResponse, arg_dst: ?*UA_DeleteNodesResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 212)))]);
}
pub fn UA_DeleteNodesResponse_deleteMembers(arg_p: ?*UA_DeleteNodesResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 212)))]);
}
pub fn UA_DeleteNodesResponse_clear(arg_p: ?*UA_DeleteNodesResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 212)))]);
}
pub fn UA_DeleteNodesResponse_delete(arg_p: ?*UA_DeleteNodesResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 212)))]);
}
pub fn UA_DeleteNodesResponse_equal(arg_p1: ?*const UA_DeleteNodesResponse, arg_p2: ?*const UA_DeleteNodesResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 212)))]) == UA_ORDER_EQ;
}
pub fn UA_DeleteReferencesItem_init(arg_p: [*c]UA_DeleteReferencesItem) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DeleteReferencesItem));
}
pub fn UA_DeleteReferencesItem_new() callconv(.c) [*c]UA_DeleteReferencesItem {
    return @as([*c]UA_DeleteReferencesItem, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 213)))]))));
}
pub fn UA_DeleteReferencesItem_copy(arg_src: [*c]const UA_DeleteReferencesItem, arg_dst: [*c]UA_DeleteReferencesItem) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 213)))]);
}
pub fn UA_DeleteReferencesItem_deleteMembers(arg_p: [*c]UA_DeleteReferencesItem) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 213)))]);
}
pub fn UA_DeleteReferencesItem_clear(arg_p: [*c]UA_DeleteReferencesItem) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 213)))]);
}
pub fn UA_DeleteReferencesItem_delete(arg_p: [*c]UA_DeleteReferencesItem) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 213)))]);
}
pub fn UA_DeleteReferencesItem_equal(arg_p1: [*c]const UA_DeleteReferencesItem, arg_p2: [*c]const UA_DeleteReferencesItem) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 213)))]) == UA_ORDER_EQ;
}
pub fn UA_DeleteReferencesRequest_init(arg_p: [*c]UA_DeleteReferencesRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DeleteReferencesRequest));
}
pub fn UA_DeleteReferencesRequest_new() callconv(.c) [*c]UA_DeleteReferencesRequest {
    return @as([*c]UA_DeleteReferencesRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 214)))]))));
}
pub fn UA_DeleteReferencesRequest_copy(arg_src: [*c]const UA_DeleteReferencesRequest, arg_dst: [*c]UA_DeleteReferencesRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 214)))]);
}
pub fn UA_DeleteReferencesRequest_deleteMembers(arg_p: [*c]UA_DeleteReferencesRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 214)))]);
}
pub fn UA_DeleteReferencesRequest_clear(arg_p: [*c]UA_DeleteReferencesRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 214)))]);
}
pub fn UA_DeleteReferencesRequest_delete(arg_p: [*c]UA_DeleteReferencesRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 214)))]);
}
pub fn UA_DeleteReferencesRequest_equal(arg_p1: [*c]const UA_DeleteReferencesRequest, arg_p2: [*c]const UA_DeleteReferencesRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 214)))]) == UA_ORDER_EQ;
}
pub fn UA_DeleteReferencesResponse_init(arg_p: ?*UA_DeleteReferencesResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DeleteReferencesResponse));
}
pub fn UA_DeleteReferencesResponse_new() callconv(.c) ?*UA_DeleteReferencesResponse {
    return @as(?*UA_DeleteReferencesResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 215)))]))));
}
pub fn UA_DeleteReferencesResponse_copy(arg_src: ?*const UA_DeleteReferencesResponse, arg_dst: ?*UA_DeleteReferencesResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 215)))]);
}
pub fn UA_DeleteReferencesResponse_deleteMembers(arg_p: ?*UA_DeleteReferencesResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 215)))]);
}
pub fn UA_DeleteReferencesResponse_clear(arg_p: ?*UA_DeleteReferencesResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 215)))]);
}
pub fn UA_DeleteReferencesResponse_delete(arg_p: ?*UA_DeleteReferencesResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 215)))]);
}
pub fn UA_DeleteReferencesResponse_equal(arg_p1: ?*const UA_DeleteReferencesResponse, arg_p2: ?*const UA_DeleteReferencesResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 215)))]) == UA_ORDER_EQ;
}
pub fn UA_AttributeWriteMask_init(arg_p: [*c]UA_AttributeWriteMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_AttributeWriteMask));
}
pub fn UA_AttributeWriteMask_new() callconv(.c) [*c]UA_AttributeWriteMask {
    return @as([*c]UA_AttributeWriteMask, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 216)))]))));
}
pub fn UA_AttributeWriteMask_copy(arg_src: [*c]const UA_AttributeWriteMask, arg_dst: [*c]UA_AttributeWriteMask) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 216)))]);
}
pub fn UA_AttributeWriteMask_deleteMembers(arg_p: [*c]UA_AttributeWriteMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 216)))]);
}
pub fn UA_AttributeWriteMask_clear(arg_p: [*c]UA_AttributeWriteMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 216)))]);
}
pub fn UA_AttributeWriteMask_delete(arg_p: [*c]UA_AttributeWriteMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 216)))]);
}
pub fn UA_AttributeWriteMask_equal(arg_p1: [*c]const UA_AttributeWriteMask, arg_p2: [*c]const UA_AttributeWriteMask) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 216)))]) == UA_ORDER_EQ;
}
pub fn UA_BrowseDirection_init(arg_p: [*c]UA_BrowseDirection) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_BrowseDirection));
}
pub fn UA_BrowseDirection_new() callconv(.c) [*c]UA_BrowseDirection {
    return @as([*c]UA_BrowseDirection, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 217)))]))));
}
pub fn UA_BrowseDirection_copy(arg_src: [*c]const UA_BrowseDirection, arg_dst: [*c]UA_BrowseDirection) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 217)))]);
}
pub fn UA_BrowseDirection_deleteMembers(arg_p: [*c]UA_BrowseDirection) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 217)))]);
}
pub fn UA_BrowseDirection_clear(arg_p: [*c]UA_BrowseDirection) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 217)))]);
}
pub fn UA_BrowseDirection_delete(arg_p: [*c]UA_BrowseDirection) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 217)))]);
}
pub fn UA_BrowseDirection_equal(arg_p1: [*c]const UA_BrowseDirection, arg_p2: [*c]const UA_BrowseDirection) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 217)))]) == UA_ORDER_EQ;
}
pub fn UA_ViewDescription_init(arg_p: [*c]UA_ViewDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ViewDescription));
}
pub fn UA_ViewDescription_new() callconv(.c) [*c]UA_ViewDescription {
    return @as([*c]UA_ViewDescription, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 218)))]))));
}
pub fn UA_ViewDescription_copy(arg_src: [*c]const UA_ViewDescription, arg_dst: [*c]UA_ViewDescription) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 218)))]);
}
pub fn UA_ViewDescription_deleteMembers(arg_p: [*c]UA_ViewDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 218)))]);
}
pub fn UA_ViewDescription_clear(arg_p: [*c]UA_ViewDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 218)))]);
}
pub fn UA_ViewDescription_delete(arg_p: [*c]UA_ViewDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 218)))]);
}
pub fn UA_ViewDescription_equal(arg_p1: [*c]const UA_ViewDescription, arg_p2: [*c]const UA_ViewDescription) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 218)))]) == UA_ORDER_EQ;
}
pub fn UA_BrowseDescription_init(arg_p: [*c]UA_BrowseDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_BrowseDescription));
}
pub fn UA_BrowseDescription_new() callconv(.c) [*c]UA_BrowseDescription {
    return @as([*c]UA_BrowseDescription, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 219)))]))));
}
pub fn UA_BrowseDescription_copy(arg_src: [*c]const UA_BrowseDescription, arg_dst: [*c]UA_BrowseDescription) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 219)))]);
}
pub fn UA_BrowseDescription_deleteMembers(arg_p: [*c]UA_BrowseDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 219)))]);
}
pub fn UA_BrowseDescription_clear(arg_p: [*c]UA_BrowseDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 219)))]);
}
pub fn UA_BrowseDescription_delete(arg_p: [*c]UA_BrowseDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 219)))]);
}
pub fn UA_BrowseDescription_equal(arg_p1: [*c]const UA_BrowseDescription, arg_p2: [*c]const UA_BrowseDescription) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 219)))]) == UA_ORDER_EQ;
}
pub fn UA_BrowseResultMask_init(arg_p: [*c]UA_BrowseResultMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_BrowseResultMask));
}
pub fn UA_BrowseResultMask_new() callconv(.c) [*c]UA_BrowseResultMask {
    return @as([*c]UA_BrowseResultMask, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 220)))]))));
}
pub fn UA_BrowseResultMask_copy(arg_src: [*c]const UA_BrowseResultMask, arg_dst: [*c]UA_BrowseResultMask) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 220)))]);
}
pub fn UA_BrowseResultMask_deleteMembers(arg_p: [*c]UA_BrowseResultMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 220)))]);
}
pub fn UA_BrowseResultMask_clear(arg_p: [*c]UA_BrowseResultMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 220)))]);
}
pub fn UA_BrowseResultMask_delete(arg_p: [*c]UA_BrowseResultMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 220)))]);
}
pub fn UA_BrowseResultMask_equal(arg_p1: [*c]const UA_BrowseResultMask, arg_p2: [*c]const UA_BrowseResultMask) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 220)))]) == UA_ORDER_EQ;
}
pub fn UA_ReferenceDescription_init(arg_p: [*c]UA_ReferenceDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ReferenceDescription));
}
pub fn UA_ReferenceDescription_new() callconv(.c) [*c]UA_ReferenceDescription {
    return @as([*c]UA_ReferenceDescription, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 221)))]))));
}
pub fn UA_ReferenceDescription_copy(arg_src: [*c]const UA_ReferenceDescription, arg_dst: [*c]UA_ReferenceDescription) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 221)))]);
}
pub fn UA_ReferenceDescription_deleteMembers(arg_p: [*c]UA_ReferenceDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 221)))]);
}
pub fn UA_ReferenceDescription_clear(arg_p: [*c]UA_ReferenceDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 221)))]);
}
pub fn UA_ReferenceDescription_delete(arg_p: [*c]UA_ReferenceDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 221)))]);
}
pub fn UA_ReferenceDescription_equal(arg_p1: [*c]const UA_ReferenceDescription, arg_p2: [*c]const UA_ReferenceDescription) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 221)))]) == UA_ORDER_EQ;
}
pub fn UA_ContinuationPoint_init(arg_p: [*c]UA_ContinuationPoint) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ContinuationPoint));
}
pub fn UA_ContinuationPoint_new() callconv(.c) [*c]UA_ContinuationPoint {
    return @as([*c]UA_ContinuationPoint, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 222)))]))));
}
pub fn UA_ContinuationPoint_copy(arg_src: [*c]const UA_ContinuationPoint, arg_dst: [*c]UA_ContinuationPoint) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 222)))]);
}
pub fn UA_ContinuationPoint_deleteMembers(arg_p: [*c]UA_ContinuationPoint) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 222)))]);
}
pub fn UA_ContinuationPoint_clear(arg_p: [*c]UA_ContinuationPoint) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 222)))]);
}
pub fn UA_ContinuationPoint_delete(arg_p: [*c]UA_ContinuationPoint) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 222)))]);
}
pub fn UA_ContinuationPoint_equal(arg_p1: [*c]const UA_ContinuationPoint, arg_p2: [*c]const UA_ContinuationPoint) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 222)))]) == UA_ORDER_EQ;
}
pub fn UA_BrowseResult_init(arg_p: [*c]UA_BrowseResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_BrowseResult));
}
pub fn UA_BrowseResult_new() callconv(.c) [*c]UA_BrowseResult {
    return @as([*c]UA_BrowseResult, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 223)))]))));
}
pub fn UA_BrowseResult_copy(arg_src: [*c]const UA_BrowseResult, arg_dst: [*c]UA_BrowseResult) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 223)))]);
}
pub fn UA_BrowseResult_deleteMembers(arg_p: [*c]UA_BrowseResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 223)))]);
}
pub fn UA_BrowseResult_clear(arg_p: [*c]UA_BrowseResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 223)))]);
}
pub fn UA_BrowseResult_delete(arg_p: [*c]UA_BrowseResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 223)))]);
}
pub fn UA_BrowseResult_equal(arg_p1: [*c]const UA_BrowseResult, arg_p2: [*c]const UA_BrowseResult) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 223)))]) == UA_ORDER_EQ;
}
pub fn UA_BrowseRequest_init(arg_p: [*c]UA_BrowseRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_BrowseRequest));
}
pub fn UA_BrowseRequest_new() callconv(.c) [*c]UA_BrowseRequest {
    return @as([*c]UA_BrowseRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 224)))]))));
}
pub fn UA_BrowseRequest_copy(arg_src: [*c]const UA_BrowseRequest, arg_dst: [*c]UA_BrowseRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 224)))]);
}
pub fn UA_BrowseRequest_deleteMembers(arg_p: [*c]UA_BrowseRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 224)))]);
}
pub fn UA_BrowseRequest_clear(arg_p: [*c]UA_BrowseRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 224)))]);
}
pub fn UA_BrowseRequest_delete(arg_p: [*c]UA_BrowseRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 224)))]);
}
pub fn UA_BrowseRequest_equal(arg_p1: [*c]const UA_BrowseRequest, arg_p2: [*c]const UA_BrowseRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 224)))]) == UA_ORDER_EQ;
}
pub fn UA_BrowseResponse_init(arg_p: ?*UA_BrowseResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_BrowseResponse));
}
pub fn UA_BrowseResponse_new() callconv(.c) ?*UA_BrowseResponse {
    return @as(?*UA_BrowseResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 225)))]))));
}
pub fn UA_BrowseResponse_copy(arg_src: ?*const UA_BrowseResponse, arg_dst: ?*UA_BrowseResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 225)))]);
}
pub fn UA_BrowseResponse_deleteMembers(arg_p: ?*UA_BrowseResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 225)))]);
}
pub fn UA_BrowseResponse_clear(arg_p: ?*UA_BrowseResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 225)))]);
}
pub fn UA_BrowseResponse_delete(arg_p: ?*UA_BrowseResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 225)))]);
}
pub fn UA_BrowseResponse_equal(arg_p1: ?*const UA_BrowseResponse, arg_p2: ?*const UA_BrowseResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 225)))]) == UA_ORDER_EQ;
}
pub fn UA_BrowseNextRequest_init(arg_p: [*c]UA_BrowseNextRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_BrowseNextRequest));
}
pub fn UA_BrowseNextRequest_new() callconv(.c) [*c]UA_BrowseNextRequest {
    return @as([*c]UA_BrowseNextRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 226)))]))));
}
pub fn UA_BrowseNextRequest_copy(arg_src: [*c]const UA_BrowseNextRequest, arg_dst: [*c]UA_BrowseNextRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 226)))]);
}
pub fn UA_BrowseNextRequest_deleteMembers(arg_p: [*c]UA_BrowseNextRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 226)))]);
}
pub fn UA_BrowseNextRequest_clear(arg_p: [*c]UA_BrowseNextRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 226)))]);
}
pub fn UA_BrowseNextRequest_delete(arg_p: [*c]UA_BrowseNextRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 226)))]);
}
pub fn UA_BrowseNextRequest_equal(arg_p1: [*c]const UA_BrowseNextRequest, arg_p2: [*c]const UA_BrowseNextRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 226)))]) == UA_ORDER_EQ;
}
pub fn UA_BrowseNextResponse_init(arg_p: ?*UA_BrowseNextResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_BrowseNextResponse));
}
pub fn UA_BrowseNextResponse_new() callconv(.c) ?*UA_BrowseNextResponse {
    return @as(?*UA_BrowseNextResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 227)))]))));
}
pub fn UA_BrowseNextResponse_copy(arg_src: ?*const UA_BrowseNextResponse, arg_dst: ?*UA_BrowseNextResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 227)))]);
}
pub fn UA_BrowseNextResponse_deleteMembers(arg_p: ?*UA_BrowseNextResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 227)))]);
}
pub fn UA_BrowseNextResponse_clear(arg_p: ?*UA_BrowseNextResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 227)))]);
}
pub fn UA_BrowseNextResponse_delete(arg_p: ?*UA_BrowseNextResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 227)))]);
}
pub fn UA_BrowseNextResponse_equal(arg_p1: ?*const UA_BrowseNextResponse, arg_p2: ?*const UA_BrowseNextResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 227)))]) == UA_ORDER_EQ;
}
pub fn UA_RelativePathElement_init(arg_p: [*c]UA_RelativePathElement) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_RelativePathElement));
}
pub fn UA_RelativePathElement_new() callconv(.c) [*c]UA_RelativePathElement {
    return @as([*c]UA_RelativePathElement, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 228)))]))));
}
pub fn UA_RelativePathElement_copy(arg_src: [*c]const UA_RelativePathElement, arg_dst: [*c]UA_RelativePathElement) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 228)))]);
}
pub fn UA_RelativePathElement_deleteMembers(arg_p: [*c]UA_RelativePathElement) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 228)))]);
}
pub fn UA_RelativePathElement_clear(arg_p: [*c]UA_RelativePathElement) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 228)))]);
}
pub fn UA_RelativePathElement_delete(arg_p: [*c]UA_RelativePathElement) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 228)))]);
}
pub fn UA_RelativePathElement_equal(arg_p1: [*c]const UA_RelativePathElement, arg_p2: [*c]const UA_RelativePathElement) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 228)))]) == UA_ORDER_EQ;
}
pub fn UA_RelativePath_init(arg_p: [*c]UA_RelativePath) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_RelativePath));
}
pub fn UA_RelativePath_new() callconv(.c) [*c]UA_RelativePath {
    return @as([*c]UA_RelativePath, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 229)))]))));
}
pub fn UA_RelativePath_copy(arg_src: [*c]const UA_RelativePath, arg_dst: [*c]UA_RelativePath) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 229)))]);
}
pub fn UA_RelativePath_deleteMembers(arg_p: [*c]UA_RelativePath) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 229)))]);
}
pub fn UA_RelativePath_clear(arg_p: [*c]UA_RelativePath) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 229)))]);
}
pub fn UA_RelativePath_delete(arg_p: [*c]UA_RelativePath) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 229)))]);
}
pub fn UA_RelativePath_equal(arg_p1: [*c]const UA_RelativePath, arg_p2: [*c]const UA_RelativePath) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 229)))]) == UA_ORDER_EQ;
}
pub fn UA_BrowsePath_init(arg_p: [*c]UA_BrowsePath) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_BrowsePath));
}
pub fn UA_BrowsePath_new() callconv(.c) [*c]UA_BrowsePath {
    return @as([*c]UA_BrowsePath, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 230)))]))));
}
pub fn UA_BrowsePath_copy(arg_src: [*c]const UA_BrowsePath, arg_dst: [*c]UA_BrowsePath) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 230)))]);
}
pub fn UA_BrowsePath_deleteMembers(arg_p: [*c]UA_BrowsePath) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 230)))]);
}
pub fn UA_BrowsePath_clear(arg_p: [*c]UA_BrowsePath) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 230)))]);
}
pub fn UA_BrowsePath_delete(arg_p: [*c]UA_BrowsePath) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 230)))]);
}
pub fn UA_BrowsePath_equal(arg_p1: [*c]const UA_BrowsePath, arg_p2: [*c]const UA_BrowsePath) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 230)))]) == UA_ORDER_EQ;
}
pub fn UA_BrowsePathTarget_init(arg_p: [*c]UA_BrowsePathTarget) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_BrowsePathTarget));
}
pub fn UA_BrowsePathTarget_new() callconv(.c) [*c]UA_BrowsePathTarget {
    return @as([*c]UA_BrowsePathTarget, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 231)))]))));
}
pub fn UA_BrowsePathTarget_copy(arg_src: [*c]const UA_BrowsePathTarget, arg_dst: [*c]UA_BrowsePathTarget) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 231)))]);
}
pub fn UA_BrowsePathTarget_deleteMembers(arg_p: [*c]UA_BrowsePathTarget) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 231)))]);
}
pub fn UA_BrowsePathTarget_clear(arg_p: [*c]UA_BrowsePathTarget) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 231)))]);
}
pub fn UA_BrowsePathTarget_delete(arg_p: [*c]UA_BrowsePathTarget) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 231)))]);
}
pub fn UA_BrowsePathTarget_equal(arg_p1: [*c]const UA_BrowsePathTarget, arg_p2: [*c]const UA_BrowsePathTarget) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 231)))]) == UA_ORDER_EQ;
}
pub fn UA_BrowsePathResult_init(arg_p: [*c]UA_BrowsePathResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_BrowsePathResult));
}
pub fn UA_BrowsePathResult_new() callconv(.c) [*c]UA_BrowsePathResult {
    return @as([*c]UA_BrowsePathResult, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 232)))]))));
}
pub fn UA_BrowsePathResult_copy(arg_src: [*c]const UA_BrowsePathResult, arg_dst: [*c]UA_BrowsePathResult) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 232)))]);
}
pub fn UA_BrowsePathResult_deleteMembers(arg_p: [*c]UA_BrowsePathResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 232)))]);
}
pub fn UA_BrowsePathResult_clear(arg_p: [*c]UA_BrowsePathResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 232)))]);
}
pub fn UA_BrowsePathResult_delete(arg_p: [*c]UA_BrowsePathResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 232)))]);
}
pub fn UA_BrowsePathResult_equal(arg_p1: [*c]const UA_BrowsePathResult, arg_p2: [*c]const UA_BrowsePathResult) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 232)))]) == UA_ORDER_EQ;
}
pub fn UA_TranslateBrowsePathsToNodeIdsRequest_init(arg_p: [*c]UA_TranslateBrowsePathsToNodeIdsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_TranslateBrowsePathsToNodeIdsRequest));
}
pub fn UA_TranslateBrowsePathsToNodeIdsRequest_new() callconv(.c) [*c]UA_TranslateBrowsePathsToNodeIdsRequest {
    return @as([*c]UA_TranslateBrowsePathsToNodeIdsRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 233)))]))));
}
pub fn UA_TranslateBrowsePathsToNodeIdsRequest_copy(arg_src: [*c]const UA_TranslateBrowsePathsToNodeIdsRequest, arg_dst: [*c]UA_TranslateBrowsePathsToNodeIdsRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 233)))]);
}
pub fn UA_TranslateBrowsePathsToNodeIdsRequest_deleteMembers(arg_p: [*c]UA_TranslateBrowsePathsToNodeIdsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 233)))]);
}
pub fn UA_TranslateBrowsePathsToNodeIdsRequest_clear(arg_p: [*c]UA_TranslateBrowsePathsToNodeIdsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 233)))]);
}
pub fn UA_TranslateBrowsePathsToNodeIdsRequest_delete(arg_p: [*c]UA_TranslateBrowsePathsToNodeIdsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 233)))]);
}
pub fn UA_TranslateBrowsePathsToNodeIdsRequest_equal(arg_p1: [*c]const UA_TranslateBrowsePathsToNodeIdsRequest, arg_p2: [*c]const UA_TranslateBrowsePathsToNodeIdsRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 233)))]) == UA_ORDER_EQ;
}
pub fn UA_TranslateBrowsePathsToNodeIdsResponse_init(arg_p: ?*UA_TranslateBrowsePathsToNodeIdsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_TranslateBrowsePathsToNodeIdsResponse));
}
pub fn UA_TranslateBrowsePathsToNodeIdsResponse_new() callconv(.c) ?*UA_TranslateBrowsePathsToNodeIdsResponse {
    return @as(?*UA_TranslateBrowsePathsToNodeIdsResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 234)))]))));
}
pub fn UA_TranslateBrowsePathsToNodeIdsResponse_copy(arg_src: ?*const UA_TranslateBrowsePathsToNodeIdsResponse, arg_dst: ?*UA_TranslateBrowsePathsToNodeIdsResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 234)))]);
}
pub fn UA_TranslateBrowsePathsToNodeIdsResponse_deleteMembers(arg_p: ?*UA_TranslateBrowsePathsToNodeIdsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 234)))]);
}
pub fn UA_TranslateBrowsePathsToNodeIdsResponse_clear(arg_p: ?*UA_TranslateBrowsePathsToNodeIdsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 234)))]);
}
pub fn UA_TranslateBrowsePathsToNodeIdsResponse_delete(arg_p: ?*UA_TranslateBrowsePathsToNodeIdsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 234)))]);
}
pub fn UA_TranslateBrowsePathsToNodeIdsResponse_equal(arg_p1: ?*const UA_TranslateBrowsePathsToNodeIdsResponse, arg_p2: ?*const UA_TranslateBrowsePathsToNodeIdsResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 234)))]) == UA_ORDER_EQ;
}
pub fn UA_RegisterNodesRequest_init(arg_p: [*c]UA_RegisterNodesRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_RegisterNodesRequest));
}
pub fn UA_RegisterNodesRequest_new() callconv(.c) [*c]UA_RegisterNodesRequest {
    return @as([*c]UA_RegisterNodesRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 235)))]))));
}
pub fn UA_RegisterNodesRequest_copy(arg_src: [*c]const UA_RegisterNodesRequest, arg_dst: [*c]UA_RegisterNodesRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 235)))]);
}
pub fn UA_RegisterNodesRequest_deleteMembers(arg_p: [*c]UA_RegisterNodesRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 235)))]);
}
pub fn UA_RegisterNodesRequest_clear(arg_p: [*c]UA_RegisterNodesRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 235)))]);
}
pub fn UA_RegisterNodesRequest_delete(arg_p: [*c]UA_RegisterNodesRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 235)))]);
}
pub fn UA_RegisterNodesRequest_equal(arg_p1: [*c]const UA_RegisterNodesRequest, arg_p2: [*c]const UA_RegisterNodesRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 235)))]) == UA_ORDER_EQ;
}
pub fn UA_RegisterNodesResponse_init(arg_p: ?*UA_RegisterNodesResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_RegisterNodesResponse));
}
pub fn UA_RegisterNodesResponse_new() callconv(.c) ?*UA_RegisterNodesResponse {
    return @as(?*UA_RegisterNodesResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 236)))]))));
}
pub fn UA_RegisterNodesResponse_copy(arg_src: ?*const UA_RegisterNodesResponse, arg_dst: ?*UA_RegisterNodesResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 236)))]);
}
pub fn UA_RegisterNodesResponse_deleteMembers(arg_p: ?*UA_RegisterNodesResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 236)))]);
}
pub fn UA_RegisterNodesResponse_clear(arg_p: ?*UA_RegisterNodesResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 236)))]);
}
pub fn UA_RegisterNodesResponse_delete(arg_p: ?*UA_RegisterNodesResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 236)))]);
}
pub fn UA_RegisterNodesResponse_equal(arg_p1: ?*const UA_RegisterNodesResponse, arg_p2: ?*const UA_RegisterNodesResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 236)))]) == UA_ORDER_EQ;
}
pub fn UA_UnregisterNodesRequest_init(arg_p: [*c]UA_UnregisterNodesRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_UnregisterNodesRequest));
}
pub fn UA_UnregisterNodesRequest_new() callconv(.c) [*c]UA_UnregisterNodesRequest {
    return @as([*c]UA_UnregisterNodesRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 237)))]))));
}
pub fn UA_UnregisterNodesRequest_copy(arg_src: [*c]const UA_UnregisterNodesRequest, arg_dst: [*c]UA_UnregisterNodesRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 237)))]);
}
pub fn UA_UnregisterNodesRequest_deleteMembers(arg_p: [*c]UA_UnregisterNodesRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 237)))]);
}
pub fn UA_UnregisterNodesRequest_clear(arg_p: [*c]UA_UnregisterNodesRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 237)))]);
}
pub fn UA_UnregisterNodesRequest_delete(arg_p: [*c]UA_UnregisterNodesRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 237)))]);
}
pub fn UA_UnregisterNodesRequest_equal(arg_p1: [*c]const UA_UnregisterNodesRequest, arg_p2: [*c]const UA_UnregisterNodesRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 237)))]) == UA_ORDER_EQ;
}
pub fn UA_UnregisterNodesResponse_init(arg_p: ?*UA_UnregisterNodesResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_UnregisterNodesResponse));
}
pub fn UA_UnregisterNodesResponse_new() callconv(.c) ?*UA_UnregisterNodesResponse {
    return @as(?*UA_UnregisterNodesResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 238)))]))));
}
pub fn UA_UnregisterNodesResponse_copy(arg_src: ?*const UA_UnregisterNodesResponse, arg_dst: ?*UA_UnregisterNodesResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 238)))]);
}
pub fn UA_UnregisterNodesResponse_deleteMembers(arg_p: ?*UA_UnregisterNodesResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 238)))]);
}
pub fn UA_UnregisterNodesResponse_clear(arg_p: ?*UA_UnregisterNodesResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 238)))]);
}
pub fn UA_UnregisterNodesResponse_delete(arg_p: ?*UA_UnregisterNodesResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 238)))]);
}
pub fn UA_UnregisterNodesResponse_equal(arg_p1: ?*const UA_UnregisterNodesResponse, arg_p2: ?*const UA_UnregisterNodesResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 238)))]) == UA_ORDER_EQ;
}
pub fn UA_Counter_init(arg_p: [*c]UA_Counter) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_Counter));
}
pub fn UA_Counter_new() callconv(.c) [*c]UA_Counter {
    return @as([*c]UA_Counter, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 239)))]))));
}
pub fn UA_Counter_copy(arg_src: [*c]const UA_Counter, arg_dst: [*c]UA_Counter) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 239)))]);
}
pub fn UA_Counter_deleteMembers(arg_p: [*c]UA_Counter) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 239)))]);
}
pub fn UA_Counter_clear(arg_p: [*c]UA_Counter) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 239)))]);
}
pub fn UA_Counter_delete(arg_p: [*c]UA_Counter) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 239)))]);
}
pub fn UA_Counter_equal(arg_p1: [*c]const UA_Counter, arg_p2: [*c]const UA_Counter) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 239)))]) == UA_ORDER_EQ;
}
pub fn UA_OpaqueNumericRange_init(arg_p: [*c]UA_OpaqueNumericRange) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_OpaqueNumericRange));
}
pub fn UA_OpaqueNumericRange_new() callconv(.c) [*c]UA_OpaqueNumericRange {
    return @as([*c]UA_OpaqueNumericRange, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 240)))]))));
}
pub fn UA_OpaqueNumericRange_copy(arg_src: [*c]const UA_OpaqueNumericRange, arg_dst: [*c]UA_OpaqueNumericRange) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 240)))]);
}
pub fn UA_OpaqueNumericRange_deleteMembers(arg_p: [*c]UA_OpaqueNumericRange) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 240)))]);
}
pub fn UA_OpaqueNumericRange_clear(arg_p: [*c]UA_OpaqueNumericRange) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 240)))]);
}
pub fn UA_OpaqueNumericRange_delete(arg_p: [*c]UA_OpaqueNumericRange) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 240)))]);
}
pub fn UA_OpaqueNumericRange_equal(arg_p1: [*c]const UA_OpaqueNumericRange, arg_p2: [*c]const UA_OpaqueNumericRange) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 240)))]) == UA_ORDER_EQ;
}
pub fn UA_EndpointConfiguration_init(arg_p: [*c]UA_EndpointConfiguration) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_EndpointConfiguration));
}
pub fn UA_EndpointConfiguration_new() callconv(.c) [*c]UA_EndpointConfiguration {
    return @as([*c]UA_EndpointConfiguration, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 241)))]))));
}
pub fn UA_EndpointConfiguration_copy(arg_src: [*c]const UA_EndpointConfiguration, arg_dst: [*c]UA_EndpointConfiguration) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 241)))]);
}
pub fn UA_EndpointConfiguration_deleteMembers(arg_p: [*c]UA_EndpointConfiguration) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 241)))]);
}
pub fn UA_EndpointConfiguration_clear(arg_p: [*c]UA_EndpointConfiguration) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 241)))]);
}
pub fn UA_EndpointConfiguration_delete(arg_p: [*c]UA_EndpointConfiguration) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 241)))]);
}
pub fn UA_EndpointConfiguration_equal(arg_p1: [*c]const UA_EndpointConfiguration, arg_p2: [*c]const UA_EndpointConfiguration) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 241)))]) == UA_ORDER_EQ;
}
pub fn UA_QueryDataDescription_init(arg_p: [*c]UA_QueryDataDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_QueryDataDescription));
}
pub fn UA_QueryDataDescription_new() callconv(.c) [*c]UA_QueryDataDescription {
    return @as([*c]UA_QueryDataDescription, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 242)))]))));
}
pub fn UA_QueryDataDescription_copy(arg_src: [*c]const UA_QueryDataDescription, arg_dst: [*c]UA_QueryDataDescription) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 242)))]);
}
pub fn UA_QueryDataDescription_deleteMembers(arg_p: [*c]UA_QueryDataDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 242)))]);
}
pub fn UA_QueryDataDescription_clear(arg_p: [*c]UA_QueryDataDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 242)))]);
}
pub fn UA_QueryDataDescription_delete(arg_p: [*c]UA_QueryDataDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 242)))]);
}
pub fn UA_QueryDataDescription_equal(arg_p1: [*c]const UA_QueryDataDescription, arg_p2: [*c]const UA_QueryDataDescription) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 242)))]) == UA_ORDER_EQ;
}
pub fn UA_NodeTypeDescription_init(arg_p: [*c]UA_NodeTypeDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_NodeTypeDescription));
}
pub fn UA_NodeTypeDescription_new() callconv(.c) [*c]UA_NodeTypeDescription {
    return @as([*c]UA_NodeTypeDescription, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 243)))]))));
}
pub fn UA_NodeTypeDescription_copy(arg_src: [*c]const UA_NodeTypeDescription, arg_dst: [*c]UA_NodeTypeDescription) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 243)))]);
}
pub fn UA_NodeTypeDescription_deleteMembers(arg_p: [*c]UA_NodeTypeDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 243)))]);
}
pub fn UA_NodeTypeDescription_clear(arg_p: [*c]UA_NodeTypeDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 243)))]);
}
pub fn UA_NodeTypeDescription_delete(arg_p: [*c]UA_NodeTypeDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 243)))]);
}
pub fn UA_NodeTypeDescription_equal(arg_p1: [*c]const UA_NodeTypeDescription, arg_p2: [*c]const UA_NodeTypeDescription) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 243)))]) == UA_ORDER_EQ;
}
pub fn UA_FilterOperator_init(arg_p: [*c]UA_FilterOperator) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_FilterOperator));
}
pub fn UA_FilterOperator_new() callconv(.c) [*c]UA_FilterOperator {
    return @as([*c]UA_FilterOperator, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 244)))]))));
}
pub fn UA_FilterOperator_copy(arg_src: [*c]const UA_FilterOperator, arg_dst: [*c]UA_FilterOperator) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 244)))]);
}
pub fn UA_FilterOperator_deleteMembers(arg_p: [*c]UA_FilterOperator) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 244)))]);
}
pub fn UA_FilterOperator_clear(arg_p: [*c]UA_FilterOperator) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 244)))]);
}
pub fn UA_FilterOperator_delete(arg_p: [*c]UA_FilterOperator) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 244)))]);
}
pub fn UA_FilterOperator_equal(arg_p1: [*c]const UA_FilterOperator, arg_p2: [*c]const UA_FilterOperator) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 244)))]) == UA_ORDER_EQ;
}
pub fn UA_QueryDataSet_init(arg_p: [*c]UA_QueryDataSet) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_QueryDataSet));
}
pub fn UA_QueryDataSet_new() callconv(.c) [*c]UA_QueryDataSet {
    return @as([*c]UA_QueryDataSet, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 245)))]))));
}
pub fn UA_QueryDataSet_copy(arg_src: [*c]const UA_QueryDataSet, arg_dst: [*c]UA_QueryDataSet) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 245)))]);
}
pub fn UA_QueryDataSet_deleteMembers(arg_p: [*c]UA_QueryDataSet) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 245)))]);
}
pub fn UA_QueryDataSet_clear(arg_p: [*c]UA_QueryDataSet) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 245)))]);
}
pub fn UA_QueryDataSet_delete(arg_p: [*c]UA_QueryDataSet) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 245)))]);
}
pub fn UA_QueryDataSet_equal(arg_p1: [*c]const UA_QueryDataSet, arg_p2: [*c]const UA_QueryDataSet) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 245)))]) == UA_ORDER_EQ;
}
pub fn UA_NodeReference_init(arg_p: [*c]UA_NodeReference) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_NodeReference));
}
pub fn UA_NodeReference_new() callconv(.c) [*c]UA_NodeReference {
    return @as([*c]UA_NodeReference, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 246)))]))));
}
pub fn UA_NodeReference_copy(arg_src: [*c]const UA_NodeReference, arg_dst: [*c]UA_NodeReference) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 246)))]);
}
pub fn UA_NodeReference_deleteMembers(arg_p: [*c]UA_NodeReference) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 246)))]);
}
pub fn UA_NodeReference_clear(arg_p: [*c]UA_NodeReference) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 246)))]);
}
pub fn UA_NodeReference_delete(arg_p: [*c]UA_NodeReference) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 246)))]);
}
pub fn UA_NodeReference_equal(arg_p1: [*c]const UA_NodeReference, arg_p2: [*c]const UA_NodeReference) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 246)))]) == UA_ORDER_EQ;
}
pub fn UA_ContentFilterElement_init(arg_p: [*c]UA_ContentFilterElement) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ContentFilterElement));
}
pub fn UA_ContentFilterElement_new() callconv(.c) [*c]UA_ContentFilterElement {
    return @as([*c]UA_ContentFilterElement, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 247)))]))));
}
pub fn UA_ContentFilterElement_copy(arg_src: [*c]const UA_ContentFilterElement, arg_dst: [*c]UA_ContentFilterElement) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 247)))]);
}
pub fn UA_ContentFilterElement_deleteMembers(arg_p: [*c]UA_ContentFilterElement) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 247)))]);
}
pub fn UA_ContentFilterElement_clear(arg_p: [*c]UA_ContentFilterElement) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 247)))]);
}
pub fn UA_ContentFilterElement_delete(arg_p: [*c]UA_ContentFilterElement) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 247)))]);
}
pub fn UA_ContentFilterElement_equal(arg_p1: [*c]const UA_ContentFilterElement, arg_p2: [*c]const UA_ContentFilterElement) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 247)))]) == UA_ORDER_EQ;
}
pub fn UA_ContentFilter_init(arg_p: [*c]UA_ContentFilter) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ContentFilter));
}
pub fn UA_ContentFilter_new() callconv(.c) [*c]UA_ContentFilter {
    return @as([*c]UA_ContentFilter, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 248)))]))));
}
pub fn UA_ContentFilter_copy(arg_src: [*c]const UA_ContentFilter, arg_dst: [*c]UA_ContentFilter) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 248)))]);
}
pub fn UA_ContentFilter_deleteMembers(arg_p: [*c]UA_ContentFilter) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 248)))]);
}
pub fn UA_ContentFilter_clear(arg_p: [*c]UA_ContentFilter) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 248)))]);
}
pub fn UA_ContentFilter_delete(arg_p: [*c]UA_ContentFilter) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 248)))]);
}
pub fn UA_ContentFilter_equal(arg_p1: [*c]const UA_ContentFilter, arg_p2: [*c]const UA_ContentFilter) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 248)))]) == UA_ORDER_EQ;
}
pub fn UA_ElementOperand_init(arg_p: [*c]UA_ElementOperand) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ElementOperand));
}
pub fn UA_ElementOperand_new() callconv(.c) [*c]UA_ElementOperand {
    return @as([*c]UA_ElementOperand, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 249)))]))));
}
pub fn UA_ElementOperand_copy(arg_src: [*c]const UA_ElementOperand, arg_dst: [*c]UA_ElementOperand) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 249)))]);
}
pub fn UA_ElementOperand_deleteMembers(arg_p: [*c]UA_ElementOperand) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 249)))]);
}
pub fn UA_ElementOperand_clear(arg_p: [*c]UA_ElementOperand) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 249)))]);
}
pub fn UA_ElementOperand_delete(arg_p: [*c]UA_ElementOperand) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 249)))]);
}
pub fn UA_ElementOperand_equal(arg_p1: [*c]const UA_ElementOperand, arg_p2: [*c]const UA_ElementOperand) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 249)))]) == UA_ORDER_EQ;
}
pub fn UA_LiteralOperand_init(arg_p: [*c]UA_LiteralOperand) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_LiteralOperand));
}
pub fn UA_LiteralOperand_new() callconv(.c) [*c]UA_LiteralOperand {
    return @as([*c]UA_LiteralOperand, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 250)))]))));
}
pub fn UA_LiteralOperand_copy(arg_src: [*c]const UA_LiteralOperand, arg_dst: [*c]UA_LiteralOperand) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 250)))]);
}
pub fn UA_LiteralOperand_deleteMembers(arg_p: [*c]UA_LiteralOperand) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 250)))]);
}
pub fn UA_LiteralOperand_clear(arg_p: [*c]UA_LiteralOperand) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 250)))]);
}
pub fn UA_LiteralOperand_delete(arg_p: [*c]UA_LiteralOperand) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 250)))]);
}
pub fn UA_LiteralOperand_equal(arg_p1: [*c]const UA_LiteralOperand, arg_p2: [*c]const UA_LiteralOperand) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 250)))]) == UA_ORDER_EQ;
}
pub fn UA_AttributeOperand_init(arg_p: [*c]UA_AttributeOperand) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_AttributeOperand));
}
pub fn UA_AttributeOperand_new() callconv(.c) [*c]UA_AttributeOperand {
    return @as([*c]UA_AttributeOperand, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 251)))]))));
}
pub fn UA_AttributeOperand_copy(arg_src: [*c]const UA_AttributeOperand, arg_dst: [*c]UA_AttributeOperand) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 251)))]);
}
pub fn UA_AttributeOperand_deleteMembers(arg_p: [*c]UA_AttributeOperand) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 251)))]);
}
pub fn UA_AttributeOperand_clear(arg_p: [*c]UA_AttributeOperand) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 251)))]);
}
pub fn UA_AttributeOperand_delete(arg_p: [*c]UA_AttributeOperand) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 251)))]);
}
pub fn UA_AttributeOperand_equal(arg_p1: [*c]const UA_AttributeOperand, arg_p2: [*c]const UA_AttributeOperand) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 251)))]) == UA_ORDER_EQ;
}
pub fn UA_SimpleAttributeOperand_init(arg_p: [*c]UA_SimpleAttributeOperand) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_SimpleAttributeOperand));
}
pub fn UA_SimpleAttributeOperand_new() callconv(.c) [*c]UA_SimpleAttributeOperand {
    return @as([*c]UA_SimpleAttributeOperand, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 252)))]))));
}
pub fn UA_SimpleAttributeOperand_copy(arg_src: [*c]const UA_SimpleAttributeOperand, arg_dst: [*c]UA_SimpleAttributeOperand) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 252)))]);
}
pub fn UA_SimpleAttributeOperand_deleteMembers(arg_p: [*c]UA_SimpleAttributeOperand) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 252)))]);
}
pub fn UA_SimpleAttributeOperand_clear(arg_p: [*c]UA_SimpleAttributeOperand) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 252)))]);
}
pub fn UA_SimpleAttributeOperand_delete(arg_p: [*c]UA_SimpleAttributeOperand) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 252)))]);
}
pub fn UA_SimpleAttributeOperand_equal(arg_p1: [*c]const UA_SimpleAttributeOperand, arg_p2: [*c]const UA_SimpleAttributeOperand) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 252)))]) == UA_ORDER_EQ;
}
pub fn UA_ContentFilterElementResult_init(arg_p: [*c]UA_ContentFilterElementResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ContentFilterElementResult));
}
pub fn UA_ContentFilterElementResult_new() callconv(.c) [*c]UA_ContentFilterElementResult {
    return @as([*c]UA_ContentFilterElementResult, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 253)))]))));
}
pub fn UA_ContentFilterElementResult_copy(arg_src: [*c]const UA_ContentFilterElementResult, arg_dst: [*c]UA_ContentFilterElementResult) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 253)))]);
}
pub fn UA_ContentFilterElementResult_deleteMembers(arg_p: [*c]UA_ContentFilterElementResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 253)))]);
}
pub fn UA_ContentFilterElementResult_clear(arg_p: [*c]UA_ContentFilterElementResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 253)))]);
}
pub fn UA_ContentFilterElementResult_delete(arg_p: [*c]UA_ContentFilterElementResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 253)))]);
}
pub fn UA_ContentFilterElementResult_equal(arg_p1: [*c]const UA_ContentFilterElementResult, arg_p2: [*c]const UA_ContentFilterElementResult) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 253)))]) == UA_ORDER_EQ;
}
pub fn UA_ContentFilterResult_init(arg_p: [*c]UA_ContentFilterResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ContentFilterResult));
}
pub fn UA_ContentFilterResult_new() callconv(.c) [*c]UA_ContentFilterResult {
    return @as([*c]UA_ContentFilterResult, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 254)))]))));
}
pub fn UA_ContentFilterResult_copy(arg_src: [*c]const UA_ContentFilterResult, arg_dst: [*c]UA_ContentFilterResult) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 254)))]);
}
pub fn UA_ContentFilterResult_deleteMembers(arg_p: [*c]UA_ContentFilterResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 254)))]);
}
pub fn UA_ContentFilterResult_clear(arg_p: [*c]UA_ContentFilterResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 254)))]);
}
pub fn UA_ContentFilterResult_delete(arg_p: [*c]UA_ContentFilterResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 254)))]);
}
pub fn UA_ContentFilterResult_equal(arg_p1: [*c]const UA_ContentFilterResult, arg_p2: [*c]const UA_ContentFilterResult) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 254)))]) == UA_ORDER_EQ;
}
pub fn UA_ParsingResult_init(arg_p: [*c]UA_ParsingResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ParsingResult));
}
pub fn UA_ParsingResult_new() callconv(.c) [*c]UA_ParsingResult {
    return @as([*c]UA_ParsingResult, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 255)))]))));
}
pub fn UA_ParsingResult_copy(arg_src: [*c]const UA_ParsingResult, arg_dst: [*c]UA_ParsingResult) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 255)))]);
}
pub fn UA_ParsingResult_deleteMembers(arg_p: [*c]UA_ParsingResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 255)))]);
}
pub fn UA_ParsingResult_clear(arg_p: [*c]UA_ParsingResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 255)))]);
}
pub fn UA_ParsingResult_delete(arg_p: [*c]UA_ParsingResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 255)))]);
}
pub fn UA_ParsingResult_equal(arg_p1: [*c]const UA_ParsingResult, arg_p2: [*c]const UA_ParsingResult) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 255)))]) == UA_ORDER_EQ;
}
pub fn UA_QueryFirstRequest_init(arg_p: [*c]UA_QueryFirstRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_QueryFirstRequest));
}
pub fn UA_QueryFirstRequest_new() callconv(.c) [*c]UA_QueryFirstRequest {
    return @as([*c]UA_QueryFirstRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 256)))]))));
}
pub fn UA_QueryFirstRequest_copy(arg_src: [*c]const UA_QueryFirstRequest, arg_dst: [*c]UA_QueryFirstRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 256)))]);
}
pub fn UA_QueryFirstRequest_deleteMembers(arg_p: [*c]UA_QueryFirstRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 256)))]);
}
pub fn UA_QueryFirstRequest_clear(arg_p: [*c]UA_QueryFirstRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 256)))]);
}
pub fn UA_QueryFirstRequest_delete(arg_p: [*c]UA_QueryFirstRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 256)))]);
}
pub fn UA_QueryFirstRequest_equal(arg_p1: [*c]const UA_QueryFirstRequest, arg_p2: [*c]const UA_QueryFirstRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 256)))]) == UA_ORDER_EQ;
}
pub fn UA_QueryFirstResponse_init(arg_p: ?*UA_QueryFirstResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_QueryFirstResponse));
}
pub fn UA_QueryFirstResponse_new() callconv(.c) ?*UA_QueryFirstResponse {
    return @as(?*UA_QueryFirstResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 257)))]))));
}
pub fn UA_QueryFirstResponse_copy(arg_src: ?*const UA_QueryFirstResponse, arg_dst: ?*UA_QueryFirstResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 257)))]);
}
pub fn UA_QueryFirstResponse_deleteMembers(arg_p: ?*UA_QueryFirstResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 257)))]);
}
pub fn UA_QueryFirstResponse_clear(arg_p: ?*UA_QueryFirstResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 257)))]);
}
pub fn UA_QueryFirstResponse_delete(arg_p: ?*UA_QueryFirstResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 257)))]);
}
pub fn UA_QueryFirstResponse_equal(arg_p1: ?*const UA_QueryFirstResponse, arg_p2: ?*const UA_QueryFirstResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 257)))]) == UA_ORDER_EQ;
}
pub fn UA_QueryNextRequest_init(arg_p: [*c]UA_QueryNextRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_QueryNextRequest));
}
pub fn UA_QueryNextRequest_new() callconv(.c) [*c]UA_QueryNextRequest {
    return @as([*c]UA_QueryNextRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 258)))]))));
}
pub fn UA_QueryNextRequest_copy(arg_src: [*c]const UA_QueryNextRequest, arg_dst: [*c]UA_QueryNextRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 258)))]);
}
pub fn UA_QueryNextRequest_deleteMembers(arg_p: [*c]UA_QueryNextRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 258)))]);
}
pub fn UA_QueryNextRequest_clear(arg_p: [*c]UA_QueryNextRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 258)))]);
}
pub fn UA_QueryNextRequest_delete(arg_p: [*c]UA_QueryNextRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 258)))]);
}
pub fn UA_QueryNextRequest_equal(arg_p1: [*c]const UA_QueryNextRequest, arg_p2: [*c]const UA_QueryNextRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 258)))]) == UA_ORDER_EQ;
}
pub fn UA_QueryNextResponse_init(arg_p: ?*UA_QueryNextResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_QueryNextResponse));
}
pub fn UA_QueryNextResponse_new() callconv(.c) ?*UA_QueryNextResponse {
    return @as(?*UA_QueryNextResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 259)))]))));
}
pub fn UA_QueryNextResponse_copy(arg_src: ?*const UA_QueryNextResponse, arg_dst: ?*UA_QueryNextResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 259)))]);
}
pub fn UA_QueryNextResponse_deleteMembers(arg_p: ?*UA_QueryNextResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 259)))]);
}
pub fn UA_QueryNextResponse_clear(arg_p: ?*UA_QueryNextResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 259)))]);
}
pub fn UA_QueryNextResponse_delete(arg_p: ?*UA_QueryNextResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 259)))]);
}
pub fn UA_QueryNextResponse_equal(arg_p1: ?*const UA_QueryNextResponse, arg_p2: ?*const UA_QueryNextResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 259)))]) == UA_ORDER_EQ;
}
pub fn UA_TimestampsToReturn_init(arg_p: [*c]UA_TimestampsToReturn) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_TimestampsToReturn));
}
pub fn UA_TimestampsToReturn_new() callconv(.c) [*c]UA_TimestampsToReturn {
    return @as([*c]UA_TimestampsToReturn, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 260)))]))));
}
pub fn UA_TimestampsToReturn_copy(arg_src: [*c]const UA_TimestampsToReturn, arg_dst: [*c]UA_TimestampsToReturn) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 260)))]);
}
pub fn UA_TimestampsToReturn_deleteMembers(arg_p: [*c]UA_TimestampsToReturn) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 260)))]);
}
pub fn UA_TimestampsToReturn_clear(arg_p: [*c]UA_TimestampsToReturn) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 260)))]);
}
pub fn UA_TimestampsToReturn_delete(arg_p: [*c]UA_TimestampsToReturn) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 260)))]);
}
pub fn UA_TimestampsToReturn_equal(arg_p1: [*c]const UA_TimestampsToReturn, arg_p2: [*c]const UA_TimestampsToReturn) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 260)))]) == UA_ORDER_EQ;
}
pub fn UA_ReadValueId_init(arg_p: [*c]UA_ReadValueId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ReadValueId));
}
pub fn UA_ReadValueId_new() callconv(.c) [*c]UA_ReadValueId {
    return @as([*c]UA_ReadValueId, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 261)))]))));
}
pub fn UA_ReadValueId_copy(arg_src: [*c]const UA_ReadValueId, arg_dst: [*c]UA_ReadValueId) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 261)))]);
}
pub fn UA_ReadValueId_deleteMembers(arg_p: [*c]UA_ReadValueId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 261)))]);
}
pub fn UA_ReadValueId_clear(arg_p: [*c]UA_ReadValueId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 261)))]);
}
pub fn UA_ReadValueId_delete(arg_p: [*c]UA_ReadValueId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 261)))]);
}
pub fn UA_ReadValueId_equal(arg_p1: [*c]const UA_ReadValueId, arg_p2: [*c]const UA_ReadValueId) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 261)))]) == UA_ORDER_EQ;
}
pub fn UA_ReadRequest_init(arg_p: [*c]UA_ReadRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ReadRequest));
}
pub fn UA_ReadRequest_new() callconv(.c) [*c]UA_ReadRequest {
    return @as([*c]UA_ReadRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 262)))]))));
}
pub fn UA_ReadRequest_copy(arg_src: [*c]const UA_ReadRequest, arg_dst: [*c]UA_ReadRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 262)))]);
}
pub fn UA_ReadRequest_deleteMembers(arg_p: [*c]UA_ReadRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 262)))]);
}
pub fn UA_ReadRequest_clear(arg_p: [*c]UA_ReadRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 262)))]);
}
pub fn UA_ReadRequest_delete(arg_p: [*c]UA_ReadRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 262)))]);
}
pub fn UA_ReadRequest_equal(arg_p1: [*c]const UA_ReadRequest, arg_p2: [*c]const UA_ReadRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 262)))]) == UA_ORDER_EQ;
}
pub fn UA_ReadResponse_init(arg_p: ?*UA_ReadResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ReadResponse));
}
pub fn UA_ReadResponse_new() callconv(.c) ?*UA_ReadResponse {
    return @as(?*UA_ReadResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 263)))]))));
}
pub fn UA_ReadResponse_copy(arg_src: ?*const UA_ReadResponse, arg_dst: ?*UA_ReadResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 263)))]);
}
pub fn UA_ReadResponse_deleteMembers(arg_p: ?*UA_ReadResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 263)))]);
}
pub fn UA_ReadResponse_clear(arg_p: ?*UA_ReadResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 263)))]);
}
pub fn UA_ReadResponse_delete(arg_p: ?*UA_ReadResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 263)))]);
}
pub fn UA_ReadResponse_equal(arg_p1: ?*const UA_ReadResponse, arg_p2: ?*const UA_ReadResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 263)))]) == UA_ORDER_EQ;
}
pub fn UA_HistoryReadValueId_init(arg_p: [*c]UA_HistoryReadValueId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_HistoryReadValueId));
}
pub fn UA_HistoryReadValueId_new() callconv(.c) [*c]UA_HistoryReadValueId {
    return @as([*c]UA_HistoryReadValueId, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 264)))]))));
}
pub fn UA_HistoryReadValueId_copy(arg_src: [*c]const UA_HistoryReadValueId, arg_dst: [*c]UA_HistoryReadValueId) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 264)))]);
}
pub fn UA_HistoryReadValueId_deleteMembers(arg_p: [*c]UA_HistoryReadValueId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 264)))]);
}
pub fn UA_HistoryReadValueId_clear(arg_p: [*c]UA_HistoryReadValueId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 264)))]);
}
pub fn UA_HistoryReadValueId_delete(arg_p: [*c]UA_HistoryReadValueId) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 264)))]);
}
pub fn UA_HistoryReadValueId_equal(arg_p1: [*c]const UA_HistoryReadValueId, arg_p2: [*c]const UA_HistoryReadValueId) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 264)))]) == UA_ORDER_EQ;
}
pub fn UA_HistoryReadResult_init(arg_p: [*c]UA_HistoryReadResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_HistoryReadResult));
}
pub fn UA_HistoryReadResult_new() callconv(.c) [*c]UA_HistoryReadResult {
    return @as([*c]UA_HistoryReadResult, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 265)))]))));
}
pub fn UA_HistoryReadResult_copy(arg_src: [*c]const UA_HistoryReadResult, arg_dst: [*c]UA_HistoryReadResult) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 265)))]);
}
pub fn UA_HistoryReadResult_deleteMembers(arg_p: [*c]UA_HistoryReadResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 265)))]);
}
pub fn UA_HistoryReadResult_clear(arg_p: [*c]UA_HistoryReadResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 265)))]);
}
pub fn UA_HistoryReadResult_delete(arg_p: [*c]UA_HistoryReadResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 265)))]);
}
pub fn UA_HistoryReadResult_equal(arg_p1: [*c]const UA_HistoryReadResult, arg_p2: [*c]const UA_HistoryReadResult) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 265)))]) == UA_ORDER_EQ;
}
pub fn UA_ReadRawModifiedDetails_init(arg_p: [*c]UA_ReadRawModifiedDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ReadRawModifiedDetails));
}
pub fn UA_ReadRawModifiedDetails_new() callconv(.c) [*c]UA_ReadRawModifiedDetails {
    return @as([*c]UA_ReadRawModifiedDetails, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 266)))]))));
}
pub fn UA_ReadRawModifiedDetails_copy(arg_src: [*c]const UA_ReadRawModifiedDetails, arg_dst: [*c]UA_ReadRawModifiedDetails) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 266)))]);
}
pub fn UA_ReadRawModifiedDetails_deleteMembers(arg_p: [*c]UA_ReadRawModifiedDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 266)))]);
}
pub fn UA_ReadRawModifiedDetails_clear(arg_p: [*c]UA_ReadRawModifiedDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 266)))]);
}
pub fn UA_ReadRawModifiedDetails_delete(arg_p: [*c]UA_ReadRawModifiedDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 266)))]);
}
pub fn UA_ReadRawModifiedDetails_equal(arg_p1: [*c]const UA_ReadRawModifiedDetails, arg_p2: [*c]const UA_ReadRawModifiedDetails) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 266)))]) == UA_ORDER_EQ;
}
pub fn UA_ReadAtTimeDetails_init(arg_p: [*c]UA_ReadAtTimeDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ReadAtTimeDetails));
}
pub fn UA_ReadAtTimeDetails_new() callconv(.c) [*c]UA_ReadAtTimeDetails {
    return @as([*c]UA_ReadAtTimeDetails, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 267)))]))));
}
pub fn UA_ReadAtTimeDetails_copy(arg_src: [*c]const UA_ReadAtTimeDetails, arg_dst: [*c]UA_ReadAtTimeDetails) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 267)))]);
}
pub fn UA_ReadAtTimeDetails_deleteMembers(arg_p: [*c]UA_ReadAtTimeDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 267)))]);
}
pub fn UA_ReadAtTimeDetails_clear(arg_p: [*c]UA_ReadAtTimeDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 267)))]);
}
pub fn UA_ReadAtTimeDetails_delete(arg_p: [*c]UA_ReadAtTimeDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 267)))]);
}
pub fn UA_ReadAtTimeDetails_equal(arg_p1: [*c]const UA_ReadAtTimeDetails, arg_p2: [*c]const UA_ReadAtTimeDetails) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 267)))]) == UA_ORDER_EQ;
}
pub fn UA_ReadAnnotationDataDetails_init(arg_p: [*c]UA_ReadAnnotationDataDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ReadAnnotationDataDetails));
}
pub fn UA_ReadAnnotationDataDetails_new() callconv(.c) [*c]UA_ReadAnnotationDataDetails {
    return @as([*c]UA_ReadAnnotationDataDetails, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 268)))]))));
}
pub fn UA_ReadAnnotationDataDetails_copy(arg_src: [*c]const UA_ReadAnnotationDataDetails, arg_dst: [*c]UA_ReadAnnotationDataDetails) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 268)))]);
}
pub fn UA_ReadAnnotationDataDetails_deleteMembers(arg_p: [*c]UA_ReadAnnotationDataDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 268)))]);
}
pub fn UA_ReadAnnotationDataDetails_clear(arg_p: [*c]UA_ReadAnnotationDataDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 268)))]);
}
pub fn UA_ReadAnnotationDataDetails_delete(arg_p: [*c]UA_ReadAnnotationDataDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 268)))]);
}
pub fn UA_ReadAnnotationDataDetails_equal(arg_p1: [*c]const UA_ReadAnnotationDataDetails, arg_p2: [*c]const UA_ReadAnnotationDataDetails) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 268)))]) == UA_ORDER_EQ;
}
pub fn UA_HistoryData_init(arg_p: [*c]UA_HistoryData) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_HistoryData));
}
pub fn UA_HistoryData_new() callconv(.c) [*c]UA_HistoryData {
    return @as([*c]UA_HistoryData, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 269)))]))));
}
pub fn UA_HistoryData_copy(arg_src: [*c]const UA_HistoryData, arg_dst: [*c]UA_HistoryData) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 269)))]);
}
pub fn UA_HistoryData_deleteMembers(arg_p: [*c]UA_HistoryData) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 269)))]);
}
pub fn UA_HistoryData_clear(arg_p: [*c]UA_HistoryData) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 269)))]);
}
pub fn UA_HistoryData_delete(arg_p: [*c]UA_HistoryData) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 269)))]);
}
pub fn UA_HistoryData_equal(arg_p1: [*c]const UA_HistoryData, arg_p2: [*c]const UA_HistoryData) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 269)))]) == UA_ORDER_EQ;
}
pub fn UA_HistoryReadRequest_init(arg_p: [*c]UA_HistoryReadRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_HistoryReadRequest));
}
pub fn UA_HistoryReadRequest_new() callconv(.c) [*c]UA_HistoryReadRequest {
    return @as([*c]UA_HistoryReadRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 270)))]))));
}
pub fn UA_HistoryReadRequest_copy(arg_src: [*c]const UA_HistoryReadRequest, arg_dst: [*c]UA_HistoryReadRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 270)))]);
}
pub fn UA_HistoryReadRequest_deleteMembers(arg_p: [*c]UA_HistoryReadRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 270)))]);
}
pub fn UA_HistoryReadRequest_clear(arg_p: [*c]UA_HistoryReadRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 270)))]);
}
pub fn UA_HistoryReadRequest_delete(arg_p: [*c]UA_HistoryReadRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 270)))]);
}
pub fn UA_HistoryReadRequest_equal(arg_p1: [*c]const UA_HistoryReadRequest, arg_p2: [*c]const UA_HistoryReadRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 270)))]) == UA_ORDER_EQ;
}
pub fn UA_HistoryReadResponse_init(arg_p: ?*UA_HistoryReadResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_HistoryReadResponse));
}
pub fn UA_HistoryReadResponse_new() callconv(.c) ?*UA_HistoryReadResponse {
    return @as(?*UA_HistoryReadResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 271)))]))));
}
pub fn UA_HistoryReadResponse_copy(arg_src: ?*const UA_HistoryReadResponse, arg_dst: ?*UA_HistoryReadResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 271)))]);
}
pub fn UA_HistoryReadResponse_deleteMembers(arg_p: ?*UA_HistoryReadResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 271)))]);
}
pub fn UA_HistoryReadResponse_clear(arg_p: ?*UA_HistoryReadResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 271)))]);
}
pub fn UA_HistoryReadResponse_delete(arg_p: ?*UA_HistoryReadResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 271)))]);
}
pub fn UA_HistoryReadResponse_equal(arg_p1: ?*const UA_HistoryReadResponse, arg_p2: ?*const UA_HistoryReadResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 271)))]) == UA_ORDER_EQ;
}
pub fn UA_WriteValue_init(arg_p: ?*UA_WriteValue) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_WriteValue));
}
pub fn UA_WriteValue_new() callconv(.c) ?*UA_WriteValue {
    return @as(?*UA_WriteValue, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 272)))]))));
}
pub fn UA_WriteValue_copy(arg_src: ?*const UA_WriteValue, arg_dst: ?*UA_WriteValue) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 272)))]);
}
pub fn UA_WriteValue_deleteMembers(arg_p: ?*UA_WriteValue) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 272)))]);
}
pub fn UA_WriteValue_clear(arg_p: ?*UA_WriteValue) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 272)))]);
}
pub fn UA_WriteValue_delete(arg_p: ?*UA_WriteValue) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 272)))]);
}
pub fn UA_WriteValue_equal(arg_p1: ?*const UA_WriteValue, arg_p2: ?*const UA_WriteValue) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 272)))]) == UA_ORDER_EQ;
}
pub fn UA_WriteRequest_init(arg_p: [*c]UA_WriteRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_WriteRequest));
}
pub fn UA_WriteRequest_new() callconv(.c) [*c]UA_WriteRequest {
    return @as([*c]UA_WriteRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 273)))]))));
}
pub fn UA_WriteRequest_copy(arg_src: [*c]const UA_WriteRequest, arg_dst: [*c]UA_WriteRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 273)))]);
}
pub fn UA_WriteRequest_deleteMembers(arg_p: [*c]UA_WriteRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 273)))]);
}
pub fn UA_WriteRequest_clear(arg_p: [*c]UA_WriteRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 273)))]);
}
pub fn UA_WriteRequest_delete(arg_p: [*c]UA_WriteRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 273)))]);
}
pub fn UA_WriteRequest_equal(arg_p1: [*c]const UA_WriteRequest, arg_p2: [*c]const UA_WriteRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 273)))]) == UA_ORDER_EQ;
}
pub fn UA_WriteResponse_init(arg_p: ?*UA_WriteResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_WriteResponse));
}
pub fn UA_WriteResponse_new() callconv(.c) ?*UA_WriteResponse {
    return @as(?*UA_WriteResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 274)))]))));
}
pub fn UA_WriteResponse_copy(arg_src: ?*const UA_WriteResponse, arg_dst: ?*UA_WriteResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 274)))]);
}
pub fn UA_WriteResponse_deleteMembers(arg_p: ?*UA_WriteResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 274)))]);
}
pub fn UA_WriteResponse_clear(arg_p: ?*UA_WriteResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 274)))]);
}
pub fn UA_WriteResponse_delete(arg_p: ?*UA_WriteResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 274)))]);
}
pub fn UA_WriteResponse_equal(arg_p1: ?*const UA_WriteResponse, arg_p2: ?*const UA_WriteResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 274)))]) == UA_ORDER_EQ;
}
pub fn UA_HistoryUpdateDetails_init(arg_p: [*c]UA_HistoryUpdateDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_HistoryUpdateDetails));
}
pub fn UA_HistoryUpdateDetails_new() callconv(.c) [*c]UA_HistoryUpdateDetails {
    return @as([*c]UA_HistoryUpdateDetails, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 275)))]))));
}
pub fn UA_HistoryUpdateDetails_copy(arg_src: [*c]const UA_HistoryUpdateDetails, arg_dst: [*c]UA_HistoryUpdateDetails) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 275)))]);
}
pub fn UA_HistoryUpdateDetails_deleteMembers(arg_p: [*c]UA_HistoryUpdateDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 275)))]);
}
pub fn UA_HistoryUpdateDetails_clear(arg_p: [*c]UA_HistoryUpdateDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 275)))]);
}
pub fn UA_HistoryUpdateDetails_delete(arg_p: [*c]UA_HistoryUpdateDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 275)))]);
}
pub fn UA_HistoryUpdateDetails_equal(arg_p1: [*c]const UA_HistoryUpdateDetails, arg_p2: [*c]const UA_HistoryUpdateDetails) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 275)))]) == UA_ORDER_EQ;
}
pub fn UA_HistoryUpdateType_init(arg_p: [*c]UA_HistoryUpdateType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_HistoryUpdateType));
}
pub fn UA_HistoryUpdateType_new() callconv(.c) [*c]UA_HistoryUpdateType {
    return @as([*c]UA_HistoryUpdateType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 276)))]))));
}
pub fn UA_HistoryUpdateType_copy(arg_src: [*c]const UA_HistoryUpdateType, arg_dst: [*c]UA_HistoryUpdateType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 276)))]);
}
pub fn UA_HistoryUpdateType_deleteMembers(arg_p: [*c]UA_HistoryUpdateType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 276)))]);
}
pub fn UA_HistoryUpdateType_clear(arg_p: [*c]UA_HistoryUpdateType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 276)))]);
}
pub fn UA_HistoryUpdateType_delete(arg_p: [*c]UA_HistoryUpdateType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 276)))]);
}
pub fn UA_HistoryUpdateType_equal(arg_p1: [*c]const UA_HistoryUpdateType, arg_p2: [*c]const UA_HistoryUpdateType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 276)))]) == UA_ORDER_EQ;
}
pub fn UA_PerformUpdateType_init(arg_p: [*c]UA_PerformUpdateType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_PerformUpdateType));
}
pub fn UA_PerformUpdateType_new() callconv(.c) [*c]UA_PerformUpdateType {
    return @as([*c]UA_PerformUpdateType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 277)))]))));
}
pub fn UA_PerformUpdateType_copy(arg_src: [*c]const UA_PerformUpdateType, arg_dst: [*c]UA_PerformUpdateType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 277)))]);
}
pub fn UA_PerformUpdateType_deleteMembers(arg_p: [*c]UA_PerformUpdateType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 277)))]);
}
pub fn UA_PerformUpdateType_clear(arg_p: [*c]UA_PerformUpdateType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 277)))]);
}
pub fn UA_PerformUpdateType_delete(arg_p: [*c]UA_PerformUpdateType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 277)))]);
}
pub fn UA_PerformUpdateType_equal(arg_p1: [*c]const UA_PerformUpdateType, arg_p2: [*c]const UA_PerformUpdateType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 277)))]) == UA_ORDER_EQ;
}
pub fn UA_UpdateDataDetails_init(arg_p: [*c]UA_UpdateDataDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_UpdateDataDetails));
}
pub fn UA_UpdateDataDetails_new() callconv(.c) [*c]UA_UpdateDataDetails {
    return @as([*c]UA_UpdateDataDetails, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 278)))]))));
}
pub fn UA_UpdateDataDetails_copy(arg_src: [*c]const UA_UpdateDataDetails, arg_dst: [*c]UA_UpdateDataDetails) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 278)))]);
}
pub fn UA_UpdateDataDetails_deleteMembers(arg_p: [*c]UA_UpdateDataDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 278)))]);
}
pub fn UA_UpdateDataDetails_clear(arg_p: [*c]UA_UpdateDataDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 278)))]);
}
pub fn UA_UpdateDataDetails_delete(arg_p: [*c]UA_UpdateDataDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 278)))]);
}
pub fn UA_UpdateDataDetails_equal(arg_p1: [*c]const UA_UpdateDataDetails, arg_p2: [*c]const UA_UpdateDataDetails) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 278)))]) == UA_ORDER_EQ;
}
pub fn UA_UpdateStructureDataDetails_init(arg_p: [*c]UA_UpdateStructureDataDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_UpdateStructureDataDetails));
}
pub fn UA_UpdateStructureDataDetails_new() callconv(.c) [*c]UA_UpdateStructureDataDetails {
    return @as([*c]UA_UpdateStructureDataDetails, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 279)))]))));
}
pub fn UA_UpdateStructureDataDetails_copy(arg_src: [*c]const UA_UpdateStructureDataDetails, arg_dst: [*c]UA_UpdateStructureDataDetails) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 279)))]);
}
pub fn UA_UpdateStructureDataDetails_deleteMembers(arg_p: [*c]UA_UpdateStructureDataDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 279)))]);
}
pub fn UA_UpdateStructureDataDetails_clear(arg_p: [*c]UA_UpdateStructureDataDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 279)))]);
}
pub fn UA_UpdateStructureDataDetails_delete(arg_p: [*c]UA_UpdateStructureDataDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 279)))]);
}
pub fn UA_UpdateStructureDataDetails_equal(arg_p1: [*c]const UA_UpdateStructureDataDetails, arg_p2: [*c]const UA_UpdateStructureDataDetails) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 279)))]) == UA_ORDER_EQ;
}
pub fn UA_DeleteRawModifiedDetails_init(arg_p: [*c]UA_DeleteRawModifiedDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DeleteRawModifiedDetails));
}
pub fn UA_DeleteRawModifiedDetails_new() callconv(.c) [*c]UA_DeleteRawModifiedDetails {
    return @as([*c]UA_DeleteRawModifiedDetails, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 280)))]))));
}
pub fn UA_DeleteRawModifiedDetails_copy(arg_src: [*c]const UA_DeleteRawModifiedDetails, arg_dst: [*c]UA_DeleteRawModifiedDetails) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 280)))]);
}
pub fn UA_DeleteRawModifiedDetails_deleteMembers(arg_p: [*c]UA_DeleteRawModifiedDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 280)))]);
}
pub fn UA_DeleteRawModifiedDetails_clear(arg_p: [*c]UA_DeleteRawModifiedDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 280)))]);
}
pub fn UA_DeleteRawModifiedDetails_delete(arg_p: [*c]UA_DeleteRawModifiedDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 280)))]);
}
pub fn UA_DeleteRawModifiedDetails_equal(arg_p1: [*c]const UA_DeleteRawModifiedDetails, arg_p2: [*c]const UA_DeleteRawModifiedDetails) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 280)))]) == UA_ORDER_EQ;
}
pub fn UA_DeleteAtTimeDetails_init(arg_p: [*c]UA_DeleteAtTimeDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DeleteAtTimeDetails));
}
pub fn UA_DeleteAtTimeDetails_new() callconv(.c) [*c]UA_DeleteAtTimeDetails {
    return @as([*c]UA_DeleteAtTimeDetails, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 281)))]))));
}
pub fn UA_DeleteAtTimeDetails_copy(arg_src: [*c]const UA_DeleteAtTimeDetails, arg_dst: [*c]UA_DeleteAtTimeDetails) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 281)))]);
}
pub fn UA_DeleteAtTimeDetails_deleteMembers(arg_p: [*c]UA_DeleteAtTimeDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 281)))]);
}
pub fn UA_DeleteAtTimeDetails_clear(arg_p: [*c]UA_DeleteAtTimeDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 281)))]);
}
pub fn UA_DeleteAtTimeDetails_delete(arg_p: [*c]UA_DeleteAtTimeDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 281)))]);
}
pub fn UA_DeleteAtTimeDetails_equal(arg_p1: [*c]const UA_DeleteAtTimeDetails, arg_p2: [*c]const UA_DeleteAtTimeDetails) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 281)))]) == UA_ORDER_EQ;
}
pub fn UA_DeleteEventDetails_init(arg_p: [*c]UA_DeleteEventDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DeleteEventDetails));
}
pub fn UA_DeleteEventDetails_new() callconv(.c) [*c]UA_DeleteEventDetails {
    return @as([*c]UA_DeleteEventDetails, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 282)))]))));
}
pub fn UA_DeleteEventDetails_copy(arg_src: [*c]const UA_DeleteEventDetails, arg_dst: [*c]UA_DeleteEventDetails) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 282)))]);
}
pub fn UA_DeleteEventDetails_deleteMembers(arg_p: [*c]UA_DeleteEventDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 282)))]);
}
pub fn UA_DeleteEventDetails_clear(arg_p: [*c]UA_DeleteEventDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 282)))]);
}
pub fn UA_DeleteEventDetails_delete(arg_p: [*c]UA_DeleteEventDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 282)))]);
}
pub fn UA_DeleteEventDetails_equal(arg_p1: [*c]const UA_DeleteEventDetails, arg_p2: [*c]const UA_DeleteEventDetails) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 282)))]) == UA_ORDER_EQ;
}
pub fn UA_HistoryUpdateResult_init(arg_p: [*c]UA_HistoryUpdateResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_HistoryUpdateResult));
}
pub fn UA_HistoryUpdateResult_new() callconv(.c) [*c]UA_HistoryUpdateResult {
    return @as([*c]UA_HistoryUpdateResult, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 283)))]))));
}
pub fn UA_HistoryUpdateResult_copy(arg_src: [*c]const UA_HistoryUpdateResult, arg_dst: [*c]UA_HistoryUpdateResult) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 283)))]);
}
pub fn UA_HistoryUpdateResult_deleteMembers(arg_p: [*c]UA_HistoryUpdateResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 283)))]);
}
pub fn UA_HistoryUpdateResult_clear(arg_p: [*c]UA_HistoryUpdateResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 283)))]);
}
pub fn UA_HistoryUpdateResult_delete(arg_p: [*c]UA_HistoryUpdateResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 283)))]);
}
pub fn UA_HistoryUpdateResult_equal(arg_p1: [*c]const UA_HistoryUpdateResult, arg_p2: [*c]const UA_HistoryUpdateResult) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 283)))]) == UA_ORDER_EQ;
}
pub fn UA_HistoryUpdateRequest_init(arg_p: [*c]UA_HistoryUpdateRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_HistoryUpdateRequest));
}
pub fn UA_HistoryUpdateRequest_new() callconv(.c) [*c]UA_HistoryUpdateRequest {
    return @as([*c]UA_HistoryUpdateRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 284)))]))));
}
pub fn UA_HistoryUpdateRequest_copy(arg_src: [*c]const UA_HistoryUpdateRequest, arg_dst: [*c]UA_HistoryUpdateRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 284)))]);
}
pub fn UA_HistoryUpdateRequest_deleteMembers(arg_p: [*c]UA_HistoryUpdateRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 284)))]);
}
pub fn UA_HistoryUpdateRequest_clear(arg_p: [*c]UA_HistoryUpdateRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 284)))]);
}
pub fn UA_HistoryUpdateRequest_delete(arg_p: [*c]UA_HistoryUpdateRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 284)))]);
}
pub fn UA_HistoryUpdateRequest_equal(arg_p1: [*c]const UA_HistoryUpdateRequest, arg_p2: [*c]const UA_HistoryUpdateRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 284)))]) == UA_ORDER_EQ;
}
pub fn UA_HistoryUpdateResponse_init(arg_p: ?*UA_HistoryUpdateResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_HistoryUpdateResponse));
}
pub fn UA_HistoryUpdateResponse_new() callconv(.c) ?*UA_HistoryUpdateResponse {
    return @as(?*UA_HistoryUpdateResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 285)))]))));
}
pub fn UA_HistoryUpdateResponse_copy(arg_src: ?*const UA_HistoryUpdateResponse, arg_dst: ?*UA_HistoryUpdateResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 285)))]);
}
pub fn UA_HistoryUpdateResponse_deleteMembers(arg_p: ?*UA_HistoryUpdateResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 285)))]);
}
pub fn UA_HistoryUpdateResponse_clear(arg_p: ?*UA_HistoryUpdateResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 285)))]);
}
pub fn UA_HistoryUpdateResponse_delete(arg_p: ?*UA_HistoryUpdateResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 285)))]);
}
pub fn UA_HistoryUpdateResponse_equal(arg_p1: ?*const UA_HistoryUpdateResponse, arg_p2: ?*const UA_HistoryUpdateResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 285)))]) == UA_ORDER_EQ;
}
pub fn UA_CallMethodRequest_init(arg_p: [*c]UA_CallMethodRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_CallMethodRequest));
}
pub fn UA_CallMethodRequest_new() callconv(.c) [*c]UA_CallMethodRequest {
    return @as([*c]UA_CallMethodRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 286)))]))));
}
pub fn UA_CallMethodRequest_copy(arg_src: [*c]const UA_CallMethodRequest, arg_dst: [*c]UA_CallMethodRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 286)))]);
}
pub fn UA_CallMethodRequest_deleteMembers(arg_p: [*c]UA_CallMethodRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 286)))]);
}
pub fn UA_CallMethodRequest_clear(arg_p: [*c]UA_CallMethodRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 286)))]);
}
pub fn UA_CallMethodRequest_delete(arg_p: [*c]UA_CallMethodRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 286)))]);
}
pub fn UA_CallMethodRequest_equal(arg_p1: [*c]const UA_CallMethodRequest, arg_p2: [*c]const UA_CallMethodRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 286)))]) == UA_ORDER_EQ;
}
pub fn UA_CallMethodResult_init(arg_p: [*c]UA_CallMethodResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_CallMethodResult));
}
pub fn UA_CallMethodResult_new() callconv(.c) [*c]UA_CallMethodResult {
    return @as([*c]UA_CallMethodResult, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 287)))]))));
}
pub fn UA_CallMethodResult_copy(arg_src: [*c]const UA_CallMethodResult, arg_dst: [*c]UA_CallMethodResult) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 287)))]);
}
pub fn UA_CallMethodResult_deleteMembers(arg_p: [*c]UA_CallMethodResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 287)))]);
}
pub fn UA_CallMethodResult_clear(arg_p: [*c]UA_CallMethodResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 287)))]);
}
pub fn UA_CallMethodResult_delete(arg_p: [*c]UA_CallMethodResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 287)))]);
}
pub fn UA_CallMethodResult_equal(arg_p1: [*c]const UA_CallMethodResult, arg_p2: [*c]const UA_CallMethodResult) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 287)))]) == UA_ORDER_EQ;
}
pub fn UA_CallRequest_init(arg_p: [*c]UA_CallRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_CallRequest));
}
pub fn UA_CallRequest_new() callconv(.c) [*c]UA_CallRequest {
    return @as([*c]UA_CallRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 288)))]))));
}
pub fn UA_CallRequest_copy(arg_src: [*c]const UA_CallRequest, arg_dst: [*c]UA_CallRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 288)))]);
}
pub fn UA_CallRequest_deleteMembers(arg_p: [*c]UA_CallRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 288)))]);
}
pub fn UA_CallRequest_clear(arg_p: [*c]UA_CallRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 288)))]);
}
pub fn UA_CallRequest_delete(arg_p: [*c]UA_CallRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 288)))]);
}
pub fn UA_CallRequest_equal(arg_p1: [*c]const UA_CallRequest, arg_p2: [*c]const UA_CallRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 288)))]) == UA_ORDER_EQ;
}
pub fn UA_CallResponse_init(arg_p: ?*UA_CallResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_CallResponse));
}
pub fn UA_CallResponse_new() callconv(.c) ?*UA_CallResponse {
    return @as(?*UA_CallResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 289)))]))));
}
pub fn UA_CallResponse_copy(arg_src: ?*const UA_CallResponse, arg_dst: ?*UA_CallResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 289)))]);
}
pub fn UA_CallResponse_deleteMembers(arg_p: ?*UA_CallResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 289)))]);
}
pub fn UA_CallResponse_clear(arg_p: ?*UA_CallResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 289)))]);
}
pub fn UA_CallResponse_delete(arg_p: ?*UA_CallResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 289)))]);
}
pub fn UA_CallResponse_equal(arg_p1: ?*const UA_CallResponse, arg_p2: ?*const UA_CallResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 289)))]) == UA_ORDER_EQ;
}
pub fn UA_MonitoringMode_init(arg_p: [*c]UA_MonitoringMode) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_MonitoringMode));
}
pub fn UA_MonitoringMode_new() callconv(.c) [*c]UA_MonitoringMode {
    return @as([*c]UA_MonitoringMode, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 290)))]))));
}
pub fn UA_MonitoringMode_copy(arg_src: [*c]const UA_MonitoringMode, arg_dst: [*c]UA_MonitoringMode) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 290)))]);
}
pub fn UA_MonitoringMode_deleteMembers(arg_p: [*c]UA_MonitoringMode) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 290)))]);
}
pub fn UA_MonitoringMode_clear(arg_p: [*c]UA_MonitoringMode) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 290)))]);
}
pub fn UA_MonitoringMode_delete(arg_p: [*c]UA_MonitoringMode) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 290)))]);
}
pub fn UA_MonitoringMode_equal(arg_p1: [*c]const UA_MonitoringMode, arg_p2: [*c]const UA_MonitoringMode) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 290)))]) == UA_ORDER_EQ;
}
pub fn UA_DataChangeTrigger_init(arg_p: [*c]UA_DataChangeTrigger) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DataChangeTrigger));
}
pub fn UA_DataChangeTrigger_new() callconv(.c) [*c]UA_DataChangeTrigger {
    return @as([*c]UA_DataChangeTrigger, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 291)))]))));
}
pub fn UA_DataChangeTrigger_copy(arg_src: [*c]const UA_DataChangeTrigger, arg_dst: [*c]UA_DataChangeTrigger) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 291)))]);
}
pub fn UA_DataChangeTrigger_deleteMembers(arg_p: [*c]UA_DataChangeTrigger) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 291)))]);
}
pub fn UA_DataChangeTrigger_clear(arg_p: [*c]UA_DataChangeTrigger) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 291)))]);
}
pub fn UA_DataChangeTrigger_delete(arg_p: [*c]UA_DataChangeTrigger) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 291)))]);
}
pub fn UA_DataChangeTrigger_equal(arg_p1: [*c]const UA_DataChangeTrigger, arg_p2: [*c]const UA_DataChangeTrigger) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 291)))]) == UA_ORDER_EQ;
}
pub fn UA_DeadbandType_init(arg_p: [*c]UA_DeadbandType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DeadbandType));
}
pub fn UA_DeadbandType_new() callconv(.c) [*c]UA_DeadbandType {
    return @as([*c]UA_DeadbandType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 292)))]))));
}
pub fn UA_DeadbandType_copy(arg_src: [*c]const UA_DeadbandType, arg_dst: [*c]UA_DeadbandType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 292)))]);
}
pub fn UA_DeadbandType_deleteMembers(arg_p: [*c]UA_DeadbandType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 292)))]);
}
pub fn UA_DeadbandType_clear(arg_p: [*c]UA_DeadbandType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 292)))]);
}
pub fn UA_DeadbandType_delete(arg_p: [*c]UA_DeadbandType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 292)))]);
}
pub fn UA_DeadbandType_equal(arg_p1: [*c]const UA_DeadbandType, arg_p2: [*c]const UA_DeadbandType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 292)))]) == UA_ORDER_EQ;
}
pub fn UA_DataChangeFilter_init(arg_p: [*c]UA_DataChangeFilter) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DataChangeFilter));
}
pub fn UA_DataChangeFilter_new() callconv(.c) [*c]UA_DataChangeFilter {
    return @as([*c]UA_DataChangeFilter, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 293)))]))));
}
pub fn UA_DataChangeFilter_copy(arg_src: [*c]const UA_DataChangeFilter, arg_dst: [*c]UA_DataChangeFilter) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 293)))]);
}
pub fn UA_DataChangeFilter_deleteMembers(arg_p: [*c]UA_DataChangeFilter) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 293)))]);
}
pub fn UA_DataChangeFilter_clear(arg_p: [*c]UA_DataChangeFilter) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 293)))]);
}
pub fn UA_DataChangeFilter_delete(arg_p: [*c]UA_DataChangeFilter) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 293)))]);
}
pub fn UA_DataChangeFilter_equal(arg_p1: [*c]const UA_DataChangeFilter, arg_p2: [*c]const UA_DataChangeFilter) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 293)))]) == UA_ORDER_EQ;
}
pub fn UA_EventFilter_init(arg_p: [*c]UA_EventFilter) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_EventFilter));
}
pub fn UA_EventFilter_new() callconv(.c) [*c]UA_EventFilter {
    return @as([*c]UA_EventFilter, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 294)))]))));
}
pub fn UA_EventFilter_copy(arg_src: [*c]const UA_EventFilter, arg_dst: [*c]UA_EventFilter) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 294)))]);
}
pub fn UA_EventFilter_deleteMembers(arg_p: [*c]UA_EventFilter) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 294)))]);
}
pub fn UA_EventFilter_clear(arg_p: [*c]UA_EventFilter) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 294)))]);
}
pub fn UA_EventFilter_delete(arg_p: [*c]UA_EventFilter) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 294)))]);
}
pub fn UA_EventFilter_equal(arg_p1: [*c]const UA_EventFilter, arg_p2: [*c]const UA_EventFilter) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 294)))]) == UA_ORDER_EQ;
}
pub fn UA_AggregateConfiguration_init(arg_p: [*c]UA_AggregateConfiguration) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_AggregateConfiguration));
}
pub fn UA_AggregateConfiguration_new() callconv(.c) [*c]UA_AggregateConfiguration {
    return @as([*c]UA_AggregateConfiguration, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 295)))]))));
}
pub fn UA_AggregateConfiguration_copy(arg_src: [*c]const UA_AggregateConfiguration, arg_dst: [*c]UA_AggregateConfiguration) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 295)))]);
}
pub fn UA_AggregateConfiguration_deleteMembers(arg_p: [*c]UA_AggregateConfiguration) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 295)))]);
}
pub fn UA_AggregateConfiguration_clear(arg_p: [*c]UA_AggregateConfiguration) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 295)))]);
}
pub fn UA_AggregateConfiguration_delete(arg_p: [*c]UA_AggregateConfiguration) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 295)))]);
}
pub fn UA_AggregateConfiguration_equal(arg_p1: [*c]const UA_AggregateConfiguration, arg_p2: [*c]const UA_AggregateConfiguration) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 295)))]) == UA_ORDER_EQ;
}
pub fn UA_AggregateFilter_init(arg_p: [*c]UA_AggregateFilter) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_AggregateFilter));
}
pub fn UA_AggregateFilter_new() callconv(.c) [*c]UA_AggregateFilter {
    return @as([*c]UA_AggregateFilter, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 296)))]))));
}
pub fn UA_AggregateFilter_copy(arg_src: [*c]const UA_AggregateFilter, arg_dst: [*c]UA_AggregateFilter) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 296)))]);
}
pub fn UA_AggregateFilter_deleteMembers(arg_p: [*c]UA_AggregateFilter) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 296)))]);
}
pub fn UA_AggregateFilter_clear(arg_p: [*c]UA_AggregateFilter) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 296)))]);
}
pub fn UA_AggregateFilter_delete(arg_p: [*c]UA_AggregateFilter) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 296)))]);
}
pub fn UA_AggregateFilter_equal(arg_p1: [*c]const UA_AggregateFilter, arg_p2: [*c]const UA_AggregateFilter) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 296)))]) == UA_ORDER_EQ;
}
pub fn UA_EventFilterResult_init(arg_p: [*c]UA_EventFilterResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_EventFilterResult));
}
pub fn UA_EventFilterResult_new() callconv(.c) [*c]UA_EventFilterResult {
    return @as([*c]UA_EventFilterResult, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 297)))]))));
}
pub fn UA_EventFilterResult_copy(arg_src: [*c]const UA_EventFilterResult, arg_dst: [*c]UA_EventFilterResult) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 297)))]);
}
pub fn UA_EventFilterResult_deleteMembers(arg_p: [*c]UA_EventFilterResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 297)))]);
}
pub fn UA_EventFilterResult_clear(arg_p: [*c]UA_EventFilterResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 297)))]);
}
pub fn UA_EventFilterResult_delete(arg_p: [*c]UA_EventFilterResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 297)))]);
}
pub fn UA_EventFilterResult_equal(arg_p1: [*c]const UA_EventFilterResult, arg_p2: [*c]const UA_EventFilterResult) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 297)))]) == UA_ORDER_EQ;
}
pub fn UA_AggregateFilterResult_init(arg_p: [*c]UA_AggregateFilterResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_AggregateFilterResult));
}
pub fn UA_AggregateFilterResult_new() callconv(.c) [*c]UA_AggregateFilterResult {
    return @as([*c]UA_AggregateFilterResult, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 298)))]))));
}
pub fn UA_AggregateFilterResult_copy(arg_src: [*c]const UA_AggregateFilterResult, arg_dst: [*c]UA_AggregateFilterResult) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 298)))]);
}
pub fn UA_AggregateFilterResult_deleteMembers(arg_p: [*c]UA_AggregateFilterResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 298)))]);
}
pub fn UA_AggregateFilterResult_clear(arg_p: [*c]UA_AggregateFilterResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 298)))]);
}
pub fn UA_AggregateFilterResult_delete(arg_p: [*c]UA_AggregateFilterResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 298)))]);
}
pub fn UA_AggregateFilterResult_equal(arg_p1: [*c]const UA_AggregateFilterResult, arg_p2: [*c]const UA_AggregateFilterResult) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 298)))]) == UA_ORDER_EQ;
}
pub fn UA_MonitoringParameters_init(arg_p: [*c]UA_MonitoringParameters) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_MonitoringParameters));
}
pub fn UA_MonitoringParameters_new() callconv(.c) [*c]UA_MonitoringParameters {
    return @as([*c]UA_MonitoringParameters, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 299)))]))));
}
pub fn UA_MonitoringParameters_copy(arg_src: [*c]const UA_MonitoringParameters, arg_dst: [*c]UA_MonitoringParameters) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 299)))]);
}
pub fn UA_MonitoringParameters_deleteMembers(arg_p: [*c]UA_MonitoringParameters) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 299)))]);
}
pub fn UA_MonitoringParameters_clear(arg_p: [*c]UA_MonitoringParameters) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 299)))]);
}
pub fn UA_MonitoringParameters_delete(arg_p: [*c]UA_MonitoringParameters) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 299)))]);
}
pub fn UA_MonitoringParameters_equal(arg_p1: [*c]const UA_MonitoringParameters, arg_p2: [*c]const UA_MonitoringParameters) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 299)))]) == UA_ORDER_EQ;
}
pub fn UA_MonitoredItemCreateRequest_init(arg_p: [*c]UA_MonitoredItemCreateRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_MonitoredItemCreateRequest));
}
pub fn UA_MonitoredItemCreateRequest_new() callconv(.c) [*c]UA_MonitoredItemCreateRequest {
    return @as([*c]UA_MonitoredItemCreateRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 300)))]))));
}
pub fn UA_MonitoredItemCreateRequest_copy(arg_src: [*c]const UA_MonitoredItemCreateRequest, arg_dst: [*c]UA_MonitoredItemCreateRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 300)))]);
}
pub fn UA_MonitoredItemCreateRequest_deleteMembers(arg_p: [*c]UA_MonitoredItemCreateRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 300)))]);
}
pub fn UA_MonitoredItemCreateRequest_clear(arg_p: [*c]UA_MonitoredItemCreateRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 300)))]);
}
pub fn UA_MonitoredItemCreateRequest_delete(arg_p: [*c]UA_MonitoredItemCreateRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 300)))]);
}
pub fn UA_MonitoredItemCreateRequest_equal(arg_p1: [*c]const UA_MonitoredItemCreateRequest, arg_p2: [*c]const UA_MonitoredItemCreateRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 300)))]) == UA_ORDER_EQ;
}
pub fn UA_MonitoredItemCreateResult_init(arg_p: [*c]UA_MonitoredItemCreateResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_MonitoredItemCreateResult));
}
pub fn UA_MonitoredItemCreateResult_new() callconv(.c) [*c]UA_MonitoredItemCreateResult {
    return @as([*c]UA_MonitoredItemCreateResult, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 301)))]))));
}
pub fn UA_MonitoredItemCreateResult_copy(arg_src: [*c]const UA_MonitoredItemCreateResult, arg_dst: [*c]UA_MonitoredItemCreateResult) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 301)))]);
}
pub fn UA_MonitoredItemCreateResult_deleteMembers(arg_p: [*c]UA_MonitoredItemCreateResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 301)))]);
}
pub fn UA_MonitoredItemCreateResult_clear(arg_p: [*c]UA_MonitoredItemCreateResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 301)))]);
}
pub fn UA_MonitoredItemCreateResult_delete(arg_p: [*c]UA_MonitoredItemCreateResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 301)))]);
}
pub fn UA_MonitoredItemCreateResult_equal(arg_p1: [*c]const UA_MonitoredItemCreateResult, arg_p2: [*c]const UA_MonitoredItemCreateResult) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 301)))]) == UA_ORDER_EQ;
}
pub fn UA_CreateMonitoredItemsRequest_init(arg_p: [*c]UA_CreateMonitoredItemsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_CreateMonitoredItemsRequest));
}
pub fn UA_CreateMonitoredItemsRequest_new() callconv(.c) [*c]UA_CreateMonitoredItemsRequest {
    return @as([*c]UA_CreateMonitoredItemsRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 302)))]))));
}
pub fn UA_CreateMonitoredItemsRequest_copy(arg_src: [*c]const UA_CreateMonitoredItemsRequest, arg_dst: [*c]UA_CreateMonitoredItemsRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 302)))]);
}
pub fn UA_CreateMonitoredItemsRequest_deleteMembers(arg_p: [*c]UA_CreateMonitoredItemsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 302)))]);
}
pub fn UA_CreateMonitoredItemsRequest_clear(arg_p: [*c]UA_CreateMonitoredItemsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 302)))]);
}
pub fn UA_CreateMonitoredItemsRequest_delete(arg_p: [*c]UA_CreateMonitoredItemsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 302)))]);
}
pub fn UA_CreateMonitoredItemsRequest_equal(arg_p1: [*c]const UA_CreateMonitoredItemsRequest, arg_p2: [*c]const UA_CreateMonitoredItemsRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 302)))]) == UA_ORDER_EQ;
}
pub fn UA_CreateMonitoredItemsResponse_init(arg_p: ?*UA_CreateMonitoredItemsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_CreateMonitoredItemsResponse));
}
pub fn UA_CreateMonitoredItemsResponse_new() callconv(.c) ?*UA_CreateMonitoredItemsResponse {
    return @as(?*UA_CreateMonitoredItemsResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 303)))]))));
}
pub fn UA_CreateMonitoredItemsResponse_copy(arg_src: ?*const UA_CreateMonitoredItemsResponse, arg_dst: ?*UA_CreateMonitoredItemsResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 303)))]);
}
pub fn UA_CreateMonitoredItemsResponse_deleteMembers(arg_p: ?*UA_CreateMonitoredItemsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 303)))]);
}
pub fn UA_CreateMonitoredItemsResponse_clear(arg_p: ?*UA_CreateMonitoredItemsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 303)))]);
}
pub fn UA_CreateMonitoredItemsResponse_delete(arg_p: ?*UA_CreateMonitoredItemsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 303)))]);
}
pub fn UA_CreateMonitoredItemsResponse_equal(arg_p1: ?*const UA_CreateMonitoredItemsResponse, arg_p2: ?*const UA_CreateMonitoredItemsResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 303)))]) == UA_ORDER_EQ;
}
pub fn UA_MonitoredItemModifyRequest_init(arg_p: [*c]UA_MonitoredItemModifyRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_MonitoredItemModifyRequest));
}
pub fn UA_MonitoredItemModifyRequest_new() callconv(.c) [*c]UA_MonitoredItemModifyRequest {
    return @as([*c]UA_MonitoredItemModifyRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 304)))]))));
}
pub fn UA_MonitoredItemModifyRequest_copy(arg_src: [*c]const UA_MonitoredItemModifyRequest, arg_dst: [*c]UA_MonitoredItemModifyRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 304)))]);
}
pub fn UA_MonitoredItemModifyRequest_deleteMembers(arg_p: [*c]UA_MonitoredItemModifyRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 304)))]);
}
pub fn UA_MonitoredItemModifyRequest_clear(arg_p: [*c]UA_MonitoredItemModifyRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 304)))]);
}
pub fn UA_MonitoredItemModifyRequest_delete(arg_p: [*c]UA_MonitoredItemModifyRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 304)))]);
}
pub fn UA_MonitoredItemModifyRequest_equal(arg_p1: [*c]const UA_MonitoredItemModifyRequest, arg_p2: [*c]const UA_MonitoredItemModifyRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 304)))]) == UA_ORDER_EQ;
}
pub fn UA_MonitoredItemModifyResult_init(arg_p: [*c]UA_MonitoredItemModifyResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_MonitoredItemModifyResult));
}
pub fn UA_MonitoredItemModifyResult_new() callconv(.c) [*c]UA_MonitoredItemModifyResult {
    return @as([*c]UA_MonitoredItemModifyResult, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 305)))]))));
}
pub fn UA_MonitoredItemModifyResult_copy(arg_src: [*c]const UA_MonitoredItemModifyResult, arg_dst: [*c]UA_MonitoredItemModifyResult) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 305)))]);
}
pub fn UA_MonitoredItemModifyResult_deleteMembers(arg_p: [*c]UA_MonitoredItemModifyResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 305)))]);
}
pub fn UA_MonitoredItemModifyResult_clear(arg_p: [*c]UA_MonitoredItemModifyResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 305)))]);
}
pub fn UA_MonitoredItemModifyResult_delete(arg_p: [*c]UA_MonitoredItemModifyResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 305)))]);
}
pub fn UA_MonitoredItemModifyResult_equal(arg_p1: [*c]const UA_MonitoredItemModifyResult, arg_p2: [*c]const UA_MonitoredItemModifyResult) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 305)))]) == UA_ORDER_EQ;
}
pub fn UA_ModifyMonitoredItemsRequest_init(arg_p: [*c]UA_ModifyMonitoredItemsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ModifyMonitoredItemsRequest));
}
pub fn UA_ModifyMonitoredItemsRequest_new() callconv(.c) [*c]UA_ModifyMonitoredItemsRequest {
    return @as([*c]UA_ModifyMonitoredItemsRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 306)))]))));
}
pub fn UA_ModifyMonitoredItemsRequest_copy(arg_src: [*c]const UA_ModifyMonitoredItemsRequest, arg_dst: [*c]UA_ModifyMonitoredItemsRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 306)))]);
}
pub fn UA_ModifyMonitoredItemsRequest_deleteMembers(arg_p: [*c]UA_ModifyMonitoredItemsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 306)))]);
}
pub fn UA_ModifyMonitoredItemsRequest_clear(arg_p: [*c]UA_ModifyMonitoredItemsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 306)))]);
}
pub fn UA_ModifyMonitoredItemsRequest_delete(arg_p: [*c]UA_ModifyMonitoredItemsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 306)))]);
}
pub fn UA_ModifyMonitoredItemsRequest_equal(arg_p1: [*c]const UA_ModifyMonitoredItemsRequest, arg_p2: [*c]const UA_ModifyMonitoredItemsRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 306)))]) == UA_ORDER_EQ;
}
pub fn UA_ModifyMonitoredItemsResponse_init(arg_p: ?*UA_ModifyMonitoredItemsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ModifyMonitoredItemsResponse));
}
pub fn UA_ModifyMonitoredItemsResponse_new() callconv(.c) ?*UA_ModifyMonitoredItemsResponse {
    return @as(?*UA_ModifyMonitoredItemsResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 307)))]))));
}
pub fn UA_ModifyMonitoredItemsResponse_copy(arg_src: ?*const UA_ModifyMonitoredItemsResponse, arg_dst: ?*UA_ModifyMonitoredItemsResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 307)))]);
}
pub fn UA_ModifyMonitoredItemsResponse_deleteMembers(arg_p: ?*UA_ModifyMonitoredItemsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 307)))]);
}
pub fn UA_ModifyMonitoredItemsResponse_clear(arg_p: ?*UA_ModifyMonitoredItemsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 307)))]);
}
pub fn UA_ModifyMonitoredItemsResponse_delete(arg_p: ?*UA_ModifyMonitoredItemsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 307)))]);
}
pub fn UA_ModifyMonitoredItemsResponse_equal(arg_p1: ?*const UA_ModifyMonitoredItemsResponse, arg_p2: ?*const UA_ModifyMonitoredItemsResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 307)))]) == UA_ORDER_EQ;
}
pub fn UA_SetMonitoringModeRequest_init(arg_p: [*c]UA_SetMonitoringModeRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_SetMonitoringModeRequest));
}
pub fn UA_SetMonitoringModeRequest_new() callconv(.c) [*c]UA_SetMonitoringModeRequest {
    return @as([*c]UA_SetMonitoringModeRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 308)))]))));
}
pub fn UA_SetMonitoringModeRequest_copy(arg_src: [*c]const UA_SetMonitoringModeRequest, arg_dst: [*c]UA_SetMonitoringModeRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 308)))]);
}
pub fn UA_SetMonitoringModeRequest_deleteMembers(arg_p: [*c]UA_SetMonitoringModeRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 308)))]);
}
pub fn UA_SetMonitoringModeRequest_clear(arg_p: [*c]UA_SetMonitoringModeRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 308)))]);
}
pub fn UA_SetMonitoringModeRequest_delete(arg_p: [*c]UA_SetMonitoringModeRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 308)))]);
}
pub fn UA_SetMonitoringModeRequest_equal(arg_p1: [*c]const UA_SetMonitoringModeRequest, arg_p2: [*c]const UA_SetMonitoringModeRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 308)))]) == UA_ORDER_EQ;
}
pub fn UA_SetMonitoringModeResponse_init(arg_p: ?*UA_SetMonitoringModeResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_SetMonitoringModeResponse));
}
pub fn UA_SetMonitoringModeResponse_new() callconv(.c) ?*UA_SetMonitoringModeResponse {
    return @as(?*UA_SetMonitoringModeResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 309)))]))));
}
pub fn UA_SetMonitoringModeResponse_copy(arg_src: ?*const UA_SetMonitoringModeResponse, arg_dst: ?*UA_SetMonitoringModeResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 309)))]);
}
pub fn UA_SetMonitoringModeResponse_deleteMembers(arg_p: ?*UA_SetMonitoringModeResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 309)))]);
}
pub fn UA_SetMonitoringModeResponse_clear(arg_p: ?*UA_SetMonitoringModeResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 309)))]);
}
pub fn UA_SetMonitoringModeResponse_delete(arg_p: ?*UA_SetMonitoringModeResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 309)))]);
}
pub fn UA_SetMonitoringModeResponse_equal(arg_p1: ?*const UA_SetMonitoringModeResponse, arg_p2: ?*const UA_SetMonitoringModeResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 309)))]) == UA_ORDER_EQ;
}
pub fn UA_SetTriggeringRequest_init(arg_p: [*c]UA_SetTriggeringRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_SetTriggeringRequest));
}
pub fn UA_SetTriggeringRequest_new() callconv(.c) [*c]UA_SetTriggeringRequest {
    return @as([*c]UA_SetTriggeringRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 310)))]))));
}
pub fn UA_SetTriggeringRequest_copy(arg_src: [*c]const UA_SetTriggeringRequest, arg_dst: [*c]UA_SetTriggeringRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 310)))]);
}
pub fn UA_SetTriggeringRequest_deleteMembers(arg_p: [*c]UA_SetTriggeringRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 310)))]);
}
pub fn UA_SetTriggeringRequest_clear(arg_p: [*c]UA_SetTriggeringRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 310)))]);
}
pub fn UA_SetTriggeringRequest_delete(arg_p: [*c]UA_SetTriggeringRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 310)))]);
}
pub fn UA_SetTriggeringRequest_equal(arg_p1: [*c]const UA_SetTriggeringRequest, arg_p2: [*c]const UA_SetTriggeringRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 310)))]) == UA_ORDER_EQ;
}
pub fn UA_SetTriggeringResponse_init(arg_p: ?*UA_SetTriggeringResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_SetTriggeringResponse));
}
pub fn UA_SetTriggeringResponse_new() callconv(.c) ?*UA_SetTriggeringResponse {
    return @as(?*UA_SetTriggeringResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 311)))]))));
}
pub fn UA_SetTriggeringResponse_copy(arg_src: ?*const UA_SetTriggeringResponse, arg_dst: ?*UA_SetTriggeringResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 311)))]);
}
pub fn UA_SetTriggeringResponse_deleteMembers(arg_p: ?*UA_SetTriggeringResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 311)))]);
}
pub fn UA_SetTriggeringResponse_clear(arg_p: ?*UA_SetTriggeringResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 311)))]);
}
pub fn UA_SetTriggeringResponse_delete(arg_p: ?*UA_SetTriggeringResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 311)))]);
}
pub fn UA_SetTriggeringResponse_equal(arg_p1: ?*const UA_SetTriggeringResponse, arg_p2: ?*const UA_SetTriggeringResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 311)))]) == UA_ORDER_EQ;
}
pub fn UA_DeleteMonitoredItemsRequest_init(arg_p: [*c]UA_DeleteMonitoredItemsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DeleteMonitoredItemsRequest));
}
pub fn UA_DeleteMonitoredItemsRequest_new() callconv(.c) [*c]UA_DeleteMonitoredItemsRequest {
    return @as([*c]UA_DeleteMonitoredItemsRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 312)))]))));
}
pub fn UA_DeleteMonitoredItemsRequest_copy(arg_src: [*c]const UA_DeleteMonitoredItemsRequest, arg_dst: [*c]UA_DeleteMonitoredItemsRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 312)))]);
}
pub fn UA_DeleteMonitoredItemsRequest_deleteMembers(arg_p: [*c]UA_DeleteMonitoredItemsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 312)))]);
}
pub fn UA_DeleteMonitoredItemsRequest_clear(arg_p: [*c]UA_DeleteMonitoredItemsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 312)))]);
}
pub fn UA_DeleteMonitoredItemsRequest_delete(arg_p: [*c]UA_DeleteMonitoredItemsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 312)))]);
}
pub fn UA_DeleteMonitoredItemsRequest_equal(arg_p1: [*c]const UA_DeleteMonitoredItemsRequest, arg_p2: [*c]const UA_DeleteMonitoredItemsRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 312)))]) == UA_ORDER_EQ;
}
pub fn UA_DeleteMonitoredItemsResponse_init(arg_p: ?*UA_DeleteMonitoredItemsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DeleteMonitoredItemsResponse));
}
pub fn UA_DeleteMonitoredItemsResponse_new() callconv(.c) ?*UA_DeleteMonitoredItemsResponse {
    return @as(?*UA_DeleteMonitoredItemsResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 313)))]))));
}
pub fn UA_DeleteMonitoredItemsResponse_copy(arg_src: ?*const UA_DeleteMonitoredItemsResponse, arg_dst: ?*UA_DeleteMonitoredItemsResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 313)))]);
}
pub fn UA_DeleteMonitoredItemsResponse_deleteMembers(arg_p: ?*UA_DeleteMonitoredItemsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 313)))]);
}
pub fn UA_DeleteMonitoredItemsResponse_clear(arg_p: ?*UA_DeleteMonitoredItemsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 313)))]);
}
pub fn UA_DeleteMonitoredItemsResponse_delete(arg_p: ?*UA_DeleteMonitoredItemsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 313)))]);
}
pub fn UA_DeleteMonitoredItemsResponse_equal(arg_p1: ?*const UA_DeleteMonitoredItemsResponse, arg_p2: ?*const UA_DeleteMonitoredItemsResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 313)))]) == UA_ORDER_EQ;
}
pub fn UA_CreateSubscriptionRequest_init(arg_p: [*c]UA_CreateSubscriptionRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_CreateSubscriptionRequest));
}
pub fn UA_CreateSubscriptionRequest_new() callconv(.c) [*c]UA_CreateSubscriptionRequest {
    return @as([*c]UA_CreateSubscriptionRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 314)))]))));
}
pub fn UA_CreateSubscriptionRequest_copy(arg_src: [*c]const UA_CreateSubscriptionRequest, arg_dst: [*c]UA_CreateSubscriptionRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 314)))]);
}
pub fn UA_CreateSubscriptionRequest_deleteMembers(arg_p: [*c]UA_CreateSubscriptionRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 314)))]);
}
pub fn UA_CreateSubscriptionRequest_clear(arg_p: [*c]UA_CreateSubscriptionRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 314)))]);
}
pub fn UA_CreateSubscriptionRequest_delete(arg_p: [*c]UA_CreateSubscriptionRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 314)))]);
}
pub fn UA_CreateSubscriptionRequest_equal(arg_p1: [*c]const UA_CreateSubscriptionRequest, arg_p2: [*c]const UA_CreateSubscriptionRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 314)))]) == UA_ORDER_EQ;
}
pub fn UA_CreateSubscriptionResponse_init(arg_p: ?*UA_CreateSubscriptionResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_CreateSubscriptionResponse));
}
pub fn UA_CreateSubscriptionResponse_new() callconv(.c) ?*UA_CreateSubscriptionResponse {
    return @as(?*UA_CreateSubscriptionResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 315)))]))));
}
pub fn UA_CreateSubscriptionResponse_copy(arg_src: ?*const UA_CreateSubscriptionResponse, arg_dst: ?*UA_CreateSubscriptionResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 315)))]);
}
pub fn UA_CreateSubscriptionResponse_deleteMembers(arg_p: ?*UA_CreateSubscriptionResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 315)))]);
}
pub fn UA_CreateSubscriptionResponse_clear(arg_p: ?*UA_CreateSubscriptionResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 315)))]);
}
pub fn UA_CreateSubscriptionResponse_delete(arg_p: ?*UA_CreateSubscriptionResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 315)))]);
}
pub fn UA_CreateSubscriptionResponse_equal(arg_p1: ?*const UA_CreateSubscriptionResponse, arg_p2: ?*const UA_CreateSubscriptionResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 315)))]) == UA_ORDER_EQ;
}
pub fn UA_ModifySubscriptionRequest_init(arg_p: [*c]UA_ModifySubscriptionRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ModifySubscriptionRequest));
}
pub fn UA_ModifySubscriptionRequest_new() callconv(.c) [*c]UA_ModifySubscriptionRequest {
    return @as([*c]UA_ModifySubscriptionRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 316)))]))));
}
pub fn UA_ModifySubscriptionRequest_copy(arg_src: [*c]const UA_ModifySubscriptionRequest, arg_dst: [*c]UA_ModifySubscriptionRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 316)))]);
}
pub fn UA_ModifySubscriptionRequest_deleteMembers(arg_p: [*c]UA_ModifySubscriptionRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 316)))]);
}
pub fn UA_ModifySubscriptionRequest_clear(arg_p: [*c]UA_ModifySubscriptionRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 316)))]);
}
pub fn UA_ModifySubscriptionRequest_delete(arg_p: [*c]UA_ModifySubscriptionRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 316)))]);
}
pub fn UA_ModifySubscriptionRequest_equal(arg_p1: [*c]const UA_ModifySubscriptionRequest, arg_p2: [*c]const UA_ModifySubscriptionRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 316)))]) == UA_ORDER_EQ;
}
pub fn UA_ModifySubscriptionResponse_init(arg_p: ?*UA_ModifySubscriptionResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ModifySubscriptionResponse));
}
pub fn UA_ModifySubscriptionResponse_new() callconv(.c) ?*UA_ModifySubscriptionResponse {
    return @as(?*UA_ModifySubscriptionResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 317)))]))));
}
pub fn UA_ModifySubscriptionResponse_copy(arg_src: ?*const UA_ModifySubscriptionResponse, arg_dst: ?*UA_ModifySubscriptionResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 317)))]);
}
pub fn UA_ModifySubscriptionResponse_deleteMembers(arg_p: ?*UA_ModifySubscriptionResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 317)))]);
}
pub fn UA_ModifySubscriptionResponse_clear(arg_p: ?*UA_ModifySubscriptionResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 317)))]);
}
pub fn UA_ModifySubscriptionResponse_delete(arg_p: ?*UA_ModifySubscriptionResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 317)))]);
}
pub fn UA_ModifySubscriptionResponse_equal(arg_p1: ?*const UA_ModifySubscriptionResponse, arg_p2: ?*const UA_ModifySubscriptionResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 317)))]) == UA_ORDER_EQ;
}
pub fn UA_SetPublishingModeRequest_init(arg_p: [*c]UA_SetPublishingModeRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_SetPublishingModeRequest));
}
pub fn UA_SetPublishingModeRequest_new() callconv(.c) [*c]UA_SetPublishingModeRequest {
    return @as([*c]UA_SetPublishingModeRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 318)))]))));
}
pub fn UA_SetPublishingModeRequest_copy(arg_src: [*c]const UA_SetPublishingModeRequest, arg_dst: [*c]UA_SetPublishingModeRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 318)))]);
}
pub fn UA_SetPublishingModeRequest_deleteMembers(arg_p: [*c]UA_SetPublishingModeRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 318)))]);
}
pub fn UA_SetPublishingModeRequest_clear(arg_p: [*c]UA_SetPublishingModeRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 318)))]);
}
pub fn UA_SetPublishingModeRequest_delete(arg_p: [*c]UA_SetPublishingModeRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 318)))]);
}
pub fn UA_SetPublishingModeRequest_equal(arg_p1: [*c]const UA_SetPublishingModeRequest, arg_p2: [*c]const UA_SetPublishingModeRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 318)))]) == UA_ORDER_EQ;
}
pub fn UA_SetPublishingModeResponse_init(arg_p: ?*UA_SetPublishingModeResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_SetPublishingModeResponse));
}
pub fn UA_SetPublishingModeResponse_new() callconv(.c) ?*UA_SetPublishingModeResponse {
    return @as(?*UA_SetPublishingModeResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 319)))]))));
}
pub fn UA_SetPublishingModeResponse_copy(arg_src: ?*const UA_SetPublishingModeResponse, arg_dst: ?*UA_SetPublishingModeResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 319)))]);
}
pub fn UA_SetPublishingModeResponse_deleteMembers(arg_p: ?*UA_SetPublishingModeResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 319)))]);
}
pub fn UA_SetPublishingModeResponse_clear(arg_p: ?*UA_SetPublishingModeResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 319)))]);
}
pub fn UA_SetPublishingModeResponse_delete(arg_p: ?*UA_SetPublishingModeResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 319)))]);
}
pub fn UA_SetPublishingModeResponse_equal(arg_p1: ?*const UA_SetPublishingModeResponse, arg_p2: ?*const UA_SetPublishingModeResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 319)))]) == UA_ORDER_EQ;
}
pub fn UA_NotificationMessage_init(arg_p: [*c]UA_NotificationMessage) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_NotificationMessage));
}
pub fn UA_NotificationMessage_new() callconv(.c) [*c]UA_NotificationMessage {
    return @as([*c]UA_NotificationMessage, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 320)))]))));
}
pub fn UA_NotificationMessage_copy(arg_src: [*c]const UA_NotificationMessage, arg_dst: [*c]UA_NotificationMessage) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 320)))]);
}
pub fn UA_NotificationMessage_deleteMembers(arg_p: [*c]UA_NotificationMessage) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 320)))]);
}
pub fn UA_NotificationMessage_clear(arg_p: [*c]UA_NotificationMessage) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 320)))]);
}
pub fn UA_NotificationMessage_delete(arg_p: [*c]UA_NotificationMessage) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 320)))]);
}
pub fn UA_NotificationMessage_equal(arg_p1: [*c]const UA_NotificationMessage, arg_p2: [*c]const UA_NotificationMessage) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 320)))]) == UA_ORDER_EQ;
}
pub fn UA_MonitoredItemNotification_init(arg_p: ?*UA_MonitoredItemNotification) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_MonitoredItemNotification));
}
pub fn UA_MonitoredItemNotification_new() callconv(.c) ?*UA_MonitoredItemNotification {
    return @as(?*UA_MonitoredItemNotification, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 321)))]))));
}
pub fn UA_MonitoredItemNotification_copy(arg_src: ?*const UA_MonitoredItemNotification, arg_dst: ?*UA_MonitoredItemNotification) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 321)))]);
}
pub fn UA_MonitoredItemNotification_deleteMembers(arg_p: ?*UA_MonitoredItemNotification) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 321)))]);
}
pub fn UA_MonitoredItemNotification_clear(arg_p: ?*UA_MonitoredItemNotification) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 321)))]);
}
pub fn UA_MonitoredItemNotification_delete(arg_p: ?*UA_MonitoredItemNotification) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 321)))]);
}
pub fn UA_MonitoredItemNotification_equal(arg_p1: ?*const UA_MonitoredItemNotification, arg_p2: ?*const UA_MonitoredItemNotification) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 321)))]) == UA_ORDER_EQ;
}
pub fn UA_EventFieldList_init(arg_p: [*c]UA_EventFieldList) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_EventFieldList));
}
pub fn UA_EventFieldList_new() callconv(.c) [*c]UA_EventFieldList {
    return @as([*c]UA_EventFieldList, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 322)))]))));
}
pub fn UA_EventFieldList_copy(arg_src: [*c]const UA_EventFieldList, arg_dst: [*c]UA_EventFieldList) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 322)))]);
}
pub fn UA_EventFieldList_deleteMembers(arg_p: [*c]UA_EventFieldList) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 322)))]);
}
pub fn UA_EventFieldList_clear(arg_p: [*c]UA_EventFieldList) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 322)))]);
}
pub fn UA_EventFieldList_delete(arg_p: [*c]UA_EventFieldList) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 322)))]);
}
pub fn UA_EventFieldList_equal(arg_p1: [*c]const UA_EventFieldList, arg_p2: [*c]const UA_EventFieldList) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 322)))]) == UA_ORDER_EQ;
}
pub fn UA_HistoryEventFieldList_init(arg_p: [*c]UA_HistoryEventFieldList) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_HistoryEventFieldList));
}
pub fn UA_HistoryEventFieldList_new() callconv(.c) [*c]UA_HistoryEventFieldList {
    return @as([*c]UA_HistoryEventFieldList, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 323)))]))));
}
pub fn UA_HistoryEventFieldList_copy(arg_src: [*c]const UA_HistoryEventFieldList, arg_dst: [*c]UA_HistoryEventFieldList) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 323)))]);
}
pub fn UA_HistoryEventFieldList_deleteMembers(arg_p: [*c]UA_HistoryEventFieldList) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 323)))]);
}
pub fn UA_HistoryEventFieldList_clear(arg_p: [*c]UA_HistoryEventFieldList) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 323)))]);
}
pub fn UA_HistoryEventFieldList_delete(arg_p: [*c]UA_HistoryEventFieldList) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 323)))]);
}
pub fn UA_HistoryEventFieldList_equal(arg_p1: [*c]const UA_HistoryEventFieldList, arg_p2: [*c]const UA_HistoryEventFieldList) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 323)))]) == UA_ORDER_EQ;
}
pub fn UA_StatusChangeNotification_init(arg_p: ?*UA_StatusChangeNotification) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_StatusChangeNotification));
}
pub fn UA_StatusChangeNotification_new() callconv(.c) ?*UA_StatusChangeNotification {
    return @as(?*UA_StatusChangeNotification, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 324)))]))));
}
pub fn UA_StatusChangeNotification_copy(arg_src: ?*const UA_StatusChangeNotification, arg_dst: ?*UA_StatusChangeNotification) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 324)))]);
}
pub fn UA_StatusChangeNotification_deleteMembers(arg_p: ?*UA_StatusChangeNotification) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 324)))]);
}
pub fn UA_StatusChangeNotification_clear(arg_p: ?*UA_StatusChangeNotification) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 324)))]);
}
pub fn UA_StatusChangeNotification_delete(arg_p: ?*UA_StatusChangeNotification) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 324)))]);
}
pub fn UA_StatusChangeNotification_equal(arg_p1: ?*const UA_StatusChangeNotification, arg_p2: ?*const UA_StatusChangeNotification) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 324)))]) == UA_ORDER_EQ;
}
pub fn UA_SubscriptionAcknowledgement_init(arg_p: [*c]UA_SubscriptionAcknowledgement) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_SubscriptionAcknowledgement));
}
pub fn UA_SubscriptionAcknowledgement_new() callconv(.c) [*c]UA_SubscriptionAcknowledgement {
    return @as([*c]UA_SubscriptionAcknowledgement, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 325)))]))));
}
pub fn UA_SubscriptionAcknowledgement_copy(arg_src: [*c]const UA_SubscriptionAcknowledgement, arg_dst: [*c]UA_SubscriptionAcknowledgement) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 325)))]);
}
pub fn UA_SubscriptionAcknowledgement_deleteMembers(arg_p: [*c]UA_SubscriptionAcknowledgement) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 325)))]);
}
pub fn UA_SubscriptionAcknowledgement_clear(arg_p: [*c]UA_SubscriptionAcknowledgement) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 325)))]);
}
pub fn UA_SubscriptionAcknowledgement_delete(arg_p: [*c]UA_SubscriptionAcknowledgement) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 325)))]);
}
pub fn UA_SubscriptionAcknowledgement_equal(arg_p1: [*c]const UA_SubscriptionAcknowledgement, arg_p2: [*c]const UA_SubscriptionAcknowledgement) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 325)))]) == UA_ORDER_EQ;
}
pub fn UA_PublishRequest_init(arg_p: [*c]UA_PublishRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_PublishRequest));
}
pub fn UA_PublishRequest_new() callconv(.c) [*c]UA_PublishRequest {
    return @as([*c]UA_PublishRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 326)))]))));
}
pub fn UA_PublishRequest_copy(arg_src: [*c]const UA_PublishRequest, arg_dst: [*c]UA_PublishRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 326)))]);
}
pub fn UA_PublishRequest_deleteMembers(arg_p: [*c]UA_PublishRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 326)))]);
}
pub fn UA_PublishRequest_clear(arg_p: [*c]UA_PublishRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 326)))]);
}
pub fn UA_PublishRequest_delete(arg_p: [*c]UA_PublishRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 326)))]);
}
pub fn UA_PublishRequest_equal(arg_p1: [*c]const UA_PublishRequest, arg_p2: [*c]const UA_PublishRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 326)))]) == UA_ORDER_EQ;
}
pub fn UA_PublishResponse_init(arg_p: ?*UA_PublishResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_PublishResponse));
}
pub fn UA_PublishResponse_new() callconv(.c) ?*UA_PublishResponse {
    return @as(?*UA_PublishResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 327)))]))));
}
pub fn UA_PublishResponse_copy(arg_src: ?*const UA_PublishResponse, arg_dst: ?*UA_PublishResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 327)))]);
}
pub fn UA_PublishResponse_deleteMembers(arg_p: ?*UA_PublishResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 327)))]);
}
pub fn UA_PublishResponse_clear(arg_p: ?*UA_PublishResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 327)))]);
}
pub fn UA_PublishResponse_delete(arg_p: ?*UA_PublishResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 327)))]);
}
pub fn UA_PublishResponse_equal(arg_p1: ?*const UA_PublishResponse, arg_p2: ?*const UA_PublishResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 327)))]) == UA_ORDER_EQ;
}
pub fn UA_RepublishRequest_init(arg_p: [*c]UA_RepublishRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_RepublishRequest));
}
pub fn UA_RepublishRequest_new() callconv(.c) [*c]UA_RepublishRequest {
    return @as([*c]UA_RepublishRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 328)))]))));
}
pub fn UA_RepublishRequest_copy(arg_src: [*c]const UA_RepublishRequest, arg_dst: [*c]UA_RepublishRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 328)))]);
}
pub fn UA_RepublishRequest_deleteMembers(arg_p: [*c]UA_RepublishRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 328)))]);
}
pub fn UA_RepublishRequest_clear(arg_p: [*c]UA_RepublishRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 328)))]);
}
pub fn UA_RepublishRequest_delete(arg_p: [*c]UA_RepublishRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 328)))]);
}
pub fn UA_RepublishRequest_equal(arg_p1: [*c]const UA_RepublishRequest, arg_p2: [*c]const UA_RepublishRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 328)))]) == UA_ORDER_EQ;
}
pub fn UA_RepublishResponse_init(arg_p: ?*UA_RepublishResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_RepublishResponse));
}
pub fn UA_RepublishResponse_new() callconv(.c) ?*UA_RepublishResponse {
    return @as(?*UA_RepublishResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 329)))]))));
}
pub fn UA_RepublishResponse_copy(arg_src: ?*const UA_RepublishResponse, arg_dst: ?*UA_RepublishResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 329)))]);
}
pub fn UA_RepublishResponse_deleteMembers(arg_p: ?*UA_RepublishResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 329)))]);
}
pub fn UA_RepublishResponse_clear(arg_p: ?*UA_RepublishResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 329)))]);
}
pub fn UA_RepublishResponse_delete(arg_p: ?*UA_RepublishResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 329)))]);
}
pub fn UA_RepublishResponse_equal(arg_p1: ?*const UA_RepublishResponse, arg_p2: ?*const UA_RepublishResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 329)))]) == UA_ORDER_EQ;
}
pub fn UA_TransferResult_init(arg_p: [*c]UA_TransferResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_TransferResult));
}
pub fn UA_TransferResult_new() callconv(.c) [*c]UA_TransferResult {
    return @as([*c]UA_TransferResult, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 330)))]))));
}
pub fn UA_TransferResult_copy(arg_src: [*c]const UA_TransferResult, arg_dst: [*c]UA_TransferResult) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 330)))]);
}
pub fn UA_TransferResult_deleteMembers(arg_p: [*c]UA_TransferResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 330)))]);
}
pub fn UA_TransferResult_clear(arg_p: [*c]UA_TransferResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 330)))]);
}
pub fn UA_TransferResult_delete(arg_p: [*c]UA_TransferResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 330)))]);
}
pub fn UA_TransferResult_equal(arg_p1: [*c]const UA_TransferResult, arg_p2: [*c]const UA_TransferResult) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 330)))]) == UA_ORDER_EQ;
}
pub fn UA_TransferSubscriptionsRequest_init(arg_p: [*c]UA_TransferSubscriptionsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_TransferSubscriptionsRequest));
}
pub fn UA_TransferSubscriptionsRequest_new() callconv(.c) [*c]UA_TransferSubscriptionsRequest {
    return @as([*c]UA_TransferSubscriptionsRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 331)))]))));
}
pub fn UA_TransferSubscriptionsRequest_copy(arg_src: [*c]const UA_TransferSubscriptionsRequest, arg_dst: [*c]UA_TransferSubscriptionsRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 331)))]);
}
pub fn UA_TransferSubscriptionsRequest_deleteMembers(arg_p: [*c]UA_TransferSubscriptionsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 331)))]);
}
pub fn UA_TransferSubscriptionsRequest_clear(arg_p: [*c]UA_TransferSubscriptionsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 331)))]);
}
pub fn UA_TransferSubscriptionsRequest_delete(arg_p: [*c]UA_TransferSubscriptionsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 331)))]);
}
pub fn UA_TransferSubscriptionsRequest_equal(arg_p1: [*c]const UA_TransferSubscriptionsRequest, arg_p2: [*c]const UA_TransferSubscriptionsRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 331)))]) == UA_ORDER_EQ;
}
pub fn UA_TransferSubscriptionsResponse_init(arg_p: ?*UA_TransferSubscriptionsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_TransferSubscriptionsResponse));
}
pub fn UA_TransferSubscriptionsResponse_new() callconv(.c) ?*UA_TransferSubscriptionsResponse {
    return @as(?*UA_TransferSubscriptionsResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 332)))]))));
}
pub fn UA_TransferSubscriptionsResponse_copy(arg_src: ?*const UA_TransferSubscriptionsResponse, arg_dst: ?*UA_TransferSubscriptionsResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 332)))]);
}
pub fn UA_TransferSubscriptionsResponse_deleteMembers(arg_p: ?*UA_TransferSubscriptionsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 332)))]);
}
pub fn UA_TransferSubscriptionsResponse_clear(arg_p: ?*UA_TransferSubscriptionsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 332)))]);
}
pub fn UA_TransferSubscriptionsResponse_delete(arg_p: ?*UA_TransferSubscriptionsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 332)))]);
}
pub fn UA_TransferSubscriptionsResponse_equal(arg_p1: ?*const UA_TransferSubscriptionsResponse, arg_p2: ?*const UA_TransferSubscriptionsResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 332)))]) == UA_ORDER_EQ;
}
pub fn UA_DeleteSubscriptionsRequest_init(arg_p: [*c]UA_DeleteSubscriptionsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DeleteSubscriptionsRequest));
}
pub fn UA_DeleteSubscriptionsRequest_new() callconv(.c) [*c]UA_DeleteSubscriptionsRequest {
    return @as([*c]UA_DeleteSubscriptionsRequest, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 333)))]))));
}
pub fn UA_DeleteSubscriptionsRequest_copy(arg_src: [*c]const UA_DeleteSubscriptionsRequest, arg_dst: [*c]UA_DeleteSubscriptionsRequest) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 333)))]);
}
pub fn UA_DeleteSubscriptionsRequest_deleteMembers(arg_p: [*c]UA_DeleteSubscriptionsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 333)))]);
}
pub fn UA_DeleteSubscriptionsRequest_clear(arg_p: [*c]UA_DeleteSubscriptionsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 333)))]);
}
pub fn UA_DeleteSubscriptionsRequest_delete(arg_p: [*c]UA_DeleteSubscriptionsRequest) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 333)))]);
}
pub fn UA_DeleteSubscriptionsRequest_equal(arg_p1: [*c]const UA_DeleteSubscriptionsRequest, arg_p2: [*c]const UA_DeleteSubscriptionsRequest) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 333)))]) == UA_ORDER_EQ;
}
pub fn UA_DeleteSubscriptionsResponse_init(arg_p: ?*UA_DeleteSubscriptionsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DeleteSubscriptionsResponse));
}
pub fn UA_DeleteSubscriptionsResponse_new() callconv(.c) ?*UA_DeleteSubscriptionsResponse {
    return @as(?*UA_DeleteSubscriptionsResponse, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 334)))]))));
}
pub fn UA_DeleteSubscriptionsResponse_copy(arg_src: ?*const UA_DeleteSubscriptionsResponse, arg_dst: ?*UA_DeleteSubscriptionsResponse) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 334)))]);
}
pub fn UA_DeleteSubscriptionsResponse_deleteMembers(arg_p: ?*UA_DeleteSubscriptionsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 334)))]);
}
pub fn UA_DeleteSubscriptionsResponse_clear(arg_p: ?*UA_DeleteSubscriptionsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 334)))]);
}
pub fn UA_DeleteSubscriptionsResponse_delete(arg_p: ?*UA_DeleteSubscriptionsResponse) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 334)))]);
}
pub fn UA_DeleteSubscriptionsResponse_equal(arg_p1: ?*const UA_DeleteSubscriptionsResponse, arg_p2: ?*const UA_DeleteSubscriptionsResponse) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 334)))]) == UA_ORDER_EQ;
}
pub fn UA_BuildInfo_init(arg_p: [*c]UA_BuildInfo) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_BuildInfo));
}
pub fn UA_BuildInfo_new() callconv(.c) [*c]UA_BuildInfo {
    return @as([*c]UA_BuildInfo, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 335)))]))));
}
pub fn UA_BuildInfo_copy(arg_src: [*c]const UA_BuildInfo, arg_dst: [*c]UA_BuildInfo) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 335)))]);
}
pub fn UA_BuildInfo_deleteMembers(arg_p: [*c]UA_BuildInfo) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 335)))]);
}
pub fn UA_BuildInfo_clear(arg_p: [*c]UA_BuildInfo) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 335)))]);
}
pub fn UA_BuildInfo_delete(arg_p: [*c]UA_BuildInfo) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 335)))]);
}
pub fn UA_BuildInfo_equal(arg_p1: [*c]const UA_BuildInfo, arg_p2: [*c]const UA_BuildInfo) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 335)))]) == UA_ORDER_EQ;
}
pub fn UA_RedundancySupport_init(arg_p: [*c]UA_RedundancySupport) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_RedundancySupport));
}
pub fn UA_RedundancySupport_new() callconv(.c) [*c]UA_RedundancySupport {
    return @as([*c]UA_RedundancySupport, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 336)))]))));
}
pub fn UA_RedundancySupport_copy(arg_src: [*c]const UA_RedundancySupport, arg_dst: [*c]UA_RedundancySupport) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 336)))]);
}
pub fn UA_RedundancySupport_deleteMembers(arg_p: [*c]UA_RedundancySupport) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 336)))]);
}
pub fn UA_RedundancySupport_clear(arg_p: [*c]UA_RedundancySupport) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 336)))]);
}
pub fn UA_RedundancySupport_delete(arg_p: [*c]UA_RedundancySupport) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 336)))]);
}
pub fn UA_RedundancySupport_equal(arg_p1: [*c]const UA_RedundancySupport, arg_p2: [*c]const UA_RedundancySupport) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 336)))]) == UA_ORDER_EQ;
}
pub fn UA_ServerState_init(arg_p: [*c]UA_ServerState) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ServerState));
}
pub fn UA_ServerState_new() callconv(.c) [*c]UA_ServerState {
    return @as([*c]UA_ServerState, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 337)))]))));
}
pub fn UA_ServerState_copy(arg_src: [*c]const UA_ServerState, arg_dst: [*c]UA_ServerState) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 337)))]);
}
pub fn UA_ServerState_deleteMembers(arg_p: [*c]UA_ServerState) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 337)))]);
}
pub fn UA_ServerState_clear(arg_p: [*c]UA_ServerState) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 337)))]);
}
pub fn UA_ServerState_delete(arg_p: [*c]UA_ServerState) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 337)))]);
}
pub fn UA_ServerState_equal(arg_p1: [*c]const UA_ServerState, arg_p2: [*c]const UA_ServerState) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 337)))]) == UA_ORDER_EQ;
}
pub fn UA_RedundantServerDataType_init(arg_p: [*c]UA_RedundantServerDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_RedundantServerDataType));
}
pub fn UA_RedundantServerDataType_new() callconv(.c) [*c]UA_RedundantServerDataType {
    return @as([*c]UA_RedundantServerDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 338)))]))));
}
pub fn UA_RedundantServerDataType_copy(arg_src: [*c]const UA_RedundantServerDataType, arg_dst: [*c]UA_RedundantServerDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 338)))]);
}
pub fn UA_RedundantServerDataType_deleteMembers(arg_p: [*c]UA_RedundantServerDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 338)))]);
}
pub fn UA_RedundantServerDataType_clear(arg_p: [*c]UA_RedundantServerDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 338)))]);
}
pub fn UA_RedundantServerDataType_delete(arg_p: [*c]UA_RedundantServerDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 338)))]);
}
pub fn UA_RedundantServerDataType_equal(arg_p1: [*c]const UA_RedundantServerDataType, arg_p2: [*c]const UA_RedundantServerDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 338)))]) == UA_ORDER_EQ;
}
pub fn UA_EndpointUrlListDataType_init(arg_p: [*c]UA_EndpointUrlListDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_EndpointUrlListDataType));
}
pub fn UA_EndpointUrlListDataType_new() callconv(.c) [*c]UA_EndpointUrlListDataType {
    return @as([*c]UA_EndpointUrlListDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 339)))]))));
}
pub fn UA_EndpointUrlListDataType_copy(arg_src: [*c]const UA_EndpointUrlListDataType, arg_dst: [*c]UA_EndpointUrlListDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 339)))]);
}
pub fn UA_EndpointUrlListDataType_deleteMembers(arg_p: [*c]UA_EndpointUrlListDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 339)))]);
}
pub fn UA_EndpointUrlListDataType_clear(arg_p: [*c]UA_EndpointUrlListDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 339)))]);
}
pub fn UA_EndpointUrlListDataType_delete(arg_p: [*c]UA_EndpointUrlListDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 339)))]);
}
pub fn UA_EndpointUrlListDataType_equal(arg_p1: [*c]const UA_EndpointUrlListDataType, arg_p2: [*c]const UA_EndpointUrlListDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 339)))]) == UA_ORDER_EQ;
}
pub fn UA_NetworkGroupDataType_init(arg_p: [*c]UA_NetworkGroupDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_NetworkGroupDataType));
}
pub fn UA_NetworkGroupDataType_new() callconv(.c) [*c]UA_NetworkGroupDataType {
    return @as([*c]UA_NetworkGroupDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 340)))]))));
}
pub fn UA_NetworkGroupDataType_copy(arg_src: [*c]const UA_NetworkGroupDataType, arg_dst: [*c]UA_NetworkGroupDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 340)))]);
}
pub fn UA_NetworkGroupDataType_deleteMembers(arg_p: [*c]UA_NetworkGroupDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 340)))]);
}
pub fn UA_NetworkGroupDataType_clear(arg_p: [*c]UA_NetworkGroupDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 340)))]);
}
pub fn UA_NetworkGroupDataType_delete(arg_p: [*c]UA_NetworkGroupDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 340)))]);
}
pub fn UA_NetworkGroupDataType_equal(arg_p1: [*c]const UA_NetworkGroupDataType, arg_p2: [*c]const UA_NetworkGroupDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 340)))]) == UA_ORDER_EQ;
}
pub fn UA_SamplingIntervalDiagnosticsDataType_init(arg_p: [*c]UA_SamplingIntervalDiagnosticsDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_SamplingIntervalDiagnosticsDataType));
}
pub fn UA_SamplingIntervalDiagnosticsDataType_new() callconv(.c) [*c]UA_SamplingIntervalDiagnosticsDataType {
    return @as([*c]UA_SamplingIntervalDiagnosticsDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 341)))]))));
}
pub fn UA_SamplingIntervalDiagnosticsDataType_copy(arg_src: [*c]const UA_SamplingIntervalDiagnosticsDataType, arg_dst: [*c]UA_SamplingIntervalDiagnosticsDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 341)))]);
}
pub fn UA_SamplingIntervalDiagnosticsDataType_deleteMembers(arg_p: [*c]UA_SamplingIntervalDiagnosticsDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 341)))]);
}
pub fn UA_SamplingIntervalDiagnosticsDataType_clear(arg_p: [*c]UA_SamplingIntervalDiagnosticsDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 341)))]);
}
pub fn UA_SamplingIntervalDiagnosticsDataType_delete(arg_p: [*c]UA_SamplingIntervalDiagnosticsDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 341)))]);
}
pub fn UA_SamplingIntervalDiagnosticsDataType_equal(arg_p1: [*c]const UA_SamplingIntervalDiagnosticsDataType, arg_p2: [*c]const UA_SamplingIntervalDiagnosticsDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 341)))]) == UA_ORDER_EQ;
}
pub fn UA_ServerDiagnosticsSummaryDataType_init(arg_p: [*c]UA_ServerDiagnosticsSummaryDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ServerDiagnosticsSummaryDataType));
}
pub fn UA_ServerDiagnosticsSummaryDataType_new() callconv(.c) [*c]UA_ServerDiagnosticsSummaryDataType {
    return @as([*c]UA_ServerDiagnosticsSummaryDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 342)))]))));
}
pub fn UA_ServerDiagnosticsSummaryDataType_copy(arg_src: [*c]const UA_ServerDiagnosticsSummaryDataType, arg_dst: [*c]UA_ServerDiagnosticsSummaryDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 342)))]);
}
pub fn UA_ServerDiagnosticsSummaryDataType_deleteMembers(arg_p: [*c]UA_ServerDiagnosticsSummaryDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 342)))]);
}
pub fn UA_ServerDiagnosticsSummaryDataType_clear(arg_p: [*c]UA_ServerDiagnosticsSummaryDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 342)))]);
}
pub fn UA_ServerDiagnosticsSummaryDataType_delete(arg_p: [*c]UA_ServerDiagnosticsSummaryDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 342)))]);
}
pub fn UA_ServerDiagnosticsSummaryDataType_equal(arg_p1: [*c]const UA_ServerDiagnosticsSummaryDataType, arg_p2: [*c]const UA_ServerDiagnosticsSummaryDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 342)))]) == UA_ORDER_EQ;
}
pub fn UA_ServerStatusDataType_init(arg_p: [*c]UA_ServerStatusDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ServerStatusDataType));
}
pub fn UA_ServerStatusDataType_new() callconv(.c) [*c]UA_ServerStatusDataType {
    return @as([*c]UA_ServerStatusDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 343)))]))));
}
pub fn UA_ServerStatusDataType_copy(arg_src: [*c]const UA_ServerStatusDataType, arg_dst: [*c]UA_ServerStatusDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 343)))]);
}
pub fn UA_ServerStatusDataType_deleteMembers(arg_p: [*c]UA_ServerStatusDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 343)))]);
}
pub fn UA_ServerStatusDataType_clear(arg_p: [*c]UA_ServerStatusDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 343)))]);
}
pub fn UA_ServerStatusDataType_delete(arg_p: [*c]UA_ServerStatusDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 343)))]);
}
pub fn UA_ServerStatusDataType_equal(arg_p1: [*c]const UA_ServerStatusDataType, arg_p2: [*c]const UA_ServerStatusDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 343)))]) == UA_ORDER_EQ;
}
pub fn UA_SessionSecurityDiagnosticsDataType_init(arg_p: [*c]UA_SessionSecurityDiagnosticsDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_SessionSecurityDiagnosticsDataType));
}
pub fn UA_SessionSecurityDiagnosticsDataType_new() callconv(.c) [*c]UA_SessionSecurityDiagnosticsDataType {
    return @as([*c]UA_SessionSecurityDiagnosticsDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 344)))]))));
}
pub fn UA_SessionSecurityDiagnosticsDataType_copy(arg_src: [*c]const UA_SessionSecurityDiagnosticsDataType, arg_dst: [*c]UA_SessionSecurityDiagnosticsDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 344)))]);
}
pub fn UA_SessionSecurityDiagnosticsDataType_deleteMembers(arg_p: [*c]UA_SessionSecurityDiagnosticsDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 344)))]);
}
pub fn UA_SessionSecurityDiagnosticsDataType_clear(arg_p: [*c]UA_SessionSecurityDiagnosticsDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 344)))]);
}
pub fn UA_SessionSecurityDiagnosticsDataType_delete(arg_p: [*c]UA_SessionSecurityDiagnosticsDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 344)))]);
}
pub fn UA_SessionSecurityDiagnosticsDataType_equal(arg_p1: [*c]const UA_SessionSecurityDiagnosticsDataType, arg_p2: [*c]const UA_SessionSecurityDiagnosticsDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 344)))]) == UA_ORDER_EQ;
}
pub fn UA_ServiceCounterDataType_init(arg_p: [*c]UA_ServiceCounterDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ServiceCounterDataType));
}
pub fn UA_ServiceCounterDataType_new() callconv(.c) [*c]UA_ServiceCounterDataType {
    return @as([*c]UA_ServiceCounterDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 345)))]))));
}
pub fn UA_ServiceCounterDataType_copy(arg_src: [*c]const UA_ServiceCounterDataType, arg_dst: [*c]UA_ServiceCounterDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 345)))]);
}
pub fn UA_ServiceCounterDataType_deleteMembers(arg_p: [*c]UA_ServiceCounterDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 345)))]);
}
pub fn UA_ServiceCounterDataType_clear(arg_p: [*c]UA_ServiceCounterDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 345)))]);
}
pub fn UA_ServiceCounterDataType_delete(arg_p: [*c]UA_ServiceCounterDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 345)))]);
}
pub fn UA_ServiceCounterDataType_equal(arg_p1: [*c]const UA_ServiceCounterDataType, arg_p2: [*c]const UA_ServiceCounterDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 345)))]) == UA_ORDER_EQ;
}
pub fn UA_StatusResult_init(arg_p: ?*UA_StatusResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_StatusResult));
}
pub fn UA_StatusResult_new() callconv(.c) ?*UA_StatusResult {
    return @as(?*UA_StatusResult, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 346)))]))));
}
pub fn UA_StatusResult_copy(arg_src: ?*const UA_StatusResult, arg_dst: ?*UA_StatusResult) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 346)))]);
}
pub fn UA_StatusResult_deleteMembers(arg_p: ?*UA_StatusResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 346)))]);
}
pub fn UA_StatusResult_clear(arg_p: ?*UA_StatusResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 346)))]);
}
pub fn UA_StatusResult_delete(arg_p: ?*UA_StatusResult) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 346)))]);
}
pub fn UA_StatusResult_equal(arg_p1: ?*const UA_StatusResult, arg_p2: ?*const UA_StatusResult) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 346)))]) == UA_ORDER_EQ;
}
pub fn UA_SubscriptionDiagnosticsDataType_init(arg_p: [*c]UA_SubscriptionDiagnosticsDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_SubscriptionDiagnosticsDataType));
}
pub fn UA_SubscriptionDiagnosticsDataType_new() callconv(.c) [*c]UA_SubscriptionDiagnosticsDataType {
    return @as([*c]UA_SubscriptionDiagnosticsDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 347)))]))));
}
pub fn UA_SubscriptionDiagnosticsDataType_copy(arg_src: [*c]const UA_SubscriptionDiagnosticsDataType, arg_dst: [*c]UA_SubscriptionDiagnosticsDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 347)))]);
}
pub fn UA_SubscriptionDiagnosticsDataType_deleteMembers(arg_p: [*c]UA_SubscriptionDiagnosticsDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 347)))]);
}
pub fn UA_SubscriptionDiagnosticsDataType_clear(arg_p: [*c]UA_SubscriptionDiagnosticsDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 347)))]);
}
pub fn UA_SubscriptionDiagnosticsDataType_delete(arg_p: [*c]UA_SubscriptionDiagnosticsDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 347)))]);
}
pub fn UA_SubscriptionDiagnosticsDataType_equal(arg_p1: [*c]const UA_SubscriptionDiagnosticsDataType, arg_p2: [*c]const UA_SubscriptionDiagnosticsDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 347)))]) == UA_ORDER_EQ;
}
pub fn UA_ModelChangeStructureVerbMask_init(arg_p: [*c]UA_ModelChangeStructureVerbMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ModelChangeStructureVerbMask));
}
pub fn UA_ModelChangeStructureVerbMask_new() callconv(.c) [*c]UA_ModelChangeStructureVerbMask {
    return @as([*c]UA_ModelChangeStructureVerbMask, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 348)))]))));
}
pub fn UA_ModelChangeStructureVerbMask_copy(arg_src: [*c]const UA_ModelChangeStructureVerbMask, arg_dst: [*c]UA_ModelChangeStructureVerbMask) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 348)))]);
}
pub fn UA_ModelChangeStructureVerbMask_deleteMembers(arg_p: [*c]UA_ModelChangeStructureVerbMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 348)))]);
}
pub fn UA_ModelChangeStructureVerbMask_clear(arg_p: [*c]UA_ModelChangeStructureVerbMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 348)))]);
}
pub fn UA_ModelChangeStructureVerbMask_delete(arg_p: [*c]UA_ModelChangeStructureVerbMask) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 348)))]);
}
pub fn UA_ModelChangeStructureVerbMask_equal(arg_p1: [*c]const UA_ModelChangeStructureVerbMask, arg_p2: [*c]const UA_ModelChangeStructureVerbMask) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 348)))]) == UA_ORDER_EQ;
}
pub fn UA_ModelChangeStructureDataType_init(arg_p: [*c]UA_ModelChangeStructureDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ModelChangeStructureDataType));
}
pub fn UA_ModelChangeStructureDataType_new() callconv(.c) [*c]UA_ModelChangeStructureDataType {
    return @as([*c]UA_ModelChangeStructureDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 349)))]))));
}
pub fn UA_ModelChangeStructureDataType_copy(arg_src: [*c]const UA_ModelChangeStructureDataType, arg_dst: [*c]UA_ModelChangeStructureDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 349)))]);
}
pub fn UA_ModelChangeStructureDataType_deleteMembers(arg_p: [*c]UA_ModelChangeStructureDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 349)))]);
}
pub fn UA_ModelChangeStructureDataType_clear(arg_p: [*c]UA_ModelChangeStructureDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 349)))]);
}
pub fn UA_ModelChangeStructureDataType_delete(arg_p: [*c]UA_ModelChangeStructureDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 349)))]);
}
pub fn UA_ModelChangeStructureDataType_equal(arg_p1: [*c]const UA_ModelChangeStructureDataType, arg_p2: [*c]const UA_ModelChangeStructureDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 349)))]) == UA_ORDER_EQ;
}
pub fn UA_SemanticChangeStructureDataType_init(arg_p: [*c]UA_SemanticChangeStructureDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_SemanticChangeStructureDataType));
}
pub fn UA_SemanticChangeStructureDataType_new() callconv(.c) [*c]UA_SemanticChangeStructureDataType {
    return @as([*c]UA_SemanticChangeStructureDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 350)))]))));
}
pub fn UA_SemanticChangeStructureDataType_copy(arg_src: [*c]const UA_SemanticChangeStructureDataType, arg_dst: [*c]UA_SemanticChangeStructureDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 350)))]);
}
pub fn UA_SemanticChangeStructureDataType_deleteMembers(arg_p: [*c]UA_SemanticChangeStructureDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 350)))]);
}
pub fn UA_SemanticChangeStructureDataType_clear(arg_p: [*c]UA_SemanticChangeStructureDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 350)))]);
}
pub fn UA_SemanticChangeStructureDataType_delete(arg_p: [*c]UA_SemanticChangeStructureDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 350)))]);
}
pub fn UA_SemanticChangeStructureDataType_equal(arg_p1: [*c]const UA_SemanticChangeStructureDataType, arg_p2: [*c]const UA_SemanticChangeStructureDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 350)))]) == UA_ORDER_EQ;
}
pub fn UA_Range_init(arg_p: [*c]UA_Range) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_Range));
}
pub fn UA_Range_new() callconv(.c) [*c]UA_Range {
    return @as([*c]UA_Range, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 351)))]))));
}
pub fn UA_Range_copy(arg_src: [*c]const UA_Range, arg_dst: [*c]UA_Range) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 351)))]);
}
pub fn UA_Range_deleteMembers(arg_p: [*c]UA_Range) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 351)))]);
}
pub fn UA_Range_clear(arg_p: [*c]UA_Range) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 351)))]);
}
pub fn UA_Range_delete(arg_p: [*c]UA_Range) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 351)))]);
}
pub fn UA_Range_equal(arg_p1: [*c]const UA_Range, arg_p2: [*c]const UA_Range) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 351)))]) == UA_ORDER_EQ;
}
pub fn UA_EUInformation_init(arg_p: [*c]UA_EUInformation) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_EUInformation));
}
pub fn UA_EUInformation_new() callconv(.c) [*c]UA_EUInformation {
    return @as([*c]UA_EUInformation, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 352)))]))));
}
pub fn UA_EUInformation_copy(arg_src: [*c]const UA_EUInformation, arg_dst: [*c]UA_EUInformation) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 352)))]);
}
pub fn UA_EUInformation_deleteMembers(arg_p: [*c]UA_EUInformation) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 352)))]);
}
pub fn UA_EUInformation_clear(arg_p: [*c]UA_EUInformation) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 352)))]);
}
pub fn UA_EUInformation_delete(arg_p: [*c]UA_EUInformation) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 352)))]);
}
pub fn UA_EUInformation_equal(arg_p1: [*c]const UA_EUInformation, arg_p2: [*c]const UA_EUInformation) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 352)))]) == UA_ORDER_EQ;
}
pub fn UA_AxisScaleEnumeration_init(arg_p: [*c]UA_AxisScaleEnumeration) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_AxisScaleEnumeration));
}
pub fn UA_AxisScaleEnumeration_new() callconv(.c) [*c]UA_AxisScaleEnumeration {
    return @as([*c]UA_AxisScaleEnumeration, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 353)))]))));
}
pub fn UA_AxisScaleEnumeration_copy(arg_src: [*c]const UA_AxisScaleEnumeration, arg_dst: [*c]UA_AxisScaleEnumeration) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 353)))]);
}
pub fn UA_AxisScaleEnumeration_deleteMembers(arg_p: [*c]UA_AxisScaleEnumeration) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 353)))]);
}
pub fn UA_AxisScaleEnumeration_clear(arg_p: [*c]UA_AxisScaleEnumeration) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 353)))]);
}
pub fn UA_AxisScaleEnumeration_delete(arg_p: [*c]UA_AxisScaleEnumeration) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 353)))]);
}
pub fn UA_AxisScaleEnumeration_equal(arg_p1: [*c]const UA_AxisScaleEnumeration, arg_p2: [*c]const UA_AxisScaleEnumeration) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 353)))]) == UA_ORDER_EQ;
}
pub fn UA_ComplexNumberType_init(arg_p: [*c]UA_ComplexNumberType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ComplexNumberType));
}
pub fn UA_ComplexNumberType_new() callconv(.c) [*c]UA_ComplexNumberType {
    return @as([*c]UA_ComplexNumberType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 354)))]))));
}
pub fn UA_ComplexNumberType_copy(arg_src: [*c]const UA_ComplexNumberType, arg_dst: [*c]UA_ComplexNumberType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 354)))]);
}
pub fn UA_ComplexNumberType_deleteMembers(arg_p: [*c]UA_ComplexNumberType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 354)))]);
}
pub fn UA_ComplexNumberType_clear(arg_p: [*c]UA_ComplexNumberType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 354)))]);
}
pub fn UA_ComplexNumberType_delete(arg_p: [*c]UA_ComplexNumberType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 354)))]);
}
pub fn UA_ComplexNumberType_equal(arg_p1: [*c]const UA_ComplexNumberType, arg_p2: [*c]const UA_ComplexNumberType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 354)))]) == UA_ORDER_EQ;
}
pub fn UA_DoubleComplexNumberType_init(arg_p: [*c]UA_DoubleComplexNumberType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DoubleComplexNumberType));
}
pub fn UA_DoubleComplexNumberType_new() callconv(.c) [*c]UA_DoubleComplexNumberType {
    return @as([*c]UA_DoubleComplexNumberType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 355)))]))));
}
pub fn UA_DoubleComplexNumberType_copy(arg_src: [*c]const UA_DoubleComplexNumberType, arg_dst: [*c]UA_DoubleComplexNumberType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 355)))]);
}
pub fn UA_DoubleComplexNumberType_deleteMembers(arg_p: [*c]UA_DoubleComplexNumberType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 355)))]);
}
pub fn UA_DoubleComplexNumberType_clear(arg_p: [*c]UA_DoubleComplexNumberType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 355)))]);
}
pub fn UA_DoubleComplexNumberType_delete(arg_p: [*c]UA_DoubleComplexNumberType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 355)))]);
}
pub fn UA_DoubleComplexNumberType_equal(arg_p1: [*c]const UA_DoubleComplexNumberType, arg_p2: [*c]const UA_DoubleComplexNumberType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 355)))]) == UA_ORDER_EQ;
}
pub fn UA_AxisInformation_init(arg_p: [*c]UA_AxisInformation) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_AxisInformation));
}
pub fn UA_AxisInformation_new() callconv(.c) [*c]UA_AxisInformation {
    return @as([*c]UA_AxisInformation, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 356)))]))));
}
pub fn UA_AxisInformation_copy(arg_src: [*c]const UA_AxisInformation, arg_dst: [*c]UA_AxisInformation) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 356)))]);
}
pub fn UA_AxisInformation_deleteMembers(arg_p: [*c]UA_AxisInformation) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 356)))]);
}
pub fn UA_AxisInformation_clear(arg_p: [*c]UA_AxisInformation) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 356)))]);
}
pub fn UA_AxisInformation_delete(arg_p: [*c]UA_AxisInformation) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 356)))]);
}
pub fn UA_AxisInformation_equal(arg_p1: [*c]const UA_AxisInformation, arg_p2: [*c]const UA_AxisInformation) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 356)))]) == UA_ORDER_EQ;
}
pub fn UA_XVType_init(arg_p: [*c]UA_XVType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_XVType));
}
pub fn UA_XVType_new() callconv(.c) [*c]UA_XVType {
    return @as([*c]UA_XVType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 357)))]))));
}
pub fn UA_XVType_copy(arg_src: [*c]const UA_XVType, arg_dst: [*c]UA_XVType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 357)))]);
}
pub fn UA_XVType_deleteMembers(arg_p: [*c]UA_XVType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 357)))]);
}
pub fn UA_XVType_clear(arg_p: [*c]UA_XVType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 357)))]);
}
pub fn UA_XVType_delete(arg_p: [*c]UA_XVType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 357)))]);
}
pub fn UA_XVType_equal(arg_p1: [*c]const UA_XVType, arg_p2: [*c]const UA_XVType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 357)))]) == UA_ORDER_EQ;
}
pub fn UA_ProgramDiagnosticDataType_init(arg_p: ?*UA_ProgramDiagnosticDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ProgramDiagnosticDataType));
}
pub fn UA_ProgramDiagnosticDataType_new() callconv(.c) ?*UA_ProgramDiagnosticDataType {
    return @as(?*UA_ProgramDiagnosticDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 358)))]))));
}
pub fn UA_ProgramDiagnosticDataType_copy(arg_src: ?*const UA_ProgramDiagnosticDataType, arg_dst: ?*UA_ProgramDiagnosticDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 358)))]);
}
pub fn UA_ProgramDiagnosticDataType_deleteMembers(arg_p: ?*UA_ProgramDiagnosticDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 358)))]);
}
pub fn UA_ProgramDiagnosticDataType_clear(arg_p: ?*UA_ProgramDiagnosticDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 358)))]);
}
pub fn UA_ProgramDiagnosticDataType_delete(arg_p: ?*UA_ProgramDiagnosticDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 358)))]);
}
pub fn UA_ProgramDiagnosticDataType_equal(arg_p1: ?*const UA_ProgramDiagnosticDataType, arg_p2: ?*const UA_ProgramDiagnosticDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 358)))]) == UA_ORDER_EQ;
}
pub fn UA_ProgramDiagnostic2DataType_init(arg_p: [*c]UA_ProgramDiagnostic2DataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ProgramDiagnostic2DataType));
}
pub fn UA_ProgramDiagnostic2DataType_new() callconv(.c) [*c]UA_ProgramDiagnostic2DataType {
    return @as([*c]UA_ProgramDiagnostic2DataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 359)))]))));
}
pub fn UA_ProgramDiagnostic2DataType_copy(arg_src: [*c]const UA_ProgramDiagnostic2DataType, arg_dst: [*c]UA_ProgramDiagnostic2DataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 359)))]);
}
pub fn UA_ProgramDiagnostic2DataType_deleteMembers(arg_p: [*c]UA_ProgramDiagnostic2DataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 359)))]);
}
pub fn UA_ProgramDiagnostic2DataType_clear(arg_p: [*c]UA_ProgramDiagnostic2DataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 359)))]);
}
pub fn UA_ProgramDiagnostic2DataType_delete(arg_p: [*c]UA_ProgramDiagnostic2DataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 359)))]);
}
pub fn UA_ProgramDiagnostic2DataType_equal(arg_p1: [*c]const UA_ProgramDiagnostic2DataType, arg_p2: [*c]const UA_ProgramDiagnostic2DataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 359)))]) == UA_ORDER_EQ;
}
pub fn UA_Annotation_init(arg_p: [*c]UA_Annotation) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_Annotation));
}
pub fn UA_Annotation_new() callconv(.c) [*c]UA_Annotation {
    return @as([*c]UA_Annotation, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 360)))]))));
}
pub fn UA_Annotation_copy(arg_src: [*c]const UA_Annotation, arg_dst: [*c]UA_Annotation) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 360)))]);
}
pub fn UA_Annotation_deleteMembers(arg_p: [*c]UA_Annotation) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 360)))]);
}
pub fn UA_Annotation_clear(arg_p: [*c]UA_Annotation) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 360)))]);
}
pub fn UA_Annotation_delete(arg_p: [*c]UA_Annotation) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 360)))]);
}
pub fn UA_Annotation_equal(arg_p1: [*c]const UA_Annotation, arg_p2: [*c]const UA_Annotation) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 360)))]) == UA_ORDER_EQ;
}
pub fn UA_ExceptionDeviationFormat_init(arg_p: [*c]UA_ExceptionDeviationFormat) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ExceptionDeviationFormat));
}
pub fn UA_ExceptionDeviationFormat_new() callconv(.c) [*c]UA_ExceptionDeviationFormat {
    return @as([*c]UA_ExceptionDeviationFormat, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 361)))]))));
}
pub fn UA_ExceptionDeviationFormat_copy(arg_src: [*c]const UA_ExceptionDeviationFormat, arg_dst: [*c]UA_ExceptionDeviationFormat) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 361)))]);
}
pub fn UA_ExceptionDeviationFormat_deleteMembers(arg_p: [*c]UA_ExceptionDeviationFormat) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 361)))]);
}
pub fn UA_ExceptionDeviationFormat_clear(arg_p: [*c]UA_ExceptionDeviationFormat) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 361)))]);
}
pub fn UA_ExceptionDeviationFormat_delete(arg_p: [*c]UA_ExceptionDeviationFormat) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 361)))]);
}
pub fn UA_ExceptionDeviationFormat_equal(arg_p1: [*c]const UA_ExceptionDeviationFormat, arg_p2: [*c]const UA_ExceptionDeviationFormat) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 361)))]) == UA_ORDER_EQ;
}
pub fn UA_EndpointType_init(arg_p: [*c]UA_EndpointType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_EndpointType));
}
pub fn UA_EndpointType_new() callconv(.c) [*c]UA_EndpointType {
    return @as([*c]UA_EndpointType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 362)))]))));
}
pub fn UA_EndpointType_copy(arg_src: [*c]const UA_EndpointType, arg_dst: [*c]UA_EndpointType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 362)))]);
}
pub fn UA_EndpointType_deleteMembers(arg_p: [*c]UA_EndpointType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 362)))]);
}
pub fn UA_EndpointType_clear(arg_p: [*c]UA_EndpointType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 362)))]);
}
pub fn UA_EndpointType_delete(arg_p: [*c]UA_EndpointType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 362)))]);
}
pub fn UA_EndpointType_equal(arg_p1: [*c]const UA_EndpointType, arg_p2: [*c]const UA_EndpointType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 362)))]) == UA_ORDER_EQ;
}
pub fn UA_StructureDescription_init(arg_p: [*c]UA_StructureDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_StructureDescription));
}
pub fn UA_StructureDescription_new() callconv(.c) [*c]UA_StructureDescription {
    return @as([*c]UA_StructureDescription, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 363)))]))));
}
pub fn UA_StructureDescription_copy(arg_src: [*c]const UA_StructureDescription, arg_dst: [*c]UA_StructureDescription) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 363)))]);
}
pub fn UA_StructureDescription_deleteMembers(arg_p: [*c]UA_StructureDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 363)))]);
}
pub fn UA_StructureDescription_clear(arg_p: [*c]UA_StructureDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 363)))]);
}
pub fn UA_StructureDescription_delete(arg_p: [*c]UA_StructureDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 363)))]);
}
pub fn UA_StructureDescription_equal(arg_p1: [*c]const UA_StructureDescription, arg_p2: [*c]const UA_StructureDescription) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 363)))]) == UA_ORDER_EQ;
}
pub fn UA_FieldMetaData_init(arg_p: [*c]UA_FieldMetaData) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_FieldMetaData));
}
pub fn UA_FieldMetaData_new() callconv(.c) [*c]UA_FieldMetaData {
    return @as([*c]UA_FieldMetaData, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 364)))]))));
}
pub fn UA_FieldMetaData_copy(arg_src: [*c]const UA_FieldMetaData, arg_dst: [*c]UA_FieldMetaData) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 364)))]);
}
pub fn UA_FieldMetaData_deleteMembers(arg_p: [*c]UA_FieldMetaData) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 364)))]);
}
pub fn UA_FieldMetaData_clear(arg_p: [*c]UA_FieldMetaData) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 364)))]);
}
pub fn UA_FieldMetaData_delete(arg_p: [*c]UA_FieldMetaData) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 364)))]);
}
pub fn UA_FieldMetaData_equal(arg_p1: [*c]const UA_FieldMetaData, arg_p2: [*c]const UA_FieldMetaData) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 364)))]) == UA_ORDER_EQ;
}
pub fn UA_PublishedEventsDataType_init(arg_p: [*c]UA_PublishedEventsDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_PublishedEventsDataType));
}
pub fn UA_PublishedEventsDataType_new() callconv(.c) [*c]UA_PublishedEventsDataType {
    return @as([*c]UA_PublishedEventsDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 365)))]))));
}
pub fn UA_PublishedEventsDataType_copy(arg_src: [*c]const UA_PublishedEventsDataType, arg_dst: [*c]UA_PublishedEventsDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 365)))]);
}
pub fn UA_PublishedEventsDataType_deleteMembers(arg_p: [*c]UA_PublishedEventsDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 365)))]);
}
pub fn UA_PublishedEventsDataType_clear(arg_p: [*c]UA_PublishedEventsDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 365)))]);
}
pub fn UA_PublishedEventsDataType_delete(arg_p: [*c]UA_PublishedEventsDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 365)))]);
}
pub fn UA_PublishedEventsDataType_equal(arg_p1: [*c]const UA_PublishedEventsDataType, arg_p2: [*c]const UA_PublishedEventsDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 365)))]) == UA_ORDER_EQ;
}
pub fn UA_PubSubGroupDataType_init(arg_p: [*c]UA_PubSubGroupDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_PubSubGroupDataType));
}
pub fn UA_PubSubGroupDataType_new() callconv(.c) [*c]UA_PubSubGroupDataType {
    return @as([*c]UA_PubSubGroupDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 366)))]))));
}
pub fn UA_PubSubGroupDataType_copy(arg_src: [*c]const UA_PubSubGroupDataType, arg_dst: [*c]UA_PubSubGroupDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 366)))]);
}
pub fn UA_PubSubGroupDataType_deleteMembers(arg_p: [*c]UA_PubSubGroupDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 366)))]);
}
pub fn UA_PubSubGroupDataType_clear(arg_p: [*c]UA_PubSubGroupDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 366)))]);
}
pub fn UA_PubSubGroupDataType_delete(arg_p: [*c]UA_PubSubGroupDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 366)))]);
}
pub fn UA_PubSubGroupDataType_equal(arg_p1: [*c]const UA_PubSubGroupDataType, arg_p2: [*c]const UA_PubSubGroupDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 366)))]) == UA_ORDER_EQ;
}
pub fn UA_WriterGroupDataType_init(arg_p: [*c]UA_WriterGroupDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_WriterGroupDataType));
}
pub fn UA_WriterGroupDataType_new() callconv(.c) [*c]UA_WriterGroupDataType {
    return @as([*c]UA_WriterGroupDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 367)))]))));
}
pub fn UA_WriterGroupDataType_copy(arg_src: [*c]const UA_WriterGroupDataType, arg_dst: [*c]UA_WriterGroupDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 367)))]);
}
pub fn UA_WriterGroupDataType_deleteMembers(arg_p: [*c]UA_WriterGroupDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 367)))]);
}
pub fn UA_WriterGroupDataType_clear(arg_p: [*c]UA_WriterGroupDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 367)))]);
}
pub fn UA_WriterGroupDataType_delete(arg_p: [*c]UA_WriterGroupDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 367)))]);
}
pub fn UA_WriterGroupDataType_equal(arg_p1: [*c]const UA_WriterGroupDataType, arg_p2: [*c]const UA_WriterGroupDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 367)))]) == UA_ORDER_EQ;
}
pub fn UA_FieldTargetDataType_init(arg_p: [*c]UA_FieldTargetDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_FieldTargetDataType));
}
pub fn UA_FieldTargetDataType_new() callconv(.c) [*c]UA_FieldTargetDataType {
    return @as([*c]UA_FieldTargetDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 368)))]))));
}
pub fn UA_FieldTargetDataType_copy(arg_src: [*c]const UA_FieldTargetDataType, arg_dst: [*c]UA_FieldTargetDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 368)))]);
}
pub fn UA_FieldTargetDataType_deleteMembers(arg_p: [*c]UA_FieldTargetDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 368)))]);
}
pub fn UA_FieldTargetDataType_clear(arg_p: [*c]UA_FieldTargetDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 368)))]);
}
pub fn UA_FieldTargetDataType_delete(arg_p: [*c]UA_FieldTargetDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 368)))]);
}
pub fn UA_FieldTargetDataType_equal(arg_p1: [*c]const UA_FieldTargetDataType, arg_p2: [*c]const UA_FieldTargetDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 368)))]) == UA_ORDER_EQ;
}
pub fn UA_SubscribedDataSetMirrorDataType_init(arg_p: [*c]UA_SubscribedDataSetMirrorDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_SubscribedDataSetMirrorDataType));
}
pub fn UA_SubscribedDataSetMirrorDataType_new() callconv(.c) [*c]UA_SubscribedDataSetMirrorDataType {
    return @as([*c]UA_SubscribedDataSetMirrorDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 369)))]))));
}
pub fn UA_SubscribedDataSetMirrorDataType_copy(arg_src: [*c]const UA_SubscribedDataSetMirrorDataType, arg_dst: [*c]UA_SubscribedDataSetMirrorDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 369)))]);
}
pub fn UA_SubscribedDataSetMirrorDataType_deleteMembers(arg_p: [*c]UA_SubscribedDataSetMirrorDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 369)))]);
}
pub fn UA_SubscribedDataSetMirrorDataType_clear(arg_p: [*c]UA_SubscribedDataSetMirrorDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 369)))]);
}
pub fn UA_SubscribedDataSetMirrorDataType_delete(arg_p: [*c]UA_SubscribedDataSetMirrorDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 369)))]);
}
pub fn UA_SubscribedDataSetMirrorDataType_equal(arg_p1: [*c]const UA_SubscribedDataSetMirrorDataType, arg_p2: [*c]const UA_SubscribedDataSetMirrorDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 369)))]) == UA_ORDER_EQ;
}
pub fn UA_SecurityGroupDataType_init(arg_p: [*c]UA_SecurityGroupDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_SecurityGroupDataType));
}
pub fn UA_SecurityGroupDataType_new() callconv(.c) [*c]UA_SecurityGroupDataType {
    return @as([*c]UA_SecurityGroupDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 370)))]))));
}
pub fn UA_SecurityGroupDataType_copy(arg_src: [*c]const UA_SecurityGroupDataType, arg_dst: [*c]UA_SecurityGroupDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 370)))]);
}
pub fn UA_SecurityGroupDataType_deleteMembers(arg_p: [*c]UA_SecurityGroupDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 370)))]);
}
pub fn UA_SecurityGroupDataType_clear(arg_p: [*c]UA_SecurityGroupDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 370)))]);
}
pub fn UA_SecurityGroupDataType_delete(arg_p: [*c]UA_SecurityGroupDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 370)))]);
}
pub fn UA_SecurityGroupDataType_equal(arg_p1: [*c]const UA_SecurityGroupDataType, arg_p2: [*c]const UA_SecurityGroupDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 370)))]) == UA_ORDER_EQ;
}
pub fn UA_PubSubKeyPushTargetDataType_init(arg_p: [*c]UA_PubSubKeyPushTargetDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_PubSubKeyPushTargetDataType));
}
pub fn UA_PubSubKeyPushTargetDataType_new() callconv(.c) [*c]UA_PubSubKeyPushTargetDataType {
    return @as([*c]UA_PubSubKeyPushTargetDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 371)))]))));
}
pub fn UA_PubSubKeyPushTargetDataType_copy(arg_src: [*c]const UA_PubSubKeyPushTargetDataType, arg_dst: [*c]UA_PubSubKeyPushTargetDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 371)))]);
}
pub fn UA_PubSubKeyPushTargetDataType_deleteMembers(arg_p: [*c]UA_PubSubKeyPushTargetDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 371)))]);
}
pub fn UA_PubSubKeyPushTargetDataType_clear(arg_p: [*c]UA_PubSubKeyPushTargetDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 371)))]);
}
pub fn UA_PubSubKeyPushTargetDataType_delete(arg_p: [*c]UA_PubSubKeyPushTargetDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 371)))]);
}
pub fn UA_PubSubKeyPushTargetDataType_equal(arg_p1: [*c]const UA_PubSubKeyPushTargetDataType, arg_p2: [*c]const UA_PubSubKeyPushTargetDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 371)))]) == UA_ORDER_EQ;
}
pub fn UA_EnumDefinition_init(arg_p: [*c]UA_EnumDefinition) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_EnumDefinition));
}
pub fn UA_EnumDefinition_new() callconv(.c) [*c]UA_EnumDefinition {
    return @as([*c]UA_EnumDefinition, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 372)))]))));
}
pub fn UA_EnumDefinition_copy(arg_src: [*c]const UA_EnumDefinition, arg_dst: [*c]UA_EnumDefinition) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 372)))]);
}
pub fn UA_EnumDefinition_deleteMembers(arg_p: [*c]UA_EnumDefinition) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 372)))]);
}
pub fn UA_EnumDefinition_clear(arg_p: [*c]UA_EnumDefinition) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 372)))]);
}
pub fn UA_EnumDefinition_delete(arg_p: [*c]UA_EnumDefinition) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 372)))]);
}
pub fn UA_EnumDefinition_equal(arg_p1: [*c]const UA_EnumDefinition, arg_p2: [*c]const UA_EnumDefinition) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 372)))]) == UA_ORDER_EQ;
}
pub fn UA_ReadEventDetails_init(arg_p: [*c]UA_ReadEventDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ReadEventDetails));
}
pub fn UA_ReadEventDetails_new() callconv(.c) [*c]UA_ReadEventDetails {
    return @as([*c]UA_ReadEventDetails, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 373)))]))));
}
pub fn UA_ReadEventDetails_copy(arg_src: [*c]const UA_ReadEventDetails, arg_dst: [*c]UA_ReadEventDetails) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 373)))]);
}
pub fn UA_ReadEventDetails_deleteMembers(arg_p: [*c]UA_ReadEventDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 373)))]);
}
pub fn UA_ReadEventDetails_clear(arg_p: [*c]UA_ReadEventDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 373)))]);
}
pub fn UA_ReadEventDetails_delete(arg_p: [*c]UA_ReadEventDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 373)))]);
}
pub fn UA_ReadEventDetails_equal(arg_p1: [*c]const UA_ReadEventDetails, arg_p2: [*c]const UA_ReadEventDetails) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 373)))]) == UA_ORDER_EQ;
}
pub fn UA_ReadProcessedDetails_init(arg_p: [*c]UA_ReadProcessedDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ReadProcessedDetails));
}
pub fn UA_ReadProcessedDetails_new() callconv(.c) [*c]UA_ReadProcessedDetails {
    return @as([*c]UA_ReadProcessedDetails, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 374)))]))));
}
pub fn UA_ReadProcessedDetails_copy(arg_src: [*c]const UA_ReadProcessedDetails, arg_dst: [*c]UA_ReadProcessedDetails) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 374)))]);
}
pub fn UA_ReadProcessedDetails_deleteMembers(arg_p: [*c]UA_ReadProcessedDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 374)))]);
}
pub fn UA_ReadProcessedDetails_clear(arg_p: [*c]UA_ReadProcessedDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 374)))]);
}
pub fn UA_ReadProcessedDetails_delete(arg_p: [*c]UA_ReadProcessedDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 374)))]);
}
pub fn UA_ReadProcessedDetails_equal(arg_p1: [*c]const UA_ReadProcessedDetails, arg_p2: [*c]const UA_ReadProcessedDetails) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 374)))]) == UA_ORDER_EQ;
}
pub fn UA_ModificationInfo_init(arg_p: [*c]UA_ModificationInfo) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ModificationInfo));
}
pub fn UA_ModificationInfo_new() callconv(.c) [*c]UA_ModificationInfo {
    return @as([*c]UA_ModificationInfo, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 375)))]))));
}
pub fn UA_ModificationInfo_copy(arg_src: [*c]const UA_ModificationInfo, arg_dst: [*c]UA_ModificationInfo) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 375)))]);
}
pub fn UA_ModificationInfo_deleteMembers(arg_p: [*c]UA_ModificationInfo) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 375)))]);
}
pub fn UA_ModificationInfo_clear(arg_p: [*c]UA_ModificationInfo) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 375)))]);
}
pub fn UA_ModificationInfo_delete(arg_p: [*c]UA_ModificationInfo) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 375)))]);
}
pub fn UA_ModificationInfo_equal(arg_p1: [*c]const UA_ModificationInfo, arg_p2: [*c]const UA_ModificationInfo) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 375)))]) == UA_ORDER_EQ;
}
pub fn UA_HistoryModifiedData_init(arg_p: [*c]UA_HistoryModifiedData) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_HistoryModifiedData));
}
pub fn UA_HistoryModifiedData_new() callconv(.c) [*c]UA_HistoryModifiedData {
    return @as([*c]UA_HistoryModifiedData, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 376)))]))));
}
pub fn UA_HistoryModifiedData_copy(arg_src: [*c]const UA_HistoryModifiedData, arg_dst: [*c]UA_HistoryModifiedData) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 376)))]);
}
pub fn UA_HistoryModifiedData_deleteMembers(arg_p: [*c]UA_HistoryModifiedData) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 376)))]);
}
pub fn UA_HistoryModifiedData_clear(arg_p: [*c]UA_HistoryModifiedData) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 376)))]);
}
pub fn UA_HistoryModifiedData_delete(arg_p: [*c]UA_HistoryModifiedData) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 376)))]);
}
pub fn UA_HistoryModifiedData_equal(arg_p1: [*c]const UA_HistoryModifiedData, arg_p2: [*c]const UA_HistoryModifiedData) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 376)))]) == UA_ORDER_EQ;
}
pub fn UA_HistoryEvent_init(arg_p: [*c]UA_HistoryEvent) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_HistoryEvent));
}
pub fn UA_HistoryEvent_new() callconv(.c) [*c]UA_HistoryEvent {
    return @as([*c]UA_HistoryEvent, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 377)))]))));
}
pub fn UA_HistoryEvent_copy(arg_src: [*c]const UA_HistoryEvent, arg_dst: [*c]UA_HistoryEvent) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 377)))]);
}
pub fn UA_HistoryEvent_deleteMembers(arg_p: [*c]UA_HistoryEvent) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 377)))]);
}
pub fn UA_HistoryEvent_clear(arg_p: [*c]UA_HistoryEvent) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 377)))]);
}
pub fn UA_HistoryEvent_delete(arg_p: [*c]UA_HistoryEvent) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 377)))]);
}
pub fn UA_HistoryEvent_equal(arg_p1: [*c]const UA_HistoryEvent, arg_p2: [*c]const UA_HistoryEvent) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 377)))]) == UA_ORDER_EQ;
}
pub fn UA_UpdateEventDetails_init(arg_p: [*c]UA_UpdateEventDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_UpdateEventDetails));
}
pub fn UA_UpdateEventDetails_new() callconv(.c) [*c]UA_UpdateEventDetails {
    return @as([*c]UA_UpdateEventDetails, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 378)))]))));
}
pub fn UA_UpdateEventDetails_copy(arg_src: [*c]const UA_UpdateEventDetails, arg_dst: [*c]UA_UpdateEventDetails) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 378)))]);
}
pub fn UA_UpdateEventDetails_deleteMembers(arg_p: [*c]UA_UpdateEventDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 378)))]);
}
pub fn UA_UpdateEventDetails_clear(arg_p: [*c]UA_UpdateEventDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 378)))]);
}
pub fn UA_UpdateEventDetails_delete(arg_p: [*c]UA_UpdateEventDetails) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 378)))]);
}
pub fn UA_UpdateEventDetails_equal(arg_p1: [*c]const UA_UpdateEventDetails, arg_p2: [*c]const UA_UpdateEventDetails) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 378)))]) == UA_ORDER_EQ;
}
pub fn UA_DataChangeNotification_init(arg_p: [*c]UA_DataChangeNotification) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DataChangeNotification));
}
pub fn UA_DataChangeNotification_new() callconv(.c) [*c]UA_DataChangeNotification {
    return @as([*c]UA_DataChangeNotification, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 379)))]))));
}
pub fn UA_DataChangeNotification_copy(arg_src: [*c]const UA_DataChangeNotification, arg_dst: [*c]UA_DataChangeNotification) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 379)))]);
}
pub fn UA_DataChangeNotification_deleteMembers(arg_p: [*c]UA_DataChangeNotification) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 379)))]);
}
pub fn UA_DataChangeNotification_clear(arg_p: [*c]UA_DataChangeNotification) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 379)))]);
}
pub fn UA_DataChangeNotification_delete(arg_p: [*c]UA_DataChangeNotification) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 379)))]);
}
pub fn UA_DataChangeNotification_equal(arg_p1: [*c]const UA_DataChangeNotification, arg_p2: [*c]const UA_DataChangeNotification) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 379)))]) == UA_ORDER_EQ;
}
pub fn UA_EventNotificationList_init(arg_p: [*c]UA_EventNotificationList) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_EventNotificationList));
}
pub fn UA_EventNotificationList_new() callconv(.c) [*c]UA_EventNotificationList {
    return @as([*c]UA_EventNotificationList, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 380)))]))));
}
pub fn UA_EventNotificationList_copy(arg_src: [*c]const UA_EventNotificationList, arg_dst: [*c]UA_EventNotificationList) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 380)))]);
}
pub fn UA_EventNotificationList_deleteMembers(arg_p: [*c]UA_EventNotificationList) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 380)))]);
}
pub fn UA_EventNotificationList_clear(arg_p: [*c]UA_EventNotificationList) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 380)))]);
}
pub fn UA_EventNotificationList_delete(arg_p: [*c]UA_EventNotificationList) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 380)))]);
}
pub fn UA_EventNotificationList_equal(arg_p1: [*c]const UA_EventNotificationList, arg_p2: [*c]const UA_EventNotificationList) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 380)))]) == UA_ORDER_EQ;
}
pub fn UA_SessionDiagnosticsDataType_init(arg_p: [*c]UA_SessionDiagnosticsDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_SessionDiagnosticsDataType));
}
pub fn UA_SessionDiagnosticsDataType_new() callconv(.c) [*c]UA_SessionDiagnosticsDataType {
    return @as([*c]UA_SessionDiagnosticsDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 381)))]))));
}
pub fn UA_SessionDiagnosticsDataType_copy(arg_src: [*c]const UA_SessionDiagnosticsDataType, arg_dst: [*c]UA_SessionDiagnosticsDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 381)))]);
}
pub fn UA_SessionDiagnosticsDataType_deleteMembers(arg_p: [*c]UA_SessionDiagnosticsDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 381)))]);
}
pub fn UA_SessionDiagnosticsDataType_clear(arg_p: [*c]UA_SessionDiagnosticsDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 381)))]);
}
pub fn UA_SessionDiagnosticsDataType_delete(arg_p: [*c]UA_SessionDiagnosticsDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 381)))]);
}
pub fn UA_SessionDiagnosticsDataType_equal(arg_p1: [*c]const UA_SessionDiagnosticsDataType, arg_p2: [*c]const UA_SessionDiagnosticsDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 381)))]) == UA_ORDER_EQ;
}
pub fn UA_EnumDescription_init(arg_p: [*c]UA_EnumDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_EnumDescription));
}
pub fn UA_EnumDescription_new() callconv(.c) [*c]UA_EnumDescription {
    return @as([*c]UA_EnumDescription, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 382)))]))));
}
pub fn UA_EnumDescription_copy(arg_src: [*c]const UA_EnumDescription, arg_dst: [*c]UA_EnumDescription) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 382)))]);
}
pub fn UA_EnumDescription_deleteMembers(arg_p: [*c]UA_EnumDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 382)))]);
}
pub fn UA_EnumDescription_clear(arg_p: [*c]UA_EnumDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 382)))]);
}
pub fn UA_EnumDescription_delete(arg_p: [*c]UA_EnumDescription) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 382)))]);
}
pub fn UA_EnumDescription_equal(arg_p1: [*c]const UA_EnumDescription, arg_p2: [*c]const UA_EnumDescription) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 382)))]) == UA_ORDER_EQ;
}
pub fn UA_UABinaryFileDataType_init(arg_p: [*c]UA_UABinaryFileDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_UABinaryFileDataType));
}
pub fn UA_UABinaryFileDataType_new() callconv(.c) [*c]UA_UABinaryFileDataType {
    return @as([*c]UA_UABinaryFileDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 383)))]))));
}
pub fn UA_UABinaryFileDataType_copy(arg_src: [*c]const UA_UABinaryFileDataType, arg_dst: [*c]UA_UABinaryFileDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 383)))]);
}
pub fn UA_UABinaryFileDataType_deleteMembers(arg_p: [*c]UA_UABinaryFileDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 383)))]);
}
pub fn UA_UABinaryFileDataType_clear(arg_p: [*c]UA_UABinaryFileDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 383)))]);
}
pub fn UA_UABinaryFileDataType_delete(arg_p: [*c]UA_UABinaryFileDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 383)))]);
}
pub fn UA_UABinaryFileDataType_equal(arg_p1: [*c]const UA_UABinaryFileDataType, arg_p2: [*c]const UA_UABinaryFileDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 383)))]) == UA_ORDER_EQ;
}
pub fn UA_DataSetMetaDataType_init(arg_p: [*c]UA_DataSetMetaDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DataSetMetaDataType));
}
pub fn UA_DataSetMetaDataType_new() callconv(.c) [*c]UA_DataSetMetaDataType {
    return @as([*c]UA_DataSetMetaDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 384)))]))));
}
pub fn UA_DataSetMetaDataType_copy(arg_src: [*c]const UA_DataSetMetaDataType, arg_dst: [*c]UA_DataSetMetaDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 384)))]);
}
pub fn UA_DataSetMetaDataType_deleteMembers(arg_p: [*c]UA_DataSetMetaDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 384)))]);
}
pub fn UA_DataSetMetaDataType_clear(arg_p: [*c]UA_DataSetMetaDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 384)))]);
}
pub fn UA_DataSetMetaDataType_delete(arg_p: [*c]UA_DataSetMetaDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 384)))]);
}
pub fn UA_DataSetMetaDataType_equal(arg_p1: [*c]const UA_DataSetMetaDataType, arg_p2: [*c]const UA_DataSetMetaDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 384)))]) == UA_ORDER_EQ;
}
pub fn UA_PublishedDataSetDataType_init(arg_p: [*c]UA_PublishedDataSetDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_PublishedDataSetDataType));
}
pub fn UA_PublishedDataSetDataType_new() callconv(.c) [*c]UA_PublishedDataSetDataType {
    return @as([*c]UA_PublishedDataSetDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 385)))]))));
}
pub fn UA_PublishedDataSetDataType_copy(arg_src: [*c]const UA_PublishedDataSetDataType, arg_dst: [*c]UA_PublishedDataSetDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 385)))]);
}
pub fn UA_PublishedDataSetDataType_deleteMembers(arg_p: [*c]UA_PublishedDataSetDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 385)))]);
}
pub fn UA_PublishedDataSetDataType_clear(arg_p: [*c]UA_PublishedDataSetDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 385)))]);
}
pub fn UA_PublishedDataSetDataType_delete(arg_p: [*c]UA_PublishedDataSetDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 385)))]);
}
pub fn UA_PublishedDataSetDataType_equal(arg_p1: [*c]const UA_PublishedDataSetDataType, arg_p2: [*c]const UA_PublishedDataSetDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 385)))]) == UA_ORDER_EQ;
}
pub fn UA_DataSetReaderDataType_init(arg_p: [*c]UA_DataSetReaderDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DataSetReaderDataType));
}
pub fn UA_DataSetReaderDataType_new() callconv(.c) [*c]UA_DataSetReaderDataType {
    return @as([*c]UA_DataSetReaderDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 386)))]))));
}
pub fn UA_DataSetReaderDataType_copy(arg_src: [*c]const UA_DataSetReaderDataType, arg_dst: [*c]UA_DataSetReaderDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 386)))]);
}
pub fn UA_DataSetReaderDataType_deleteMembers(arg_p: [*c]UA_DataSetReaderDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 386)))]);
}
pub fn UA_DataSetReaderDataType_clear(arg_p: [*c]UA_DataSetReaderDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 386)))]);
}
pub fn UA_DataSetReaderDataType_delete(arg_p: [*c]UA_DataSetReaderDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 386)))]);
}
pub fn UA_DataSetReaderDataType_equal(arg_p1: [*c]const UA_DataSetReaderDataType, arg_p2: [*c]const UA_DataSetReaderDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 386)))]) == UA_ORDER_EQ;
}
pub fn UA_TargetVariablesDataType_init(arg_p: [*c]UA_TargetVariablesDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_TargetVariablesDataType));
}
pub fn UA_TargetVariablesDataType_new() callconv(.c) [*c]UA_TargetVariablesDataType {
    return @as([*c]UA_TargetVariablesDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 387)))]))));
}
pub fn UA_TargetVariablesDataType_copy(arg_src: [*c]const UA_TargetVariablesDataType, arg_dst: [*c]UA_TargetVariablesDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 387)))]);
}
pub fn UA_TargetVariablesDataType_deleteMembers(arg_p: [*c]UA_TargetVariablesDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 387)))]);
}
pub fn UA_TargetVariablesDataType_clear(arg_p: [*c]UA_TargetVariablesDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 387)))]);
}
pub fn UA_TargetVariablesDataType_delete(arg_p: [*c]UA_TargetVariablesDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 387)))]);
}
pub fn UA_TargetVariablesDataType_equal(arg_p1: [*c]const UA_TargetVariablesDataType, arg_p2: [*c]const UA_TargetVariablesDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 387)))]) == UA_ORDER_EQ;
}
pub fn UA_StandaloneSubscribedDataSetDataType_init(arg_p: [*c]UA_StandaloneSubscribedDataSetDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_StandaloneSubscribedDataSetDataType));
}
pub fn UA_StandaloneSubscribedDataSetDataType_new() callconv(.c) [*c]UA_StandaloneSubscribedDataSetDataType {
    return @as([*c]UA_StandaloneSubscribedDataSetDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 388)))]))));
}
pub fn UA_StandaloneSubscribedDataSetDataType_copy(arg_src: [*c]const UA_StandaloneSubscribedDataSetDataType, arg_dst: [*c]UA_StandaloneSubscribedDataSetDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 388)))]);
}
pub fn UA_StandaloneSubscribedDataSetDataType_deleteMembers(arg_p: [*c]UA_StandaloneSubscribedDataSetDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 388)))]);
}
pub fn UA_StandaloneSubscribedDataSetDataType_clear(arg_p: [*c]UA_StandaloneSubscribedDataSetDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 388)))]);
}
pub fn UA_StandaloneSubscribedDataSetDataType_delete(arg_p: [*c]UA_StandaloneSubscribedDataSetDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 388)))]);
}
pub fn UA_StandaloneSubscribedDataSetDataType_equal(arg_p1: [*c]const UA_StandaloneSubscribedDataSetDataType, arg_p2: [*c]const UA_StandaloneSubscribedDataSetDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 388)))]) == UA_ORDER_EQ;
}
pub fn UA_DataTypeSchemaHeader_init(arg_p: [*c]UA_DataTypeSchemaHeader) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_DataTypeSchemaHeader));
}
pub fn UA_DataTypeSchemaHeader_new() callconv(.c) [*c]UA_DataTypeSchemaHeader {
    return @as([*c]UA_DataTypeSchemaHeader, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 389)))]))));
}
pub fn UA_DataTypeSchemaHeader_copy(arg_src: [*c]const UA_DataTypeSchemaHeader, arg_dst: [*c]UA_DataTypeSchemaHeader) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 389)))]);
}
pub fn UA_DataTypeSchemaHeader_deleteMembers(arg_p: [*c]UA_DataTypeSchemaHeader) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 389)))]);
}
pub fn UA_DataTypeSchemaHeader_clear(arg_p: [*c]UA_DataTypeSchemaHeader) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 389)))]);
}
pub fn UA_DataTypeSchemaHeader_delete(arg_p: [*c]UA_DataTypeSchemaHeader) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 389)))]);
}
pub fn UA_DataTypeSchemaHeader_equal(arg_p1: [*c]const UA_DataTypeSchemaHeader, arg_p2: [*c]const UA_DataTypeSchemaHeader) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 389)))]) == UA_ORDER_EQ;
}
pub fn UA_ReaderGroupDataType_init(arg_p: [*c]UA_ReaderGroupDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_ReaderGroupDataType));
}
pub fn UA_ReaderGroupDataType_new() callconv(.c) [*c]UA_ReaderGroupDataType {
    return @as([*c]UA_ReaderGroupDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 390)))]))));
}
pub fn UA_ReaderGroupDataType_copy(arg_src: [*c]const UA_ReaderGroupDataType, arg_dst: [*c]UA_ReaderGroupDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 390)))]);
}
pub fn UA_ReaderGroupDataType_deleteMembers(arg_p: [*c]UA_ReaderGroupDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 390)))]);
}
pub fn UA_ReaderGroupDataType_clear(arg_p: [*c]UA_ReaderGroupDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 390)))]);
}
pub fn UA_ReaderGroupDataType_delete(arg_p: [*c]UA_ReaderGroupDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 390)))]);
}
pub fn UA_ReaderGroupDataType_equal(arg_p1: [*c]const UA_ReaderGroupDataType, arg_p2: [*c]const UA_ReaderGroupDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 390)))]) == UA_ORDER_EQ;
}
pub fn UA_PubSubConnectionDataType_init(arg_p: [*c]UA_PubSubConnectionDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_PubSubConnectionDataType));
}
pub fn UA_PubSubConnectionDataType_new() callconv(.c) [*c]UA_PubSubConnectionDataType {
    return @as([*c]UA_PubSubConnectionDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 391)))]))));
}
pub fn UA_PubSubConnectionDataType_copy(arg_src: [*c]const UA_PubSubConnectionDataType, arg_dst: [*c]UA_PubSubConnectionDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 391)))]);
}
pub fn UA_PubSubConnectionDataType_deleteMembers(arg_p: [*c]UA_PubSubConnectionDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 391)))]);
}
pub fn UA_PubSubConnectionDataType_clear(arg_p: [*c]UA_PubSubConnectionDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 391)))]);
}
pub fn UA_PubSubConnectionDataType_delete(arg_p: [*c]UA_PubSubConnectionDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 391)))]);
}
pub fn UA_PubSubConnectionDataType_equal(arg_p1: [*c]const UA_PubSubConnectionDataType, arg_p2: [*c]const UA_PubSubConnectionDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 391)))]) == UA_ORDER_EQ;
}
pub fn UA_PubSubConfigurationDataType_init(arg_p: [*c]UA_PubSubConfigurationDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_PubSubConfigurationDataType));
}
pub fn UA_PubSubConfigurationDataType_new() callconv(.c) [*c]UA_PubSubConfigurationDataType {
    return @as([*c]UA_PubSubConfigurationDataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 392)))]))));
}
pub fn UA_PubSubConfigurationDataType_copy(arg_src: [*c]const UA_PubSubConfigurationDataType, arg_dst: [*c]UA_PubSubConfigurationDataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 392)))]);
}
pub fn UA_PubSubConfigurationDataType_deleteMembers(arg_p: [*c]UA_PubSubConfigurationDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 392)))]);
}
pub fn UA_PubSubConfigurationDataType_clear(arg_p: [*c]UA_PubSubConfigurationDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 392)))]);
}
pub fn UA_PubSubConfigurationDataType_delete(arg_p: [*c]UA_PubSubConfigurationDataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 392)))]);
}
pub fn UA_PubSubConfigurationDataType_equal(arg_p1: [*c]const UA_PubSubConfigurationDataType, arg_p2: [*c]const UA_PubSubConfigurationDataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 392)))]) == UA_ORDER_EQ;
}
pub fn UA_PubSubConfiguration2DataType_init(arg_p: [*c]UA_PubSubConfiguration2DataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    _ = memset(@as(?*anyopaque, @ptrCast(p)), @as(c_int, 0), @sizeOf(UA_PubSubConfiguration2DataType));
}
pub fn UA_PubSubConfiguration2DataType_new() callconv(.c) [*c]UA_PubSubConfiguration2DataType {
    return @as([*c]UA_PubSubConfiguration2DataType, @ptrCast(@alignCast(UA_new(&UA_TYPES[@as(c_uint, @intCast(@as(c_int, 393)))]))));
}
pub fn UA_PubSubConfiguration2DataType_copy(arg_src: [*c]const UA_PubSubConfiguration2DataType, arg_dst: [*c]UA_PubSubConfiguration2DataType) callconv(.c) UA_StatusCode {
    var src = arg_src;
    _ = &src;
    var dst = arg_dst;
    _ = &dst;
    return UA_copy(@as(?*const anyopaque, @ptrCast(src)), @as(?*anyopaque, @ptrCast(dst)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 393)))]);
}
pub fn UA_PubSubConfiguration2DataType_deleteMembers(arg_p: [*c]UA_PubSubConfiguration2DataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 393)))]);
}
pub fn UA_PubSubConfiguration2DataType_clear(arg_p: [*c]UA_PubSubConfiguration2DataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_clear(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 393)))]);
}
pub fn UA_PubSubConfiguration2DataType_delete(arg_p: [*c]UA_PubSubConfiguration2DataType) callconv(.c) void {
    var p = arg_p;
    _ = &p;
    UA_delete(@as(?*anyopaque, @ptrCast(p)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 393)))]);
}
pub fn UA_PubSubConfiguration2DataType_equal(arg_p1: [*c]const UA_PubSubConfiguration2DataType, arg_p2: [*c]const UA_PubSubConfiguration2DataType) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_order(@as(?*const anyopaque, @ptrCast(p1)), @as(?*const anyopaque, @ptrCast(p2)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 393)))]) == UA_ORDER_EQ;
}
pub const UA_UInt32Range = extern struct {
    min: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    max: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_DurationRange = extern struct {
    min: UA_Duration = @import("std").mem.zeroes(UA_Duration),
    max: UA_Duration = @import("std").mem.zeroes(UA_Duration),
};
pub extern fn UA_random_seed(seed: UA_UInt64) void;
pub extern fn UA_UInt32_random() UA_UInt32;
pub extern fn UA_Guid_random() UA_Guid;
pub const UA_KeyValueMap = extern struct {
    mapSize: usize = @import("std").mem.zeroes(usize),
    map: [*c]UA_KeyValuePair = @import("std").mem.zeroes([*c]UA_KeyValuePair),
};
pub extern const UA_KEYVALUEMAP_NULL: UA_KeyValueMap;
pub extern fn UA_KeyValueMap_new() [*c]UA_KeyValueMap;
pub extern fn UA_KeyValueMap_clear(map: [*c]UA_KeyValueMap) void;
pub extern fn UA_KeyValueMap_delete(map: [*c]UA_KeyValueMap) void;
pub extern fn UA_KeyValueMap_isEmpty(map: [*c]const UA_KeyValueMap) UA_Boolean;
pub extern fn UA_KeyValueMap_contains(map: [*c]const UA_KeyValueMap, key: UA_QualifiedName) UA_Boolean;
pub extern fn UA_KeyValueMap_set(map: [*c]UA_KeyValueMap, key: UA_QualifiedName, value: [*c]const UA_Variant) UA_StatusCode;
pub extern fn UA_KeyValueMap_setScalar(map: [*c]UA_KeyValueMap, key: UA_QualifiedName, noalias p: ?*anyopaque, @"type": ?*const UA_DataType) UA_StatusCode;
pub extern fn UA_KeyValueMap_get(map: [*c]const UA_KeyValueMap, key: UA_QualifiedName) [*c]const UA_Variant;
pub extern fn UA_KeyValueMap_getScalar(map: [*c]const UA_KeyValueMap, key: UA_QualifiedName, @"type": ?*const UA_DataType) ?*const anyopaque;
pub extern fn UA_KeyValueMap_remove(map: [*c]UA_KeyValueMap, key: UA_QualifiedName) UA_StatusCode;
pub extern fn UA_KeyValueMap_copy(src: [*c]const UA_KeyValueMap, dst: [*c]UA_KeyValueMap) UA_StatusCode;
pub extern fn UA_KeyValueMap_merge(lhs: [*c]UA_KeyValueMap, rhs: [*c]const UA_KeyValueMap) UA_StatusCode;
pub const UA_ConnectionConfig = extern struct {
    protocolVersion: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    recvBufferSize: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    sendBufferSize: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    localMaxMessageSize: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    remoteMaxMessageSize: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    localMaxChunkCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    remoteMaxChunkCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub extern const UA_VariableAttributes_default: UA_VariableAttributes;
pub extern const UA_VariableTypeAttributes_default: UA_VariableTypeAttributes;
pub extern const UA_MethodAttributes_default: UA_MethodAttributes;
pub extern const UA_ObjectAttributes_default: UA_ObjectAttributes;
pub extern const UA_ObjectTypeAttributes_default: UA_ObjectTypeAttributes;
pub extern const UA_ReferenceTypeAttributes_default: UA_ReferenceTypeAttributes;
pub extern const UA_DataTypeAttributes_default: UA_DataTypeAttributes;
pub extern const UA_ViewAttributes_default: UA_ViewAttributes;
pub extern fn UA_parseEndpointUrl(endpointUrl: [*c]const UA_String, outHostname: [*c]UA_String, outPort: [*c]UA_UInt16, outPath: [*c]UA_String) UA_StatusCode;
pub extern fn UA_parseEndpointUrlEthernet(endpointUrl: [*c]const UA_String, target: [*c]UA_String, vid: [*c]UA_UInt16, pcp: [*c]UA_Byte) UA_StatusCode;
pub extern fn UA_readNumber(buf: [*c]const UA_Byte, buflen: usize, number: [*c]UA_UInt32) usize;
pub extern fn UA_readNumberWithBase(buf: [*c]const UA_Byte, buflen: usize, number: [*c]UA_UInt32, base: UA_Byte) usize;
pub extern fn UA_RelativePath_parse(rp: [*c]UA_RelativePath, str: UA_String) UA_StatusCode;
pub extern fn UA_constantTimeEqual(ptr1: ?*const anyopaque, ptr2: ?*const anyopaque, length: usize) UA_Boolean;
pub extern fn UA_ByteString_memZero(bs: [*c]UA_ByteString) void;
pub const __builtin_va_list = [1]struct___va_list_tag_13;
pub const __gnuc_va_list = __builtin_va_list;
pub const va_list = __builtin_va_list;
pub const UA_LOGLEVEL_TRACE: c_int = 100;
pub const UA_LOGLEVEL_DEBUG: c_int = 200;
pub const UA_LOGLEVEL_INFO: c_int = 300;
pub const UA_LOGLEVEL_WARNING: c_int = 400;
pub const UA_LOGLEVEL_ERROR: c_int = 500;
pub const UA_LOGLEVEL_FATAL: c_int = 600;
pub const UA_LogLevel = c_uint;
pub const UA_LOGCATEGORY_NETWORK: c_int = 0;
pub const UA_LOGCATEGORY_SECURECHANNEL: c_int = 1;
pub const UA_LOGCATEGORY_SESSION: c_int = 2;
pub const UA_LOGCATEGORY_SERVER: c_int = 3;
pub const UA_LOGCATEGORY_CLIENT: c_int = 4;
pub const UA_LOGCATEGORY_USERLAND: c_int = 5;
pub const UA_LOGCATEGORY_SECURITYPOLICY: c_int = 6;
pub const UA_LOGCATEGORY_EVENTLOOP: c_int = 7;
pub const UA_LOGCATEGORY_PUBSUB: c_int = 8;
pub const UA_LOGCATEGORY_DISCOVERY: c_int = 9;
pub const UA_LogCategory = c_uint;
// ./vendor/open62541.h:42588:1: warning: TODO unable to translate variadic function, demoted to extern
pub extern fn UA_LOG_TRACE(logger: [*c]const UA_Logger, category: UA_LogCategory, msg: [*c]const u8, ...) void;
// ./vendor/open62541.h:42603:1: warning: TODO unable to translate variadic function, demoted to extern
pub extern fn UA_LOG_DEBUG(logger: [*c]const UA_Logger, category: UA_LogCategory, msg: [*c]const u8, ...) void;
// ./vendor/open62541.h:42618:1: warning: TODO unable to translate variadic function, demoted to extern
pub extern fn UA_LOG_INFO(logger: [*c]const UA_Logger, category: UA_LogCategory, msg: [*c]const u8, ...) void;
// ./vendor/open62541.h:42633:1: warning: TODO unable to translate variadic function, demoted to extern
pub extern fn UA_LOG_WARNING(logger: [*c]const UA_Logger, category: UA_LogCategory, msg: [*c]const u8, ...) void;
// ./vendor/open62541.h:42648:1: warning: TODO unable to translate variadic function, demoted to extern
pub extern fn UA_LOG_ERROR(logger: [*c]const UA_Logger, category: UA_LogCategory, msg: [*c]const u8, ...) void;
// ./vendor/open62541.h:42663:1: warning: TODO unable to translate variadic function, demoted to extern
pub extern fn UA_LOG_FATAL(logger: [*c]const UA_Logger, category: UA_LogCategory, msg: [*c]const u8, ...) void;
pub extern fn UA_PKI_decryptPrivateKey(privateKey: UA_ByteString, password: UA_ByteString, outDerKey: [*c]UA_ByteString) UA_StatusCode;
pub extern const UA_SECURITY_POLICY_NONE_URI: UA_String;
pub const UA_SecurityPolicySignatureAlgorithm = extern struct {
    uri: UA_String = @import("std").mem.zeroes(UA_String),
    verify: ?*const fn (?*anyopaque, [*c]const UA_ByteString, [*c]const UA_ByteString) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*anyopaque, [*c]const UA_ByteString, [*c]const UA_ByteString) callconv(.c) UA_StatusCode),
    sign: ?*const fn (?*anyopaque, [*c]const UA_ByteString, [*c]UA_ByteString) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*anyopaque, [*c]const UA_ByteString, [*c]UA_ByteString) callconv(.c) UA_StatusCode),
    getLocalSignatureSize: ?*const fn (?*const anyopaque) callconv(.c) usize = @import("std").mem.zeroes(?*const fn (?*const anyopaque) callconv(.c) usize),
    getRemoteSignatureSize: ?*const fn (?*const anyopaque) callconv(.c) usize = @import("std").mem.zeroes(?*const fn (?*const anyopaque) callconv(.c) usize),
    getLocalKeyLength: ?*const fn (?*const anyopaque) callconv(.c) usize = @import("std").mem.zeroes(?*const fn (?*const anyopaque) callconv(.c) usize),
    getRemoteKeyLength: ?*const fn (?*const anyopaque) callconv(.c) usize = @import("std").mem.zeroes(?*const fn (?*const anyopaque) callconv(.c) usize),
};
pub const UA_SecurityPolicyEncryptionAlgorithm = extern struct {
    uri: UA_String = @import("std").mem.zeroes(UA_String),
    encrypt: ?*const fn (?*anyopaque, [*c]UA_ByteString) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*anyopaque, [*c]UA_ByteString) callconv(.c) UA_StatusCode),
    decrypt: ?*const fn (?*anyopaque, [*c]UA_ByteString) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*anyopaque, [*c]UA_ByteString) callconv(.c) UA_StatusCode),
    getLocalKeyLength: ?*const fn (?*const anyopaque) callconv(.c) usize = @import("std").mem.zeroes(?*const fn (?*const anyopaque) callconv(.c) usize),
    getRemoteKeyLength: ?*const fn (?*const anyopaque) callconv(.c) usize = @import("std").mem.zeroes(?*const fn (?*const anyopaque) callconv(.c) usize),
    getRemoteBlockSize: ?*const fn (?*const anyopaque) callconv(.c) usize = @import("std").mem.zeroes(?*const fn (?*const anyopaque) callconv(.c) usize),
    getRemotePlainTextBlockSize: ?*const fn (?*const anyopaque) callconv(.c) usize = @import("std").mem.zeroes(?*const fn (?*const anyopaque) callconv(.c) usize),
};
pub const UA_SecurityPolicyCryptoModule = extern struct {
    signatureAlgorithm: UA_SecurityPolicySignatureAlgorithm = @import("std").mem.zeroes(UA_SecurityPolicySignatureAlgorithm),
    encryptionAlgorithm: UA_SecurityPolicyEncryptionAlgorithm = @import("std").mem.zeroes(UA_SecurityPolicyEncryptionAlgorithm),
};
pub const UA_SecurityPolicyAsymmetricModule = extern struct {
    makeCertificateThumbprint: ?*const fn ([*c]const UA_SecurityPolicy, [*c]const UA_ByteString, [*c]UA_ByteString) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn ([*c]const UA_SecurityPolicy, [*c]const UA_ByteString, [*c]UA_ByteString) callconv(.c) UA_StatusCode),
    compareCertificateThumbprint: ?*const fn ([*c]const UA_SecurityPolicy, [*c]const UA_ByteString) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn ([*c]const UA_SecurityPolicy, [*c]const UA_ByteString) callconv(.c) UA_StatusCode),
    cryptoModule: UA_SecurityPolicyCryptoModule = @import("std").mem.zeroes(UA_SecurityPolicyCryptoModule),
};
pub const UA_SecurityPolicySymmetricModule = extern struct {
    generateKey: ?*const fn (?*anyopaque, [*c]const UA_ByteString, [*c]const UA_ByteString, [*c]UA_ByteString) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*anyopaque, [*c]const UA_ByteString, [*c]const UA_ByteString, [*c]UA_ByteString) callconv(.c) UA_StatusCode),
    generateNonce: ?*const fn (?*anyopaque, [*c]UA_ByteString) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*anyopaque, [*c]UA_ByteString) callconv(.c) UA_StatusCode),
    secureChannelNonceLength: usize = @import("std").mem.zeroes(usize),
    cryptoModule: UA_SecurityPolicyCryptoModule = @import("std").mem.zeroes(UA_SecurityPolicyCryptoModule),
};
pub const UA_SecurityPolicyChannelModule = extern struct {
    newContext: ?*const fn ([*c]const UA_SecurityPolicy, [*c]const UA_ByteString, [*c]?*anyopaque) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn ([*c]const UA_SecurityPolicy, [*c]const UA_ByteString, [*c]?*anyopaque) callconv(.c) UA_StatusCode),
    deleteContext: ?*const fn (?*anyopaque) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*anyopaque) callconv(.c) void),
    setLocalSymEncryptingKey: ?*const fn (?*anyopaque, [*c]const UA_ByteString) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*anyopaque, [*c]const UA_ByteString) callconv(.c) UA_StatusCode),
    setLocalSymSigningKey: ?*const fn (?*anyopaque, [*c]const UA_ByteString) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*anyopaque, [*c]const UA_ByteString) callconv(.c) UA_StatusCode),
    setLocalSymIv: ?*const fn (?*anyopaque, [*c]const UA_ByteString) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*anyopaque, [*c]const UA_ByteString) callconv(.c) UA_StatusCode),
    setRemoteSymEncryptingKey: ?*const fn (?*anyopaque, [*c]const UA_ByteString) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*anyopaque, [*c]const UA_ByteString) callconv(.c) UA_StatusCode),
    setRemoteSymSigningKey: ?*const fn (?*anyopaque, [*c]const UA_ByteString) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*anyopaque, [*c]const UA_ByteString) callconv(.c) UA_StatusCode),
    setRemoteSymIv: ?*const fn (?*anyopaque, [*c]const UA_ByteString) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*anyopaque, [*c]const UA_ByteString) callconv(.c) UA_StatusCode),
    compareCertificate: ?*const fn (?*const anyopaque, [*c]const UA_ByteString) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*const anyopaque, [*c]const UA_ByteString) callconv(.c) UA_StatusCode),
};
pub const UA_ConnectionManager = struct_UA_ConnectionManager;
pub const UA_ConnectionManager_connectionCallback = ?*const fn ([*c]UA_ConnectionManager, usize, ?*anyopaque, [*c]?*anyopaque, UA_ConnectionState, [*c]const UA_KeyValueMap, UA_ByteString) callconv(.c) void;
pub const struct_UA_ConnectionManager = extern struct {
    eventSource: UA_EventSource = @import("std").mem.zeroes(UA_EventSource),
    protocol: UA_String = @import("std").mem.zeroes(UA_String),
    openConnection: ?*const fn ([*c]UA_ConnectionManager, [*c]const UA_KeyValueMap, ?*anyopaque, ?*anyopaque, UA_ConnectionManager_connectionCallback) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn ([*c]UA_ConnectionManager, [*c]const UA_KeyValueMap, ?*anyopaque, ?*anyopaque, UA_ConnectionManager_connectionCallback) callconv(.c) UA_StatusCode),
    sendWithConnection: ?*const fn ([*c]UA_ConnectionManager, usize, [*c]const UA_KeyValueMap, [*c]UA_ByteString) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn ([*c]UA_ConnectionManager, usize, [*c]const UA_KeyValueMap, [*c]UA_ByteString) callconv(.c) UA_StatusCode),
    closeConnection: ?*const fn ([*c]UA_ConnectionManager, usize) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn ([*c]UA_ConnectionManager, usize) callconv(.c) UA_StatusCode),
    allocNetworkBuffer: ?*const fn ([*c]UA_ConnectionManager, usize, [*c]UA_ByteString, usize) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn ([*c]UA_ConnectionManager, usize, [*c]UA_ByteString, usize) callconv(.c) UA_StatusCode),
    freeNetworkBuffer: ?*const fn ([*c]UA_ConnectionManager, usize, [*c]UA_ByteString) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]UA_ConnectionManager, usize, [*c]UA_ByteString) callconv(.c) void),
};
pub const UA_InterruptManager = struct_UA_InterruptManager;
pub const UA_InterruptCallback = ?*const fn ([*c]UA_InterruptManager, usize, ?*anyopaque, [*c]const UA_KeyValueMap) callconv(.c) void;
pub const struct_UA_InterruptManager = extern struct {
    eventSource: UA_EventSource = @import("std").mem.zeroes(UA_EventSource),
    registerInterrupt: ?*const fn ([*c]UA_InterruptManager, usize, [*c]const UA_KeyValueMap, UA_InterruptCallback, ?*anyopaque) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn ([*c]UA_InterruptManager, usize, [*c]const UA_KeyValueMap, UA_InterruptCallback, ?*anyopaque) callconv(.c) UA_StatusCode),
    deregisterInterrupt: ?*const fn ([*c]UA_InterruptManager, usize) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]UA_InterruptManager, usize) callconv(.c) void),
};
pub const UA_TIMER_HANDLE_CYCLEMISS_WITH_CURRENTTIME: c_int = 0;
pub const UA_TIMER_HANDLE_CYCLEMISS_WITH_BASETIME: c_int = 1;
pub const UA_TimerPolicy = c_uint;
pub const UA_EVENTLOOPSTATE_FRESH: c_int = 0;
pub const UA_EVENTLOOPSTATE_STOPPED: c_int = 1;
pub const UA_EVENTLOOPSTATE_STARTED: c_int = 2;
pub const UA_EVENTLOOPSTATE_STOPPING: c_int = 3;
pub const UA_EventLoopState = c_uint;
pub const UA_EVENTSOURCESTATE_FRESH: c_int = 0;
pub const UA_EVENTSOURCESTATE_STOPPED: c_int = 1;
pub const UA_EVENTSOURCESTATE_STARTING: c_int = 2;
pub const UA_EVENTSOURCESTATE_STARTED: c_int = 3;
pub const UA_EVENTSOURCESTATE_STOPPING: c_int = 4;
pub const UA_EventSourceState = c_uint;
pub const UA_EVENTSOURCETYPE_CONNECTIONMANAGER: c_int = 0;
pub const UA_EVENTSOURCETYPE_INTERRUPTMANAGER: c_int = 1;
pub const UA_EventSourceType = c_uint;
pub extern fn UA_EventLoop_new_POSIX(logger: [*c]const UA_Logger) [*c]UA_EventLoop;
pub extern fn UA_ConnectionManager_new_POSIX_TCP(eventSourceName: UA_String) [*c]UA_ConnectionManager;
pub extern fn UA_ConnectionManager_new_POSIX_UDP(eventSourceName: UA_String) [*c]UA_ConnectionManager;
pub extern fn UA_ConnectionManager_new_POSIX_Ethernet(eventSourceName: UA_String) [*c]UA_ConnectionManager;
pub extern fn UA_ConnectionManager_new_MQTT(eventSourceName: UA_String) [*c]UA_ConnectionManager;
pub extern fn UA_InterruptManager_new_POSIX(eventSourceName: UA_String) [*c]UA_InterruptManager;
pub const struct_UA_MonitoredItem = opaque {};
pub const UA_MonitoredItem = struct_UA_MonitoredItem;
pub const UA_GlobalNodeLifecycle = extern struct {
    constructor: ?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, [*c]?*anyopaque) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, [*c]?*anyopaque) callconv(.c) UA_StatusCode),
    destructor: ?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque) callconv(.c) void),
    createOptionalChild: ?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, [*c]const UA_NodeId, [*c]const UA_NodeId) callconv(.c) UA_Boolean = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, [*c]const UA_NodeId, [*c]const UA_NodeId) callconv(.c) UA_Boolean),
    generateChildNodeId: ?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, [*c]const UA_NodeId, [*c]const UA_NodeId, [*c]UA_NodeId) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, [*c]const UA_NodeId, [*c]const UA_NodeId, [*c]UA_NodeId) callconv(.c) UA_StatusCode),
};
pub const UA_NodeTypeLifecycle = extern struct {
    constructor: ?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, [*c]?*anyopaque) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, [*c]?*anyopaque) callconv(.c) UA_StatusCode),
    destructor: ?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, [*c]?*anyopaque) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, [*c]?*anyopaque) callconv(.c) void),
};
pub const UA_ReferenceTypeSet = extern struct {
    bits: [4]UA_UInt32 = @import("std").mem.zeroes([4]UA_UInt32),
};
pub extern const UA_REFERENCETYPESET_NONE: UA_ReferenceTypeSet;
pub extern const UA_REFERENCETYPESET_ALL: UA_ReferenceTypeSet;
pub fn UA_ReferenceTypeSet_init(arg_set: [*c]UA_ReferenceTypeSet) callconv(.c) void {
    var set = arg_set;
    _ = &set;
    _ = memset(@as(?*anyopaque, @ptrCast(set)), @as(c_int, 0), @sizeOf(UA_ReferenceTypeSet));
}
pub fn UA_REFTYPESET(arg_index_1: UA_Byte) callconv(.c) UA_ReferenceTypeSet {
    var index_1 = arg_index_1;
    _ = &index_1;
    var i: UA_Byte = @as(UA_Byte, @bitCast(@as(i8, @truncate(@divTrunc(@as(c_int, @bitCast(@as(c_uint, index_1))), @as(c_int, 32))))));
    _ = &i;
    var j: UA_Byte = @as(UA_Byte, @bitCast(@as(i8, @truncate(@import("std").zig.c_translation.signedRemainder(@as(c_int, @bitCast(@as(c_uint, index_1))), @as(c_int, 32))))));
    _ = &j;
    var set: UA_ReferenceTypeSet = undefined;
    _ = &set;
    UA_ReferenceTypeSet_init(&set);
    set.bits[i] |= @as(UA_UInt32, @bitCast(@as(c_int, 1))) << @intCast(@as(c_int, @bitCast(@as(c_uint, j))));
    return set;
}
pub fn UA_ReferenceTypeSet_union(setA: UA_ReferenceTypeSet, setB: UA_ReferenceTypeSet) callconv(.c) UA_ReferenceTypeSet {
    _ = &setA;
    _ = &setB;
    var set: UA_ReferenceTypeSet = undefined;
    _ = &set;
    {
        var i: usize = 0;
        _ = &i;
        while (i < @as(usize, @bitCast(@as(c_long, @divTrunc(@as(c_int, 128), @as(c_int, 32)))))) : (i +%= 1) {
            set.bits[i] = setA.bits[i] | setB.bits[i];
        }
    }
    return set;
}
pub fn UA_ReferenceTypeSet_contains(arg_set: [*c]const UA_ReferenceTypeSet, arg_index_1: UA_Byte) callconv(.c) UA_Boolean {
    var set = arg_set;
    _ = &set;
    var index_1 = arg_index_1;
    _ = &index_1;
    var i: UA_Byte = @as(UA_Byte, @bitCast(@as(i8, @truncate(@divTrunc(@as(c_int, @bitCast(@as(c_uint, index_1))), @as(c_int, 32))))));
    _ = &i;
    var j: UA_Byte = @as(UA_Byte, @bitCast(@as(i8, @truncate(@import("std").zig.c_translation.signedRemainder(@as(c_int, @bitCast(@as(c_uint, index_1))), @as(c_int, 32))))));
    _ = &j;
    return !!((set.*.bits[i] & (@as(UA_UInt32, @bitCast(@as(c_int, 1))) << @intCast(@as(c_int, @bitCast(@as(c_uint, j)))))) != 0);
}
pub const struct_UA_LocalizedTextListEntry = extern struct {
    next: [*c]struct_UA_LocalizedTextListEntry = @import("std").mem.zeroes([*c]struct_UA_LocalizedTextListEntry),
    localizedText: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
};
pub const UA_LocalizedTextListEntry = struct_UA_LocalizedTextListEntry;
pub const struct_UA_NodeHead = extern struct {
    nodeId: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    nodeClass: UA_NodeClass = @import("std").mem.zeroes(UA_NodeClass),
    browseName: UA_QualifiedName = @import("std").mem.zeroes(UA_QualifiedName),
    displayName: [*c]UA_LocalizedTextListEntry = @import("std").mem.zeroes([*c]UA_LocalizedTextListEntry),
    description: [*c]UA_LocalizedTextListEntry = @import("std").mem.zeroes([*c]UA_LocalizedTextListEntry),
    writeMask: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    referencesSize: usize = @import("std").mem.zeroes(usize),
    references: [*c]UA_NodeReferenceKind = @import("std").mem.zeroes([*c]UA_NodeReferenceKind),
    context: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    constructed: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    monitoredItems: ?*UA_MonitoredItem = @import("std").mem.zeroes(?*UA_MonitoredItem),
};
pub const UA_NodeHead = struct_UA_NodeHead;
pub const UA_NodePointer = extern union {
    immediate: usize,
    id: [*c]const UA_NodeId,
    expandedId: [*c]const UA_ExpandedNodeId,
    node: [*c]const UA_NodeHead,
};
pub fn UA_NodePointer_init(arg_np: [*c]UA_NodePointer) callconv(.c) void {
    var np = arg_np;
    _ = &np;
    np.*.immediate = 0;
}
pub extern fn UA_NodePointer_clear(np: [*c]UA_NodePointer) void;
pub extern fn UA_NodePointer_copy(in: UA_NodePointer, out: [*c]UA_NodePointer) UA_StatusCode;
pub extern fn UA_NodePointer_isLocal(np: UA_NodePointer) UA_Boolean;
pub extern fn UA_NodePointer_order(p1: UA_NodePointer, p2: UA_NodePointer) UA_Order;
pub fn UA_NodePointer_equal(arg_p1: UA_NodePointer, arg_p2: UA_NodePointer) callconv(.c) UA_Boolean {
    var p1 = arg_p1;
    _ = &p1;
    var p2 = arg_p2;
    _ = &p2;
    return UA_NodePointer_order(p1, p2) == UA_ORDER_EQ;
}
pub extern fn UA_NodePointer_fromNodeId(id: [*c]const UA_NodeId) UA_NodePointer;
pub extern fn UA_NodePointer_fromExpandedNodeId(id: [*c]const UA_ExpandedNodeId) UA_NodePointer;
pub extern fn UA_NodePointer_toExpandedNodeId(np: UA_NodePointer) UA_ExpandedNodeId;
pub extern fn UA_NodePointer_toNodeId(np: UA_NodePointer) UA_NodeId;
pub const UA_ReferenceTarget = extern struct {
    targetId: UA_NodePointer = @import("std").mem.zeroes(UA_NodePointer),
    targetNameHash: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
const struct_unnamed_18 = extern struct {
    left: [*c]struct_UA_ReferenceTargetTreeElem = @import("std").mem.zeroes([*c]struct_UA_ReferenceTargetTreeElem),
    right: [*c]struct_UA_ReferenceTargetTreeElem = @import("std").mem.zeroes([*c]struct_UA_ReferenceTargetTreeElem),
};
const struct_unnamed_19 = extern struct {
    left: [*c]struct_UA_ReferenceTargetTreeElem = @import("std").mem.zeroes([*c]struct_UA_ReferenceTargetTreeElem),
    right: [*c]struct_UA_ReferenceTargetTreeElem = @import("std").mem.zeroes([*c]struct_UA_ReferenceTargetTreeElem),
};
pub const struct_UA_ReferenceTargetTreeElem = extern struct {
    target: UA_ReferenceTarget = @import("std").mem.zeroes(UA_ReferenceTarget),
    targetIdHash: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    idTreeEntry: struct_unnamed_18 = @import("std").mem.zeroes(struct_unnamed_18),
    nameTreeEntry: struct_unnamed_19 = @import("std").mem.zeroes(struct_unnamed_19),
};
pub const UA_ReferenceTargetTreeElem = struct_UA_ReferenceTargetTreeElem;
const struct_unnamed_21 = extern struct {
    idRoot: [*c]UA_ReferenceTargetTreeElem = @import("std").mem.zeroes([*c]UA_ReferenceTargetTreeElem),
    nameRoot: [*c]UA_ReferenceTargetTreeElem = @import("std").mem.zeroes([*c]UA_ReferenceTargetTreeElem),
};
const union_unnamed_20 = extern union {
    array: [*c]UA_ReferenceTarget,
    tree: struct_unnamed_21,
};
pub const UA_NodeReferenceKind = extern struct {
    targets: union_unnamed_20 = @import("std").mem.zeroes(union_unnamed_20),
    targetsSize: usize = @import("std").mem.zeroes(usize),
    hasRefTree: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    referenceTypeIndex: UA_Byte = @import("std").mem.zeroes(UA_Byte),
    isInverse: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
};
pub const UA_NodeReferenceKind_iterateCallback = ?*const fn (?*anyopaque, [*c]UA_ReferenceTarget) callconv(.c) ?*anyopaque;
pub extern fn UA_NodeReferenceKind_iterate(rk: [*c]UA_NodeReferenceKind, callback: UA_NodeReferenceKind_iterateCallback, context: ?*anyopaque) ?*anyopaque;
pub extern fn UA_NodeReferenceKind_findTarget(rk: [*c]const UA_NodeReferenceKind, targetId: [*c]const UA_ExpandedNodeId) [*c]const UA_ReferenceTarget;
pub extern fn UA_NodeReferenceKind_switch(rk: [*c]UA_NodeReferenceKind) UA_StatusCode;
pub const UA_VALUESOURCE_DATA: c_int = 0;
pub const UA_VALUESOURCE_DATASOURCE: c_int = 1;
pub const UA_ValueSource = c_uint;
pub const UA_ValueCallback = extern struct {
    onRead: ?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NumericRange, ?*const UA_DataValue) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NumericRange, ?*const UA_DataValue) callconv(.c) void),
    onWrite: ?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NumericRange, ?*const UA_DataValue) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NumericRange, ?*const UA_DataValue) callconv(.c) void),
};
pub const UA_DataSource = extern struct {
    read: ?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, UA_Boolean, [*c]const UA_NumericRange, ?*UA_DataValue) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, UA_Boolean, [*c]const UA_NumericRange, ?*UA_DataValue) callconv(.c) UA_StatusCode),
    write: ?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NumericRange, ?*const UA_DataValue) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NumericRange, ?*const UA_DataValue) callconv(.c) UA_StatusCode),
};
pub const UA_ExternalValueCallback = extern struct {
    notificationRead: ?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NumericRange) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NumericRange) callconv(.c) UA_StatusCode),
    userWrite: ?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NumericRange, ?*const UA_DataValue) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NumericRange, ?*const UA_DataValue) callconv(.c) UA_StatusCode),
};
pub const UA_VALUEBACKENDTYPE_NONE: c_int = 0;
pub const UA_VALUEBACKENDTYPE_INTERNAL: c_int = 1;
pub const UA_VALUEBACKENDTYPE_DATA_SOURCE_CALLBACK: c_int = 2;
pub const UA_VALUEBACKENDTYPE_EXTERNAL: c_int = 3;
pub const UA_ValueBackendType = c_uint;
const struct_unnamed_23 = extern struct {
    value: UA_DataValue = @import("std").mem.zeroes(UA_DataValue),
    callback: UA_ValueCallback = @import("std").mem.zeroes(UA_ValueCallback),
};
const struct_unnamed_24 = extern struct {
    value: [*c]?*UA_DataValue = @import("std").mem.zeroes([*c]?*UA_DataValue),
    callback: UA_ExternalValueCallback = @import("std").mem.zeroes(UA_ExternalValueCallback),
};
const union_unnamed_22 = extern union {
    internal: struct_unnamed_23,
    dataSource: UA_DataSource,
    external: struct_unnamed_24,
};
pub const UA_ValueBackend = extern struct {
    backendType: UA_ValueBackendType = @import("std").mem.zeroes(UA_ValueBackendType),
    backend: union_unnamed_22 = @import("std").mem.zeroes(union_unnamed_22),
};
const struct_unnamed_26 = extern struct {
    value: UA_DataValue = @import("std").mem.zeroes(UA_DataValue),
    callback: UA_ValueCallback = @import("std").mem.zeroes(UA_ValueCallback),
};
const union_unnamed_25 = extern union {
    data: struct_unnamed_26,
    dataSource: UA_DataSource,
};
pub const UA_VariableNode = extern struct {
    head: UA_NodeHead = @import("std").mem.zeroes(UA_NodeHead),
    dataType: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    valueRank: UA_Int32 = @import("std").mem.zeroes(UA_Int32),
    arrayDimensionsSize: usize = @import("std").mem.zeroes(usize),
    arrayDimensions: [*c]UA_UInt32 = @import("std").mem.zeroes([*c]UA_UInt32),
    valueBackend: UA_ValueBackend = @import("std").mem.zeroes(UA_ValueBackend),
    valueSource: UA_ValueSource = @import("std").mem.zeroes(UA_ValueSource),
    value: union_unnamed_25 = @import("std").mem.zeroes(union_unnamed_25),
    accessLevel: UA_Byte = @import("std").mem.zeroes(UA_Byte),
    minimumSamplingInterval: UA_Double = @import("std").mem.zeroes(UA_Double),
    historizing: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    isDynamic: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
};
const struct_unnamed_28 = extern struct {
    value: UA_DataValue = @import("std").mem.zeroes(UA_DataValue),
    callback: UA_ValueCallback = @import("std").mem.zeroes(UA_ValueCallback),
};
const union_unnamed_27 = extern union {
    data: struct_unnamed_28,
    dataSource: UA_DataSource,
};
pub const UA_VariableTypeNode = extern struct {
    head: UA_NodeHead = @import("std").mem.zeroes(UA_NodeHead),
    dataType: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    valueRank: UA_Int32 = @import("std").mem.zeroes(UA_Int32),
    arrayDimensionsSize: usize = @import("std").mem.zeroes(usize),
    arrayDimensions: [*c]UA_UInt32 = @import("std").mem.zeroes([*c]UA_UInt32),
    valueBackend: UA_ValueBackend = @import("std").mem.zeroes(UA_ValueBackend),
    valueSource: UA_ValueSource = @import("std").mem.zeroes(UA_ValueSource),
    value: union_unnamed_27 = @import("std").mem.zeroes(union_unnamed_27),
    isAbstract: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    lifecycle: UA_NodeTypeLifecycle = @import("std").mem.zeroes(UA_NodeTypeLifecycle),
};
pub const UA_MethodCallback = ?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, usize, [*c]const UA_Variant, usize, [*c]UA_Variant) callconv(.c) UA_StatusCode;
pub const UA_MethodNode = extern struct {
    head: UA_NodeHead = @import("std").mem.zeroes(UA_NodeHead),
    executable: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    method: UA_MethodCallback = @import("std").mem.zeroes(UA_MethodCallback),
    @"async": UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
};
pub const UA_ObjectNode = extern struct {
    head: UA_NodeHead = @import("std").mem.zeroes(UA_NodeHead),
    eventNotifier: UA_Byte = @import("std").mem.zeroes(UA_Byte),
};
pub const UA_ObjectTypeNode = extern struct {
    head: UA_NodeHead = @import("std").mem.zeroes(UA_NodeHead),
    isAbstract: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    lifecycle: UA_NodeTypeLifecycle = @import("std").mem.zeroes(UA_NodeTypeLifecycle),
};
pub const UA_ReferenceTypeNode = extern struct {
    head: UA_NodeHead = @import("std").mem.zeroes(UA_NodeHead),
    isAbstract: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    symmetric: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    inverseName: UA_LocalizedText = @import("std").mem.zeroes(UA_LocalizedText),
    referenceTypeIndex: UA_Byte = @import("std").mem.zeroes(UA_Byte),
    subTypes: UA_ReferenceTypeSet = @import("std").mem.zeroes(UA_ReferenceTypeSet),
};
pub const UA_DataTypeNode = extern struct {
    head: UA_NodeHead = @import("std").mem.zeroes(UA_NodeHead),
    isAbstract: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
};
pub const UA_ViewNode = extern struct {
    head: UA_NodeHead = @import("std").mem.zeroes(UA_NodeHead),
    eventNotifier: UA_Byte = @import("std").mem.zeroes(UA_Byte),
    containsNoLoops: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
};
pub const UA_Node = extern union {
    head: UA_NodeHead,
    variableNode: UA_VariableNode,
    variableTypeNode: UA_VariableTypeNode,
    methodNode: UA_MethodNode,
    objectNode: UA_ObjectNode,
    objectTypeNode: UA_ObjectTypeNode,
    referenceTypeNode: UA_ReferenceTypeNode,
    dataTypeNode: UA_DataTypeNode,
    viewNode: UA_ViewNode,
};
pub const UA_NodestoreVisitor = ?*const fn (?*anyopaque, ?*const UA_Node) callconv(.c) void;
pub const UA_Nodestore = extern struct {
    context: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    clear: ?*const fn (?*anyopaque) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*anyopaque) callconv(.c) void),
    newNode: ?*const fn (?*anyopaque, UA_NodeClass) callconv(.c) ?*UA_Node = @import("std").mem.zeroes(?*const fn (?*anyopaque, UA_NodeClass) callconv(.c) ?*UA_Node),
    deleteNode: ?*const fn (?*anyopaque, ?*UA_Node) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*anyopaque, ?*UA_Node) callconv(.c) void),
    getNode: ?*const fn (?*anyopaque, [*c]const UA_NodeId, UA_UInt32, UA_ReferenceTypeSet, UA_BrowseDirection) callconv(.c) ?*const UA_Node = @import("std").mem.zeroes(?*const fn (?*anyopaque, [*c]const UA_NodeId, UA_UInt32, UA_ReferenceTypeSet, UA_BrowseDirection) callconv(.c) ?*const UA_Node),
    getNodeFromPtr: ?*const fn (?*anyopaque, UA_NodePointer, UA_UInt32, UA_ReferenceTypeSet, UA_BrowseDirection) callconv(.c) ?*const UA_Node = @import("std").mem.zeroes(?*const fn (?*anyopaque, UA_NodePointer, UA_UInt32, UA_ReferenceTypeSet, UA_BrowseDirection) callconv(.c) ?*const UA_Node),
    releaseNode: ?*const fn (?*anyopaque, ?*const UA_Node) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*anyopaque, ?*const UA_Node) callconv(.c) void),
    getNodeCopy: ?*const fn (?*anyopaque, [*c]const UA_NodeId, [*c]?*UA_Node) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*anyopaque, [*c]const UA_NodeId, [*c]?*UA_Node) callconv(.c) UA_StatusCode),
    insertNode: ?*const fn (?*anyopaque, ?*UA_Node, [*c]UA_NodeId) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*anyopaque, ?*UA_Node, [*c]UA_NodeId) callconv(.c) UA_StatusCode),
    replaceNode: ?*const fn (?*anyopaque, ?*UA_Node) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*anyopaque, ?*UA_Node) callconv(.c) UA_StatusCode),
    removeNode: ?*const fn (?*anyopaque, [*c]const UA_NodeId) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*anyopaque, [*c]const UA_NodeId) callconv(.c) UA_StatusCode),
    getReferenceTypeId: ?*const fn (?*anyopaque, UA_Byte) callconv(.c) [*c]const UA_NodeId = @import("std").mem.zeroes(?*const fn (?*anyopaque, UA_Byte) callconv(.c) [*c]const UA_NodeId),
    iterate: ?*const fn (?*anyopaque, UA_NodestoreVisitor, ?*anyopaque) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*anyopaque, UA_NodestoreVisitor, ?*anyopaque) callconv(.c) void),
};
pub extern fn UA_Node_setAttributes(node: ?*UA_Node, attributes: ?*const anyopaque, attributeType: ?*const UA_DataType) UA_StatusCode;
pub extern fn UA_Node_copy(src: ?*const UA_Node, dst: ?*UA_Node) UA_StatusCode;
pub extern fn UA_Node_copy_alloc(src: ?*const UA_Node) ?*UA_Node;
pub extern fn UA_Node_addReference(node: ?*UA_Node, refTypeIndex: UA_Byte, isForward: UA_Boolean, targetNodeId: [*c]const UA_ExpandedNodeId, targetBrowseNameHash: UA_UInt32) UA_StatusCode;
pub extern fn UA_Node_deleteReference(node: ?*UA_Node, refTypeIndex: UA_Byte, isForward: UA_Boolean, targetNodeId: [*c]const UA_ExpandedNodeId) UA_StatusCode;
pub extern fn UA_Node_deleteReferencesSubset(node: ?*UA_Node, keepSet: [*c]const UA_ReferenceTypeSet) void;
pub extern fn UA_Node_deleteReferences(node: ?*UA_Node) void;
pub extern fn UA_Node_clear(node: ?*UA_Node) void;
pub const UA_PUBSUB_COMPONENT_CONNECTION: c_int = 0;
pub const UA_PUBSUB_COMPONENT_WRITERGROUP: c_int = 1;
pub const UA_PUBSUB_COMPONENT_DATASETWRITER: c_int = 2;
pub const UA_PUBSUB_COMPONENT_READERGROUP: c_int = 3;
pub const UA_PUBSUB_COMPONENT_DATASETREADER: c_int = 4;
pub const UA_PubSubComponentEnumType = c_uint;
pub const UA_PUBLISHERIDTYPE_BYTE: c_int = 0;
pub const UA_PUBLISHERIDTYPE_UINT16: c_int = 1;
pub const UA_PUBLISHERIDTYPE_UINT32: c_int = 2;
pub const UA_PUBLISHERIDTYPE_UINT64: c_int = 3;
pub const UA_PUBLISHERIDTYPE_STRING: c_int = 4;
pub const UA_PublisherIdType = c_uint;
pub const UA_PublisherId = extern union {
    byte: UA_Byte,
    uint16: UA_UInt16,
    uint32: UA_UInt32,
    uint64: UA_UInt64,
    string: UA_String,
};
pub const UA_PubSubConnectionConfig = extern struct {
    name: UA_String = @import("std").mem.zeroes(UA_String),
    enabled: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    publisherIdType: UA_PublisherIdType = @import("std").mem.zeroes(UA_PublisherIdType),
    publisherId: UA_PublisherId = @import("std").mem.zeroes(UA_PublisherId),
    transportProfileUri: UA_String = @import("std").mem.zeroes(UA_String),
    address: UA_Variant = @import("std").mem.zeroes(UA_Variant),
    connectionProperties: UA_KeyValueMap = @import("std").mem.zeroes(UA_KeyValueMap),
    connectionTransportSettings: UA_Variant = @import("std").mem.zeroes(UA_Variant),
    eventLoop: [*c]UA_EventLoop = @import("std").mem.zeroes([*c]UA_EventLoop),
};
pub extern fn UA_Server_addPubSubConnection(server: ?*UA_Server, connectionConfig: [*c]const UA_PubSubConnectionConfig, connectionIdentifier: [*c]UA_NodeId) UA_StatusCode;
pub extern fn UA_Server_getPubSubConnectionConfig(server: ?*UA_Server, connection: UA_NodeId, config: [*c]UA_PubSubConnectionConfig) UA_StatusCode;
pub extern fn UA_Server_removePubSubConnection(server: ?*UA_Server, connection: UA_NodeId) UA_StatusCode;
pub const UA_PUBSUB_DATASET_PUBLISHEDITEMS: c_int = 0;
pub const UA_PUBSUB_DATASET_PUBLISHEDEVENTS: c_int = 1;
pub const UA_PUBSUB_DATASET_PUBLISHEDITEMS_TEMPLATE: c_int = 2;
pub const UA_PUBSUB_DATASET_PUBLISHEDEVENTS_TEMPLATE: c_int = 3;
pub const UA_PublishedDataSetType = c_uint;
pub const UA_PublishedDataItemsTemplateConfig = extern struct {
    metaData: UA_DataSetMetaDataType = @import("std").mem.zeroes(UA_DataSetMetaDataType),
    variablesToAddSize: usize = @import("std").mem.zeroes(usize),
    variablesToAdd: [*c]UA_PublishedVariableDataType = @import("std").mem.zeroes([*c]UA_PublishedVariableDataType),
};
pub const UA_PublishedEventConfig = extern struct {
    eventNotfier: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    filter: UA_ContentFilter = @import("std").mem.zeroes(UA_ContentFilter),
};
pub const UA_PublishedEventTemplateConfig = extern struct {
    metaData: UA_DataSetMetaDataType = @import("std").mem.zeroes(UA_DataSetMetaDataType),
    eventNotfier: UA_NodeId = @import("std").mem.zeroes(UA_NodeId),
    selectedFieldsSize: usize = @import("std").mem.zeroes(usize),
    selectedFields: [*c]UA_SimpleAttributeOperand = @import("std").mem.zeroes([*c]UA_SimpleAttributeOperand),
    filter: UA_ContentFilter = @import("std").mem.zeroes(UA_ContentFilter),
};
const union_unnamed_29 = extern union {
    itemsTemplate: UA_PublishedDataItemsTemplateConfig,
    event: UA_PublishedEventConfig,
    eventTemplate: UA_PublishedEventTemplateConfig,
};
pub const UA_PublishedDataSetConfig = extern struct {
    name: UA_String = @import("std").mem.zeroes(UA_String),
    publishedDataSetType: UA_PublishedDataSetType = @import("std").mem.zeroes(UA_PublishedDataSetType),
    config: union_unnamed_29 = @import("std").mem.zeroes(union_unnamed_29),
};
pub extern fn UA_PublishedDataSetConfig_clear(pdsConfig: [*c]UA_PublishedDataSetConfig) void;
pub const UA_AddPublishedDataSetResult = extern struct {
    addResult: UA_StatusCode = @import("std").mem.zeroes(UA_StatusCode),
    fieldAddResultsSize: usize = @import("std").mem.zeroes(usize),
    fieldAddResults: [*c]UA_StatusCode = @import("std").mem.zeroes([*c]UA_StatusCode),
    configurationVersion: UA_ConfigurationVersionDataType = @import("std").mem.zeroes(UA_ConfigurationVersionDataType),
};
pub extern fn UA_Server_addPublishedDataSet(server: ?*UA_Server, publishedDataSetConfig: [*c]const UA_PublishedDataSetConfig, pdsIdentifier: [*c]UA_NodeId) UA_AddPublishedDataSetResult;
pub extern fn UA_Server_getPublishedDataSetConfig(server: ?*UA_Server, pds: UA_NodeId, config: [*c]UA_PublishedDataSetConfig) UA_StatusCode;
pub extern fn UA_Server_getPublishedDataSetMetaData(server: ?*UA_Server, pds: UA_NodeId, metaData: [*c]UA_DataSetMetaDataType) UA_StatusCode;
pub extern fn UA_Server_removePublishedDataSet(server: ?*UA_Server, pds: UA_NodeId) UA_StatusCode;
const struct_unnamed_30 = extern struct {
    rtFieldSourceEnabled: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    rtInformationModelNode: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    staticValueSource: [*c]?*UA_DataValue = @import("std").mem.zeroes([*c]?*UA_DataValue),
};
pub const UA_DataSetVariableConfig = extern struct {
    configurationVersion: UA_ConfigurationVersionDataType = @import("std").mem.zeroes(UA_ConfigurationVersionDataType),
    fieldNameAlias: UA_String = @import("std").mem.zeroes(UA_String),
    promotedField: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    publishParameters: UA_PublishedVariableDataType = @import("std").mem.zeroes(UA_PublishedVariableDataType),
    rtValueSource: struct_unnamed_30 = @import("std").mem.zeroes(struct_unnamed_30),
    maxStringLength: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
};
pub const UA_PUBSUB_DATASETFIELD_VARIABLE: c_int = 0;
pub const UA_PUBSUB_DATASETFIELD_EVENT: c_int = 1;
pub const UA_DataSetFieldType = c_uint;
const union_unnamed_31 = extern union {
    variable: UA_DataSetVariableConfig,
};
pub const UA_DataSetFieldConfig = extern struct {
    dataSetFieldType: UA_DataSetFieldType = @import("std").mem.zeroes(UA_DataSetFieldType),
    field: union_unnamed_31 = @import("std").mem.zeroes(union_unnamed_31),
};
pub extern fn UA_DataSetFieldConfig_clear(dataSetFieldConfig: [*c]UA_DataSetFieldConfig) void;
pub const UA_DataSetFieldResult = extern struct {
    result: UA_StatusCode = @import("std").mem.zeroes(UA_StatusCode),
    configurationVersion: UA_ConfigurationVersionDataType = @import("std").mem.zeroes(UA_ConfigurationVersionDataType),
};
pub extern fn UA_Server_addDataSetField(server: ?*UA_Server, publishedDataSet: UA_NodeId, fieldConfig: [*c]const UA_DataSetFieldConfig, fieldIdentifier: [*c]UA_NodeId) UA_DataSetFieldResult;
pub extern fn UA_Server_getDataSetFieldConfig(server: ?*UA_Server, dsf: UA_NodeId, config: [*c]UA_DataSetFieldConfig) UA_StatusCode;
pub extern fn UA_Server_removeDataSetField(server: ?*UA_Server, dsf: UA_NodeId) UA_DataSetFieldResult;
pub const UA_PubSub_CallbackLifecycle = extern struct {
    addCustomCallback: ?*const fn (?*UA_Server, UA_NodeId, UA_ServerCallback, ?*anyopaque, UA_Double, [*c]UA_DateTime, UA_TimerPolicy, [*c]UA_UInt64) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*UA_Server, UA_NodeId, UA_ServerCallback, ?*anyopaque, UA_Double, [*c]UA_DateTime, UA_TimerPolicy, [*c]UA_UInt64) callconv(.c) UA_StatusCode),
    changeCustomCallback: ?*const fn (?*UA_Server, UA_NodeId, UA_UInt64, UA_Double, [*c]UA_DateTime, UA_TimerPolicy) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*UA_Server, UA_NodeId, UA_UInt64, UA_Double, [*c]UA_DateTime, UA_TimerPolicy) callconv(.c) UA_StatusCode),
    removeCustomCallback: ?*const fn (?*UA_Server, UA_NodeId, UA_UInt64) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*UA_Server, UA_NodeId, UA_UInt64) callconv(.c) void),
};
pub const UA_PUBSUB_ENCODING_UADP: c_int = 0;
pub const UA_PUBSUB_ENCODING_JSON: c_int = 1;
pub const UA_PUBSUB_ENCODING_BINARY: c_int = 2;
pub const UA_PubSubEncodingType = c_uint;
pub const UA_PUBSUB_RT_NONE: c_int = 0;
pub const UA_PUBSUB_RT_DIRECT_VALUE_ACCESS: c_int = 1;
pub const UA_PUBSUB_RT_FIXED_SIZE: c_int = 2;
pub const UA_PUBSUB_RT_DETERMINISTIC: c_int = 3;
pub const UA_PubSubRTLevel = c_uint;
pub const UA_WriterGroupConfig = extern struct {
    name: UA_String = @import("std").mem.zeroes(UA_String),
    enabled: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    writerGroupId: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    publishingInterval: UA_Duration = @import("std").mem.zeroes(UA_Duration),
    keepAliveTime: UA_Double = @import("std").mem.zeroes(UA_Double),
    priority: UA_Byte = @import("std").mem.zeroes(UA_Byte),
    transportSettings: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
    messageSettings: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
    groupProperties: UA_KeyValueMap = @import("std").mem.zeroes(UA_KeyValueMap),
    encodingMimeType: UA_PubSubEncodingType = @import("std").mem.zeroes(UA_PubSubEncodingType),
    pubsubManagerCallback: UA_PubSub_CallbackLifecycle = @import("std").mem.zeroes(UA_PubSub_CallbackLifecycle),
    maxEncapsulatedDataSetMessageCount: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    rtLevel: UA_PubSubRTLevel = @import("std").mem.zeroes(UA_PubSubRTLevel),
    securityMode: UA_MessageSecurityMode = @import("std").mem.zeroes(UA_MessageSecurityMode),
    securityPolicy: [*c]UA_PubSubSecurityPolicy = @import("std").mem.zeroes([*c]UA_PubSubSecurityPolicy),
    securityGroupId: UA_String = @import("std").mem.zeroes(UA_String),
};
pub extern fn UA_WriterGroupConfig_clear(writerGroupConfig: [*c]UA_WriterGroupConfig) void;
pub extern fn UA_Server_addWriterGroup(server: ?*UA_Server, connection: UA_NodeId, writerGroupConfig: [*c]const UA_WriterGroupConfig, writerGroupIdentifier: [*c]UA_NodeId) UA_StatusCode;
pub extern fn UA_Server_getWriterGroupConfig(server: ?*UA_Server, writerGroup: UA_NodeId, config: [*c]UA_WriterGroupConfig) UA_StatusCode;
pub extern fn UA_Server_updateWriterGroupConfig(server: ?*UA_Server, writerGroupIdentifier: UA_NodeId, config: [*c]const UA_WriterGroupConfig) UA_StatusCode;
pub extern fn UA_Server_WriterGroup_getState(server: ?*UA_Server, writerGroupIdentifier: UA_NodeId, state: [*c]UA_PubSubState) UA_StatusCode;
pub extern fn UA_Server_WriterGroup_publish(server: ?*UA_Server, writerGroupIdentifier: UA_NodeId) UA_StatusCode;
pub extern fn UA_WriterGroup_lastPublishTimestamp(server: ?*UA_Server, writerGroupId: UA_NodeId, timestamp: [*c]UA_DateTime) UA_StatusCode;
pub extern fn UA_Server_removeWriterGroup(server: ?*UA_Server, writerGroup: UA_NodeId) UA_StatusCode;
pub extern fn UA_Server_freezeWriterGroupConfiguration(server: ?*UA_Server, writerGroup: UA_NodeId) UA_StatusCode;
pub extern fn UA_Server_unfreezeWriterGroupConfiguration(server: ?*UA_Server, writerGroup: UA_NodeId) UA_StatusCode;
pub extern fn UA_Server_setWriterGroupOperational(server: ?*UA_Server, writerGroup: UA_NodeId) UA_StatusCode;
pub extern fn UA_Server_setWriterGroupDisabled(server: ?*UA_Server, writerGroup: UA_NodeId) UA_StatusCode;
pub extern fn UA_Server_setWriterGroupEncryptionKeys(server: ?*UA_Server, writerGroup: UA_NodeId, securityTokenId: UA_UInt32, signingKey: UA_ByteString, encryptingKey: UA_ByteString, keyNonce: UA_ByteString) UA_StatusCode;
pub const UA_DataSetWriterConfig = extern struct {
    name: UA_String = @import("std").mem.zeroes(UA_String),
    dataSetWriterId: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    dataSetFieldContentMask: UA_DataSetFieldContentMask = @import("std").mem.zeroes(UA_DataSetFieldContentMask),
    keyFrameCount: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    messageSettings: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
    transportSettings: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
    dataSetName: UA_String = @import("std").mem.zeroes(UA_String),
    dataSetWriterProperties: UA_KeyValueMap = @import("std").mem.zeroes(UA_KeyValueMap),
};
pub extern fn UA_DataSetWriterConfig_clear(pdsConfig: [*c]UA_DataSetWriterConfig) void;
pub extern fn UA_Server_addDataSetWriter(server: ?*UA_Server, writerGroup: UA_NodeId, dataSet: UA_NodeId, dataSetWriterConfig: [*c]const UA_DataSetWriterConfig, writerIdentifier: [*c]UA_NodeId) UA_StatusCode;
pub extern fn UA_Server_getDataSetWriterConfig(server: ?*UA_Server, dsw: UA_NodeId, config: [*c]UA_DataSetWriterConfig) UA_StatusCode;
pub extern fn UA_Server_DataSetWriter_getState(server: ?*UA_Server, dataSetWriterIdentifier: UA_NodeId, state: [*c]UA_PubSubState) UA_StatusCode;
pub extern fn UA_Server_removeDataSetWriter(server: ?*UA_Server, dsw: UA_NodeId) UA_StatusCode;
pub const UA_PUBSUB_SDS_TARGET: c_int = 0;
pub const UA_PUBSUB_SDS_MIRROR: c_int = 1;
pub const UA_SubscribedDataSetEnumType = c_uint;
pub const UA_FieldTargetVariable = extern struct {
    targetVariable: UA_FieldTargetDataType = @import("std").mem.zeroes(UA_FieldTargetDataType),
    externalDataValue: [*c]?*UA_DataValue = @import("std").mem.zeroes([*c]?*UA_DataValue),
    targetVariableContext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    beforeWrite: ?*const fn (?*UA_Server, [*c]const UA_NodeId, [*c]const UA_NodeId, [*c]const UA_NodeId, ?*anyopaque, [*c]?*UA_DataValue) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]const UA_NodeId, [*c]const UA_NodeId, [*c]const UA_NodeId, ?*anyopaque, [*c]?*UA_DataValue) callconv(.c) void),
    afterWrite: ?*const fn (?*UA_Server, [*c]const UA_NodeId, [*c]const UA_NodeId, [*c]const UA_NodeId, ?*anyopaque, [*c]?*UA_DataValue) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]const UA_NodeId, [*c]const UA_NodeId, [*c]const UA_NodeId, ?*anyopaque, [*c]?*UA_DataValue) callconv(.c) void),
};
pub const UA_TargetVariables = extern struct {
    targetVariablesSize: usize = @import("std").mem.zeroes(usize),
    targetVariables: [*c]UA_FieldTargetVariable = @import("std").mem.zeroes([*c]UA_FieldTargetVariable),
};
pub extern fn UA_Server_DataSetReader_createTargetVariables(server: ?*UA_Server, dataSetReaderIdentifier: UA_NodeId, targetVariablesSize: usize, targetVariables: [*c]const UA_FieldTargetVariable) UA_StatusCode;
pub const UA_PUBSUB_RT_UNKNOWN: c_int = 0;
pub const UA_PUBSUB_RT_VARIANT: c_int = 1;
pub const UA_PUBSUB_RT_DATA_VALUE: c_int = 2;
pub const UA_PUBSUB_RT_RAW: c_int = 4;
pub const UA_PubSubRtEncoding = c_uint;
const union_unnamed_32 = extern union {
    subscribedDataSetTarget: UA_TargetVariables,
};
pub const UA_DataSetReaderConfig = extern struct {
    name: UA_String = @import("std").mem.zeroes(UA_String),
    publisherId: UA_Variant = @import("std").mem.zeroes(UA_Variant),
    writerGroupId: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    dataSetWriterId: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    dataSetMetaData: UA_DataSetMetaDataType = @import("std").mem.zeroes(UA_DataSetMetaDataType),
    dataSetFieldContentMask: UA_DataSetFieldContentMask = @import("std").mem.zeroes(UA_DataSetFieldContentMask),
    messageReceiveTimeout: UA_Double = @import("std").mem.zeroes(UA_Double),
    messageSettings: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
    transportSettings: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
    subscribedDataSetType: UA_SubscribedDataSetEnumType = @import("std").mem.zeroes(UA_SubscribedDataSetEnumType),
    subscribedDataSet: union_unnamed_32 = @import("std").mem.zeroes(union_unnamed_32),
    linkedStandaloneSubscribedDataSetName: UA_String = @import("std").mem.zeroes(UA_String),
    expectedEncoding: UA_PubSubRtEncoding = @import("std").mem.zeroes(UA_PubSubRtEncoding),
};
pub extern fn UA_DataSetReaderConfig_copy(src: [*c]const UA_DataSetReaderConfig, dst: [*c]UA_DataSetReaderConfig) UA_StatusCode;
pub extern fn UA_DataSetReaderConfig_clear(cfg: [*c]UA_DataSetReaderConfig) void;
pub extern fn UA_Server_DataSetReader_updateConfig(server: ?*UA_Server, dataSetReaderIdentifier: UA_NodeId, readerGroupIdentifier: UA_NodeId, config: [*c]const UA_DataSetReaderConfig) UA_StatusCode;
pub extern fn UA_Server_DataSetReader_getConfig(server: ?*UA_Server, dataSetReaderIdentifier: UA_NodeId, config: [*c]UA_DataSetReaderConfig) UA_StatusCode;
pub extern fn UA_Server_DataSetReader_getState(server: ?*UA_Server, dataSetReaderIdentifier: UA_NodeId, state: [*c]UA_PubSubState) UA_StatusCode;
const union_unnamed_33 = extern union {
    target: UA_TargetVariablesDataType,
};
pub const UA_StandaloneSubscribedDataSetConfig = extern struct {
    name: UA_String = @import("std").mem.zeroes(UA_String),
    subscribedDataSetType: UA_SubscribedDataSetEnumType = @import("std").mem.zeroes(UA_SubscribedDataSetEnumType),
    subscribedDataSet: union_unnamed_33 = @import("std").mem.zeroes(union_unnamed_33),
    dataSetMetaData: UA_DataSetMetaDataType = @import("std").mem.zeroes(UA_DataSetMetaDataType),
    isConnected: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
};
pub extern fn UA_StandaloneSubscribedDataSetConfig_clear(sdsConfig: [*c]UA_StandaloneSubscribedDataSetConfig) void;
pub extern fn UA_Server_addStandaloneSubscribedDataSet(server: ?*UA_Server, subscribedDataSetConfig: [*c]const UA_StandaloneSubscribedDataSetConfig, sdsIdentifier: [*c]UA_NodeId) UA_StatusCode;
pub extern fn UA_Server_removeStandaloneSubscribedDataSet(server: ?*UA_Server, sds: UA_NodeId) UA_StatusCode;
pub const UA_ReaderGroupConfig = extern struct {
    name: UA_String = @import("std").mem.zeroes(UA_String),
    rtLevel: UA_PubSubRTLevel = @import("std").mem.zeroes(UA_PubSubRTLevel),
    groupProperties: UA_KeyValueMap = @import("std").mem.zeroes(UA_KeyValueMap),
    encodingMimeType: UA_PubSubEncodingType = @import("std").mem.zeroes(UA_PubSubEncodingType),
    transportSettings: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
    securityMode: UA_MessageSecurityMode = @import("std").mem.zeroes(UA_MessageSecurityMode),
    securityPolicy: [*c]UA_PubSubSecurityPolicy = @import("std").mem.zeroes([*c]UA_PubSubSecurityPolicy),
    securityGroupId: UA_String = @import("std").mem.zeroes(UA_String),
};
pub extern fn UA_ReaderGroupConfig_clear(readerGroupConfig: [*c]UA_ReaderGroupConfig) void;
pub extern fn UA_Server_addDataSetReader(server: ?*UA_Server, readerGroupIdentifier: UA_NodeId, dataSetReaderConfig: [*c]const UA_DataSetReaderConfig, readerIdentifier: [*c]UA_NodeId) UA_StatusCode;
pub extern fn UA_Server_removeDataSetReader(server: ?*UA_Server, readerIdentifier: UA_NodeId) UA_StatusCode;
pub extern fn UA_Server_ReaderGroup_getConfig(server: ?*UA_Server, readerGroupIdentifier: UA_NodeId, config: [*c]UA_ReaderGroupConfig) UA_StatusCode;
pub extern fn UA_Server_ReaderGroup_getState(server: ?*UA_Server, readerGroupIdentifier: UA_NodeId, state: [*c]UA_PubSubState) UA_StatusCode;
pub extern fn UA_Server_addReaderGroup(server: ?*UA_Server, connectionIdentifier: UA_NodeId, readerGroupConfig: [*c]const UA_ReaderGroupConfig, readerGroupIdentifier: [*c]UA_NodeId) UA_StatusCode;
pub extern fn UA_Server_removeReaderGroup(server: ?*UA_Server, groupIdentifier: UA_NodeId) UA_StatusCode;
pub extern fn UA_Server_freezeReaderGroupConfiguration(server: ?*UA_Server, readerGroupId: UA_NodeId) UA_StatusCode;
pub extern fn UA_Server_unfreezeReaderGroupConfiguration(server: ?*UA_Server, readerGroupId: UA_NodeId) UA_StatusCode;
pub extern fn UA_Server_setReaderGroupOperational(server: ?*UA_Server, readerGroupId: UA_NodeId) UA_StatusCode;
pub extern fn UA_Server_setReaderGroupDisabled(server: ?*UA_Server, readerGroupId: UA_NodeId) UA_StatusCode;
pub extern fn UA_Server_setReaderGroupEncryptionKeys(server: ?*UA_Server, readerGroup: UA_NodeId, securityTokenId: UA_UInt32, signingKey: UA_ByteString, encryptingKey: UA_ByteString, keyNonce: UA_ByteString) UA_StatusCode;
pub const UA_ClientConfig = struct_UA_ClientConfig;
pub const struct_UA_ClientConfig = extern struct {
    clientContext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    logging: [*c]UA_Logger = @import("std").mem.zeroes([*c]UA_Logger),
    timeout: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    clientDescription: UA_ApplicationDescription = @import("std").mem.zeroes(UA_ApplicationDescription),
    endpointUrl: UA_String = @import("std").mem.zeroes(UA_String),
    userIdentityToken: UA_ExtensionObject = @import("std").mem.zeroes(UA_ExtensionObject),
    securityMode: UA_MessageSecurityMode = @import("std").mem.zeroes(UA_MessageSecurityMode),
    securityPolicyUri: UA_String = @import("std").mem.zeroes(UA_String),
    noSession: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    noReconnect: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    noNewSession: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    endpoint: UA_EndpointDescription = @import("std").mem.zeroes(UA_EndpointDescription),
    userTokenPolicy: UA_UserTokenPolicy = @import("std").mem.zeroes(UA_UserTokenPolicy),
    applicationUri: UA_String = @import("std").mem.zeroes(UA_String),
    customDataTypes: [*c]const UA_DataTypeArray = @import("std").mem.zeroes([*c]const UA_DataTypeArray),
    secureChannelLifeTime: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    requestedSessionTimeout: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    localConnectionConfig: UA_ConnectionConfig = @import("std").mem.zeroes(UA_ConnectionConfig),
    connectivityCheckInterval: UA_UInt32 = @import("std").mem.zeroes(UA_UInt32),
    eventLoop: [*c]UA_EventLoop = @import("std").mem.zeroes([*c]UA_EventLoop),
    externalEventLoop: UA_Boolean = @import("std").mem.zeroes(UA_Boolean),
    securityPoliciesSize: usize = @import("std").mem.zeroes(usize),
    securityPolicies: [*c]UA_SecurityPolicy = @import("std").mem.zeroes([*c]UA_SecurityPolicy),
    certificateVerification: UA_CertificateVerification = @import("std").mem.zeroes(UA_CertificateVerification),
    authSecurityPoliciesSize: usize = @import("std").mem.zeroes(usize),
    authSecurityPolicies: [*c]UA_SecurityPolicy = @import("std").mem.zeroes([*c]UA_SecurityPolicy),
    authSecurityPolicyUri: UA_String = @import("std").mem.zeroes(UA_String),
    stateCallback: ?*const fn (?*UA_Client, UA_SecureChannelState, UA_SessionState, UA_StatusCode) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*UA_Client, UA_SecureChannelState, UA_SessionState, UA_StatusCode) callconv(.c) void),
    inactivityCallback: ?*const fn (?*UA_Client) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*UA_Client) callconv(.c) void),
    outStandingPublishRequests: UA_UInt16 = @import("std").mem.zeroes(UA_UInt16),
    subscriptionInactivityCallback: ?*const fn (?*UA_Client, UA_UInt32, ?*anyopaque) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*UA_Client, UA_UInt32, ?*anyopaque) callconv(.c) void),
    sessionName: UA_String = @import("std").mem.zeroes(UA_String),
    sessionLocaleIds: [*c]UA_LocaleId = @import("std").mem.zeroes([*c]UA_LocaleId),
    sessionLocaleIdsSize: usize = @import("std").mem.zeroes(usize),
    privateKeyPasswordCallback: ?*const fn ([*c]UA_ClientConfig, [*c]UA_ByteString) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn ([*c]UA_ClientConfig, [*c]UA_ByteString) callconv(.c) UA_StatusCode),
};
pub extern fn UA_ClientConfig_copy(src: [*c]const UA_ClientConfig, dst: [*c]UA_ClientConfig) UA_StatusCode;
pub extern fn UA_ClientConfig_delete(config: [*c]UA_ClientConfig) void;
pub extern fn UA_ClientConfig_clear(config: [*c]UA_ClientConfig) void;
pub fn UA_ClientConfig_setAuthenticationUsername(arg_config: [*c]UA_ClientConfig, arg_username: [*c]const u8, arg_password: [*c]const u8) callconv(.c) UA_StatusCode {
    var config = arg_config;
    _ = &config;
    var username = arg_username;
    _ = &username;
    var password = arg_password;
    _ = &password;
    var identityToken: [*c]UA_UserNameIdentityToken = UA_UserNameIdentityToken_new();
    _ = &identityToken;
    if (!(identityToken != null)) return 2147680256;
    identityToken.*.userName = UA_String_fromChars(username);
    identityToken.*.password = UA_String_fromChars(password);
    UA_ExtensionObject_clear(&config.*.userIdentityToken);
    UA_ExtensionObject_setValue(&config.*.userIdentityToken, @as(?*anyopaque, @ptrCast(identityToken)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 180)))]);
    return 0;
}
pub extern fn UA_Client_new() ?*UA_Client;
pub extern fn UA_Client_newWithConfig(config: [*c]const UA_ClientConfig) ?*UA_Client;
pub extern fn UA_Client_getState(client: ?*UA_Client, channelState: [*c]UA_SecureChannelState, sessionState: [*c]UA_SessionState, connectStatus: [*c]UA_StatusCode) void;
pub extern fn UA_Client_getConfig(client: ?*UA_Client) [*c]UA_ClientConfig;
pub fn UA_Client_getContext(arg_client: ?*UA_Client) callconv(.c) ?*anyopaque {
    var client = arg_client;
    _ = &client;
    return UA_Client_getConfig(client).*.clientContext;
}
pub extern fn UA_Client_delete(client: ?*UA_Client) void;
pub extern fn UA_Client_getConnectionAttribute(client: ?*UA_Client, key: UA_QualifiedName, outValue: [*c]UA_Variant) UA_StatusCode;
pub extern fn UA_Client_getConnectionAttributeCopy(client: ?*UA_Client, key: UA_QualifiedName, outValue: [*c]UA_Variant) UA_StatusCode;
pub extern fn UA_Client_getConnectionAttribute_scalar(client: ?*UA_Client, key: UA_QualifiedName, @"type": ?*const UA_DataType, outValue: ?*anyopaque) UA_StatusCode;
pub extern fn __UA_Client_connect(client: ?*UA_Client, @"async": UA_Boolean) UA_StatusCode;
pub fn UA_Client_connect(arg_client: ?*UA_Client, arg_endpointUrl: [*c]const u8) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    var endpointUrl = arg_endpointUrl;
    _ = &endpointUrl;
    var cc: [*c]UA_ClientConfig = UA_Client_getConfig(client);
    _ = &cc;
    cc.*.noSession = @as(c_int, 0) != 0;
    UA_String_clear(&cc.*.endpointUrl);
    cc.*.endpointUrl = UA_String_fromChars(endpointUrl);
    return __UA_Client_connect(client, @as(c_int, 0) != 0);
}
pub fn UA_Client_connectAsync(arg_client: ?*UA_Client, arg_endpointUrl: [*c]const u8) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    var endpointUrl = arg_endpointUrl;
    _ = &endpointUrl;
    var cc: [*c]UA_ClientConfig = UA_Client_getConfig(client);
    _ = &cc;
    cc.*.noSession = @as(c_int, 0) != 0;
    UA_String_clear(&cc.*.endpointUrl);
    cc.*.endpointUrl = UA_String_fromChars(endpointUrl);
    return __UA_Client_connect(client, @as(c_int, 1) != 0);
}
pub fn UA_Client_connectSecureChannel(arg_client: ?*UA_Client, arg_endpointUrl: [*c]const u8) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    var endpointUrl = arg_endpointUrl;
    _ = &endpointUrl;
    var cc: [*c]UA_ClientConfig = UA_Client_getConfig(client);
    _ = &cc;
    cc.*.noSession = @as(c_int, 1) != 0;
    UA_String_clear(&cc.*.endpointUrl);
    cc.*.endpointUrl = UA_String_fromChars(endpointUrl);
    return __UA_Client_connect(client, @as(c_int, 0) != 0);
}
pub fn UA_Client_connectSecureChannelAsync(arg_client: ?*UA_Client, arg_endpointUrl: [*c]const u8) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    var endpointUrl = arg_endpointUrl;
    _ = &endpointUrl;
    var cc: [*c]UA_ClientConfig = UA_Client_getConfig(client);
    _ = &cc;
    cc.*.noSession = @as(c_int, 1) != 0;
    UA_String_clear(&cc.*.endpointUrl);
    cc.*.endpointUrl = UA_String_fromChars(endpointUrl);
    return __UA_Client_connect(client, @as(c_int, 1) != 0);
}
pub fn UA_Client_connectUsername(arg_client: ?*UA_Client, arg_endpointUrl: [*c]const u8, arg_username: [*c]const u8, arg_password: [*c]const u8) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    var endpointUrl = arg_endpointUrl;
    _ = &endpointUrl;
    var username = arg_username;
    _ = &username;
    var password = arg_password;
    _ = &password;
    var cc: [*c]UA_ClientConfig = UA_Client_getConfig(client);
    _ = &cc;
    var res: UA_StatusCode = UA_ClientConfig_setAuthenticationUsername(cc, username, password);
    _ = &res;
    if (res != @as(UA_StatusCode, @bitCast(@as(c_int, 0)))) return res;
    return UA_Client_connect(client, endpointUrl);
}
pub extern fn UA_Client_startListeningForReverseConnect(client: ?*UA_Client, listenHostnames: [*c]const UA_String, listenHostnamesLength: usize, port: UA_UInt16) UA_StatusCode;
pub extern fn UA_Client_disconnect(client: ?*UA_Client) UA_StatusCode;
pub extern fn UA_Client_disconnectAsync(client: ?*UA_Client) UA_StatusCode;
pub extern fn UA_Client_disconnectSecureChannel(client: ?*UA_Client) UA_StatusCode;
pub extern fn UA_Client_disconnectSecureChannelAsync(client: ?*UA_Client) UA_StatusCode;
pub extern fn UA_Client_getSessionAuthenticationToken(client: ?*UA_Client, authenticationToken: [*c]UA_NodeId, serverNonce: [*c]UA_ByteString) UA_StatusCode;
pub extern fn UA_Client_activateCurrentSession(client: ?*UA_Client) UA_StatusCode;
pub extern fn UA_Client_activateCurrentSessionAsync(client: ?*UA_Client) UA_StatusCode;
pub extern fn UA_Client_activateSession(client: ?*UA_Client, authenticationToken: UA_NodeId, serverNonce: UA_ByteString) UA_StatusCode;
pub extern fn UA_Client_activateSessionAsync(client: ?*UA_Client, authenticationToken: UA_NodeId, serverNonce: UA_ByteString) UA_StatusCode;
pub extern fn UA_Client_getEndpoints(client: ?*UA_Client, serverUrl: [*c]const u8, endpointDescriptionsSize: [*c]usize, endpointDescriptions: [*c][*c]UA_EndpointDescription) UA_StatusCode;
pub extern fn UA_Client_findServers(client: ?*UA_Client, serverUrl: [*c]const u8, serverUrisSize: usize, serverUris: [*c]UA_String, localeIdsSize: usize, localeIds: [*c]UA_String, registeredServersSize: [*c]usize, registeredServers: [*c][*c]UA_ApplicationDescription) UA_StatusCode;
pub extern fn UA_Client_findServersOnNetwork(client: ?*UA_Client, serverUrl: [*c]const u8, startingRecordId: UA_UInt32, maxRecordsToReturn: UA_UInt32, serverCapabilityFilterSize: usize, serverCapabilityFilter: [*c]UA_String, serverOnNetworkSize: [*c]usize, serverOnNetwork: [*c][*c]UA_ServerOnNetwork) UA_StatusCode;
pub extern fn __UA_Client_Service(client: ?*UA_Client, request: ?*const anyopaque, requestType: ?*const UA_DataType, response: ?*anyopaque, responseType: ?*const UA_DataType) void;
// ./vendor/open62541.h:46599:21: warning: local variable has opaque type

// ./vendor/open62541.h:46598:1: warning: unable to translate function, demoted to extern
pub extern fn UA_Client_Service_read(arg_client: ?*UA_Client, request: UA_ReadRequest) callconv(.c) UA_ReadResponse;
// ./vendor/open62541.h:46607:22: warning: local variable has opaque type

// ./vendor/open62541.h:46606:1: warning: unable to translate function, demoted to extern
pub extern fn UA_Client_Service_write(arg_client: ?*UA_Client, request: UA_WriteRequest) callconv(.c) UA_WriteResponse;
// ./vendor/open62541.h:46619:28: warning: local variable has opaque type

// ./vendor/open62541.h:46617:1: warning: unable to translate function, demoted to extern
pub extern fn UA_Client_Service_historyRead(arg_client: ?*UA_Client, request: UA_HistoryReadRequest) callconv(.c) UA_HistoryReadResponse;
// ./vendor/open62541.h:46629:30: warning: local variable has opaque type

// ./vendor/open62541.h:46627:1: warning: unable to translate function, demoted to extern
pub extern fn UA_Client_Service_historyUpdate(arg_client: ?*UA_Client, request: UA_HistoryUpdateRequest) callconv(.c) UA_HistoryUpdateResponse;
// ./vendor/open62541.h:46642:21: warning: local variable has opaque type

// ./vendor/open62541.h:46640:1: warning: unable to translate function, demoted to extern
pub extern fn UA_Client_Service_call(arg_client: ?*UA_Client, request: UA_CallRequest) callconv(.c) UA_CallResponse;
// ./vendor/open62541.h:46655:25: warning: local variable has opaque type

// ./vendor/open62541.h:46653:1: warning: unable to translate function, demoted to extern
pub extern fn UA_Client_Service_addNodes(arg_client: ?*UA_Client, request: UA_AddNodesRequest) callconv(.c) UA_AddNodesResponse;
// ./vendor/open62541.h:46665:30: warning: local variable has opaque type

// ./vendor/open62541.h:46663:1: warning: unable to translate function, demoted to extern
pub extern fn UA_Client_Service_addReferences(arg_client: ?*UA_Client, request: UA_AddReferencesRequest) callconv(.c) UA_AddReferencesResponse;
// ./vendor/open62541.h:46675:28: warning: local variable has opaque type

// ./vendor/open62541.h:46673:1: warning: unable to translate function, demoted to extern
pub extern fn UA_Client_Service_deleteNodes(arg_client: ?*UA_Client, request: UA_DeleteNodesRequest) callconv(.c) UA_DeleteNodesResponse;
// ./vendor/open62541.h:46685:33: warning: local variable has opaque type

// ./vendor/open62541.h:46683:1: warning: unable to translate function, demoted to extern
pub extern fn UA_Client_Service_deleteReferences(arg_client: ?*UA_Client, request: UA_DeleteReferencesRequest) callconv(.c) UA_DeleteReferencesResponse;
// ./vendor/open62541.h:46698:23: warning: local variable has opaque type

// ./vendor/open62541.h:46696:1: warning: unable to translate function, demoted to extern
pub extern fn UA_Client_Service_browse(arg_client: ?*UA_Client, request: UA_BrowseRequest) callconv(.c) UA_BrowseResponse;
// ./vendor/open62541.h:46708:27: warning: local variable has opaque type

// ./vendor/open62541.h:46706:1: warning: unable to translate function, demoted to extern
pub extern fn UA_Client_Service_browseNext(arg_client: ?*UA_Client, request: UA_BrowseNextRequest) callconv(.c) UA_BrowseNextResponse;
// ./vendor/open62541.h:46719:46: warning: local variable has opaque type

// ./vendor/open62541.h:46716:1: warning: unable to translate function, demoted to extern
pub extern fn UA_Client_Service_translateBrowsePathsToNodeIds(arg_client: ?*UA_Client, request: UA_TranslateBrowsePathsToNodeIdsRequest) callconv(.c) UA_TranslateBrowsePathsToNodeIdsResponse;
// ./vendor/open62541.h:46731:30: warning: local variable has opaque type

// ./vendor/open62541.h:46729:1: warning: unable to translate function, demoted to extern
pub extern fn UA_Client_Service_registerNodes(arg_client: ?*UA_Client, request: UA_RegisterNodesRequest) callconv(.c) UA_RegisterNodesResponse;
// ./vendor/open62541.h:46741:32: warning: local variable has opaque type

// ./vendor/open62541.h:46739:1: warning: unable to translate function, demoted to extern
pub extern fn UA_Client_Service_unregisterNodes(arg_client: ?*UA_Client, request: UA_UnregisterNodesRequest) callconv(.c) UA_UnregisterNodesResponse;
pub const UA_ClientAsyncServiceCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, ?*anyopaque) callconv(.c) void;
pub extern fn __UA_Client_AsyncService(client: ?*UA_Client, request: ?*const anyopaque, requestType: ?*const UA_DataType, callback: UA_ClientAsyncServiceCallback, responseType: ?*const UA_DataType, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub extern fn UA_Client_cancelByRequestHandle(client: ?*UA_Client, requestHandle: UA_UInt32, cancelCount: [*c]UA_UInt32) UA_StatusCode;
pub extern fn UA_Client_cancelByRequestId(client: ?*UA_Client, requestId: UA_UInt32, cancelCount: [*c]UA_UInt32) UA_StatusCode;
pub extern fn UA_Client_modifyAsyncCallback(client: ?*UA_Client, requestId: UA_UInt32, userdata: ?*anyopaque, callback: UA_ClientAsyncServiceCallback) UA_StatusCode;
pub extern fn UA_Client_run_iterate(client: ?*UA_Client, timeout: UA_UInt32) UA_StatusCode;
pub extern fn UA_Client_renewSecureChannel(client: ?*UA_Client) UA_StatusCode;
pub const UA_ClientCallback = ?*const fn (?*UA_Client, ?*anyopaque) callconv(.c) void;
pub extern fn UA_Client_addTimedCallback(client: ?*UA_Client, callback: UA_ClientCallback, data: ?*anyopaque, date: UA_DateTime, callbackId: [*c]UA_UInt64) UA_StatusCode;
pub extern fn UA_Client_addRepeatedCallback(client: ?*UA_Client, callback: UA_ClientCallback, data: ?*anyopaque, interval_ms: UA_Double, callbackId: [*c]UA_UInt64) UA_StatusCode;
pub extern fn UA_Client_changeRepeatedCallbackInterval(client: ?*UA_Client, callbackId: UA_UInt64, interval_ms: UA_Double) UA_StatusCode;
pub extern fn UA_Client_removeCallback(client: ?*UA_Client, callbackId: UA_UInt64) void;
pub extern fn UA_Client_findDataType(client: ?*UA_Client, typeId: [*c]const UA_NodeId) ?*const UA_DataType;
pub extern fn UA_ServerConfig_clean(config: [*c]UA_ServerConfig) void;
pub extern fn UA_Server_new() ?*UA_Server;
pub extern fn UA_Server_newWithConfig(config: [*c]UA_ServerConfig) ?*UA_Server;
pub extern fn UA_Server_delete(server: ?*UA_Server) UA_StatusCode;
pub extern fn UA_Server_getConfig(server: ?*UA_Server) [*c]UA_ServerConfig;
pub extern fn UA_Server_getLifecycleState(server: ?*UA_Server) UA_LifecycleState;
pub extern fn UA_Server_run(server: ?*UA_Server, running: [*c]const volatile UA_Boolean) UA_StatusCode;
pub extern fn UA_Server_runUntilInterrupt(server: ?*UA_Server) UA_StatusCode;
pub extern fn UA_Server_run_startup(server: ?*UA_Server) UA_StatusCode;
pub extern fn UA_Server_run_iterate(server: ?*UA_Server, waitInternal: UA_Boolean) UA_UInt16;
pub extern fn UA_Server_run_shutdown(server: ?*UA_Server) UA_StatusCode;
pub extern fn UA_Server_addTimedCallback(server: ?*UA_Server, callback: UA_ServerCallback, data: ?*anyopaque, date: UA_DateTime, callbackId: [*c]UA_UInt64) UA_StatusCode;
pub extern fn UA_Server_addRepeatedCallback(server: ?*UA_Server, callback: UA_ServerCallback, data: ?*anyopaque, interval_ms: UA_Double, callbackId: [*c]UA_UInt64) UA_StatusCode;
pub extern fn UA_Server_changeRepeatedCallbackInterval(server: ?*UA_Server, callbackId: UA_UInt64, interval_ms: UA_Double) UA_StatusCode;
pub extern fn UA_Server_removeCallback(server: ?*UA_Server, callbackId: UA_UInt64) void;
pub extern fn UA_Server_closeSession(server: ?*UA_Server, sessionId: [*c]const UA_NodeId) UA_StatusCode;
pub extern fn UA_Server_getSessionAttribute(server: ?*UA_Server, sessionId: [*c]const UA_NodeId, key: UA_QualifiedName, outValue: [*c]UA_Variant) UA_StatusCode;
pub extern fn UA_Server_getSessionAttributeCopy(server: ?*UA_Server, sessionId: [*c]const UA_NodeId, key: UA_QualifiedName, outValue: [*c]UA_Variant) UA_StatusCode;
pub extern fn UA_Server_getSessionAttribute_scalar(server: ?*UA_Server, sessionId: [*c]const UA_NodeId, key: UA_QualifiedName, @"type": ?*const UA_DataType, outValue: ?*anyopaque) UA_StatusCode;
pub extern fn UA_Server_setSessionAttribute(server: ?*UA_Server, sessionId: [*c]const UA_NodeId, key: UA_QualifiedName, value: [*c]const UA_Variant) UA_StatusCode;
pub extern fn UA_Server_deleteSessionAttribute(server: ?*UA_Server, sessionId: [*c]const UA_NodeId, key: UA_QualifiedName) UA_StatusCode;
pub extern fn UA_Server_read(server: ?*UA_Server, item: [*c]const UA_ReadValueId, timestamps: UA_TimestampsToReturn) UA_DataValue;
pub extern fn __UA_Server_read(server: ?*UA_Server, nodeId: [*c]const UA_NodeId, attributeId: UA_AttributeId, v: ?*anyopaque) UA_StatusCode;
pub fn UA_Server_readNodeId(arg_server: ?*UA_Server, nodeId: UA_NodeId, arg_outNodeId: [*c]UA_NodeId) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    var outNodeId = arg_outNodeId;
    _ = &outNodeId;
    return __UA_Server_read(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_NODEID)), @as(?*anyopaque, @ptrCast(outNodeId)));
}
pub fn UA_Server_readNodeClass(arg_server: ?*UA_Server, nodeId: UA_NodeId, arg_outNodeClass: [*c]UA_NodeClass) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    var outNodeClass = arg_outNodeClass;
    _ = &outNodeClass;
    return __UA_Server_read(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_NODECLASS)), @as(?*anyopaque, @ptrCast(outNodeClass)));
}
pub fn UA_Server_readBrowseName(arg_server: ?*UA_Server, nodeId: UA_NodeId, arg_outBrowseName: [*c]UA_QualifiedName) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    var outBrowseName = arg_outBrowseName;
    _ = &outBrowseName;
    return __UA_Server_read(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_BROWSENAME)), @as(?*anyopaque, @ptrCast(outBrowseName)));
}
pub fn UA_Server_readDisplayName(arg_server: ?*UA_Server, nodeId: UA_NodeId, arg_outDisplayName: [*c]UA_LocalizedText) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    var outDisplayName = arg_outDisplayName;
    _ = &outDisplayName;
    return __UA_Server_read(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_DISPLAYNAME)), @as(?*anyopaque, @ptrCast(outDisplayName)));
}
pub fn UA_Server_readDescription(arg_server: ?*UA_Server, nodeId: UA_NodeId, arg_outDescription: [*c]UA_LocalizedText) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    var outDescription = arg_outDescription;
    _ = &outDescription;
    return __UA_Server_read(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_DESCRIPTION)), @as(?*anyopaque, @ptrCast(outDescription)));
}
pub fn UA_Server_readWriteMask(arg_server: ?*UA_Server, nodeId: UA_NodeId, arg_outWriteMask: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    var outWriteMask = arg_outWriteMask;
    _ = &outWriteMask;
    return __UA_Server_read(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_WRITEMASK)), @as(?*anyopaque, @ptrCast(outWriteMask)));
}
pub fn UA_Server_readIsAbstract(arg_server: ?*UA_Server, nodeId: UA_NodeId, arg_outIsAbstract: [*c]UA_Boolean) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    var outIsAbstract = arg_outIsAbstract;
    _ = &outIsAbstract;
    return __UA_Server_read(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_ISABSTRACT)), @as(?*anyopaque, @ptrCast(outIsAbstract)));
}
pub fn UA_Server_readSymmetric(arg_server: ?*UA_Server, nodeId: UA_NodeId, arg_outSymmetric: [*c]UA_Boolean) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    var outSymmetric = arg_outSymmetric;
    _ = &outSymmetric;
    return __UA_Server_read(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_SYMMETRIC)), @as(?*anyopaque, @ptrCast(outSymmetric)));
}
pub fn UA_Server_readInverseName(arg_server: ?*UA_Server, nodeId: UA_NodeId, arg_outInverseName: [*c]UA_LocalizedText) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    var outInverseName = arg_outInverseName;
    _ = &outInverseName;
    return __UA_Server_read(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_INVERSENAME)), @as(?*anyopaque, @ptrCast(outInverseName)));
}
pub fn UA_Server_readContainsNoLoops(arg_server: ?*UA_Server, nodeId: UA_NodeId, arg_outContainsNoLoops: [*c]UA_Boolean) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    var outContainsNoLoops = arg_outContainsNoLoops;
    _ = &outContainsNoLoops;
    return __UA_Server_read(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_CONTAINSNOLOOPS)), @as(?*anyopaque, @ptrCast(outContainsNoLoops)));
}
pub fn UA_Server_readEventNotifier(arg_server: ?*UA_Server, nodeId: UA_NodeId, arg_outEventNotifier: [*c]UA_Byte) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    var outEventNotifier = arg_outEventNotifier;
    _ = &outEventNotifier;
    return __UA_Server_read(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_EVENTNOTIFIER)), @as(?*anyopaque, @ptrCast(outEventNotifier)));
}
pub fn UA_Server_readValue(arg_server: ?*UA_Server, nodeId: UA_NodeId, arg_outValue: [*c]UA_Variant) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    var outValue = arg_outValue;
    _ = &outValue;
    return __UA_Server_read(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_VALUE)), @as(?*anyopaque, @ptrCast(outValue)));
}
pub fn UA_Server_readDataType(arg_server: ?*UA_Server, nodeId: UA_NodeId, arg_outDataType: [*c]UA_NodeId) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    var outDataType = arg_outDataType;
    _ = &outDataType;
    return __UA_Server_read(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_DATATYPE)), @as(?*anyopaque, @ptrCast(outDataType)));
}
pub fn UA_Server_readValueRank(arg_server: ?*UA_Server, nodeId: UA_NodeId, arg_outValueRank: [*c]UA_Int32) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    var outValueRank = arg_outValueRank;
    _ = &outValueRank;
    return __UA_Server_read(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_VALUERANK)), @as(?*anyopaque, @ptrCast(outValueRank)));
}
pub fn UA_Server_readArrayDimensions(arg_server: ?*UA_Server, nodeId: UA_NodeId, arg_outArrayDimensions: [*c]UA_Variant) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    var outArrayDimensions = arg_outArrayDimensions;
    _ = &outArrayDimensions;
    return __UA_Server_read(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_ARRAYDIMENSIONS)), @as(?*anyopaque, @ptrCast(outArrayDimensions)));
}
pub fn UA_Server_readAccessLevel(arg_server: ?*UA_Server, nodeId: UA_NodeId, arg_outAccessLevel: [*c]UA_Byte) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    var outAccessLevel = arg_outAccessLevel;
    _ = &outAccessLevel;
    return __UA_Server_read(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_ACCESSLEVEL)), @as(?*anyopaque, @ptrCast(outAccessLevel)));
}
pub fn UA_Server_readAccessLevelEx(arg_server: ?*UA_Server, nodeId: UA_NodeId, arg_outAccessLevelEx: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    var outAccessLevelEx = arg_outAccessLevelEx;
    _ = &outAccessLevelEx;
    return __UA_Server_read(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_ACCESSLEVELEX)), @as(?*anyopaque, @ptrCast(outAccessLevelEx)));
}
pub fn UA_Server_readMinimumSamplingInterval(arg_server: ?*UA_Server, nodeId: UA_NodeId, arg_outMinimumSamplingInterval: [*c]UA_Double) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    var outMinimumSamplingInterval = arg_outMinimumSamplingInterval;
    _ = &outMinimumSamplingInterval;
    return __UA_Server_read(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_MINIMUMSAMPLINGINTERVAL)), @as(?*anyopaque, @ptrCast(outMinimumSamplingInterval)));
}
pub fn UA_Server_readHistorizing(arg_server: ?*UA_Server, nodeId: UA_NodeId, arg_outHistorizing: [*c]UA_Boolean) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    var outHistorizing = arg_outHistorizing;
    _ = &outHistorizing;
    return __UA_Server_read(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_HISTORIZING)), @as(?*anyopaque, @ptrCast(outHistorizing)));
}
pub fn UA_Server_readExecutable(arg_server: ?*UA_Server, nodeId: UA_NodeId, arg_outExecutable: [*c]UA_Boolean) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    var outExecutable = arg_outExecutable;
    _ = &outExecutable;
    return __UA_Server_read(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_EXECUTABLE)), @as(?*anyopaque, @ptrCast(outExecutable)));
}
pub extern fn UA_Server_write(server: ?*UA_Server, value: ?*const UA_WriteValue) UA_StatusCode;
pub extern fn __UA_Server_write(server: ?*UA_Server, nodeId: [*c]const UA_NodeId, attributeId: UA_AttributeId, attr_type: ?*const UA_DataType, attr: ?*const anyopaque) UA_StatusCode;
pub fn UA_Server_writeBrowseName(arg_server: ?*UA_Server, nodeId: UA_NodeId, browseName: UA_QualifiedName) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    _ = &browseName;
    return __UA_Server_write(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_BROWSENAME)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 19)))], @as(?*const anyopaque, @ptrCast(&browseName)));
}
pub fn UA_Server_writeDisplayName(arg_server: ?*UA_Server, nodeId: UA_NodeId, displayName: UA_LocalizedText) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    _ = &displayName;
    return __UA_Server_write(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_DISPLAYNAME)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 20)))], @as(?*const anyopaque, @ptrCast(&displayName)));
}
pub fn UA_Server_writeDescription(arg_server: ?*UA_Server, nodeId: UA_NodeId, description: UA_LocalizedText) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    _ = &description;
    return __UA_Server_write(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_DESCRIPTION)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 20)))], @as(?*const anyopaque, @ptrCast(&description)));
}
pub fn UA_Server_writeWriteMask(arg_server: ?*UA_Server, nodeId: UA_NodeId, writeMask: UA_UInt32) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    _ = &writeMask;
    return __UA_Server_write(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_WRITEMASK)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 6)))], @as(?*const anyopaque, @ptrCast(&writeMask)));
}
pub fn UA_Server_writeIsAbstract(arg_server: ?*UA_Server, nodeId: UA_NodeId, isAbstract: UA_Boolean) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    _ = &isAbstract;
    return __UA_Server_write(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_ISABSTRACT)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))], @as(?*const anyopaque, @ptrCast(&isAbstract)));
}
pub fn UA_Server_writeInverseName(arg_server: ?*UA_Server, nodeId: UA_NodeId, inverseName: UA_LocalizedText) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    _ = &inverseName;
    return __UA_Server_write(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_INVERSENAME)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 20)))], @as(?*const anyopaque, @ptrCast(&inverseName)));
}
pub fn UA_Server_writeEventNotifier(arg_server: ?*UA_Server, nodeId: UA_NodeId, eventNotifier: UA_Byte) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    _ = &eventNotifier;
    return __UA_Server_write(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_EVENTNOTIFIER)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 2)))], @as(?*const anyopaque, @ptrCast(&eventNotifier)));
}
pub fn UA_Server_writeValue(arg_server: ?*UA_Server, nodeId: UA_NodeId, value: UA_Variant) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    _ = &value;
    return __UA_Server_write(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_VALUE)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 23)))], @as(?*const anyopaque, @ptrCast(&value)));
}
pub fn UA_Server_writeDataValue(arg_server: ?*UA_Server, nodeId: UA_NodeId, value: UA_DataValue) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    _ = &value;
    return __UA_Server_write(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_VALUE)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 22)))], @as(?*const anyopaque, @ptrCast(&value)));
}
pub fn UA_Server_writeDataType(arg_server: ?*UA_Server, nodeId: UA_NodeId, dataType: UA_NodeId) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    _ = &dataType;
    return __UA_Server_write(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_DATATYPE)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 16)))], @as(?*const anyopaque, @ptrCast(&dataType)));
}
pub fn UA_Server_writeValueRank(arg_server: ?*UA_Server, nodeId: UA_NodeId, valueRank: UA_Int32) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    _ = &valueRank;
    return __UA_Server_write(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_VALUERANK)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 5)))], @as(?*const anyopaque, @ptrCast(&valueRank)));
}
pub fn UA_Server_writeArrayDimensions(arg_server: ?*UA_Server, nodeId: UA_NodeId, arrayDimensions: UA_Variant) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    _ = &arrayDimensions;
    return __UA_Server_write(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_ARRAYDIMENSIONS)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 23)))], @as(?*const anyopaque, @ptrCast(&arrayDimensions)));
}
pub fn UA_Server_writeAccessLevel(arg_server: ?*UA_Server, nodeId: UA_NodeId, accessLevel: UA_Byte) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    _ = &accessLevel;
    return __UA_Server_write(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_ACCESSLEVEL)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 2)))], @as(?*const anyopaque, @ptrCast(&accessLevel)));
}
pub fn UA_Server_writeAccessLevelEx(arg_server: ?*UA_Server, nodeId: UA_NodeId, accessLevelEx: UA_UInt32) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    _ = &accessLevelEx;
    return __UA_Server_write(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_ACCESSLEVELEX)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 6)))], @as(?*const anyopaque, @ptrCast(&accessLevelEx)));
}
pub fn UA_Server_writeMinimumSamplingInterval(arg_server: ?*UA_Server, nodeId: UA_NodeId, miniumSamplingInterval: UA_Double) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    _ = &miniumSamplingInterval;
    return __UA_Server_write(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_MINIMUMSAMPLINGINTERVAL)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 10)))], @as(?*const anyopaque, @ptrCast(&miniumSamplingInterval)));
}
pub fn UA_Server_writeHistorizing(arg_server: ?*UA_Server, nodeId: UA_NodeId, historizing: UA_Boolean) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    _ = &historizing;
    return __UA_Server_write(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_HISTORIZING)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))], @as(?*const anyopaque, @ptrCast(&historizing)));
}
pub fn UA_Server_writeExecutable(arg_server: ?*UA_Server, nodeId: UA_NodeId, executable: UA_Boolean) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &nodeId;
    _ = &executable;
    return __UA_Server_write(server, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_EXECUTABLE)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))], @as(?*const anyopaque, @ptrCast(&executable)));
}
pub extern fn UA_Server_browse(server: ?*UA_Server, maxReferences: UA_UInt32, bd: [*c]const UA_BrowseDescription) UA_BrowseResult;
pub extern fn UA_Server_browseNext(server: ?*UA_Server, releaseContinuationPoint: UA_Boolean, continuationPoint: [*c]const UA_ByteString) UA_BrowseResult;
pub extern fn UA_Server_browseRecursive(server: ?*UA_Server, bd: [*c]const UA_BrowseDescription, resultsSize: [*c]usize, results: [*c][*c]UA_ExpandedNodeId) UA_StatusCode;
pub extern fn UA_Server_translateBrowsePathToNodeIds(server: ?*UA_Server, browsePath: [*c]const UA_BrowsePath) UA_BrowsePathResult;
pub extern fn UA_Server_browseSimplifiedBrowsePath(server: ?*UA_Server, origin: UA_NodeId, browsePathSize: usize, browsePath: [*c]const UA_QualifiedName) UA_BrowsePathResult;
pub const UA_NodeIteratorCallback = ?*const fn (UA_NodeId, UA_Boolean, UA_NodeId, ?*anyopaque) callconv(.c) UA_StatusCode;
pub extern fn UA_Server_forEachChildNodeCall(server: ?*UA_Server, parentNodeId: UA_NodeId, callback: UA_NodeIteratorCallback, handle: ?*anyopaque) UA_StatusCode;
pub extern fn UA_Server_registerDiscovery(server: ?*UA_Server, cc: [*c]UA_ClientConfig, discoveryServerUrl: UA_String, semaphoreFilePath: UA_String) UA_StatusCode;
pub extern fn UA_Server_deregisterDiscovery(server: ?*UA_Server, cc: [*c]UA_ClientConfig, discoveryServerUrl: UA_String) UA_StatusCode;
pub const UA_Server_registerServerCallback = ?*const fn ([*c]const UA_RegisteredServer, ?*anyopaque) callconv(.c) void;
pub extern fn UA_Server_setRegisterServerCallback(server: ?*UA_Server, cb: UA_Server_registerServerCallback, data: ?*anyopaque) void;
pub extern fn UA_Server_setAdminSessionContext(server: ?*UA_Server, context: ?*anyopaque) void;
pub extern fn UA_Server_setNodeTypeLifecycle(server: ?*UA_Server, nodeId: UA_NodeId, lifecycle: UA_NodeTypeLifecycle) UA_StatusCode;
pub extern fn UA_Server_getNodeContext(server: ?*UA_Server, nodeId: UA_NodeId, nodeContext: [*c]?*anyopaque) UA_StatusCode;
pub extern fn UA_Server_setNodeContext(server: ?*UA_Server, nodeId: UA_NodeId, nodeContext: ?*anyopaque) UA_StatusCode;
pub extern fn UA_Server_setVariableNode_dataSource(server: ?*UA_Server, nodeId: UA_NodeId, dataSource: UA_DataSource) UA_StatusCode;
pub extern fn UA_Server_setVariableNode_valueCallback(server: ?*UA_Server, nodeId: UA_NodeId, callback: UA_ValueCallback) UA_StatusCode;
pub extern fn UA_Server_setVariableNode_valueBackend(server: ?*UA_Server, nodeId: UA_NodeId, valueBackend: UA_ValueBackend) UA_StatusCode;
pub const UA_Server_DataChangeNotificationCallback = ?*const fn (?*UA_Server, UA_UInt32, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, UA_UInt32, ?*const UA_DataValue) callconv(.c) void;
pub const UA_Server_EventNotificationCallback = ?*const fn (?*UA_Server, UA_UInt32, ?*anyopaque, usize, [*c]const UA_Variant) callconv(.c) void;
pub extern fn UA_Server_createDataChangeMonitoredItem(server: ?*UA_Server, timestampsToReturn: UA_TimestampsToReturn, item: UA_MonitoredItemCreateRequest, monitoredItemContext: ?*anyopaque, callback: UA_Server_DataChangeNotificationCallback) UA_MonitoredItemCreateResult;
pub extern fn UA_Server_deleteMonitoredItem(server: ?*UA_Server, monitoredItemId: UA_UInt32) UA_StatusCode;
pub extern fn UA_Server_setMethodNodeCallback(server: ?*UA_Server, methodNodeId: UA_NodeId, methodCallback: UA_MethodCallback) UA_StatusCode;
pub extern fn UA_Server_getMethodNodeCallback(server: ?*UA_Server, methodNodeId: UA_NodeId, outMethodCallback: [*c]UA_MethodCallback) UA_StatusCode;
pub extern fn UA_Server_call(server: ?*UA_Server, request: [*c]const UA_CallMethodRequest) UA_CallMethodResult;
pub extern fn UA_Server_writeObjectProperty(server: ?*UA_Server, objectId: UA_NodeId, propertyName: UA_QualifiedName, value: UA_Variant) UA_StatusCode;
pub extern fn UA_Server_writeObjectProperty_scalar(server: ?*UA_Server, objectId: UA_NodeId, propertyName: UA_QualifiedName, value: ?*const anyopaque, @"type": ?*const UA_DataType) UA_StatusCode;
pub extern fn UA_Server_readObjectProperty(server: ?*UA_Server, objectId: UA_NodeId, propertyName: UA_QualifiedName, value: [*c]UA_Variant) UA_StatusCode;
pub extern fn __UA_Server_addNode(server: ?*UA_Server, nodeClass: UA_NodeClass, requestedNewNodeId: [*c]const UA_NodeId, parentNodeId: [*c]const UA_NodeId, referenceTypeId: [*c]const UA_NodeId, browseName: UA_QualifiedName, typeDefinition: [*c]const UA_NodeId, attr: [*c]const UA_NodeAttributes, attributeType: ?*const UA_DataType, nodeContext: ?*anyopaque, outNewNodeId: [*c]UA_NodeId) UA_StatusCode;
pub fn UA_Server_addVariableNode(arg_server: ?*UA_Server, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, typeDefinition: UA_NodeId, attr: UA_VariableAttributes, arg_nodeContext: ?*anyopaque, arg_outNewNodeId: [*c]UA_NodeId) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &requestedNewNodeId;
    _ = &parentNodeId;
    _ = &referenceTypeId;
    _ = &browseName;
    _ = &typeDefinition;
    _ = &attr;
    var nodeContext = arg_nodeContext;
    _ = &nodeContext;
    var outNewNodeId = arg_outNewNodeId;
    _ = &outNewNodeId;
    return __UA_Server_addNode(server, @as(c_uint, @bitCast(UA_NODECLASS_VARIABLE)), &requestedNewNodeId, &parentNodeId, &referenceTypeId, browseName, &typeDefinition, @as([*c]const UA_NodeAttributes, @ptrCast(@alignCast(&attr))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 194)))], nodeContext, outNewNodeId);
}
pub fn UA_Server_addVariableTypeNode(arg_server: ?*UA_Server, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, typeDefinition: UA_NodeId, attr: UA_VariableTypeAttributes, arg_nodeContext: ?*anyopaque, arg_outNewNodeId: [*c]UA_NodeId) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &requestedNewNodeId;
    _ = &parentNodeId;
    _ = &referenceTypeId;
    _ = &browseName;
    _ = &typeDefinition;
    _ = &attr;
    var nodeContext = arg_nodeContext;
    _ = &nodeContext;
    var outNewNodeId = arg_outNewNodeId;
    _ = &outNewNodeId;
    return __UA_Server_addNode(server, @as(c_uint, @bitCast(UA_NODECLASS_VARIABLETYPE)), &requestedNewNodeId, &parentNodeId, &referenceTypeId, browseName, &typeDefinition, @as([*c]const UA_NodeAttributes, @ptrCast(@alignCast(&attr))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 197)))], nodeContext, outNewNodeId);
}
pub fn UA_Server_addObjectNode(arg_server: ?*UA_Server, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, typeDefinition: UA_NodeId, attr: UA_ObjectAttributes, arg_nodeContext: ?*anyopaque, arg_outNewNodeId: [*c]UA_NodeId) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &requestedNewNodeId;
    _ = &parentNodeId;
    _ = &referenceTypeId;
    _ = &browseName;
    _ = &typeDefinition;
    _ = &attr;
    var nodeContext = arg_nodeContext;
    _ = &nodeContext;
    var outNewNodeId = arg_outNewNodeId;
    _ = &outNewNodeId;
    return __UA_Server_addNode(server, @as(c_uint, @bitCast(UA_NODECLASS_OBJECT)), &requestedNewNodeId, &parentNodeId, &referenceTypeId, browseName, &typeDefinition, @as([*c]const UA_NodeAttributes, @ptrCast(@alignCast(&attr))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 193)))], nodeContext, outNewNodeId);
}
pub fn UA_Server_addObjectTypeNode(arg_server: ?*UA_Server, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, attr: UA_ObjectTypeAttributes, arg_nodeContext: ?*anyopaque, arg_outNewNodeId: [*c]UA_NodeId) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &requestedNewNodeId;
    _ = &parentNodeId;
    _ = &referenceTypeId;
    _ = &browseName;
    _ = &attr;
    var nodeContext = arg_nodeContext;
    _ = &nodeContext;
    var outNewNodeId = arg_outNewNodeId;
    _ = &outNewNodeId;
    return __UA_Server_addNode(server, @as(c_uint, @bitCast(UA_NODECLASS_OBJECTTYPE)), &requestedNewNodeId, &parentNodeId, &referenceTypeId, browseName, &UA_NODEID_NULL, @as([*c]const UA_NodeAttributes, @ptrCast(@alignCast(&attr))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 196)))], nodeContext, outNewNodeId);
}
pub fn UA_Server_addViewNode(arg_server: ?*UA_Server, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, attr: UA_ViewAttributes, arg_nodeContext: ?*anyopaque, arg_outNewNodeId: [*c]UA_NodeId) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &requestedNewNodeId;
    _ = &parentNodeId;
    _ = &referenceTypeId;
    _ = &browseName;
    _ = &attr;
    var nodeContext = arg_nodeContext;
    _ = &nodeContext;
    var outNewNodeId = arg_outNewNodeId;
    _ = &outNewNodeId;
    return __UA_Server_addNode(server, @as(c_uint, @bitCast(UA_NODECLASS_VIEW)), &requestedNewNodeId, &parentNodeId, &referenceTypeId, browseName, &UA_NODEID_NULL, @as([*c]const UA_NodeAttributes, @ptrCast(@alignCast(&attr))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 200)))], nodeContext, outNewNodeId);
}
pub fn UA_Server_addReferenceTypeNode(arg_server: ?*UA_Server, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, attr: UA_ReferenceTypeAttributes, arg_nodeContext: ?*anyopaque, arg_outNewNodeId: [*c]UA_NodeId) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &requestedNewNodeId;
    _ = &parentNodeId;
    _ = &referenceTypeId;
    _ = &browseName;
    _ = &attr;
    var nodeContext = arg_nodeContext;
    _ = &nodeContext;
    var outNewNodeId = arg_outNewNodeId;
    _ = &outNewNodeId;
    return __UA_Server_addNode(server, @as(c_uint, @bitCast(UA_NODECLASS_REFERENCETYPE)), &requestedNewNodeId, &parentNodeId, &referenceTypeId, browseName, &UA_NODEID_NULL, @as([*c]const UA_NodeAttributes, @ptrCast(@alignCast(&attr))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 198)))], nodeContext, outNewNodeId);
}
pub fn UA_Server_addDataTypeNode(arg_server: ?*UA_Server, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, attr: UA_DataTypeAttributes, arg_nodeContext: ?*anyopaque, arg_outNewNodeId: [*c]UA_NodeId) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &requestedNewNodeId;
    _ = &parentNodeId;
    _ = &referenceTypeId;
    _ = &browseName;
    _ = &attr;
    var nodeContext = arg_nodeContext;
    _ = &nodeContext;
    var outNewNodeId = arg_outNewNodeId;
    _ = &outNewNodeId;
    return __UA_Server_addNode(server, @as(c_uint, @bitCast(UA_NODECLASS_DATATYPE)), &requestedNewNodeId, &parentNodeId, &referenceTypeId, browseName, &UA_NODEID_NULL, @as([*c]const UA_NodeAttributes, @ptrCast(@alignCast(&attr))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 199)))], nodeContext, outNewNodeId);
}
pub extern fn UA_Server_addDataSourceVariableNode(server: ?*UA_Server, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, typeDefinition: UA_NodeId, attr: UA_VariableAttributes, dataSource: UA_DataSource, nodeContext: ?*anyopaque, outNewNodeId: [*c]UA_NodeId) UA_StatusCode;
pub extern fn UA_Server_setVariableNodeDynamic(server: ?*UA_Server, nodeId: UA_NodeId, isDynamic: UA_Boolean) UA_StatusCode;
pub extern fn UA_Server_addMethodNodeEx(server: ?*UA_Server, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, attr: UA_MethodAttributes, method: UA_MethodCallback, inputArgumentsSize: usize, inputArguments: [*c]const UA_Argument, inputArgumentsRequestedNewNodeId: UA_NodeId, inputArgumentsOutNewNodeId: [*c]UA_NodeId, outputArgumentsSize: usize, outputArguments: [*c]const UA_Argument, outputArgumentsRequestedNewNodeId: UA_NodeId, outputArgumentsOutNewNodeId: [*c]UA_NodeId, nodeContext: ?*anyopaque, outNewNodeId: [*c]UA_NodeId) UA_StatusCode;
pub fn UA_Server_addMethodNode(arg_server: ?*UA_Server, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, attr: UA_MethodAttributes, arg_method: UA_MethodCallback, arg_inputArgumentsSize: usize, arg_inputArguments: [*c]const UA_Argument, arg_outputArgumentsSize: usize, arg_outputArguments: [*c]const UA_Argument, arg_nodeContext: ?*anyopaque, arg_outNewNodeId: [*c]UA_NodeId) callconv(.c) UA_StatusCode {
    var server = arg_server;
    _ = &server;
    _ = &requestedNewNodeId;
    _ = &parentNodeId;
    _ = &referenceTypeId;
    _ = &browseName;
    _ = &attr;
    var method = arg_method;
    _ = &method;
    var inputArgumentsSize = arg_inputArgumentsSize;
    _ = &inputArgumentsSize;
    var inputArguments = arg_inputArguments;
    _ = &inputArguments;
    var outputArgumentsSize = arg_outputArgumentsSize;
    _ = &outputArgumentsSize;
    var outputArguments = arg_outputArguments;
    _ = &outputArguments;
    var nodeContext = arg_nodeContext;
    _ = &nodeContext;
    var outNewNodeId = arg_outNewNodeId;
    _ = &outNewNodeId;
    return UA_Server_addMethodNodeEx(server, requestedNewNodeId, parentNodeId, referenceTypeId, browseName, attr, method, inputArgumentsSize, inputArguments, UA_NODEID_NULL, null, outputArgumentsSize, outputArguments, UA_NODEID_NULL, null, nodeContext, outNewNodeId);
}
pub extern fn UA_Server_addNode_begin(server: ?*UA_Server, nodeClass: UA_NodeClass, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, typeDefinition: UA_NodeId, attr: ?*const anyopaque, attributeType: ?*const UA_DataType, nodeContext: ?*anyopaque, outNewNodeId: [*c]UA_NodeId) UA_StatusCode;
pub extern fn UA_Server_addNode_finish(server: ?*UA_Server, nodeId: UA_NodeId) UA_StatusCode;
pub extern fn UA_Server_addMethodNode_finish(server: ?*UA_Server, nodeId: UA_NodeId, method: UA_MethodCallback, inputArgumentsSize: usize, inputArguments: [*c]const UA_Argument, outputArgumentsSize: usize, outputArguments: [*c]const UA_Argument) UA_StatusCode;
pub extern fn UA_Server_deleteNode(server: ?*UA_Server, nodeId: UA_NodeId, deleteReferences: UA_Boolean) UA_StatusCode;
pub extern fn UA_Server_addReference(server: ?*UA_Server, sourceId: UA_NodeId, refTypeId: UA_NodeId, targetId: UA_ExpandedNodeId, isForward: UA_Boolean) UA_StatusCode;
pub extern fn UA_Server_deleteReference(server: ?*UA_Server, sourceNodeId: UA_NodeId, referenceTypeId: UA_NodeId, isForward: UA_Boolean, targetNodeId: UA_ExpandedNodeId, deleteBidirectional: UA_Boolean) UA_StatusCode;
pub extern fn UA_Server_createEvent(server: ?*UA_Server, eventType: UA_NodeId, outNodeId: [*c]UA_NodeId) UA_StatusCode;
pub extern fn UA_Server_triggerEvent(server: ?*UA_Server, eventNodeId: UA_NodeId, originId: UA_NodeId, outEventId: [*c]UA_ByteString, deleteEventNode: UA_Boolean) UA_StatusCode;
pub extern fn UA_Server_updateCertificate(server: ?*UA_Server, oldCertificate: [*c]const UA_ByteString, newCertificate: [*c]const UA_ByteString, newPrivateKey: [*c]const UA_ByteString, closeSessions: UA_Boolean, closeSecureChannels: UA_Boolean) UA_StatusCode;
pub extern fn UA_Server_findDataType(server: ?*UA_Server, typeId: [*c]const UA_NodeId) ?*const UA_DataType;
pub extern fn UA_Server_addNamespace(server: ?*UA_Server, name: [*c]const u8) UA_UInt16;
pub extern fn UA_Server_getNamespaceByName(server: ?*UA_Server, namespaceUri: UA_String, foundIndex: [*c]usize) UA_StatusCode;
pub extern fn UA_Server_getNamespaceByIndex(server: ?*UA_Server, namespaceIndex: usize, foundUri: [*c]UA_String) UA_StatusCode;
pub extern fn UA_Server_setMethodNodeAsync(server: ?*UA_Server, id: UA_NodeId, isAsync: UA_Boolean) UA_StatusCode;
pub const UA_ASYNCOPERATIONTYPE_INVALID: c_int = 0;
pub const UA_ASYNCOPERATIONTYPE_CALL: c_int = 1;
pub const UA_AsyncOperationType = c_uint;
pub const UA_AsyncOperationRequest = extern union {
    callMethodRequest: UA_CallMethodRequest,
};
pub const UA_AsyncOperationResponse = extern union {
    callMethodResult: UA_CallMethodResult,
};
pub extern fn UA_Server_getAsyncOperationNonBlocking(server: ?*UA_Server, @"type": [*c]UA_AsyncOperationType, request: [*c][*c]const UA_AsyncOperationRequest, context: [*c]?*anyopaque, timeout: [*c]UA_DateTime) UA_Boolean;
pub extern fn UA_Server_setAsyncOperationResult(server: ?*UA_Server, response: [*c]const UA_AsyncOperationResponse, context: ?*anyopaque) void;
pub const UA_ServerStatistics = extern struct {
    scs: UA_SecureChannelStatistics = @import("std").mem.zeroes(UA_SecureChannelStatistics),
    ss: UA_SessionStatistics = @import("std").mem.zeroes(UA_SessionStatistics),
};
pub extern fn UA_Server_getStatistics(server: ?*UA_Server) UA_ServerStatistics;
pub const UA_Server_ReverseConnectStateCallback = ?*const fn (?*UA_Server, UA_UInt64, UA_SecureChannelState, ?*anyopaque) callconv(.c) void;
pub extern fn UA_Server_addReverseConnect(server: ?*UA_Server, url: UA_String, stateCallback: UA_Server_ReverseConnectStateCallback, callbackContext: ?*anyopaque, handle: [*c]UA_UInt64) UA_StatusCode;
pub extern fn UA_Server_removeReverseConnect(server: ?*UA_Server, handle: UA_UInt64) UA_StatusCode;
pub extern fn __UA_Client_readAttribute(client: ?*UA_Client, nodeId: [*c]const UA_NodeId, attributeId: UA_AttributeId, out: ?*anyopaque, outDataType: ?*const UA_DataType) UA_StatusCode;
pub fn UA_Client_readNodeIdAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_outNodeId: [*c]UA_NodeId) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var outNodeId = arg_outNodeId;
    _ = &outNodeId;
    return __UA_Client_readAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_NODEID)), @as(?*anyopaque, @ptrCast(outNodeId)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 16)))]);
}
pub fn UA_Client_readNodeClassAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_outNodeClass: [*c]UA_NodeClass) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var outNodeClass = arg_outNodeClass;
    _ = &outNodeClass;
    return __UA_Client_readAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_NODECLASS)), @as(?*anyopaque, @ptrCast(outNodeClass)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 116)))]);
}
pub fn UA_Client_readBrowseNameAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_outBrowseName: [*c]UA_QualifiedName) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var outBrowseName = arg_outBrowseName;
    _ = &outBrowseName;
    return __UA_Client_readAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_BROWSENAME)), @as(?*anyopaque, @ptrCast(outBrowseName)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 19)))]);
}
pub fn UA_Client_readDisplayNameAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_outDisplayName: [*c]UA_LocalizedText) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var outDisplayName = arg_outDisplayName;
    _ = &outDisplayName;
    return __UA_Client_readAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_DISPLAYNAME)), @as(?*anyopaque, @ptrCast(outDisplayName)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 20)))]);
}
pub fn UA_Client_readDescriptionAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_outDescription: [*c]UA_LocalizedText) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var outDescription = arg_outDescription;
    _ = &outDescription;
    return __UA_Client_readAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_DESCRIPTION)), @as(?*anyopaque, @ptrCast(outDescription)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 20)))]);
}
pub fn UA_Client_readWriteMaskAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_outWriteMask: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var outWriteMask = arg_outWriteMask;
    _ = &outWriteMask;
    return __UA_Client_readAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_WRITEMASK)), @as(?*anyopaque, @ptrCast(outWriteMask)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 6)))]);
}
pub fn UA_Client_readUserWriteMaskAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_outUserWriteMask: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var outUserWriteMask = arg_outUserWriteMask;
    _ = &outUserWriteMask;
    return __UA_Client_readAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_USERWRITEMASK)), @as(?*anyopaque, @ptrCast(outUserWriteMask)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 6)))]);
}
pub fn UA_Client_readIsAbstractAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_outIsAbstract: [*c]UA_Boolean) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var outIsAbstract = arg_outIsAbstract;
    _ = &outIsAbstract;
    return __UA_Client_readAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_ISABSTRACT)), @as(?*anyopaque, @ptrCast(outIsAbstract)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))]);
}
pub fn UA_Client_readSymmetricAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_outSymmetric: [*c]UA_Boolean) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var outSymmetric = arg_outSymmetric;
    _ = &outSymmetric;
    return __UA_Client_readAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_SYMMETRIC)), @as(?*anyopaque, @ptrCast(outSymmetric)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))]);
}
pub fn UA_Client_readInverseNameAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_outInverseName: [*c]UA_LocalizedText) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var outInverseName = arg_outInverseName;
    _ = &outInverseName;
    return __UA_Client_readAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_INVERSENAME)), @as(?*anyopaque, @ptrCast(outInverseName)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 20)))]);
}
pub fn UA_Client_readContainsNoLoopsAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_outContainsNoLoops: [*c]UA_Boolean) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var outContainsNoLoops = arg_outContainsNoLoops;
    _ = &outContainsNoLoops;
    return __UA_Client_readAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_CONTAINSNOLOOPS)), @as(?*anyopaque, @ptrCast(outContainsNoLoops)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))]);
}
pub fn UA_Client_readEventNotifierAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_outEventNotifier: [*c]UA_Byte) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var outEventNotifier = arg_outEventNotifier;
    _ = &outEventNotifier;
    return __UA_Client_readAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_EVENTNOTIFIER)), @as(?*anyopaque, @ptrCast(outEventNotifier)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 2)))]);
}
pub fn UA_Client_readValueAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_outValue: [*c]UA_Variant) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var outValue = arg_outValue;
    _ = &outValue;
    return __UA_Client_readAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_VALUE)), @as(?*anyopaque, @ptrCast(outValue)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 23)))]);
}
pub fn UA_Client_readDataTypeAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_outDataType: [*c]UA_NodeId) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var outDataType = arg_outDataType;
    _ = &outDataType;
    return __UA_Client_readAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_DATATYPE)), @as(?*anyopaque, @ptrCast(outDataType)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 16)))]);
}
pub fn UA_Client_readValueRankAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_outValueRank: [*c]UA_Int32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var outValueRank = arg_outValueRank;
    _ = &outValueRank;
    return __UA_Client_readAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_VALUERANK)), @as(?*anyopaque, @ptrCast(outValueRank)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 5)))]);
}
pub extern fn UA_Client_readArrayDimensionsAttribute(client: ?*UA_Client, nodeId: UA_NodeId, outArrayDimensionsSize: [*c]usize, outArrayDimensions: [*c][*c]UA_UInt32) UA_StatusCode;
pub fn UA_Client_readAccessLevelAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_outAccessLevel: [*c]UA_Byte) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var outAccessLevel = arg_outAccessLevel;
    _ = &outAccessLevel;
    return __UA_Client_readAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_ACCESSLEVEL)), @as(?*anyopaque, @ptrCast(outAccessLevel)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 2)))]);
}
pub fn UA_Client_readAccessLevelExAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_outAccessLevelEx: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var outAccessLevelEx = arg_outAccessLevelEx;
    _ = &outAccessLevelEx;
    return __UA_Client_readAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_ACCESSLEVELEX)), @as(?*anyopaque, @ptrCast(outAccessLevelEx)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 6)))]);
}
pub fn UA_Client_readUserAccessLevelAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_outUserAccessLevel: [*c]UA_Byte) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var outUserAccessLevel = arg_outUserAccessLevel;
    _ = &outUserAccessLevel;
    return __UA_Client_readAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_USERACCESSLEVEL)), @as(?*anyopaque, @ptrCast(outUserAccessLevel)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 2)))]);
}
pub fn UA_Client_readMinimumSamplingIntervalAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_outMinSamplingInterval: [*c]UA_Double) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var outMinSamplingInterval = arg_outMinSamplingInterval;
    _ = &outMinSamplingInterval;
    return __UA_Client_readAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_MINIMUMSAMPLINGINTERVAL)), @as(?*anyopaque, @ptrCast(outMinSamplingInterval)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 10)))]);
}
pub fn UA_Client_readHistorizingAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_outHistorizing: [*c]UA_Boolean) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var outHistorizing = arg_outHistorizing;
    _ = &outHistorizing;
    return __UA_Client_readAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_HISTORIZING)), @as(?*anyopaque, @ptrCast(outHistorizing)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))]);
}
pub fn UA_Client_readExecutableAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_outExecutable: [*c]UA_Boolean) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var outExecutable = arg_outExecutable;
    _ = &outExecutable;
    return __UA_Client_readAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_EXECUTABLE)), @as(?*anyopaque, @ptrCast(outExecutable)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))]);
}
pub fn UA_Client_readUserExecutableAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_outUserExecutable: [*c]UA_Boolean) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var outUserExecutable = arg_outUserExecutable;
    _ = &outUserExecutable;
    return __UA_Client_readAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_USEREXECUTABLE)), @as(?*anyopaque, @ptrCast(outUserExecutable)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))]);
}
pub const UA_HistoricalIteratorCallback = ?*const fn (?*UA_Client, [*c]const UA_NodeId, UA_Boolean, [*c]const UA_ExtensionObject, ?*anyopaque) callconv(.c) UA_Boolean;
pub extern fn UA_Client_HistoryRead_events(client: ?*UA_Client, nodeId: [*c]const UA_NodeId, callback: UA_HistoricalIteratorCallback, startTime: UA_DateTime, endTime: UA_DateTime, indexRange: UA_String, filter: UA_EventFilter, numValuesPerNode: UA_UInt32, timestampsToReturn: UA_TimestampsToReturn, callbackContext: ?*anyopaque) UA_StatusCode;
pub extern fn UA_Client_HistoryRead_raw(client: ?*UA_Client, nodeId: [*c]const UA_NodeId, callback: UA_HistoricalIteratorCallback, startTime: UA_DateTime, endTime: UA_DateTime, indexRange: UA_String, returnBounds: UA_Boolean, numValuesPerNode: UA_UInt32, timestampsToReturn: UA_TimestampsToReturn, callbackContext: ?*anyopaque) UA_StatusCode;
pub extern fn UA_Client_HistoryRead_modified(client: ?*UA_Client, nodeId: [*c]const UA_NodeId, callback: UA_HistoricalIteratorCallback, startTime: UA_DateTime, endTime: UA_DateTime, indexRange: UA_String, returnBounds: UA_Boolean, numValuesPerNode: UA_UInt32, timestampsToReturn: UA_TimestampsToReturn, callbackContext: ?*anyopaque) UA_StatusCode;
pub extern fn UA_Client_HistoryUpdate_insert(client: ?*UA_Client, nodeId: [*c]const UA_NodeId, value: ?*UA_DataValue) UA_StatusCode;
pub extern fn UA_Client_HistoryUpdate_replace(client: ?*UA_Client, nodeId: [*c]const UA_NodeId, value: ?*UA_DataValue) UA_StatusCode;
pub extern fn UA_Client_HistoryUpdate_update(client: ?*UA_Client, nodeId: [*c]const UA_NodeId, value: ?*UA_DataValue) UA_StatusCode;
pub extern fn UA_Client_HistoryUpdate_deleteRaw(client: ?*UA_Client, nodeId: [*c]const UA_NodeId, startTimestamp: UA_DateTime, endTimestamp: UA_DateTime) UA_StatusCode;
pub extern fn __UA_Client_writeAttribute(client: ?*UA_Client, nodeId: [*c]const UA_NodeId, attributeId: UA_AttributeId, in: ?*const anyopaque, inDataType: ?*const UA_DataType) UA_StatusCode;
pub fn UA_Client_writeNodeIdAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_newNodeId: [*c]const UA_NodeId) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var newNodeId = arg_newNodeId;
    _ = &newNodeId;
    return __UA_Client_writeAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_NODEID)), @as(?*const anyopaque, @ptrCast(newNodeId)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 16)))]);
}
pub fn UA_Client_writeNodeClassAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_newNodeClass: [*c]const UA_NodeClass) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var newNodeClass = arg_newNodeClass;
    _ = &newNodeClass;
    return __UA_Client_writeAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_NODECLASS)), @as(?*const anyopaque, @ptrCast(newNodeClass)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 116)))]);
}
pub fn UA_Client_writeBrowseNameAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_newBrowseName: [*c]const UA_QualifiedName) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var newBrowseName = arg_newBrowseName;
    _ = &newBrowseName;
    return __UA_Client_writeAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_BROWSENAME)), @as(?*const anyopaque, @ptrCast(newBrowseName)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 19)))]);
}
pub fn UA_Client_writeDisplayNameAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_newDisplayName: [*c]const UA_LocalizedText) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var newDisplayName = arg_newDisplayName;
    _ = &newDisplayName;
    return __UA_Client_writeAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_DISPLAYNAME)), @as(?*const anyopaque, @ptrCast(newDisplayName)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 20)))]);
}
pub fn UA_Client_writeDescriptionAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_newDescription: [*c]const UA_LocalizedText) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var newDescription = arg_newDescription;
    _ = &newDescription;
    return __UA_Client_writeAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_DESCRIPTION)), @as(?*const anyopaque, @ptrCast(newDescription)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 20)))]);
}
pub fn UA_Client_writeWriteMaskAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_newWriteMask: [*c]const UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var newWriteMask = arg_newWriteMask;
    _ = &newWriteMask;
    return __UA_Client_writeAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_WRITEMASK)), @as(?*const anyopaque, @ptrCast(newWriteMask)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 6)))]);
}
pub fn UA_Client_writeUserWriteMaskAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_newUserWriteMask: [*c]const UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var newUserWriteMask = arg_newUserWriteMask;
    _ = &newUserWriteMask;
    return __UA_Client_writeAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_USERWRITEMASK)), @as(?*const anyopaque, @ptrCast(newUserWriteMask)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 6)))]);
}
pub fn UA_Client_writeIsAbstractAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_newIsAbstract: [*c]const UA_Boolean) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var newIsAbstract = arg_newIsAbstract;
    _ = &newIsAbstract;
    return __UA_Client_writeAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_ISABSTRACT)), @as(?*const anyopaque, @ptrCast(newIsAbstract)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))]);
}
pub fn UA_Client_writeSymmetricAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_newSymmetric: [*c]const UA_Boolean) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var newSymmetric = arg_newSymmetric;
    _ = &newSymmetric;
    return __UA_Client_writeAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_SYMMETRIC)), @as(?*const anyopaque, @ptrCast(newSymmetric)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))]);
}
pub fn UA_Client_writeInverseNameAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_newInverseName: [*c]const UA_LocalizedText) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var newInverseName = arg_newInverseName;
    _ = &newInverseName;
    return __UA_Client_writeAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_INVERSENAME)), @as(?*const anyopaque, @ptrCast(newInverseName)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 20)))]);
}
pub fn UA_Client_writeContainsNoLoopsAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_newContainsNoLoops: [*c]const UA_Boolean) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var newContainsNoLoops = arg_newContainsNoLoops;
    _ = &newContainsNoLoops;
    return __UA_Client_writeAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_CONTAINSNOLOOPS)), @as(?*const anyopaque, @ptrCast(newContainsNoLoops)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))]);
}
pub fn UA_Client_writeEventNotifierAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_newEventNotifier: [*c]const UA_Byte) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var newEventNotifier = arg_newEventNotifier;
    _ = &newEventNotifier;
    return __UA_Client_writeAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_EVENTNOTIFIER)), @as(?*const anyopaque, @ptrCast(newEventNotifier)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 2)))]);
}
pub fn UA_Client_writeValueAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_newValue: [*c]const UA_Variant) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var newValue = arg_newValue;
    _ = &newValue;
    return __UA_Client_writeAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_VALUE)), @as(?*const anyopaque, @ptrCast(newValue)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 23)))]);
}
pub fn UA_Client_writeValueAttribute_scalar(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_newValue: ?*const anyopaque, arg_valueType: ?*const UA_DataType) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var newValue = arg_newValue;
    _ = &newValue;
    var valueType = arg_valueType;
    _ = &valueType;
    return __UA_Client_writeAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_VALUE)), newValue, valueType);
}
pub fn UA_Client_writeValueAttributeEx(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_newValue: ?*const UA_DataValue) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var newValue = arg_newValue;
    _ = &newValue;
    return __UA_Client_writeAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_VALUE)), @as(?*const anyopaque, @ptrCast(newValue)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 22)))]);
}
pub fn UA_Client_writeDataTypeAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_newDataType: [*c]const UA_NodeId) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var newDataType = arg_newDataType;
    _ = &newDataType;
    return __UA_Client_writeAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_DATATYPE)), @as(?*const anyopaque, @ptrCast(newDataType)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 16)))]);
}
pub fn UA_Client_writeValueRankAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_newValueRank: [*c]const UA_Int32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var newValueRank = arg_newValueRank;
    _ = &newValueRank;
    return __UA_Client_writeAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_VALUERANK)), @as(?*const anyopaque, @ptrCast(newValueRank)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 5)))]);
}
pub extern fn UA_Client_writeArrayDimensionsAttribute(client: ?*UA_Client, nodeId: UA_NodeId, newArrayDimensionsSize: usize, newArrayDimensions: [*c]const UA_UInt32) UA_StatusCode;
pub fn UA_Client_writeAccessLevelAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_newAccessLevel: [*c]const UA_Byte) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var newAccessLevel = arg_newAccessLevel;
    _ = &newAccessLevel;
    return __UA_Client_writeAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_ACCESSLEVEL)), @as(?*const anyopaque, @ptrCast(newAccessLevel)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 2)))]);
}
pub fn UA_Client_writeAccessLevelExAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_newAccessLevelEx: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var newAccessLevelEx = arg_newAccessLevelEx;
    _ = &newAccessLevelEx;
    return __UA_Client_writeAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_ACCESSLEVELEX)), @as(?*const anyopaque, @ptrCast(newAccessLevelEx)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 6)))]);
}
pub fn UA_Client_writeUserAccessLevelAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_newUserAccessLevel: [*c]const UA_Byte) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var newUserAccessLevel = arg_newUserAccessLevel;
    _ = &newUserAccessLevel;
    return __UA_Client_writeAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_USERACCESSLEVEL)), @as(?*const anyopaque, @ptrCast(newUserAccessLevel)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 2)))]);
}
pub fn UA_Client_writeMinimumSamplingIntervalAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_newMinInterval: [*c]const UA_Double) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var newMinInterval = arg_newMinInterval;
    _ = &newMinInterval;
    return __UA_Client_writeAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_MINIMUMSAMPLINGINTERVAL)), @as(?*const anyopaque, @ptrCast(newMinInterval)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 10)))]);
}
pub fn UA_Client_writeHistorizingAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_newHistorizing: [*c]const UA_Boolean) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var newHistorizing = arg_newHistorizing;
    _ = &newHistorizing;
    return __UA_Client_writeAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_HISTORIZING)), @as(?*const anyopaque, @ptrCast(newHistorizing)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))]);
}
pub fn UA_Client_writeExecutableAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_newExecutable: [*c]const UA_Boolean) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var newExecutable = arg_newExecutable;
    _ = &newExecutable;
    return __UA_Client_writeAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_EXECUTABLE)), @as(?*const anyopaque, @ptrCast(newExecutable)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))]);
}
pub fn UA_Client_writeUserExecutableAttribute(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_newUserExecutable: [*c]const UA_Boolean) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var newUserExecutable = arg_newUserExecutable;
    _ = &newUserExecutable;
    return __UA_Client_writeAttribute(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_USEREXECUTABLE)), @as(?*const anyopaque, @ptrCast(newUserExecutable)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))]);
}
pub extern fn UA_Client_call(client: ?*UA_Client, objectId: UA_NodeId, methodId: UA_NodeId, inputSize: usize, input: [*c]const UA_Variant, outputSize: [*c]usize, output: [*c][*c]UA_Variant) UA_StatusCode;
pub extern fn UA_Client_addReference(client: ?*UA_Client, sourceNodeId: UA_NodeId, referenceTypeId: UA_NodeId, isForward: UA_Boolean, targetServerUri: UA_String, targetNodeId: UA_ExpandedNodeId, targetNodeClass: UA_NodeClass) UA_StatusCode;
pub extern fn UA_Client_deleteReference(client: ?*UA_Client, sourceNodeId: UA_NodeId, referenceTypeId: UA_NodeId, isForward: UA_Boolean, targetNodeId: UA_ExpandedNodeId, deleteBidirectional: UA_Boolean) UA_StatusCode;
pub extern fn UA_Client_deleteNode(client: ?*UA_Client, nodeId: UA_NodeId, deleteTargetReferences: UA_Boolean) UA_StatusCode;
pub extern fn __UA_Client_addNode(client: ?*UA_Client, nodeClass: UA_NodeClass, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, typeDefinition: UA_NodeId, attr: [*c]const UA_NodeAttributes, attributeType: ?*const UA_DataType, outNewNodeId: [*c]UA_NodeId) UA_StatusCode;
pub fn UA_Client_addVariableNode(arg_client: ?*UA_Client, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, typeDefinition: UA_NodeId, attr: UA_VariableAttributes, arg_outNewNodeId: [*c]UA_NodeId) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &requestedNewNodeId;
    _ = &parentNodeId;
    _ = &referenceTypeId;
    _ = &browseName;
    _ = &typeDefinition;
    _ = &attr;
    var outNewNodeId = arg_outNewNodeId;
    _ = &outNewNodeId;
    return __UA_Client_addNode(client, @as(c_uint, @bitCast(UA_NODECLASS_VARIABLE)), requestedNewNodeId, parentNodeId, referenceTypeId, browseName, typeDefinition, @as([*c]const UA_NodeAttributes, @ptrCast(@alignCast(&attr))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 194)))], outNewNodeId);
}
pub fn UA_Client_addVariableTypeNode(arg_client: ?*UA_Client, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, attr: UA_VariableTypeAttributes, arg_outNewNodeId: [*c]UA_NodeId) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &requestedNewNodeId;
    _ = &parentNodeId;
    _ = &referenceTypeId;
    _ = &browseName;
    _ = &attr;
    var outNewNodeId = arg_outNewNodeId;
    _ = &outNewNodeId;
    return __UA_Client_addNode(client, @as(c_uint, @bitCast(UA_NODECLASS_VARIABLETYPE)), requestedNewNodeId, parentNodeId, referenceTypeId, browseName, UA_NODEID_NULL, @as([*c]const UA_NodeAttributes, @ptrCast(@alignCast(&attr))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 197)))], outNewNodeId);
}
pub fn UA_Client_addObjectNode(arg_client: ?*UA_Client, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, typeDefinition: UA_NodeId, attr: UA_ObjectAttributes, arg_outNewNodeId: [*c]UA_NodeId) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &requestedNewNodeId;
    _ = &parentNodeId;
    _ = &referenceTypeId;
    _ = &browseName;
    _ = &typeDefinition;
    _ = &attr;
    var outNewNodeId = arg_outNewNodeId;
    _ = &outNewNodeId;
    return __UA_Client_addNode(client, @as(c_uint, @bitCast(UA_NODECLASS_OBJECT)), requestedNewNodeId, parentNodeId, referenceTypeId, browseName, typeDefinition, @as([*c]const UA_NodeAttributes, @ptrCast(@alignCast(&attr))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 193)))], outNewNodeId);
}
pub fn UA_Client_addObjectTypeNode(arg_client: ?*UA_Client, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, attr: UA_ObjectTypeAttributes, arg_outNewNodeId: [*c]UA_NodeId) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &requestedNewNodeId;
    _ = &parentNodeId;
    _ = &referenceTypeId;
    _ = &browseName;
    _ = &attr;
    var outNewNodeId = arg_outNewNodeId;
    _ = &outNewNodeId;
    return __UA_Client_addNode(client, @as(c_uint, @bitCast(UA_NODECLASS_OBJECTTYPE)), requestedNewNodeId, parentNodeId, referenceTypeId, browseName, UA_NODEID_NULL, @as([*c]const UA_NodeAttributes, @ptrCast(@alignCast(&attr))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 196)))], outNewNodeId);
}
pub fn UA_Client_addViewNode(arg_client: ?*UA_Client, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, attr: UA_ViewAttributes, arg_outNewNodeId: [*c]UA_NodeId) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &requestedNewNodeId;
    _ = &parentNodeId;
    _ = &referenceTypeId;
    _ = &browseName;
    _ = &attr;
    var outNewNodeId = arg_outNewNodeId;
    _ = &outNewNodeId;
    return __UA_Client_addNode(client, @as(c_uint, @bitCast(UA_NODECLASS_VIEW)), requestedNewNodeId, parentNodeId, referenceTypeId, browseName, UA_NODEID_NULL, @as([*c]const UA_NodeAttributes, @ptrCast(@alignCast(&attr))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 200)))], outNewNodeId);
}
pub fn UA_Client_addReferenceTypeNode(arg_client: ?*UA_Client, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, attr: UA_ReferenceTypeAttributes, arg_outNewNodeId: [*c]UA_NodeId) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &requestedNewNodeId;
    _ = &parentNodeId;
    _ = &referenceTypeId;
    _ = &browseName;
    _ = &attr;
    var outNewNodeId = arg_outNewNodeId;
    _ = &outNewNodeId;
    return __UA_Client_addNode(client, @as(c_uint, @bitCast(UA_NODECLASS_REFERENCETYPE)), requestedNewNodeId, parentNodeId, referenceTypeId, browseName, UA_NODEID_NULL, @as([*c]const UA_NodeAttributes, @ptrCast(@alignCast(&attr))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 198)))], outNewNodeId);
}
pub fn UA_Client_addDataTypeNode(arg_client: ?*UA_Client, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, attr: UA_DataTypeAttributes, arg_outNewNodeId: [*c]UA_NodeId) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &requestedNewNodeId;
    _ = &parentNodeId;
    _ = &referenceTypeId;
    _ = &browseName;
    _ = &attr;
    var outNewNodeId = arg_outNewNodeId;
    _ = &outNewNodeId;
    return __UA_Client_addNode(client, @as(c_uint, @bitCast(UA_NODECLASS_DATATYPE)), requestedNewNodeId, parentNodeId, referenceTypeId, browseName, UA_NODEID_NULL, @as([*c]const UA_NodeAttributes, @ptrCast(@alignCast(&attr))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 199)))], outNewNodeId);
}
pub fn UA_Client_addMethodNode(arg_client: ?*UA_Client, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, attr: UA_MethodAttributes, arg_outNewNodeId: [*c]UA_NodeId) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &requestedNewNodeId;
    _ = &parentNodeId;
    _ = &referenceTypeId;
    _ = &browseName;
    _ = &attr;
    var outNewNodeId = arg_outNewNodeId;
    _ = &outNewNodeId;
    return __UA_Client_addNode(client, @as(c_uint, @bitCast(UA_NODECLASS_METHOD)), requestedNewNodeId, parentNodeId, referenceTypeId, browseName, UA_NODEID_NULL, @as([*c]const UA_NodeAttributes, @ptrCast(@alignCast(&attr))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 195)))], outNewNodeId);
}
pub extern fn UA_Client_NamespaceGetIndex(client: ?*UA_Client, namespaceUri: [*c]UA_String, namespaceIndex: [*c]UA_UInt16) UA_StatusCode;
pub extern fn UA_Client_forEachChildNodeCall(client: ?*UA_Client, parentNodeId: UA_NodeId, callback: UA_NodeIteratorCallback, handle: ?*anyopaque) UA_StatusCode;
pub const UA_Client_DeleteSubscriptionCallback = ?*const fn (?*UA_Client, UA_UInt32, ?*anyopaque) callconv(.c) void;
pub const UA_Client_StatusChangeNotificationCallback = ?*const fn (?*UA_Client, UA_UInt32, ?*anyopaque, ?*UA_StatusChangeNotification) callconv(.c) void;
pub fn UA_CreateSubscriptionRequest_default() callconv(.c) UA_CreateSubscriptionRequest {
    var request: UA_CreateSubscriptionRequest = undefined;
    _ = &request;
    UA_CreateSubscriptionRequest_init(&request);
    request.requestedPublishingInterval = 500.0;
    request.requestedLifetimeCount = @as(UA_UInt32, @bitCast(@as(c_int, 10000)));
    request.requestedMaxKeepAliveCount = 10;
    request.maxNotificationsPerPublish = 0;
    request.publishingEnabled = @as(c_int, 1) != 0;
    request.priority = 0;
    return request;
}
pub extern fn UA_Client_Subscriptions_create(client: ?*UA_Client, request: UA_CreateSubscriptionRequest, subscriptionContext: ?*anyopaque, statusChangeCallback: UA_Client_StatusChangeNotificationCallback, deleteCallback: UA_Client_DeleteSubscriptionCallback) UA_CreateSubscriptionResponse;
pub extern fn UA_Client_Subscriptions_create_async(client: ?*UA_Client, request: UA_CreateSubscriptionRequest, subscriptionContext: ?*anyopaque, statusChangeCallback: UA_Client_StatusChangeNotificationCallback, deleteCallback: UA_Client_DeleteSubscriptionCallback, callback: UA_ClientAsyncServiceCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub extern fn UA_Client_Subscriptions_modify(client: ?*UA_Client, request: UA_ModifySubscriptionRequest) UA_ModifySubscriptionResponse;
pub extern fn UA_Client_Subscriptions_modify_async(client: ?*UA_Client, request: UA_ModifySubscriptionRequest, callback: UA_ClientAsyncServiceCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub extern fn UA_Client_Subscriptions_delete(client: ?*UA_Client, request: UA_DeleteSubscriptionsRequest) UA_DeleteSubscriptionsResponse;
pub extern fn UA_Client_Subscriptions_delete_async(client: ?*UA_Client, request: UA_DeleteSubscriptionsRequest, callback: UA_ClientAsyncServiceCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub extern fn UA_Client_Subscriptions_deleteSingle(client: ?*UA_Client, subscriptionId: UA_UInt32) UA_StatusCode;
// ./vendor/open62541.h:49676:34: warning: local variable has opaque type

// ./vendor/open62541.h:49674:1: warning: unable to translate function, demoted to extern
pub extern fn UA_Client_Subscriptions_setPublishingMode(arg_client: ?*UA_Client, request: UA_SetPublishingModeRequest) callconv(.c) UA_SetPublishingModeResponse;
pub fn UA_MonitoredItemCreateRequest_default(arg_nodeId: UA_NodeId) callconv(.c) UA_MonitoredItemCreateRequest {
    var nodeId = arg_nodeId;
    _ = &nodeId;
    var request: UA_MonitoredItemCreateRequest = undefined;
    _ = &request;
    UA_MonitoredItemCreateRequest_init(&request);
    request.itemToMonitor.nodeId = nodeId;
    request.itemToMonitor.attributeId = @as(UA_UInt32, @bitCast(UA_ATTRIBUTEID_VALUE));
    request.monitoringMode = @as(c_uint, @bitCast(UA_MONITORINGMODE_REPORTING));
    request.requestedParameters.samplingInterval = 250;
    request.requestedParameters.discardOldest = @as(c_int, 1) != 0;
    request.requestedParameters.queueSize = 1;
    return request;
}
pub const UA_Client_DeleteMonitoredItemCallback = ?*const fn (?*UA_Client, UA_UInt32, ?*anyopaque, UA_UInt32, ?*anyopaque) callconv(.c) void;
pub const UA_Client_DataChangeNotificationCallback = ?*const fn (?*UA_Client, UA_UInt32, ?*anyopaque, UA_UInt32, ?*anyopaque, ?*UA_DataValue) callconv(.c) void;
pub const UA_Client_EventNotificationCallback = ?*const fn (?*UA_Client, UA_UInt32, ?*anyopaque, UA_UInt32, ?*anyopaque, usize, [*c]UA_Variant) callconv(.c) void;
pub extern fn UA_Client_MonitoredItems_createDataChanges(client: ?*UA_Client, request: UA_CreateMonitoredItemsRequest, contexts: [*c]?*anyopaque, callbacks: [*c]UA_Client_DataChangeNotificationCallback, deleteCallbacks: [*c]UA_Client_DeleteMonitoredItemCallback) UA_CreateMonitoredItemsResponse;
pub extern fn UA_Client_MonitoredItems_createDataChanges_async(client: ?*UA_Client, request: UA_CreateMonitoredItemsRequest, contexts: [*c]?*anyopaque, callbacks: [*c]UA_Client_DataChangeNotificationCallback, deleteCallbacks: [*c]UA_Client_DeleteMonitoredItemCallback, createCallback: UA_ClientAsyncServiceCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub extern fn UA_Client_MonitoredItems_createDataChange(client: ?*UA_Client, subscriptionId: UA_UInt32, timestampsToReturn: UA_TimestampsToReturn, item: UA_MonitoredItemCreateRequest, context: ?*anyopaque, callback: UA_Client_DataChangeNotificationCallback, deleteCallback: UA_Client_DeleteMonitoredItemCallback) UA_MonitoredItemCreateResult;
pub extern fn UA_Client_MonitoredItems_createEvents(client: ?*UA_Client, request: UA_CreateMonitoredItemsRequest, contexts: [*c]?*anyopaque, callback: [*c]UA_Client_EventNotificationCallback, deleteCallback: [*c]UA_Client_DeleteMonitoredItemCallback) UA_CreateMonitoredItemsResponse;
pub extern fn UA_Client_MonitoredItems_createEvents_async(client: ?*UA_Client, request: UA_CreateMonitoredItemsRequest, contexts: [*c]?*anyopaque, callbacks: [*c]UA_Client_EventNotificationCallback, deleteCallbacks: [*c]UA_Client_DeleteMonitoredItemCallback, createCallback: UA_ClientAsyncServiceCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub extern fn UA_Client_MonitoredItems_createEvent(client: ?*UA_Client, subscriptionId: UA_UInt32, timestampsToReturn: UA_TimestampsToReturn, item: UA_MonitoredItemCreateRequest, context: ?*anyopaque, callback: UA_Client_EventNotificationCallback, deleteCallback: UA_Client_DeleteMonitoredItemCallback) UA_MonitoredItemCreateResult;
pub extern fn UA_Client_MonitoredItems_delete(client: ?*UA_Client, UA_DeleteMonitoredItemsRequest) UA_DeleteMonitoredItemsResponse;
pub extern fn UA_Client_MonitoredItems_delete_async(client: ?*UA_Client, request: UA_DeleteMonitoredItemsRequest, callback: UA_ClientAsyncServiceCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub extern fn UA_Client_MonitoredItems_deleteSingle(client: ?*UA_Client, subscriptionId: UA_UInt32, monitoredItemId: UA_UInt32) UA_StatusCode;
pub extern fn UA_Client_MonitoredItems_modify(client: ?*UA_Client, request: UA_ModifyMonitoredItemsRequest) UA_ModifyMonitoredItemsResponse;
pub extern fn UA_Client_MonitoredItems_modify_async(client: ?*UA_Client, request: UA_ModifyMonitoredItemsRequest, callback: UA_ClientAsyncServiceCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
// ./vendor/open62541.h:49809:34: warning: local variable has opaque type

// ./vendor/open62541.h:49807:1: warning: unable to translate function, demoted to extern
pub extern fn UA_Client_MonitoredItems_setMonitoringMode(arg_client: ?*UA_Client, request: UA_SetMonitoringModeRequest) callconv(.c) UA_SetMonitoringModeResponse;
pub fn UA_Client_MonitoredItems_setMonitoringMode_async(arg_client: ?*UA_Client, request: UA_SetMonitoringModeRequest, arg_callback: UA_ClientAsyncServiceCallback, arg_userdata: ?*anyopaque, arg_requestId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &request;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var requestId = arg_requestId;
    _ = &requestId;
    return __UA_Client_AsyncService(client, @as(?*const anyopaque, @ptrCast(&request)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 308)))], callback, &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 309)))], userdata, requestId);
}
// ./vendor/open62541.h:49830:30: warning: local variable has opaque type

// ./vendor/open62541.h:49828:1: warning: unable to translate function, demoted to extern
pub extern fn UA_Client_MonitoredItems_setTriggering(arg_client: ?*UA_Client, request: UA_SetTriggeringRequest) callconv(.c) UA_SetTriggeringResponse;
pub fn UA_Client_MonitoredItems_setTriggering_async(arg_client: ?*UA_Client, request: UA_SetTriggeringRequest, arg_callback: UA_ClientAsyncServiceCallback, arg_userdata: ?*anyopaque, arg_requestId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &request;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var requestId = arg_requestId;
    _ = &requestId;
    return __UA_Client_AsyncService(client, @as(?*const anyopaque, @ptrCast(&request)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 310)))], callback, &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 311)))], userdata, requestId);
}
pub const UA_ClientAsyncReadCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, ?*UA_ReadResponse) callconv(.c) void;
pub fn UA_Client_sendAsyncReadRequest(arg_client: ?*UA_Client, arg_request: [*c]UA_ReadRequest, arg_readCallback: UA_ClientAsyncReadCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    var request = arg_request;
    _ = &request;
    var readCallback = arg_readCallback;
    _ = &readCallback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_AsyncService(client, @as(?*const anyopaque, @ptrCast(request)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 262)))], @as(UA_ClientAsyncServiceCallback, @ptrCast(@alignCast(readCallback))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 263)))], userdata, reqId);
}
pub const UA_ClientAsyncWriteCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, ?*UA_WriteResponse) callconv(.c) void;
pub fn UA_Client_sendAsyncWriteRequest(arg_client: ?*UA_Client, arg_request: [*c]UA_WriteRequest, arg_writeCallback: UA_ClientAsyncWriteCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    var request = arg_request;
    _ = &request;
    var writeCallback = arg_writeCallback;
    _ = &writeCallback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_AsyncService(client, @as(?*const anyopaque, @ptrCast(request)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 273)))], @as(UA_ClientAsyncServiceCallback, @ptrCast(@alignCast(writeCallback))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 274)))], userdata, reqId);
}
pub const UA_ClientAsyncBrowseCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, ?*UA_BrowseResponse) callconv(.c) void;
pub fn UA_Client_sendAsyncBrowseRequest(arg_client: ?*UA_Client, arg_request: [*c]UA_BrowseRequest, arg_browseCallback: UA_ClientAsyncBrowseCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    var request = arg_request;
    _ = &request;
    var browseCallback = arg_browseCallback;
    _ = &browseCallback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_AsyncService(client, @as(?*const anyopaque, @ptrCast(request)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 224)))], @as(UA_ClientAsyncServiceCallback, @ptrCast(@alignCast(browseCallback))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 225)))], userdata, reqId);
}
pub const UA_ClientAsyncBrowseNextCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, ?*UA_BrowseNextResponse) callconv(.c) void;
pub fn UA_Client_sendAsyncBrowseNextRequest(arg_client: ?*UA_Client, arg_request: [*c]UA_BrowseNextRequest, arg_browseNextCallback: UA_ClientAsyncBrowseNextCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    var request = arg_request;
    _ = &request;
    var browseNextCallback = arg_browseNextCallback;
    _ = &browseNextCallback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_AsyncService(client, @as(?*const anyopaque, @ptrCast(request)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 226)))], @as(UA_ClientAsyncServiceCallback, @ptrCast(@alignCast(browseNextCallback))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 227)))], userdata, reqId);
}
pub const UA_ClientAsyncOperationCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, UA_StatusCode, ?*anyopaque) callconv(.c) void;
pub const UA_ClientAsyncReadAttributeCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, UA_StatusCode, ?*UA_DataValue) callconv(.c) void;
pub extern fn UA_Client_readAttribute_async(client: ?*UA_Client, rvi: [*c]const UA_ReadValueId, timestampsToReturn: UA_TimestampsToReturn, callback: UA_ClientAsyncReadAttributeCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub const UA_ClientAsyncReadValueAttributeCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, UA_StatusCode, ?*UA_DataValue) callconv(.c) void;
pub extern fn UA_Client_readValueAttribute_async(client: ?*UA_Client, nodeId: UA_NodeId, callback: UA_ClientAsyncReadValueAttributeCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub const UA_ClientAsyncReadDataTypeAttributeCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, UA_StatusCode, [*c]UA_NodeId) callconv(.c) void;
pub extern fn UA_Client_readDataTypeAttribute_async(client: ?*UA_Client, nodeId: UA_NodeId, callback: UA_ClientAsyncReadDataTypeAttributeCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub const UA_ClientReadArrayDimensionsAttributeCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, UA_StatusCode, [*c]UA_Variant) callconv(.c) void;
pub extern fn UA_Client_readArrayDimensionsAttribute_async(client: ?*UA_Client, nodeId: UA_NodeId, callback: UA_ClientReadArrayDimensionsAttributeCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub const UA_ClientAsyncReadNodeClassAttributeCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, UA_StatusCode, [*c]UA_NodeClass) callconv(.c) void;
pub extern fn UA_Client_readNodeClassAttribute_async(client: ?*UA_Client, nodeId: UA_NodeId, callback: UA_ClientAsyncReadNodeClassAttributeCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub const UA_ClientAsyncReadBrowseNameAttributeCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, UA_StatusCode, [*c]UA_QualifiedName) callconv(.c) void;
pub extern fn UA_Client_readBrowseNameAttribute_async(client: ?*UA_Client, nodeId: UA_NodeId, callback: UA_ClientAsyncReadBrowseNameAttributeCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub const UA_ClientAsyncReadDisplayNameAttributeCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, UA_StatusCode, [*c]UA_LocalizedText) callconv(.c) void;
pub extern fn UA_Client_readDisplayNameAttribute_async(client: ?*UA_Client, nodeId: UA_NodeId, callback: UA_ClientAsyncReadDisplayNameAttributeCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub const UA_ClientAsyncReadDescriptionAttributeCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, UA_StatusCode, [*c]UA_LocalizedText) callconv(.c) void;
pub extern fn UA_Client_readDescriptionAttribute_async(client: ?*UA_Client, nodeId: UA_NodeId, callback: UA_ClientAsyncReadDescriptionAttributeCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub const UA_ClientAsyncReadWriteMaskAttributeCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, UA_StatusCode, [*c]UA_UInt32) callconv(.c) void;
pub extern fn UA_Client_readWriteMaskAttribute_async(client: ?*UA_Client, nodeId: UA_NodeId, callback: UA_ClientAsyncReadWriteMaskAttributeCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub const UA_ClientAsyncReadUserWriteMaskAttributeCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, UA_StatusCode, [*c]UA_UInt32) callconv(.c) void;
pub extern fn UA_Client_readUserWriteMaskAttribute_async(client: ?*UA_Client, nodeId: UA_NodeId, callback: UA_ClientAsyncReadUserWriteMaskAttributeCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub const UA_ClientAsyncReadIsAbstractAttributeCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, UA_StatusCode, [*c]UA_Boolean) callconv(.c) void;
pub extern fn UA_Client_readIsAbstractAttribute_async(client: ?*UA_Client, nodeId: UA_NodeId, callback: UA_ClientAsyncReadIsAbstractAttributeCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub const UA_ClientAsyncReadSymmetricAttributeCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, UA_StatusCode, [*c]UA_Boolean) callconv(.c) void;
pub extern fn UA_Client_readSymmetricAttribute_async(client: ?*UA_Client, nodeId: UA_NodeId, callback: UA_ClientAsyncReadSymmetricAttributeCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub const UA_ClientAsyncReadInverseNameAttributeCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, UA_StatusCode, [*c]UA_LocalizedText) callconv(.c) void;
pub extern fn UA_Client_readInverseNameAttribute_async(client: ?*UA_Client, nodeId: UA_NodeId, callback: UA_ClientAsyncReadInverseNameAttributeCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub const UA_ClientAsyncReadContainsNoLoopsAttributeCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, UA_StatusCode, [*c]UA_Boolean) callconv(.c) void;
pub extern fn UA_Client_readContainsNoLoopsAttribute_async(client: ?*UA_Client, nodeId: UA_NodeId, callback: UA_ClientAsyncReadContainsNoLoopsAttributeCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub const UA_ClientAsyncReadEventNotifierAttributeCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, UA_StatusCode, [*c]UA_Byte) callconv(.c) void;
pub extern fn UA_Client_readEventNotifierAttribute_async(client: ?*UA_Client, nodeId: UA_NodeId, callback: UA_ClientAsyncReadEventNotifierAttributeCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub const UA_ClientAsyncReadValueRankAttributeCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, UA_StatusCode, [*c]UA_Int32) callconv(.c) void;
pub extern fn UA_Client_readValueRankAttribute_async(client: ?*UA_Client, nodeId: UA_NodeId, callback: UA_ClientAsyncReadValueRankAttributeCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub const UA_ClientAsyncReadAccessLevelAttributeCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, UA_StatusCode, [*c]UA_Byte) callconv(.c) void;
pub extern fn UA_Client_readAccessLevelAttribute_async(client: ?*UA_Client, nodeId: UA_NodeId, callback: UA_ClientAsyncReadAccessLevelAttributeCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub const UA_ClientAsyncReadAccessLevelExAttributeCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, UA_StatusCode, [*c]UA_UInt32) callconv(.c) void;
pub extern fn UA_Client_readAccessLevelExAttribute_async(client: ?*UA_Client, nodeId: UA_NodeId, callback: UA_ClientAsyncReadAccessLevelExAttributeCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub const UA_ClientAsyncReadUserAccessLevelAttributeCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, UA_StatusCode, [*c]UA_Byte) callconv(.c) void;
pub extern fn UA_Client_readUserAccessLevelAttribute_async(client: ?*UA_Client, nodeId: UA_NodeId, callback: UA_ClientAsyncReadUserAccessLevelAttributeCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub const UA_ClientAsyncReadMinimumSamplingIntervalAttributeCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, UA_StatusCode, [*c]UA_Double) callconv(.c) void;
pub extern fn UA_Client_readMinimumSamplingIntervalAttribute_async(client: ?*UA_Client, nodeId: UA_NodeId, callback: UA_ClientAsyncReadMinimumSamplingIntervalAttributeCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub const UA_ClientAsyncReadHistorizingAttributeCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, UA_StatusCode, [*c]UA_Boolean) callconv(.c) void;
pub extern fn UA_Client_readHistorizingAttribute_async(client: ?*UA_Client, nodeId: UA_NodeId, callback: UA_ClientAsyncReadHistorizingAttributeCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub const UA_ClientAsyncReadExecutableAttributeCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, UA_StatusCode, [*c]UA_Boolean) callconv(.c) void;
pub extern fn UA_Client_readExecutableAttribute_async(client: ?*UA_Client, nodeId: UA_NodeId, callback: UA_ClientAsyncReadExecutableAttributeCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub const UA_ClientAsyncReadUserExecutableAttributeCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, UA_StatusCode, [*c]UA_Boolean) callconv(.c) void;
pub extern fn UA_Client_readUserExecutableAttribute_async(client: ?*UA_Client, nodeId: UA_NodeId, callback: UA_ClientAsyncReadUserExecutableAttributeCallback, userdata: ?*anyopaque, requestId: [*c]UA_UInt32) UA_StatusCode;
pub extern fn __UA_Client_writeAttribute_async(client: ?*UA_Client, nodeId: [*c]const UA_NodeId, attributeId: UA_AttributeId, in: ?*const anyopaque, inDataType: ?*const UA_DataType, callback: UA_ClientAsyncServiceCallback, userdata: ?*anyopaque, reqId: [*c]UA_UInt32) UA_StatusCode;
pub fn UA_Client_writeValueAttribute_async(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_attr: [*c]const UA_Variant, arg_callback: UA_ClientAsyncWriteCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var attr = arg_attr;
    _ = &attr;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_writeAttribute_async(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_VALUE)), @as(?*const anyopaque, @ptrCast(attr)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 23)))], @as(UA_ClientAsyncServiceCallback, @ptrCast(@alignCast(callback))), userdata, reqId);
}
pub fn UA_Client_writeNodeIdAttribute_async(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_attr: [*c]const UA_NodeId, arg_callback: UA_ClientAsyncServiceCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var attr = arg_attr;
    _ = &attr;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_writeAttribute_async(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_NODEID)), @as(?*const anyopaque, @ptrCast(attr)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 16)))], callback, userdata, reqId);
}
pub fn UA_Client_writeNodeClassAttribute_async(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_attr: [*c]const UA_NodeClass, arg_callback: UA_ClientAsyncServiceCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var attr = arg_attr;
    _ = &attr;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_writeAttribute_async(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_NODECLASS)), @as(?*const anyopaque, @ptrCast(attr)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 116)))], callback, userdata, reqId);
}
pub fn UA_Client_writeBrowseNameAttribute_async(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_attr: [*c]const UA_QualifiedName, arg_callback: UA_ClientAsyncServiceCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var attr = arg_attr;
    _ = &attr;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_writeAttribute_async(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_BROWSENAME)), @as(?*const anyopaque, @ptrCast(attr)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 19)))], callback, userdata, reqId);
}
pub fn UA_Client_writeDisplayNameAttribute_async(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_attr: [*c]const UA_LocalizedText, arg_callback: UA_ClientAsyncServiceCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var attr = arg_attr;
    _ = &attr;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_writeAttribute_async(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_DISPLAYNAME)), @as(?*const anyopaque, @ptrCast(attr)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 20)))], callback, userdata, reqId);
}
pub fn UA_Client_writeDescriptionAttribute_async(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_attr: [*c]const UA_LocalizedText, arg_callback: UA_ClientAsyncServiceCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var attr = arg_attr;
    _ = &attr;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_writeAttribute_async(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_DESCRIPTION)), @as(?*const anyopaque, @ptrCast(attr)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 20)))], callback, userdata, reqId);
}
pub fn UA_Client_writeWriteMaskAttribute_async(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_attr: [*c]const UA_UInt32, arg_callback: UA_ClientAsyncServiceCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var attr = arg_attr;
    _ = &attr;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_writeAttribute_async(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_WRITEMASK)), @as(?*const anyopaque, @ptrCast(attr)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 6)))], callback, userdata, reqId);
}
pub fn UA_Client_writeUserWriteMaskAttribute_async(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_attr: [*c]const UA_UInt32, arg_callback: UA_ClientAsyncServiceCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var attr = arg_attr;
    _ = &attr;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_writeAttribute_async(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_USERWRITEMASK)), @as(?*const anyopaque, @ptrCast(attr)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 6)))], callback, userdata, reqId);
}
pub fn UA_Client_writeIsAbstractAttribute_async(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_attr: [*c]const UA_Boolean, arg_callback: UA_ClientAsyncServiceCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var attr = arg_attr;
    _ = &attr;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_writeAttribute_async(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_ISABSTRACT)), @as(?*const anyopaque, @ptrCast(attr)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))], callback, userdata, reqId);
}
pub fn UA_Client_writeSymmetricAttribute_async(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_attr: [*c]const UA_Boolean, arg_callback: UA_ClientAsyncServiceCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var attr = arg_attr;
    _ = &attr;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_writeAttribute_async(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_SYMMETRIC)), @as(?*const anyopaque, @ptrCast(attr)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))], callback, userdata, reqId);
}
pub fn UA_Client_writeInverseNameAttribute_async(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_attr: [*c]const UA_LocalizedText, arg_callback: UA_ClientAsyncServiceCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var attr = arg_attr;
    _ = &attr;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_writeAttribute_async(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_INVERSENAME)), @as(?*const anyopaque, @ptrCast(attr)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 20)))], callback, userdata, reqId);
}
pub fn UA_Client_writeContainsNoLoopsAttribute_async(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_attr: [*c]const UA_Boolean, arg_callback: UA_ClientAsyncServiceCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var attr = arg_attr;
    _ = &attr;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_writeAttribute_async(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_CONTAINSNOLOOPS)), @as(?*const anyopaque, @ptrCast(attr)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))], callback, userdata, reqId);
}
pub fn UA_Client_writeEventNotifierAttribute_async(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_attr: [*c]const UA_Byte, arg_callback: UA_ClientAsyncServiceCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var attr = arg_attr;
    _ = &attr;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_writeAttribute_async(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_EVENTNOTIFIER)), @as(?*const anyopaque, @ptrCast(attr)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 2)))], callback, userdata, reqId);
}
pub fn UA_Client_writeDataTypeAttribute_async(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_attr: [*c]const UA_NodeId, arg_callback: UA_ClientAsyncServiceCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var attr = arg_attr;
    _ = &attr;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_writeAttribute_async(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_DATATYPE)), @as(?*const anyopaque, @ptrCast(attr)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 16)))], callback, userdata, reqId);
}
pub fn UA_Client_writeValueRankAttribute_async(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_attr: [*c]const UA_Int32, arg_callback: UA_ClientAsyncServiceCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var attr = arg_attr;
    _ = &attr;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_writeAttribute_async(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_VALUERANK)), @as(?*const anyopaque, @ptrCast(attr)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 5)))], callback, userdata, reqId);
}
pub fn UA_Client_writeAccessLevelAttribute_async(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_attr: [*c]const UA_Byte, arg_callback: UA_ClientAsyncServiceCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var attr = arg_attr;
    _ = &attr;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_writeAttribute_async(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_ACCESSLEVEL)), @as(?*const anyopaque, @ptrCast(attr)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 2)))], callback, userdata, reqId);
}
pub fn UA_Client_writeAccessLevelExAttribute_async(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_attr: [*c]const UA_UInt32, arg_callback: UA_ClientAsyncServiceCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var attr = arg_attr;
    _ = &attr;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_writeAttribute_async(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_ACCESSLEVELEX)), @as(?*const anyopaque, @ptrCast(attr)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 6)))], callback, userdata, reqId);
}
pub fn UA_Client_writeUserAccessLevelAttribute_async(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_attr: [*c]const UA_Byte, arg_callback: UA_ClientAsyncServiceCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var attr = arg_attr;
    _ = &attr;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_writeAttribute_async(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_USERACCESSLEVEL)), @as(?*const anyopaque, @ptrCast(attr)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 2)))], callback, userdata, reqId);
}
pub fn UA_Client_writeMinimumSamplingIntervalAttribute_async(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_attr: [*c]const UA_Double, arg_callback: UA_ClientAsyncServiceCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var attr = arg_attr;
    _ = &attr;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_writeAttribute_async(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_MINIMUMSAMPLINGINTERVAL)), @as(?*const anyopaque, @ptrCast(attr)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 10)))], callback, userdata, reqId);
}
pub fn UA_Client_writeHistorizingAttribute_async(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_attr: [*c]const UA_Boolean, arg_callback: UA_ClientAsyncServiceCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var attr = arg_attr;
    _ = &attr;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_writeAttribute_async(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_HISTORIZING)), @as(?*const anyopaque, @ptrCast(attr)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))], callback, userdata, reqId);
}
pub fn UA_Client_writeExecutableAttribute_async(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_attr: [*c]const UA_Boolean, arg_callback: UA_ClientAsyncServiceCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var attr = arg_attr;
    _ = &attr;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_writeAttribute_async(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_EXECUTABLE)), @as(?*const anyopaque, @ptrCast(attr)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))], callback, userdata, reqId);
}
pub fn UA_Client_writeUserExecutableAttribute_async(arg_client: ?*UA_Client, nodeId: UA_NodeId, arg_attr: [*c]const UA_Boolean, arg_callback: UA_ClientAsyncServiceCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &nodeId;
    var attr = arg_attr;
    _ = &attr;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_writeAttribute_async(client, &nodeId, @as(c_uint, @bitCast(UA_ATTRIBUTEID_USEREXECUTABLE)), @as(?*const anyopaque, @ptrCast(attr)), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 0)))], callback, userdata, reqId);
}
pub extern fn __UA_Client_call_async(client: ?*UA_Client, objectId: UA_NodeId, methodId: UA_NodeId, inputSize: usize, input: [*c]const UA_Variant, callback: UA_ClientAsyncServiceCallback, userdata: ?*anyopaque, reqId: [*c]UA_UInt32) UA_StatusCode;
pub const UA_ClientAsyncCallCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, ?*UA_CallResponse) callconv(.c) void;
pub fn UA_Client_call_async(arg_client: ?*UA_Client, objectId: UA_NodeId, methodId: UA_NodeId, arg_inputSize: usize, arg_input: [*c]const UA_Variant, arg_callback: UA_ClientAsyncCallCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &objectId;
    _ = &methodId;
    var inputSize = arg_inputSize;
    _ = &inputSize;
    var input = arg_input;
    _ = &input;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_call_async(client, objectId, methodId, inputSize, input, @as(UA_ClientAsyncServiceCallback, @ptrCast(@alignCast(callback))), userdata, reqId);
}
pub const UA_ClientAsyncAddNodesCallback = ?*const fn (?*UA_Client, ?*anyopaque, UA_UInt32, ?*UA_AddNodesResponse) callconv(.c) void;
pub extern fn __UA_Client_addNode_async(client: ?*UA_Client, nodeClass: UA_NodeClass, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, typeDefinition: UA_NodeId, attr: [*c]const UA_NodeAttributes, attributeType: ?*const UA_DataType, outNewNodeId: [*c]UA_NodeId, callback: UA_ClientAsyncServiceCallback, userdata: ?*anyopaque, reqId: [*c]UA_UInt32) UA_StatusCode;
pub fn UA_Client_addVariableNode_async(arg_client: ?*UA_Client, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, typeDefinition: UA_NodeId, attr: UA_VariableAttributes, arg_outNewNodeId: [*c]UA_NodeId, arg_callback: UA_ClientAsyncAddNodesCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &requestedNewNodeId;
    _ = &parentNodeId;
    _ = &referenceTypeId;
    _ = &browseName;
    _ = &typeDefinition;
    _ = &attr;
    var outNewNodeId = arg_outNewNodeId;
    _ = &outNewNodeId;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_addNode_async(client, @as(c_uint, @bitCast(UA_NODECLASS_VARIABLE)), requestedNewNodeId, parentNodeId, referenceTypeId, browseName, typeDefinition, @as([*c]const UA_NodeAttributes, @ptrCast(@alignCast(&attr))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 194)))], outNewNodeId, @as(UA_ClientAsyncServiceCallback, @ptrCast(@alignCast(callback))), userdata, reqId);
}
pub fn UA_Client_addVariableTypeNode_async(arg_client: ?*UA_Client, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, attr: UA_VariableTypeAttributes, arg_outNewNodeId: [*c]UA_NodeId, arg_callback: UA_ClientAsyncAddNodesCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &requestedNewNodeId;
    _ = &parentNodeId;
    _ = &referenceTypeId;
    _ = &browseName;
    _ = &attr;
    var outNewNodeId = arg_outNewNodeId;
    _ = &outNewNodeId;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_addNode_async(client, @as(c_uint, @bitCast(UA_NODECLASS_VARIABLETYPE)), requestedNewNodeId, parentNodeId, referenceTypeId, browseName, UA_NODEID_NULL, @as([*c]const UA_NodeAttributes, @ptrCast(@alignCast(&attr))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 197)))], outNewNodeId, @as(UA_ClientAsyncServiceCallback, @ptrCast(@alignCast(callback))), userdata, reqId);
}
pub fn UA_Client_addObjectNode_async(arg_client: ?*UA_Client, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, typeDefinition: UA_NodeId, attr: UA_ObjectAttributes, arg_outNewNodeId: [*c]UA_NodeId, arg_callback: UA_ClientAsyncAddNodesCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &requestedNewNodeId;
    _ = &parentNodeId;
    _ = &referenceTypeId;
    _ = &browseName;
    _ = &typeDefinition;
    _ = &attr;
    var outNewNodeId = arg_outNewNodeId;
    _ = &outNewNodeId;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_addNode_async(client, @as(c_uint, @bitCast(UA_NODECLASS_OBJECT)), requestedNewNodeId, parentNodeId, referenceTypeId, browseName, typeDefinition, @as([*c]const UA_NodeAttributes, @ptrCast(@alignCast(&attr))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 193)))], outNewNodeId, @as(UA_ClientAsyncServiceCallback, @ptrCast(@alignCast(callback))), userdata, reqId);
}
pub fn UA_Client_addObjectTypeNode_async(arg_client: ?*UA_Client, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, attr: UA_ObjectTypeAttributes, arg_outNewNodeId: [*c]UA_NodeId, arg_callback: UA_ClientAsyncAddNodesCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &requestedNewNodeId;
    _ = &parentNodeId;
    _ = &referenceTypeId;
    _ = &browseName;
    _ = &attr;
    var outNewNodeId = arg_outNewNodeId;
    _ = &outNewNodeId;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_addNode_async(client, @as(c_uint, @bitCast(UA_NODECLASS_OBJECTTYPE)), requestedNewNodeId, parentNodeId, referenceTypeId, browseName, UA_NODEID_NULL, @as([*c]const UA_NodeAttributes, @ptrCast(@alignCast(&attr))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 196)))], outNewNodeId, @as(UA_ClientAsyncServiceCallback, @ptrCast(@alignCast(callback))), userdata, reqId);
}
pub fn UA_Client_addViewNode_async(arg_client: ?*UA_Client, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, attr: UA_ViewAttributes, arg_outNewNodeId: [*c]UA_NodeId, arg_callback: UA_ClientAsyncAddNodesCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &requestedNewNodeId;
    _ = &parentNodeId;
    _ = &referenceTypeId;
    _ = &browseName;
    _ = &attr;
    var outNewNodeId = arg_outNewNodeId;
    _ = &outNewNodeId;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_addNode_async(client, @as(c_uint, @bitCast(UA_NODECLASS_VIEW)), requestedNewNodeId, parentNodeId, referenceTypeId, browseName, UA_NODEID_NULL, @as([*c]const UA_NodeAttributes, @ptrCast(@alignCast(&attr))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 200)))], outNewNodeId, @as(UA_ClientAsyncServiceCallback, @ptrCast(@alignCast(callback))), userdata, reqId);
}
pub fn UA_Client_addReferenceTypeNode_async(arg_client: ?*UA_Client, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, attr: UA_ReferenceTypeAttributes, arg_outNewNodeId: [*c]UA_NodeId, arg_callback: UA_ClientAsyncAddNodesCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &requestedNewNodeId;
    _ = &parentNodeId;
    _ = &referenceTypeId;
    _ = &browseName;
    _ = &attr;
    var outNewNodeId = arg_outNewNodeId;
    _ = &outNewNodeId;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_addNode_async(client, @as(c_uint, @bitCast(UA_NODECLASS_REFERENCETYPE)), requestedNewNodeId, parentNodeId, referenceTypeId, browseName, UA_NODEID_NULL, @as([*c]const UA_NodeAttributes, @ptrCast(@alignCast(&attr))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 198)))], outNewNodeId, @as(UA_ClientAsyncServiceCallback, @ptrCast(@alignCast(callback))), userdata, reqId);
}
pub fn UA_Client_addDataTypeNode_async(arg_client: ?*UA_Client, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, attr: UA_DataTypeAttributes, arg_outNewNodeId: [*c]UA_NodeId, arg_callback: UA_ClientAsyncAddNodesCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &requestedNewNodeId;
    _ = &parentNodeId;
    _ = &referenceTypeId;
    _ = &browseName;
    _ = &attr;
    var outNewNodeId = arg_outNewNodeId;
    _ = &outNewNodeId;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_addNode_async(client, @as(c_uint, @bitCast(UA_NODECLASS_DATATYPE)), requestedNewNodeId, parentNodeId, referenceTypeId, browseName, UA_NODEID_NULL, @as([*c]const UA_NodeAttributes, @ptrCast(@alignCast(&attr))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 199)))], outNewNodeId, @as(UA_ClientAsyncServiceCallback, @ptrCast(@alignCast(callback))), userdata, reqId);
}
pub fn UA_Client_addMethodNode_async(arg_client: ?*UA_Client, requestedNewNodeId: UA_NodeId, parentNodeId: UA_NodeId, referenceTypeId: UA_NodeId, browseName: UA_QualifiedName, attr: UA_MethodAttributes, arg_outNewNodeId: [*c]UA_NodeId, arg_callback: UA_ClientAsyncAddNodesCallback, arg_userdata: ?*anyopaque, arg_reqId: [*c]UA_UInt32) callconv(.c) UA_StatusCode {
    var client = arg_client;
    _ = &client;
    _ = &requestedNewNodeId;
    _ = &parentNodeId;
    _ = &referenceTypeId;
    _ = &browseName;
    _ = &attr;
    var outNewNodeId = arg_outNewNodeId;
    _ = &outNewNodeId;
    var callback = arg_callback;
    _ = &callback;
    var userdata = arg_userdata;
    _ = &userdata;
    var reqId = arg_reqId;
    _ = &reqId;
    return __UA_Client_addNode_async(client, @as(c_uint, @bitCast(UA_NODECLASS_METHOD)), requestedNewNodeId, parentNodeId, referenceTypeId, browseName, UA_NODEID_NULL, @as([*c]const UA_NodeAttributes, @ptrCast(@alignCast(&attr))), &UA_TYPES[@as(c_uint, @intCast(@as(c_int, 195)))], outNewNodeId, @as(UA_ClientAsyncServiceCallback, @ptrCast(@alignCast(callback))), userdata, reqId);
}
pub const UA_UsernamePasswordLogin = extern struct {
    username: UA_String = @import("std").mem.zeroes(UA_String),
    password: UA_String = @import("std").mem.zeroes(UA_String),
};
pub const UA_UsernamePasswordLoginCallback = ?*const fn ([*c]const UA_String, [*c]const UA_ByteString, usize, [*c]const UA_UsernamePasswordLogin, [*c]?*anyopaque, ?*anyopaque) callconv(.c) UA_StatusCode;
pub extern fn UA_AccessControl_default(config: [*c]UA_ServerConfig, allowAnonymous: UA_Boolean, userTokenPolicyUri: [*c]const UA_ByteString, usernamePasswordLoginSize: usize, usernamePasswordLogin: [*c]const UA_UsernamePasswordLogin) UA_StatusCode;
pub extern fn UA_AccessControl_defaultWithLoginCallback(config: [*c]UA_ServerConfig, allowAnonymous: UA_Boolean, userTokenPolicyUri: [*c]const UA_ByteString, usernamePasswordLoginSize: usize, usernamePasswordLogin: [*c]const UA_UsernamePasswordLogin, loginCallback: UA_UsernamePasswordLoginCallback, loginContext: ?*anyopaque) UA_StatusCode;
pub extern fn UA_CertificateVerification_AcceptAll(cv: [*c]UA_CertificateVerification) void;
pub extern fn UA_CertificateVerification_Trustlist(cv: [*c]UA_CertificateVerification, certificateTrustList: [*c]const UA_ByteString, certificateTrustListSize: usize, certificateIssuerList: [*c]const UA_ByteString, certificateIssuerListSize: usize, certificateRevocationList: [*c]const UA_ByteString, certificateRevocationListSize: usize) UA_StatusCode;
pub extern fn UA_CertificateVerification_CertFolders(cv: [*c]UA_CertificateVerification, trustListFolder: [*c]const u8, issuerListFolder: [*c]const u8, revocationListFolder: [*c]const u8) UA_StatusCode;
pub extern const UA_Log_Stdout_: UA_Logger;
pub extern var UA_Log_Stdout: [*c]const UA_Logger;
pub extern fn UA_Log_Stdout_withLevel(minlevel: UA_LogLevel) UA_Logger;
pub extern fn UA_Log_Stdout_new(minlevel: UA_LogLevel) [*c]UA_Logger;
pub extern fn UA_Nodestore_HashMap(ns: [*c]UA_Nodestore) UA_StatusCode;
pub extern fn UA_Nodestore_ZipTree(ns: [*c]UA_Nodestore) UA_StatusCode;
pub extern const UA_ConnectionConfig_default: UA_ConnectionConfig;
pub extern fn UA_ServerConfig_setMinimalCustomBuffer(config: [*c]UA_ServerConfig, portNumber: UA_UInt16, certificate: [*c]const UA_ByteString, sendBufferSize: UA_UInt32, recvBufferSize: UA_UInt32) UA_StatusCode;
pub fn UA_ServerConfig_setMinimal(arg_config: [*c]UA_ServerConfig, arg_portNumber: UA_UInt16, arg_certificate: [*c]const UA_ByteString) callconv(.c) UA_StatusCode {
    var config = arg_config;
    _ = &config;
    var portNumber = arg_portNumber;
    _ = &portNumber;
    var certificate = arg_certificate;
    _ = &certificate;
    return UA_ServerConfig_setMinimalCustomBuffer(config, portNumber, certificate, @as(UA_UInt32, @bitCast(@as(c_int, 0))), @as(UA_UInt32, @bitCast(@as(c_int, 0))));
}
pub extern fn UA_ServerConfig_setDefaultWithSecurityPolicies(conf: [*c]UA_ServerConfig, portNumber: UA_UInt16, certificate: [*c]const UA_ByteString, privateKey: [*c]const UA_ByteString, trustList: [*c]const UA_ByteString, trustListSize: usize, issuerList: [*c]const UA_ByteString, issuerListSize: usize, revocationList: [*c]const UA_ByteString, revocationListSize: usize) UA_StatusCode;
pub extern fn UA_ServerConfig_setDefaultWithSecureSecurityPolicies(conf: [*c]UA_ServerConfig, portNumber: UA_UInt16, certificate: [*c]const UA_ByteString, privateKey: [*c]const UA_ByteString, trustList: [*c]const UA_ByteString, trustListSize: usize, issuerList: [*c]const UA_ByteString, issuerListSize: usize, revocationList: [*c]const UA_ByteString, revocationListSize: usize) UA_StatusCode;
pub fn UA_ServerConfig_setDefault(arg_config: [*c]UA_ServerConfig) callconv(.c) UA_StatusCode {
    var config = arg_config;
    _ = &config;
    return UA_ServerConfig_setMinimal(config, @as(UA_UInt16, @bitCast(@as(c_short, @truncate(@as(c_int, 4840))))), null);
}
pub extern fn UA_ServerConfig_setBasics(conf: [*c]UA_ServerConfig) UA_StatusCode;
pub extern fn UA_ServerConfig_setBasics_withPort(conf: [*c]UA_ServerConfig, portNumber: UA_UInt16) UA_StatusCode;
pub extern fn UA_ServerConfig_addSecurityPolicyNone(config: [*c]UA_ServerConfig, certificate: [*c]const UA_ByteString) UA_StatusCode;
pub extern fn UA_ServerConfig_addSecurityPolicyBasic128Rsa15(config: [*c]UA_ServerConfig, certificate: [*c]const UA_ByteString, privateKey: [*c]const UA_ByteString) UA_StatusCode;
pub extern fn UA_ServerConfig_addSecurityPolicyBasic256(config: [*c]UA_ServerConfig, certificate: [*c]const UA_ByteString, privateKey: [*c]const UA_ByteString) UA_StatusCode;
pub extern fn UA_ServerConfig_addSecurityPolicyBasic256Sha256(config: [*c]UA_ServerConfig, certificate: [*c]const UA_ByteString, privateKey: [*c]const UA_ByteString) UA_StatusCode;
pub extern fn UA_ServerConfig_addSecurityPolicyAes128Sha256RsaOaep(config: [*c]UA_ServerConfig, certificate: [*c]const UA_ByteString, privateKey: [*c]const UA_ByteString) UA_StatusCode;
pub extern fn UA_ServerConfig_addSecurityPolicyAes256Sha256RsaPss(config: [*c]UA_ServerConfig, certificate: [*c]const UA_ByteString, privateKey: [*c]const UA_ByteString) UA_StatusCode;
pub extern fn UA_ServerConfig_addAllSecurityPolicies(config: [*c]UA_ServerConfig, certificate: [*c]const UA_ByteString, privateKey: [*c]const UA_ByteString) UA_StatusCode;
pub extern fn UA_ServerConfig_addAllSecureSecurityPolicies(config: [*c]UA_ServerConfig, certificate: [*c]const UA_ByteString, privateKey: [*c]const UA_ByteString) UA_StatusCode;
pub extern fn UA_ServerConfig_addEndpoint(config: [*c]UA_ServerConfig, securityPolicyUri: UA_String, securityMode: UA_MessageSecurityMode) UA_StatusCode;
pub extern fn UA_ServerConfig_addAllEndpoints(config: [*c]UA_ServerConfig) UA_StatusCode;
pub extern fn UA_ServerConfig_addAllSecureEndpoints(config: [*c]UA_ServerConfig) UA_StatusCode;
pub extern fn UA_ClientConfig_setDefault(config: [*c]UA_ClientConfig) UA_StatusCode;
pub extern fn UA_ClientConfig_setAuthenticationCert(config: [*c]UA_ClientConfig, certificateAuth: UA_ByteString, privateKeyAuth: UA_ByteString) UA_StatusCode;
pub extern fn UA_ClientConfig_setDefaultEncryption(config: [*c]UA_ClientConfig, localCertificate: UA_ByteString, privateKey: UA_ByteString, trustList: [*c]const UA_ByteString, trustListSize: usize, revocationList: [*c]const UA_ByteString, revocationListSize: usize) UA_StatusCode;
pub extern fn UA_SecurityPolicy_None(policy: [*c]UA_SecurityPolicy, localCertificate: UA_ByteString, logger: [*c]const UA_Logger) UA_StatusCode;
pub extern fn UA_SecurityPolicy_Basic128Rsa15(policy: [*c]UA_SecurityPolicy, localCertificate: UA_ByteString, localPrivateKey: UA_ByteString, logger: [*c]const UA_Logger) UA_StatusCode;
pub extern fn UA_SecurityPolicy_Basic256(policy: [*c]UA_SecurityPolicy, localCertificate: UA_ByteString, localPrivateKey: UA_ByteString, logger: [*c]const UA_Logger) UA_StatusCode;
pub extern fn UA_SecurityPolicy_Basic256Sha256(policy: [*c]UA_SecurityPolicy, localCertificate: UA_ByteString, localPrivateKey: UA_ByteString, logger: [*c]const UA_Logger) UA_StatusCode;
pub extern fn UA_SecurityPolicy_Aes128Sha256RsaOaep(policy: [*c]UA_SecurityPolicy, localCertificate: UA_ByteString, localPrivateKey: UA_ByteString, logger: [*c]const UA_Logger) UA_StatusCode;
pub extern fn UA_SecurityPolicy_Aes256Sha256RsaPss(policy: [*c]UA_SecurityPolicy, localCertificate: UA_ByteString, localPrivateKey: UA_ByteString, logger: [*c]const UA_Logger) UA_StatusCode;
pub extern fn UA_PubSubSecurityPolicy_Aes128Ctr(policy: [*c]UA_PubSubSecurityPolicy, logger: [*c]const UA_Logger) UA_StatusCode;
pub extern fn UA_PubSubSecurityPolicy_Aes256Ctr(policy: [*c]UA_PubSubSecurityPolicy, logger: [*c]const UA_Logger) UA_StatusCode;
const union_unnamed_34 = extern union {
    __wch: c_uint,
    __wchb: [4]u8,
};
pub const __mbstate_t = extern struct {
    __count: c_int = @import("std").mem.zeroes(c_int),
    __value: union_unnamed_34 = @import("std").mem.zeroes(union_unnamed_34),
};
pub const struct__G_fpos_t = extern struct {
    __pos: __off_t = @import("std").mem.zeroes(__off_t),
    __state: __mbstate_t = @import("std").mem.zeroes(__mbstate_t),
};
pub const __fpos_t = struct__G_fpos_t;
pub const struct__G_fpos64_t = extern struct {
    __pos: __off64_t = @import("std").mem.zeroes(__off64_t),
    __state: __mbstate_t = @import("std").mem.zeroes(__mbstate_t),
};
pub const __fpos64_t = struct__G_fpos64_t;
pub const struct__IO_marker = opaque {};
pub const _IO_lock_t = anyopaque;
pub const struct__IO_codecvt = opaque {};
pub const struct__IO_wide_data = opaque {};
pub const struct__IO_FILE = extern struct {
    _flags: c_int = @import("std").mem.zeroes(c_int),
    _IO_read_ptr: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    _IO_read_end: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    _IO_read_base: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    _IO_write_base: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    _IO_write_ptr: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    _IO_write_end: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    _IO_buf_base: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    _IO_buf_end: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    _IO_save_base: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    _IO_backup_base: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    _IO_save_end: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    _markers: ?*struct__IO_marker = @import("std").mem.zeroes(?*struct__IO_marker),
    _chain: [*c]struct__IO_FILE = @import("std").mem.zeroes([*c]struct__IO_FILE),
    _fileno: c_int = @import("std").mem.zeroes(c_int),
    _flags2: c_int = @import("std").mem.zeroes(c_int),
    _old_offset: __off_t = @import("std").mem.zeroes(__off_t),
    _cur_column: c_ushort = @import("std").mem.zeroes(c_ushort),
    _vtable_offset: i8 = @import("std").mem.zeroes(i8),
    _shortbuf: [1]u8 = @import("std").mem.zeroes([1]u8),
    _lock: ?*_IO_lock_t = @import("std").mem.zeroes(?*_IO_lock_t),
    _offset: __off64_t = @import("std").mem.zeroes(__off64_t),
    _codecvt: ?*struct__IO_codecvt = @import("std").mem.zeroes(?*struct__IO_codecvt),
    _wide_data: ?*struct__IO_wide_data = @import("std").mem.zeroes(?*struct__IO_wide_data),
    _freeres_list: [*c]struct__IO_FILE = @import("std").mem.zeroes([*c]struct__IO_FILE),
    _freeres_buf: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    __pad5: usize = @import("std").mem.zeroes(usize),
    _mode: c_int = @import("std").mem.zeroes(c_int),
    _unused2: [20]u8 = @import("std").mem.zeroes([20]u8),
};
pub const __FILE = struct__IO_FILE;
pub const FILE = struct__IO_FILE;
pub const cookie_read_function_t = fn (?*anyopaque, [*c]u8, usize) callconv(.c) __ssize_t;
pub const cookie_write_function_t = fn (?*anyopaque, [*c]const u8, usize) callconv(.c) __ssize_t;
pub const cookie_seek_function_t = fn (?*anyopaque, [*c]__off64_t, c_int) callconv(.c) c_int;
pub const cookie_close_function_t = fn (?*anyopaque) callconv(.c) c_int;
pub const struct__IO_cookie_io_functions_t = extern struct {
    read: ?*const cookie_read_function_t = @import("std").mem.zeroes(?*const cookie_read_function_t),
    write: ?*const cookie_write_function_t = @import("std").mem.zeroes(?*const cookie_write_function_t),
    seek: ?*const cookie_seek_function_t = @import("std").mem.zeroes(?*const cookie_seek_function_t),
    close: ?*const cookie_close_function_t = @import("std").mem.zeroes(?*const cookie_close_function_t),
};
pub const cookie_io_functions_t = struct__IO_cookie_io_functions_t;
pub const fpos_t = __fpos_t;
pub const fpos64_t = __fpos64_t;
pub extern var stdin: [*c]FILE;
pub extern var stdout: [*c]FILE;
pub extern var stderr: [*c]FILE;
pub extern fn remove(__filename: [*c]const u8) c_int;
pub extern fn rename(__old: [*c]const u8, __new: [*c]const u8) c_int;
pub extern fn renameat(__oldfd: c_int, __old: [*c]const u8, __newfd: c_int, __new: [*c]const u8) c_int;
pub extern fn renameat2(__oldfd: c_int, __old: [*c]const u8, __newfd: c_int, __new: [*c]const u8, __flags: c_uint) c_int;
pub extern fn fclose(__stream: [*c]FILE) c_int;
pub extern fn tmpfile() [*c]FILE;
pub extern fn tmpfile64() [*c]FILE;
pub extern fn tmpnam([*c]u8) [*c]u8;
pub extern fn tmpnam_r(__s: [*c]u8) [*c]u8;
pub extern fn tempnam(__dir: [*c]const u8, __pfx: [*c]const u8) [*c]u8;
pub extern fn fflush(__stream: [*c]FILE) c_int;
pub extern fn fflush_unlocked(__stream: [*c]FILE) c_int;
pub extern fn fcloseall() c_int;
pub extern fn fopen(__filename: [*c]const u8, __modes: [*c]const u8) [*c]FILE;
pub extern fn freopen(noalias __filename: [*c]const u8, noalias __modes: [*c]const u8, noalias __stream: [*c]FILE) [*c]FILE;
pub extern fn fopen64(noalias __filename: [*c]const u8, noalias __modes: [*c]const u8) [*c]FILE;
pub extern fn freopen64(noalias __filename: [*c]const u8, noalias __modes: [*c]const u8, noalias __stream: [*c]FILE) [*c]FILE;
pub extern fn fdopen(__fd: c_int, __modes: [*c]const u8) [*c]FILE;
pub extern fn fopencookie(noalias __magic_cookie: ?*anyopaque, noalias __modes: [*c]const u8, __io_funcs: cookie_io_functions_t) [*c]FILE;
pub extern fn fmemopen(__s: ?*anyopaque, __len: usize, __modes: [*c]const u8) [*c]FILE;
pub extern fn open_memstream(__bufloc: [*c][*c]u8, __sizeloc: [*c]usize) [*c]FILE;
pub extern fn setbuf(noalias __stream: [*c]FILE, noalias __buf: [*c]u8) void;
pub extern fn setvbuf(noalias __stream: [*c]FILE, noalias __buf: [*c]u8, __modes: c_int, __n: usize) c_int;
pub extern fn setbuffer(noalias __stream: [*c]FILE, noalias __buf: [*c]u8, __size: usize) void;
pub extern fn setlinebuf(__stream: [*c]FILE) void;
pub extern fn fprintf(noalias __stream: [*c]FILE, noalias __format: [*c]const u8, ...) c_int;
pub extern fn printf(__format: [*c]const u8, ...) c_int;
pub extern fn sprintf(noalias __s: [*c]u8, noalias __format: [*c]const u8, ...) c_int;
pub extern fn vfprintf(noalias __s: [*c]FILE, noalias __format: [*c]const u8, __arg: [*c]struct___va_list_tag_13) c_int;
pub extern fn vprintf(noalias __format: [*c]const u8, __arg: [*c]struct___va_list_tag_13) c_int;
pub extern fn vsprintf(noalias __s: [*c]u8, noalias __format: [*c]const u8, __arg: [*c]struct___va_list_tag_13) c_int;
pub extern fn snprintf(noalias __s: [*c]u8, __maxlen: c_ulong, noalias __format: [*c]const u8, ...) c_int;
pub extern fn vsnprintf(noalias __s: [*c]u8, __maxlen: c_ulong, noalias __format: [*c]const u8, __arg: [*c]struct___va_list_tag_13) c_int;
pub extern fn vasprintf(noalias __ptr: [*c][*c]u8, noalias __f: [*c]const u8, __arg: [*c]struct___va_list_tag_13) c_int;
pub extern fn __asprintf(noalias __ptr: [*c][*c]u8, noalias __fmt: [*c]const u8, ...) c_int;
pub extern fn asprintf(noalias __ptr: [*c][*c]u8, noalias __fmt: [*c]const u8, ...) c_int;
pub extern fn vdprintf(__fd: c_int, noalias __fmt: [*c]const u8, __arg: [*c]struct___va_list_tag_13) c_int;
pub extern fn dprintf(__fd: c_int, noalias __fmt: [*c]const u8, ...) c_int;
pub extern fn fscanf(noalias __stream: [*c]FILE, noalias __format: [*c]const u8, ...) c_int;
pub extern fn scanf(noalias __format: [*c]const u8, ...) c_int;
pub extern fn sscanf(noalias __s: [*c]const u8, noalias __format: [*c]const u8, ...) c_int;
pub extern fn vfscanf(noalias __s: [*c]FILE, noalias __format: [*c]const u8, __arg: [*c]struct___va_list_tag_13) c_int;
pub extern fn vscanf(noalias __format: [*c]const u8, __arg: [*c]struct___va_list_tag_13) c_int;
pub extern fn vsscanf(noalias __s: [*c]const u8, noalias __format: [*c]const u8, __arg: [*c]struct___va_list_tag_13) c_int;
pub extern fn fgetc(__stream: [*c]FILE) c_int;
pub extern fn getc(__stream: [*c]FILE) c_int;
pub extern fn getchar() c_int;
pub extern fn getc_unlocked(__stream: [*c]FILE) c_int;
pub extern fn getchar_unlocked() c_int;
pub extern fn fgetc_unlocked(__stream: [*c]FILE) c_int;
pub extern fn fputc(__c: c_int, __stream: [*c]FILE) c_int;
pub extern fn putc(__c: c_int, __stream: [*c]FILE) c_int;
pub extern fn putchar(__c: c_int) c_int;
pub extern fn fputc_unlocked(__c: c_int, __stream: [*c]FILE) c_int;
pub extern fn putc_unlocked(__c: c_int, __stream: [*c]FILE) c_int;
pub extern fn putchar_unlocked(__c: c_int) c_int;
pub extern fn getw(__stream: [*c]FILE) c_int;
pub extern fn putw(__w: c_int, __stream: [*c]FILE) c_int;
pub extern fn fgets(noalias __s: [*c]u8, __n: c_int, noalias __stream: [*c]FILE) [*c]u8;
pub extern fn fgets_unlocked(noalias __s: [*c]u8, __n: c_int, noalias __stream: [*c]FILE) [*c]u8;
pub extern fn __getdelim(noalias __lineptr: [*c][*c]u8, noalias __n: [*c]usize, __delimiter: c_int, noalias __stream: [*c]FILE) __ssize_t;
pub extern fn getdelim(noalias __lineptr: [*c][*c]u8, noalias __n: [*c]usize, __delimiter: c_int, noalias __stream: [*c]FILE) __ssize_t;
pub extern fn getline(noalias __lineptr: [*c][*c]u8, noalias __n: [*c]usize, noalias __stream: [*c]FILE) __ssize_t;
pub extern fn fputs(noalias __s: [*c]const u8, noalias __stream: [*c]FILE) c_int;
pub extern fn puts(__s: [*c]const u8) c_int;
pub extern fn ungetc(__c: c_int, __stream: [*c]FILE) c_int;
pub extern fn fread(__ptr: ?*anyopaque, __size: c_ulong, __n: c_ulong, __stream: [*c]FILE) c_ulong;
pub extern fn fwrite(__ptr: ?*const anyopaque, __size: c_ulong, __n: c_ulong, __s: [*c]FILE) c_ulong;
pub extern fn fputs_unlocked(noalias __s: [*c]const u8, noalias __stream: [*c]FILE) c_int;
pub extern fn fread_unlocked(noalias __ptr: ?*anyopaque, __size: usize, __n: usize, noalias __stream: [*c]FILE) usize;
pub extern fn fwrite_unlocked(noalias __ptr: ?*const anyopaque, __size: usize, __n: usize, noalias __stream: [*c]FILE) usize;
pub extern fn fseek(__stream: [*c]FILE, __off: c_long, __whence: c_int) c_int;
pub extern fn ftell(__stream: [*c]FILE) c_long;
pub extern fn rewind(__stream: [*c]FILE) void;
pub extern fn fseeko(__stream: [*c]FILE, __off: __off_t, __whence: c_int) c_int;
pub extern fn ftello(__stream: [*c]FILE) __off_t;
pub extern fn fgetpos(noalias __stream: [*c]FILE, noalias __pos: [*c]fpos_t) c_int;
pub extern fn fsetpos(__stream: [*c]FILE, __pos: [*c]const fpos_t) c_int;
pub extern fn fseeko64(__stream: [*c]FILE, __off: __off64_t, __whence: c_int) c_int;
pub extern fn ftello64(__stream: [*c]FILE) __off64_t;
pub extern fn fgetpos64(noalias __stream: [*c]FILE, noalias __pos: [*c]fpos64_t) c_int;
pub extern fn fsetpos64(__stream: [*c]FILE, __pos: [*c]const fpos64_t) c_int;
pub extern fn clearerr(__stream: [*c]FILE) void;
pub extern fn feof(__stream: [*c]FILE) c_int;
pub extern fn ferror(__stream: [*c]FILE) c_int;
pub extern fn clearerr_unlocked(__stream: [*c]FILE) void;
pub extern fn feof_unlocked(__stream: [*c]FILE) c_int;
pub extern fn ferror_unlocked(__stream: [*c]FILE) c_int;
pub extern fn perror(__s: [*c]const u8) void;
pub extern fn fileno(__stream: [*c]FILE) c_int;
pub extern fn fileno_unlocked(__stream: [*c]FILE) c_int;
pub extern fn pclose(__stream: [*c]FILE) c_int;
pub extern fn popen(__command: [*c]const u8, __modes: [*c]const u8) [*c]FILE;
pub extern fn ctermid(__s: [*c]u8) [*c]u8;
pub extern fn cuserid(__s: [*c]u8) [*c]u8;
pub const struct_obstack = opaque {};
pub extern fn obstack_printf(noalias __obstack: ?*struct_obstack, noalias __format: [*c]const u8, ...) c_int;
pub extern fn obstack_vprintf(noalias __obstack: ?*struct_obstack, noalias __format: [*c]const u8, __args: [*c]struct___va_list_tag_13) c_int;
pub extern fn flockfile(__stream: [*c]FILE) void;
pub extern fn ftrylockfile(__stream: [*c]FILE) c_int;
pub extern fn funlockfile(__stream: [*c]FILE) void;
pub extern fn __uflow([*c]FILE) c_int;
pub extern fn __overflow([*c]FILE, c_int) c_int;
pub extern fn __errno_location() [*c]c_int;
pub extern var program_invocation_name: [*c]u8;
pub extern var program_invocation_short_name: [*c]u8;
pub const error_t = c_int;
pub extern fn UA_Server_newFromFile(json_config: UA_ByteString) ?*UA_Server;
pub extern fn UA_ServerConfig_updateFromFile(config: [*c]UA_ServerConfig, json_config: UA_ByteString) UA_StatusCode;
pub const MATCH_EQUAL: c_int = 0;
pub const MATCH_AFTER: c_int = 1;
pub const MATCH_EQUAL_OR_AFTER: c_int = 2;
pub const MATCH_BEFORE: c_int = 3;
pub const MATCH_EQUAL_OR_BEFORE: c_int = 4;
pub const MatchStrategy = c_uint;
pub const UA_HistoryDataBackend = struct_UA_HistoryDataBackend;
pub const struct_UA_HistoryDataBackend = extern struct {
    context: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    deleteMembers: ?*const fn ([*c]UA_HistoryDataBackend) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]UA_HistoryDataBackend) callconv(.c) void),
    serverSetHistoryData: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, UA_Boolean, ?*const UA_DataValue) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, UA_Boolean, ?*const UA_DataValue) callconv(.c) UA_StatusCode),
    getHistoryData: ?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_HistoryDataBackend, UA_DateTime, UA_DateTime, [*c]const UA_NodeId, usize, UA_UInt32, UA_Boolean, UA_TimestampsToReturn, UA_NumericRange, UA_Boolean, [*c]const UA_ByteString, [*c]UA_ByteString, [*c]UA_HistoryData) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*UA_Server, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_HistoryDataBackend, UA_DateTime, UA_DateTime, [*c]const UA_NodeId, usize, UA_UInt32, UA_Boolean, UA_TimestampsToReturn, UA_NumericRange, UA_Boolean, [*c]const UA_ByteString, [*c]UA_ByteString, [*c]UA_HistoryData) callconv(.c) UA_StatusCode),
    getDateTimeMatch: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, UA_DateTime, MatchStrategy) callconv(.c) usize = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, UA_DateTime, MatchStrategy) callconv(.c) usize),
    getEnd: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId) callconv(.c) usize = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId) callconv(.c) usize),
    lastIndex: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId) callconv(.c) usize = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId) callconv(.c) usize),
    firstIndex: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId) callconv(.c) usize = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId) callconv(.c) usize),
    resultSize: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, usize, usize) callconv(.c) usize = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, usize, usize) callconv(.c) usize),
    copyDataValues: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, usize, usize, UA_Boolean, usize, UA_NumericRange, UA_Boolean, [*c]const UA_ByteString, [*c]UA_ByteString, [*c]usize, ?*UA_DataValue) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, usize, usize, UA_Boolean, usize, UA_NumericRange, UA_Boolean, [*c]const UA_ByteString, [*c]UA_ByteString, [*c]usize, ?*UA_DataValue) callconv(.c) UA_StatusCode),
    getDataValue: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, usize) callconv(.c) ?*const UA_DataValue = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, usize) callconv(.c) ?*const UA_DataValue),
    boundSupported: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId) callconv(.c) UA_Boolean = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId) callconv(.c) UA_Boolean),
    timestampsToReturnSupported: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, UA_TimestampsToReturn) callconv(.c) UA_Boolean = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, UA_TimestampsToReturn) callconv(.c) UA_Boolean),
    insertDataValue: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*const UA_DataValue) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*const UA_DataValue) callconv(.c) UA_StatusCode),
    replaceDataValue: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*const UA_DataValue) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*const UA_DataValue) callconv(.c) UA_StatusCode),
    updateDataValue: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*const UA_DataValue) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, ?*const UA_DataValue) callconv(.c) UA_StatusCode),
    removeDataValue: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, UA_DateTime, UA_DateTime) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, UA_DateTime, UA_DateTime) callconv(.c) UA_StatusCode),
};
pub const UA_HISTORIZINGUPDATESTRATEGY_USER: c_int = 0;
pub const UA_HISTORIZINGUPDATESTRATEGY_VALUESET: c_int = 1;
pub const UA_HISTORIZINGUPDATESTRATEGY_POLL: c_int = 2;
pub const UA_HistorizingUpdateStrategy = c_uint;
pub const UA_HistorizingNodeIdSettings = extern struct {
    historizingBackend: UA_HistoryDataBackend = @import("std").mem.zeroes(UA_HistoryDataBackend),
    maxHistoryDataResponseSize: usize = @import("std").mem.zeroes(usize),
    historizingUpdateStrategy: UA_HistorizingUpdateStrategy = @import("std").mem.zeroes(UA_HistorizingUpdateStrategy),
    pollingInterval: usize = @import("std").mem.zeroes(usize),
    userContext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const UA_HistoryDataGathering = struct_UA_HistoryDataGathering;
pub const struct_UA_HistoryDataGathering = extern struct {
    context: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    deleteMembers: ?*const fn ([*c]UA_HistoryDataGathering) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]UA_HistoryDataGathering) callconv(.c) void),
    registerNodeId: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, UA_HistorizingNodeIdSettings) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, UA_HistorizingNodeIdSettings) callconv(.c) UA_StatusCode),
    stopPoll: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId) callconv(.c) UA_StatusCode),
    startPoll: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId) callconv(.c) UA_StatusCode = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId) callconv(.c) UA_StatusCode),
    updateNodeIdSetting: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, UA_HistorizingNodeIdSettings) callconv(.c) UA_Boolean = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, UA_HistorizingNodeIdSettings) callconv(.c) UA_Boolean),
    getHistorizingSetting: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId) callconv(.c) [*c]const UA_HistorizingNodeIdSettings = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId) callconv(.c) [*c]const UA_HistorizingNodeIdSettings),
    setValue: ?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, UA_Boolean, ?*const UA_DataValue) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*UA_Server, ?*anyopaque, [*c]const UA_NodeId, ?*anyopaque, [*c]const UA_NodeId, UA_Boolean, ?*const UA_DataValue) callconv(.c) void),
};
pub extern fn UA_HistoryDatabase_default(gathering: UA_HistoryDataGathering) UA_HistoryDatabase;
pub extern fn UA_HistoryDataGathering_Default(initialNodeIdStoreSize: usize) UA_HistoryDataGathering;
pub extern fn UA_HistoryDataGathering_Circular(initialNodeIdStoreSize: usize) UA_HistoryDataGathering;
pub extern fn UA_HistoryDataBackend_Memory(initialNodeIdStoreSize: usize, initialDataStoreSize: usize) UA_HistoryDataBackend;
pub extern fn UA_HistoryDataBackend_Memory_Circular(initialNodeIdStoreSize: usize, initialDataStoreSize: usize) UA_HistoryDataBackend;
pub extern fn UA_HistoryDataBackend_Memory_clear(backend: [*c]UA_HistoryDataBackend) void;
pub extern fn UA_Log_Syslog_withLevel(minlevel: UA_LogLevel) UA_Logger;
pub extern fn UA_Log_Syslog_new(minlevel: UA_LogLevel) [*c]UA_Logger;
pub extern fn UA_Log_Syslog() UA_Logger;
pub const UA_CERTIFICATEFORMAT_DER: c_int = 0;
pub const UA_CERTIFICATEFORMAT_PEM: c_int = 1;
pub const UA_CertificateFormat = c_uint;
pub extern fn UA_CreateCertificate(logger: [*c]const UA_Logger, subject: [*c]const UA_String, subjectSize: usize, subjectAltName: [*c]const UA_String, subjectAltNameSize: usize, certFormat: UA_CertificateFormat, params: [*c]UA_KeyValueMap, outPrivateKey: [*c]UA_ByteString, outCertificate: [*c]UA_ByteString) UA_StatusCode;
pub const __llvm__ = @as(c_int, 1);
pub const __clang__ = @as(c_int, 1);
pub const __clang_major__ = @as(c_int, 19);
pub const __clang_minor__ = @as(c_int, 1);
pub const __clang_patchlevel__ = @as(c_int, 7);
pub const __clang_version__ = "19.1.7 (https://github.com/ziglang/zig-bootstrap de1b01a8c1dddf75a560123ac1c2ab182b4830da)";
pub const __GNUC__ = @as(c_int, 4);
pub const __GNUC_MINOR__ = @as(c_int, 2);
pub const __GNUC_PATCHLEVEL__ = @as(c_int, 1);
pub const __GXX_ABI_VERSION = @as(c_int, 1002);
pub const __ATOMIC_RELAXED = @as(c_int, 0);
pub const __ATOMIC_CONSUME = @as(c_int, 1);
pub const __ATOMIC_ACQUIRE = @as(c_int, 2);
pub const __ATOMIC_RELEASE = @as(c_int, 3);
pub const __ATOMIC_ACQ_REL = @as(c_int, 4);
pub const __ATOMIC_SEQ_CST = @as(c_int, 5);
pub const __MEMORY_SCOPE_SYSTEM = @as(c_int, 0);
pub const __MEMORY_SCOPE_DEVICE = @as(c_int, 1);
pub const __MEMORY_SCOPE_WRKGRP = @as(c_int, 2);
pub const __MEMORY_SCOPE_WVFRNT = @as(c_int, 3);
pub const __MEMORY_SCOPE_SINGLE = @as(c_int, 4);
pub const __OPENCL_MEMORY_SCOPE_WORK_ITEM = @as(c_int, 0);
pub const __OPENCL_MEMORY_SCOPE_WORK_GROUP = @as(c_int, 1);
pub const __OPENCL_MEMORY_SCOPE_DEVICE = @as(c_int, 2);
pub const __OPENCL_MEMORY_SCOPE_ALL_SVM_DEVICES = @as(c_int, 3);
pub const __OPENCL_MEMORY_SCOPE_SUB_GROUP = @as(c_int, 4);
pub const __FPCLASS_SNAN = @as(c_int, 0x0001);
pub const __FPCLASS_QNAN = @as(c_int, 0x0002);
pub const __FPCLASS_NEGINF = @as(c_int, 0x0004);
pub const __FPCLASS_NEGNORMAL = @as(c_int, 0x0008);
pub const __FPCLASS_NEGSUBNORMAL = @as(c_int, 0x0010);
pub const __FPCLASS_NEGZERO = @as(c_int, 0x0020);
pub const __FPCLASS_POSZERO = @as(c_int, 0x0040);
pub const __FPCLASS_POSSUBNORMAL = @as(c_int, 0x0080);
pub const __FPCLASS_POSNORMAL = @as(c_int, 0x0100);
pub const __FPCLASS_POSINF = @as(c_int, 0x0200);
pub const __PRAGMA_REDEFINE_EXTNAME = @as(c_int, 1);
pub const __VERSION__ = "Clang 19.1.7 (https://github.com/ziglang/zig-bootstrap de1b01a8c1dddf75a560123ac1c2ab182b4830da)";
pub const __OBJC_BOOL_IS_BOOL = @as(c_int, 0);
pub const __CONSTANT_CFSTRINGS__ = @as(c_int, 1);
pub const __clang_literal_encoding__ = "UTF-8";
pub const __clang_wide_literal_encoding__ = "UTF-32";
pub const __ORDER_LITTLE_ENDIAN__ = @as(c_int, 1234);
pub const __ORDER_BIG_ENDIAN__ = @as(c_int, 4321);
pub const __ORDER_PDP_ENDIAN__ = @as(c_int, 3412);
pub const __BYTE_ORDER__ = __ORDER_LITTLE_ENDIAN__;
pub const __LITTLE_ENDIAN__ = @as(c_int, 1);
pub const _LP64 = @as(c_int, 1);
pub const __LP64__ = @as(c_int, 1);
pub const __CHAR_BIT__ = @as(c_int, 8);
pub const __BOOL_WIDTH__ = @as(c_int, 8);
pub const __SHRT_WIDTH__ = @as(c_int, 16);
pub const __INT_WIDTH__ = @as(c_int, 32);
pub const __LONG_WIDTH__ = @as(c_int, 64);
pub const __LLONG_WIDTH__ = @as(c_int, 64);
pub const __BITINT_MAXWIDTH__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 8388608, .decimal);
pub const __SCHAR_MAX__ = @as(c_int, 127);
pub const __SHRT_MAX__ = @as(c_int, 32767);
pub const __INT_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __LONG_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal);
pub const __LONG_LONG_MAX__ = @as(c_longlong, 9223372036854775807);
pub const __WCHAR_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __WCHAR_WIDTH__ = @as(c_int, 32);
pub const __WINT_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 4294967295, .decimal);
pub const __WINT_WIDTH__ = @as(c_int, 32);
pub const __INTMAX_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal);
pub const __INTMAX_WIDTH__ = @as(c_int, 64);
pub const __SIZE_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_ulong, 18446744073709551615, .decimal);
pub const __SIZE_WIDTH__ = @as(c_int, 64);
pub const __UINTMAX_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_ulong, 18446744073709551615, .decimal);
pub const __UINTMAX_WIDTH__ = @as(c_int, 64);
pub const __PTRDIFF_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal);
pub const __PTRDIFF_WIDTH__ = @as(c_int, 64);
pub const __INTPTR_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal);
pub const __INTPTR_WIDTH__ = @as(c_int, 64);
pub const __UINTPTR_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_ulong, 18446744073709551615, .decimal);
pub const __UINTPTR_WIDTH__ = @as(c_int, 64);
pub const __SIZEOF_DOUBLE__ = @as(c_int, 8);
pub const __SIZEOF_FLOAT__ = @as(c_int, 4);
pub const __SIZEOF_INT__ = @as(c_int, 4);
pub const __SIZEOF_LONG__ = @as(c_int, 8);
pub const __SIZEOF_LONG_DOUBLE__ = @as(c_int, 16);
pub const __SIZEOF_LONG_LONG__ = @as(c_int, 8);
pub const __SIZEOF_POINTER__ = @as(c_int, 8);
pub const __SIZEOF_SHORT__ = @as(c_int, 2);
pub const __SIZEOF_PTRDIFF_T__ = @as(c_int, 8);
pub const __SIZEOF_SIZE_T__ = @as(c_int, 8);
pub const __SIZEOF_WCHAR_T__ = @as(c_int, 4);
pub const __SIZEOF_WINT_T__ = @as(c_int, 4);
pub const __SIZEOF_INT128__ = @as(c_int, 16);
pub const __INTMAX_TYPE__ = c_long;
pub const __INTMAX_FMTd__ = "ld";
pub const __INTMAX_FMTi__ = "li";
pub const __INTMAX_C_SUFFIX__ = @compileError("unable to translate macro: undefined identifier `L`");
// (no file):95:9
pub const __UINTMAX_TYPE__ = c_ulong;
pub const __UINTMAX_FMTo__ = "lo";
pub const __UINTMAX_FMTu__ = "lu";
pub const __UINTMAX_FMTx__ = "lx";
pub const __UINTMAX_FMTX__ = "lX";
pub const __UINTMAX_C_SUFFIX__ = @compileError("unable to translate macro: undefined identifier `UL`");
// (no file):101:9
pub const __PTRDIFF_TYPE__ = c_long;
pub const __PTRDIFF_FMTd__ = "ld";
pub const __PTRDIFF_FMTi__ = "li";
pub const __INTPTR_TYPE__ = c_long;
pub const __INTPTR_FMTd__ = "ld";
pub const __INTPTR_FMTi__ = "li";
pub const __SIZE_TYPE__ = c_ulong;
pub const __SIZE_FMTo__ = "lo";
pub const __SIZE_FMTu__ = "lu";
pub const __SIZE_FMTx__ = "lx";
pub const __SIZE_FMTX__ = "lX";
pub const __WCHAR_TYPE__ = c_int;
pub const __WINT_TYPE__ = c_uint;
pub const __SIG_ATOMIC_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __SIG_ATOMIC_WIDTH__ = @as(c_int, 32);
pub const __CHAR16_TYPE__ = c_ushort;
pub const __CHAR32_TYPE__ = c_uint;
pub const __UINTPTR_TYPE__ = c_ulong;
pub const __UINTPTR_FMTo__ = "lo";
pub const __UINTPTR_FMTu__ = "lu";
pub const __UINTPTR_FMTx__ = "lx";
pub const __UINTPTR_FMTX__ = "lX";
pub const __FLT16_DENORM_MIN__ = @as(f16, 5.9604644775390625e-8);
pub const __FLT16_NORM_MAX__ = @as(f16, 6.5504e+4);
pub const __FLT16_HAS_DENORM__ = @as(c_int, 1);
pub const __FLT16_DIG__ = @as(c_int, 3);
pub const __FLT16_DECIMAL_DIG__ = @as(c_int, 5);
pub const __FLT16_EPSILON__ = @as(f16, 9.765625e-4);
pub const __FLT16_HAS_INFINITY__ = @as(c_int, 1);
pub const __FLT16_HAS_QUIET_NAN__ = @as(c_int, 1);
pub const __FLT16_MANT_DIG__ = @as(c_int, 11);
pub const __FLT16_MAX_10_EXP__ = @as(c_int, 4);
pub const __FLT16_MAX_EXP__ = @as(c_int, 16);
pub const __FLT16_MAX__ = @as(f16, 6.5504e+4);
pub const __FLT16_MIN_10_EXP__ = -@as(c_int, 4);
pub const __FLT16_MIN_EXP__ = -@as(c_int, 13);
pub const __FLT16_MIN__ = @as(f16, 6.103515625e-5);
pub const __FLT_DENORM_MIN__ = @as(f32, 1.40129846e-45);
pub const __FLT_NORM_MAX__ = @as(f32, 3.40282347e+38);
pub const __FLT_HAS_DENORM__ = @as(c_int, 1);
pub const __FLT_DIG__ = @as(c_int, 6);
pub const __FLT_DECIMAL_DIG__ = @as(c_int, 9);
pub const __FLT_EPSILON__ = @as(f32, 1.19209290e-7);
pub const __FLT_HAS_INFINITY__ = @as(c_int, 1);
pub const __FLT_HAS_QUIET_NAN__ = @as(c_int, 1);
pub const __FLT_MANT_DIG__ = @as(c_int, 24);
pub const __FLT_MAX_10_EXP__ = @as(c_int, 38);
pub const __FLT_MAX_EXP__ = @as(c_int, 128);
pub const __FLT_MAX__ = @as(f32, 3.40282347e+38);
pub const __FLT_MIN_10_EXP__ = -@as(c_int, 37);
pub const __FLT_MIN_EXP__ = -@as(c_int, 125);
pub const __FLT_MIN__ = @as(f32, 1.17549435e-38);
pub const __DBL_DENORM_MIN__ = @as(f64, 4.9406564584124654e-324);
pub const __DBL_NORM_MAX__ = @as(f64, 1.7976931348623157e+308);
pub const __DBL_HAS_DENORM__ = @as(c_int, 1);
pub const __DBL_DIG__ = @as(c_int, 15);
pub const __DBL_DECIMAL_DIG__ = @as(c_int, 17);
pub const __DBL_EPSILON__ = @as(f64, 2.2204460492503131e-16);
pub const __DBL_HAS_INFINITY__ = @as(c_int, 1);
pub const __DBL_HAS_QUIET_NAN__ = @as(c_int, 1);
pub const __DBL_MANT_DIG__ = @as(c_int, 53);
pub const __DBL_MAX_10_EXP__ = @as(c_int, 308);
pub const __DBL_MAX_EXP__ = @as(c_int, 1024);
pub const __DBL_MAX__ = @as(f64, 1.7976931348623157e+308);
pub const __DBL_MIN_10_EXP__ = -@as(c_int, 307);
pub const __DBL_MIN_EXP__ = -@as(c_int, 1021);
pub const __DBL_MIN__ = @as(f64, 2.2250738585072014e-308);
pub const __LDBL_DENORM_MIN__ = @as(c_longdouble, 3.64519953188247460253e-4951);
pub const __LDBL_NORM_MAX__ = @as(c_longdouble, 1.18973149535723176502e+4932);
pub const __LDBL_HAS_DENORM__ = @as(c_int, 1);
pub const __LDBL_DIG__ = @as(c_int, 18);
pub const __LDBL_DECIMAL_DIG__ = @as(c_int, 21);
pub const __LDBL_EPSILON__ = @as(c_longdouble, 1.08420217248550443401e-19);
pub const __LDBL_HAS_INFINITY__ = @as(c_int, 1);
pub const __LDBL_HAS_QUIET_NAN__ = @as(c_int, 1);
pub const __LDBL_MANT_DIG__ = @as(c_int, 64);
pub const __LDBL_MAX_10_EXP__ = @as(c_int, 4932);
pub const __LDBL_MAX_EXP__ = @as(c_int, 16384);
pub const __LDBL_MAX__ = @as(c_longdouble, 1.18973149535723176502e+4932);
pub const __LDBL_MIN_10_EXP__ = -@as(c_int, 4931);
pub const __LDBL_MIN_EXP__ = -@as(c_int, 16381);
pub const __LDBL_MIN__ = @as(c_longdouble, 3.36210314311209350626e-4932);
pub const __POINTER_WIDTH__ = @as(c_int, 64);
pub const __BIGGEST_ALIGNMENT__ = @as(c_int, 16);
pub const __WINT_UNSIGNED__ = @as(c_int, 1);
pub const __INT8_TYPE__ = i8;
pub const __INT8_FMTd__ = "hhd";
pub const __INT8_FMTi__ = "hhi";
pub const __INT8_C_SUFFIX__ = "";
pub const __INT16_TYPE__ = c_short;
pub const __INT16_FMTd__ = "hd";
pub const __INT16_FMTi__ = "hi";
pub const __INT16_C_SUFFIX__ = "";
pub const __INT32_TYPE__ = c_int;
pub const __INT32_FMTd__ = "d";
pub const __INT32_FMTi__ = "i";
pub const __INT32_C_SUFFIX__ = "";
pub const __INT64_TYPE__ = c_long;
pub const __INT64_FMTd__ = "ld";
pub const __INT64_FMTi__ = "li";
pub const __INT64_C_SUFFIX__ = @compileError("unable to translate macro: undefined identifier `L`");
// (no file):202:9
pub const __UINT8_TYPE__ = u8;
pub const __UINT8_FMTo__ = "hho";
pub const __UINT8_FMTu__ = "hhu";
pub const __UINT8_FMTx__ = "hhx";
pub const __UINT8_FMTX__ = "hhX";
pub const __UINT8_C_SUFFIX__ = "";
pub const __UINT8_MAX__ = @as(c_int, 255);
pub const __INT8_MAX__ = @as(c_int, 127);
pub const __UINT16_TYPE__ = c_ushort;
pub const __UINT16_FMTo__ = "ho";
pub const __UINT16_FMTu__ = "hu";
pub const __UINT16_FMTx__ = "hx";
pub const __UINT16_FMTX__ = "hX";
pub const __UINT16_C_SUFFIX__ = "";
pub const __UINT16_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 65535, .decimal);
pub const __INT16_MAX__ = @as(c_int, 32767);
pub const __UINT32_TYPE__ = c_uint;
pub const __UINT32_FMTo__ = "o";
pub const __UINT32_FMTu__ = "u";
pub const __UINT32_FMTx__ = "x";
pub const __UINT32_FMTX__ = "X";
pub const __UINT32_C_SUFFIX__ = @compileError("unable to translate macro: undefined identifier `U`");
// (no file):224:9
pub const __UINT32_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 4294967295, .decimal);
pub const __INT32_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __UINT64_TYPE__ = c_ulong;
pub const __UINT64_FMTo__ = "lo";
pub const __UINT64_FMTu__ = "lu";
pub const __UINT64_FMTx__ = "lx";
pub const __UINT64_FMTX__ = "lX";
pub const __UINT64_C_SUFFIX__ = @compileError("unable to translate macro: undefined identifier `UL`");
// (no file):232:9
pub const __UINT64_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_ulong, 18446744073709551615, .decimal);
pub const __INT64_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal);
pub const __INT_LEAST8_TYPE__ = i8;
pub const __INT_LEAST8_MAX__ = @as(c_int, 127);
pub const __INT_LEAST8_WIDTH__ = @as(c_int, 8);
pub const __INT_LEAST8_FMTd__ = "hhd";
pub const __INT_LEAST8_FMTi__ = "hhi";
pub const __UINT_LEAST8_TYPE__ = u8;
pub const __UINT_LEAST8_MAX__ = @as(c_int, 255);
pub const __UINT_LEAST8_FMTo__ = "hho";
pub const __UINT_LEAST8_FMTu__ = "hhu";
pub const __UINT_LEAST8_FMTx__ = "hhx";
pub const __UINT_LEAST8_FMTX__ = "hhX";
pub const __INT_LEAST16_TYPE__ = c_short;
pub const __INT_LEAST16_MAX__ = @as(c_int, 32767);
pub const __INT_LEAST16_WIDTH__ = @as(c_int, 16);
pub const __INT_LEAST16_FMTd__ = "hd";
pub const __INT_LEAST16_FMTi__ = "hi";
pub const __UINT_LEAST16_TYPE__ = c_ushort;
pub const __UINT_LEAST16_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 65535, .decimal);
pub const __UINT_LEAST16_FMTo__ = "ho";
pub const __UINT_LEAST16_FMTu__ = "hu";
pub const __UINT_LEAST16_FMTx__ = "hx";
pub const __UINT_LEAST16_FMTX__ = "hX";
pub const __INT_LEAST32_TYPE__ = c_int;
pub const __INT_LEAST32_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __INT_LEAST32_WIDTH__ = @as(c_int, 32);
pub const __INT_LEAST32_FMTd__ = "d";
pub const __INT_LEAST32_FMTi__ = "i";
pub const __UINT_LEAST32_TYPE__ = c_uint;
pub const __UINT_LEAST32_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 4294967295, .decimal);
pub const __UINT_LEAST32_FMTo__ = "o";
pub const __UINT_LEAST32_FMTu__ = "u";
pub const __UINT_LEAST32_FMTx__ = "x";
pub const __UINT_LEAST32_FMTX__ = "X";
pub const __INT_LEAST64_TYPE__ = c_long;
pub const __INT_LEAST64_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal);
pub const __INT_LEAST64_WIDTH__ = @as(c_int, 64);
pub const __INT_LEAST64_FMTd__ = "ld";
pub const __INT_LEAST64_FMTi__ = "li";
pub const __UINT_LEAST64_TYPE__ = c_ulong;
pub const __UINT_LEAST64_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_ulong, 18446744073709551615, .decimal);
pub const __UINT_LEAST64_FMTo__ = "lo";
pub const __UINT_LEAST64_FMTu__ = "lu";
pub const __UINT_LEAST64_FMTx__ = "lx";
pub const __UINT_LEAST64_FMTX__ = "lX";
pub const __INT_FAST8_TYPE__ = i8;
pub const __INT_FAST8_MAX__ = @as(c_int, 127);
pub const __INT_FAST8_WIDTH__ = @as(c_int, 8);
pub const __INT_FAST8_FMTd__ = "hhd";
pub const __INT_FAST8_FMTi__ = "hhi";
pub const __UINT_FAST8_TYPE__ = u8;
pub const __UINT_FAST8_MAX__ = @as(c_int, 255);
pub const __UINT_FAST8_FMTo__ = "hho";
pub const __UINT_FAST8_FMTu__ = "hhu";
pub const __UINT_FAST8_FMTx__ = "hhx";
pub const __UINT_FAST8_FMTX__ = "hhX";
pub const __INT_FAST16_TYPE__ = c_short;
pub const __INT_FAST16_MAX__ = @as(c_int, 32767);
pub const __INT_FAST16_WIDTH__ = @as(c_int, 16);
pub const __INT_FAST16_FMTd__ = "hd";
pub const __INT_FAST16_FMTi__ = "hi";
pub const __UINT_FAST16_TYPE__ = c_ushort;
pub const __UINT_FAST16_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 65535, .decimal);
pub const __UINT_FAST16_FMTo__ = "ho";
pub const __UINT_FAST16_FMTu__ = "hu";
pub const __UINT_FAST16_FMTx__ = "hx";
pub const __UINT_FAST16_FMTX__ = "hX";
pub const __INT_FAST32_TYPE__ = c_int;
pub const __INT_FAST32_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __INT_FAST32_WIDTH__ = @as(c_int, 32);
pub const __INT_FAST32_FMTd__ = "d";
pub const __INT_FAST32_FMTi__ = "i";
pub const __UINT_FAST32_TYPE__ = c_uint;
pub const __UINT_FAST32_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 4294967295, .decimal);
pub const __UINT_FAST32_FMTo__ = "o";
pub const __UINT_FAST32_FMTu__ = "u";
pub const __UINT_FAST32_FMTx__ = "x";
pub const __UINT_FAST32_FMTX__ = "X";
pub const __INT_FAST64_TYPE__ = c_long;
pub const __INT_FAST64_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal);
pub const __INT_FAST64_WIDTH__ = @as(c_int, 64);
pub const __INT_FAST64_FMTd__ = "ld";
pub const __INT_FAST64_FMTi__ = "li";
pub const __UINT_FAST64_TYPE__ = c_ulong;
pub const __UINT_FAST64_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_ulong, 18446744073709551615, .decimal);
pub const __UINT_FAST64_FMTo__ = "lo";
pub const __UINT_FAST64_FMTu__ = "lu";
pub const __UINT_FAST64_FMTx__ = "lx";
pub const __UINT_FAST64_FMTX__ = "lX";
pub const __USER_LABEL_PREFIX__ = "";
pub const __FINITE_MATH_ONLY__ = @as(c_int, 0);
pub const __GNUC_STDC_INLINE__ = @as(c_int, 1);
pub const __GCC_ATOMIC_TEST_AND_SET_TRUEVAL = @as(c_int, 1);
pub const __GCC_DESTRUCTIVE_SIZE = @as(c_int, 64);
pub const __GCC_CONSTRUCTIVE_SIZE = @as(c_int, 64);
pub const __CLANG_ATOMIC_BOOL_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_CHAR_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_CHAR16_T_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_CHAR32_T_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_WCHAR_T_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_SHORT_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_INT_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_LONG_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_LLONG_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_POINTER_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_BOOL_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_CHAR_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_CHAR16_T_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_CHAR32_T_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_WCHAR_T_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_SHORT_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_INT_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_LONG_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_LLONG_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_POINTER_LOCK_FREE = @as(c_int, 2);
pub const __NO_INLINE__ = @as(c_int, 1);
pub const __PIC__ = @as(c_int, 2);
pub const __pic__ = @as(c_int, 2);
pub const __FLT_RADIX__ = @as(c_int, 2);
pub const __DECIMAL_DIG__ = __LDBL_DECIMAL_DIG__;
pub const __SSP_STRONG__ = @as(c_int, 2);
pub const __ELF__ = @as(c_int, 1);
pub const __GCC_ASM_FLAG_OUTPUTS__ = @as(c_int, 1);
pub const __code_model_small__ = @as(c_int, 1);
pub const __amd64__ = @as(c_int, 1);
pub const __amd64 = @as(c_int, 1);
pub const __x86_64 = @as(c_int, 1);
pub const __x86_64__ = @as(c_int, 1);
pub const __SEG_GS = @as(c_int, 1);
pub const __SEG_FS = @as(c_int, 1);
pub const __seg_gs = @compileError("unable to translate macro: undefined identifier `address_space`");
// (no file):366:9
pub const __seg_fs = @compileError("unable to translate macro: undefined identifier `address_space`");
// (no file):367:9
pub const __corei7 = @as(c_int, 1);
pub const __corei7__ = @as(c_int, 1);
pub const __tune_corei7__ = @as(c_int, 1);
pub const __REGISTER_PREFIX__ = "";
pub const __NO_MATH_INLINES = @as(c_int, 1);
pub const __AES__ = @as(c_int, 1);
pub const __PCLMUL__ = @as(c_int, 1);
pub const __LAHF_SAHF__ = @as(c_int, 1);
pub const __LZCNT__ = @as(c_int, 1);
pub const __RDRND__ = @as(c_int, 1);
pub const __FSGSBASE__ = @as(c_int, 1);
pub const __BMI__ = @as(c_int, 1);
pub const __BMI2__ = @as(c_int, 1);
pub const __POPCNT__ = @as(c_int, 1);
pub const __PRFCHW__ = @as(c_int, 1);
pub const __RDSEED__ = @as(c_int, 1);
pub const __ADX__ = @as(c_int, 1);
pub const __MOVBE__ = @as(c_int, 1);
pub const __FMA__ = @as(c_int, 1);
pub const __F16C__ = @as(c_int, 1);
pub const __FXSR__ = @as(c_int, 1);
pub const __XSAVE__ = @as(c_int, 1);
pub const __XSAVEOPT__ = @as(c_int, 1);
pub const __XSAVEC__ = @as(c_int, 1);
pub const __XSAVES__ = @as(c_int, 1);
pub const __CLFLUSHOPT__ = @as(c_int, 1);
pub const __SGX__ = @as(c_int, 1);
pub const __INVPCID__ = @as(c_int, 1);
pub const __CRC32__ = @as(c_int, 1);
pub const __AVX2__ = @as(c_int, 1);
pub const __AVX__ = @as(c_int, 1);
pub const __SSE4_2__ = @as(c_int, 1);
pub const __SSE4_1__ = @as(c_int, 1);
pub const __SSSE3__ = @as(c_int, 1);
pub const __SSE3__ = @as(c_int, 1);
pub const __SSE2__ = @as(c_int, 1);
pub const __SSE2_MATH__ = @as(c_int, 1);
pub const __SSE__ = @as(c_int, 1);
pub const __SSE_MATH__ = @as(c_int, 1);
pub const __MMX__ = @as(c_int, 1);
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 = @as(c_int, 1);
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 = @as(c_int, 1);
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 = @as(c_int, 1);
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 = @as(c_int, 1);
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16 = @as(c_int, 1);
pub const __SIZEOF_FLOAT128__ = @as(c_int, 16);
pub const unix = @as(c_int, 1);
pub const __unix = @as(c_int, 1);
pub const __unix__ = @as(c_int, 1);
pub const linux = @as(c_int, 1);
pub const __linux = @as(c_int, 1);
pub const __linux__ = @as(c_int, 1);
pub const __gnu_linux__ = @as(c_int, 1);
pub const __FLOAT128__ = @as(c_int, 1);
pub const __STDC__ = @as(c_int, 1);
pub const __STDC_HOSTED__ = @as(c_int, 1);
pub const __STDC_VERSION__ = @as(c_long, 201710);
pub const __STDC_UTF_16__ = @as(c_int, 1);
pub const __STDC_UTF_32__ = @as(c_int, 1);
pub const __STDC_EMBED_NOT_FOUND__ = @as(c_int, 0);
pub const __STDC_EMBED_FOUND__ = @as(c_int, 1);
pub const __STDC_EMBED_EMPTY__ = @as(c_int, 2);
pub const _DEBUG = @as(c_int, 1);
pub const __GLIBC_MINOR__ = @as(c_int, 39);
pub const __GCC_HAVE_DWARF2_CFI_ASM = @as(c_int, 1);
pub const OPEN62541_H_ = "";
pub const UA_OPEN62541_VER_MAJOR = @as(c_int, 1);
pub const UA_OPEN62541_VER_MINOR = @as(c_int, 4);
pub const UA_OPEN62541_VER_PATCH = @as(c_int, 13);
pub const UA_OPEN62541_VER_LABEL = "";
pub const UA_OPEN62541_VER_COMMIT = "v1.4.13";
pub const UA_OPEN62541_VERSION = "v1.4.13";
pub const UA_ARCHITECTURE_POSIX = "";
pub const UA_LOGLEVEL = @as(c_int, 100);
pub const UA_ENABLE_AMALGAMATION = "";
pub const UA_ENABLE_METHODCALLS = "";
pub const UA_ENABLE_NODEMANAGEMENT = "";
pub const UA_ENABLE_SUBSCRIPTIONS = "";
pub const UA_ENABLE_PUBSUB = "";
pub const UA_ENABLE_PUBSUB_ENCRYPTION = "";
pub const UA_ENABLE_PUBSUB_INFORMATIONMODEL = "";
pub const UA_ENABLE_DA = "";
pub const UA_ENABLE_DIAGNOSTICS = "";
pub const UA_ENABLE_HISTORIZING = "";
pub const UA_ENABLE_PARSING = "";
pub const UA_ENABLE_SUBSCRIPTIONS_EVENTS = "";
pub const UA_ENABLE_JSON_ENCODING = "";
pub const UA_ENABLE_ENCRYPTION_MBEDTLS = "";
pub const UA_ENABLE_ENCRYPTION = "";
pub const UA_MULTITHREADING = @as(c_int, 100);
pub const UA_ENABLE_STATUSCODE_DESCRIPTIONS = "";
pub const UA_ENABLE_TYPEDESCRIPTION = "";
pub const UA_ENABLE_NODESET_COMPILER_DESCRIPTIONS = "";
pub const UA_ENABLE_DISCOVERY = "";
pub const UA_ENABLE_DISCOVERY_SEMAPHORE = "";
pub const UA_GENERATED_NAMESPACE_ZERO = "";
pub const UA_GENERATED_NAMESPACE_ZERO_FULL = "";
pub const _UA_BEGIN_DECLS = "";
pub const _UA_END_DECLS = "";
pub const _XOPEN_SOURCE = @as(c_int, 600);
pub const _DEFAULT_SOURCE = "";
pub const _BSD_SOURCE = "";
pub const _GNU_SOURCE = "";
pub const UA_HAS_GETIFADDR = @as(c_int, 1);
pub const __need_ptrdiff_t = "";
pub const __need_size_t = "";
pub const __need_wchar_t = "";
pub const __need_NULL = "";
pub const __need_max_align_t = "";
pub const __need_offsetof = "";
pub const __STDDEF_H = "";
pub const _PTRDIFF_T = "";
pub const _SIZE_T = "";
pub const _WCHAR_T = "";
pub const NULL = @import("std").zig.c_translation.cast(?*anyopaque, @as(c_int, 0));
pub const __CLANG_MAX_ALIGN_T_DEFINED = "";
pub const offsetof = @compileError("unable to translate C expr: unexpected token 'an identifier'");
// /home/chris/.zvm/0.14.1/lib/include/__stddef_offsetof.h:16:9
pub const __CLANG_STDINT_H = "";
pub const _STDINT_H = @as(c_int, 1);
pub const __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION = "";
pub const _FEATURES_H = @as(c_int, 1);
pub const __KERNEL_STRICT_NAMES = "";
pub inline fn __GNUC_PREREQ(maj: anytype, min: anytype) @TypeOf(((__GNUC__ << @as(c_int, 16)) + __GNUC_MINOR__) >= ((maj << @as(c_int, 16)) + min)) {
    _ = &maj;
    _ = &min;
    return ((__GNUC__ << @as(c_int, 16)) + __GNUC_MINOR__) >= ((maj << @as(c_int, 16)) + min);
}
pub inline fn __glibc_clang_prereq(maj: anytype, min: anytype) @TypeOf(((__clang_major__ << @as(c_int, 16)) + __clang_minor__) >= ((maj << @as(c_int, 16)) + min)) {
    _ = &maj;
    _ = &min;
    return ((__clang_major__ << @as(c_int, 16)) + __clang_minor__) >= ((maj << @as(c_int, 16)) + min);
}
pub const __GLIBC_USE = @compileError("unable to translate macro: undefined identifier `__GLIBC_USE_`");
// /usr/include/features.h:188:9
pub const _ISOC95_SOURCE = @as(c_int, 1);
pub const _ISOC99_SOURCE = @as(c_int, 1);
pub const _ISOC11_SOURCE = @as(c_int, 1);
pub const _ISOC2X_SOURCE = @as(c_int, 1);
pub const _POSIX_SOURCE = @as(c_int, 1);
pub const _POSIX_C_SOURCE = @as(c_long, 200809);
pub const _XOPEN_SOURCE_EXTENDED = @as(c_int, 1);
pub const _LARGEFILE64_SOURCE = @as(c_int, 1);
pub const _ATFILE_SOURCE = @as(c_int, 1);
pub const _DYNAMIC_STACK_SIZE_SOURCE = @as(c_int, 1);
pub const __GLIBC_USE_ISOC2X = @as(c_int, 1);
pub const __USE_ISOC11 = @as(c_int, 1);
pub const __USE_ISOC99 = @as(c_int, 1);
pub const __USE_ISOC95 = @as(c_int, 1);
pub const __USE_POSIX = @as(c_int, 1);
pub const __USE_POSIX2 = @as(c_int, 1);
pub const __USE_POSIX199309 = @as(c_int, 1);
pub const __USE_POSIX199506 = @as(c_int, 1);
pub const __USE_XOPEN2K = @as(c_int, 1);
pub const __USE_XOPEN2K8 = @as(c_int, 1);
pub const __USE_XOPEN = @as(c_int, 1);
pub const __USE_XOPEN_EXTENDED = @as(c_int, 1);
pub const __USE_UNIX98 = @as(c_int, 1);
pub const _LARGEFILE_SOURCE = @as(c_int, 1);
pub const __USE_XOPEN2K8XSI = @as(c_int, 1);
pub const __USE_XOPEN2KXSI = @as(c_int, 1);
pub const __USE_LARGEFILE = @as(c_int, 1);
pub const __USE_LARGEFILE64 = @as(c_int, 1);
pub const __WORDSIZE = @as(c_int, 64);
pub const __WORDSIZE_TIME64_COMPAT32 = @as(c_int, 1);
pub const __SYSCALL_WORDSIZE = @as(c_int, 64);
pub const __TIMESIZE = __WORDSIZE;
pub const __USE_MISC = @as(c_int, 1);
pub const __USE_ATFILE = @as(c_int, 1);
pub const __USE_DYNAMIC_STACK_SIZE = @as(c_int, 1);
pub const __USE_GNU = @as(c_int, 1);
pub const __USE_FORTIFY_LEVEL = @as(c_int, 0);
pub const __GLIBC_USE_DEPRECATED_GETS = @as(c_int, 0);
pub const __GLIBC_USE_DEPRECATED_SCANF = @as(c_int, 0);
pub const __GLIBC_USE_C2X_STRTOL = @as(c_int, 1);
pub const _STDC_PREDEF_H = @as(c_int, 1);
pub const __STDC_IEC_559__ = @as(c_int, 1);
pub const __STDC_IEC_60559_BFP__ = @as(c_long, 201404);
pub const __STDC_IEC_559_COMPLEX__ = @as(c_int, 1);
pub const __STDC_IEC_60559_COMPLEX__ = @as(c_long, 201404);
pub const __STDC_ISO_10646__ = @as(c_long, 201706);
pub const __GNU_LIBRARY__ = @as(c_int, 6);
pub const __GLIBC__ = @as(c_int, 2);
pub inline fn __GLIBC_PREREQ(maj: anytype, min: anytype) @TypeOf(((__GLIBC__ << @as(c_int, 16)) + __GLIBC_MINOR__) >= ((maj << @as(c_int, 16)) + min)) {
    _ = &maj;
    _ = &min;
    return ((__GLIBC__ << @as(c_int, 16)) + __GLIBC_MINOR__) >= ((maj << @as(c_int, 16)) + min);
}
pub const _SYS_CDEFS_H = @as(c_int, 1);
pub const __glibc_has_attribute = @compileError("unable to translate macro: undefined identifier `__has_attribute`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:45:10
pub inline fn __glibc_has_builtin(name: anytype) @TypeOf(__has_builtin(name)) {
    _ = &name;
    return __has_builtin(name);
}
pub const __glibc_has_extension = @compileError("unable to translate macro: undefined identifier `__has_extension`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:10
pub const __LEAF = "";
pub const __LEAF_ATTR = "";
pub const __THROW = @compileError("unable to translate macro: undefined identifier `__nothrow__`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:79:11
pub const __THROWNL = @compileError("unable to translate macro: undefined identifier `__nothrow__`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:80:11
pub const __NTH = @compileError("unable to translate macro: undefined identifier `__nothrow__`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:81:11
pub const __NTHNL = @compileError("unable to translate macro: undefined identifier `__nothrow__`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:82:11
pub const __COLD = @compileError("unable to translate macro: undefined identifier `__cold__`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:102:11
pub inline fn __P(args: anytype) @TypeOf(args) {
    _ = &args;
    return args;
}
pub inline fn __PMT(args: anytype) @TypeOf(args) {
    _ = &args;
    return args;
}
pub const __CONCAT = @compileError("unable to translate C expr: unexpected token '##'");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:131:9
pub const __STRING = @compileError("unable to translate C expr: unexpected token '#'");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:132:9
pub const __ptr_t = ?*anyopaque;
pub const __BEGIN_DECLS = "";
pub const __END_DECLS = "";
pub inline fn __bos(ptr: anytype) @TypeOf(__builtin_object_size(ptr, __USE_FORTIFY_LEVEL > @as(c_int, 1))) {
    _ = &ptr;
    return __builtin_object_size(ptr, __USE_FORTIFY_LEVEL > @as(c_int, 1));
}
pub inline fn __bos0(ptr: anytype) @TypeOf(__builtin_object_size(ptr, @as(c_int, 0))) {
    _ = &ptr;
    return __builtin_object_size(ptr, @as(c_int, 0));
}
pub inline fn __glibc_objsize0(__o: anytype) @TypeOf(__bos0(__o)) {
    _ = &__o;
    return __bos0(__o);
}
pub inline fn __glibc_objsize(__o: anytype) @TypeOf(__bos(__o)) {
    _ = &__o;
    return __bos(__o);
}
pub const __warnattr = @compileError("unable to translate C expr: unexpected token ''");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:216:10
pub const __errordecl = @compileError("unable to translate C expr: unexpected token 'extern'");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:217:10
pub const __flexarr = @compileError("unable to translate C expr: unexpected token '['");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:225:10
pub const __glibc_c99_flexarr_available = @as(c_int, 1);
pub const __REDIRECT = @compileError("unable to translate C expr: unexpected token '__asm__'");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:256:10
pub const __REDIRECT_NTH = @compileError("unable to translate C expr: unexpected token '__asm__'");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:263:11
pub const __REDIRECT_NTHNL = @compileError("unable to translate C expr: unexpected token '__asm__'");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:265:11
pub const __ASMNAME = @compileError("unable to translate C expr: unexpected token ','");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:268:10
pub inline fn __ASMNAME2(prefix: anytype, cname: anytype) @TypeOf(__STRING(prefix) ++ cname) {
    _ = &prefix;
    _ = &cname;
    return __STRING(prefix) ++ cname;
}
pub const __REDIRECT_FORTIFY = __REDIRECT;
pub const __REDIRECT_FORTIFY_NTH = __REDIRECT_NTH;
pub const __attribute_malloc__ = @compileError("unable to translate macro: undefined identifier `__malloc__`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:298:10
pub const __attribute_alloc_size__ = @compileError("unable to translate C expr: unexpected token ''");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:309:10
pub const __attribute_alloc_align__ = @compileError("unable to translate macro: undefined identifier `__alloc_align__`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:315:10
pub const __attribute_pure__ = @compileError("unable to translate macro: undefined identifier `__pure__`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:325:10
pub const __attribute_const__ = @compileError("unable to translate C expr: unexpected token '__attribute__'");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:332:10
pub const __attribute_maybe_unused__ = @compileError("unable to translate macro: undefined identifier `__unused__`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:338:10
pub const __attribute_used__ = @compileError("unable to translate macro: undefined identifier `__used__`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:347:10
pub const __attribute_noinline__ = @compileError("unable to translate macro: undefined identifier `__noinline__`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:348:10
pub const __attribute_deprecated__ = @compileError("unable to translate macro: undefined identifier `__deprecated__`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:356:10
pub const __attribute_deprecated_msg__ = @compileError("unable to translate macro: undefined identifier `__deprecated__`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:366:10
pub const __attribute_format_arg__ = @compileError("unable to translate macro: undefined identifier `__format_arg__`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:379:10
pub const __attribute_format_strfmon__ = @compileError("unable to translate macro: undefined identifier `__format__`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:389:10
pub const __attribute_nonnull__ = @compileError("unable to translate macro: undefined identifier `__nonnull__`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:401:11
pub inline fn __nonnull(params: anytype) @TypeOf(__attribute_nonnull__(params)) {
    _ = &params;
    return __attribute_nonnull__(params);
}
pub const __returns_nonnull = @compileError("unable to translate macro: undefined identifier `__returns_nonnull__`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:414:10
pub const __attribute_warn_unused_result__ = @compileError("unable to translate macro: undefined identifier `__warn_unused_result__`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:423:10
pub const __wur = "";
pub const __always_inline = @compileError("unable to translate macro: undefined identifier `__always_inline__`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:441:10
pub const __attribute_artificial__ = @compileError("unable to translate macro: undefined identifier `__artificial__`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:450:10
pub const __extern_inline = @compileError("unable to translate macro: undefined identifier `__gnu_inline__`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:468:11
pub const __extern_always_inline = @compileError("unable to translate macro: undefined identifier `__gnu_inline__`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:469:11
pub const __fortify_function = __extern_always_inline ++ __attribute_artificial__;
pub const __restrict_arr = @compileError("unable to translate C expr: unexpected token '__restrict'");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:512:10
pub inline fn __glibc_unlikely(cond: anytype) @TypeOf(__builtin_expect(cond, @as(c_int, 0))) {
    _ = &cond;
    return __builtin_expect(cond, @as(c_int, 0));
}
pub inline fn __glibc_likely(cond: anytype) @TypeOf(__builtin_expect(cond, @as(c_int, 1))) {
    _ = &cond;
    return __builtin_expect(cond, @as(c_int, 1));
}
pub const __attribute_nonstring__ = "";
pub const __attribute_copy__ = @compileError("unable to translate C expr: unexpected token ''");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:561:10
pub const __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI = @as(c_int, 0);
pub inline fn __LDBL_REDIR1(name: anytype, proto: anytype, alias: anytype) @TypeOf(name ++ proto) {
    _ = &name;
    _ = &proto;
    _ = &alias;
    return name ++ proto;
}
pub inline fn __LDBL_REDIR(name: anytype, proto: anytype) @TypeOf(name ++ proto) {
    _ = &name;
    _ = &proto;
    return name ++ proto;
}
pub inline fn __LDBL_REDIR1_NTH(name: anytype, proto: anytype, alias: anytype) @TypeOf(name ++ proto ++ __THROW) {
    _ = &name;
    _ = &proto;
    _ = &alias;
    return name ++ proto ++ __THROW;
}
pub inline fn __LDBL_REDIR_NTH(name: anytype, proto: anytype) @TypeOf(name ++ proto ++ __THROW) {
    _ = &name;
    _ = &proto;
    return name ++ proto ++ __THROW;
}
pub const __LDBL_REDIR2_DECL = @compileError("unable to translate C expr: unexpected token ''");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:638:10
pub const __LDBL_REDIR_DECL = @compileError("unable to translate C expr: unexpected token ''");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:639:10
pub inline fn __REDIRECT_LDBL(name: anytype, proto: anytype, alias: anytype) @TypeOf(__REDIRECT(name, proto, alias)) {
    _ = &name;
    _ = &proto;
    _ = &alias;
    return __REDIRECT(name, proto, alias);
}
pub inline fn __REDIRECT_NTH_LDBL(name: anytype, proto: anytype, alias: anytype) @TypeOf(__REDIRECT_NTH(name, proto, alias)) {
    _ = &name;
    _ = &proto;
    _ = &alias;
    return __REDIRECT_NTH(name, proto, alias);
}
pub const __glibc_macro_warning1 = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:653:10
pub const __glibc_macro_warning = @compileError("unable to translate macro: undefined identifier `GCC`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:654:10
pub const __HAVE_GENERIC_SELECTION = @as(c_int, 1);
pub const __fortified_attr_access = @compileError("unable to translate C expr: unexpected token ''");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:699:11
pub const __attr_access = @compileError("unable to translate C expr: unexpected token ''");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:700:11
pub const __attr_access_none = @compileError("unable to translate C expr: unexpected token ''");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:701:11
pub const __attr_dealloc = @compileError("unable to translate C expr: unexpected token ''");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:711:10
pub const __attr_dealloc_free = "";
pub const __attribute_returns_twice__ = @compileError("unable to translate macro: undefined identifier `__returns_twice__`");
// /usr/include/x86_64-linux-gnu/sys/cdefs.h:718:10
pub const __stub___compat_bdflush = "";
pub const __stub_chflags = "";
pub const __stub_fchflags = "";
pub const __stub_gtty = "";
pub const __stub_revoke = "";
pub const __stub_setlogin = "";
pub const __stub_sigreturn = "";
pub const __stub_stty = "";
pub const __GLIBC_USE_LIB_EXT2 = @as(c_int, 1);
pub const __GLIBC_USE_IEC_60559_BFP_EXT = @as(c_int, 1);
pub const __GLIBC_USE_IEC_60559_BFP_EXT_C2X = @as(c_int, 1);
pub const __GLIBC_USE_IEC_60559_EXT = @as(c_int, 1);
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT = @as(c_int, 1);
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X = @as(c_int, 1);
pub const __GLIBC_USE_IEC_60559_TYPES_EXT = @as(c_int, 1);
pub const _BITS_TYPES_H = @as(c_int, 1);
pub const __S16_TYPE = c_short;
pub const __U16_TYPE = c_ushort;
pub const __S32_TYPE = c_int;
pub const __U32_TYPE = c_uint;
pub const __SLONGWORD_TYPE = c_long;
pub const __ULONGWORD_TYPE = c_ulong;
pub const __SQUAD_TYPE = c_long;
pub const __UQUAD_TYPE = c_ulong;
pub const __SWORD_TYPE = c_long;
pub const __UWORD_TYPE = c_ulong;
pub const __SLONG32_TYPE = c_int;
pub const __ULONG32_TYPE = c_uint;
pub const __S64_TYPE = c_long;
pub const __U64_TYPE = c_ulong;
pub const __STD_TYPE = @compileError("unable to translate C expr: unexpected token 'typedef'");
// /usr/include/x86_64-linux-gnu/bits/types.h:137:10
pub const _BITS_TYPESIZES_H = @as(c_int, 1);
pub const __SYSCALL_SLONG_TYPE = __SLONGWORD_TYPE;
pub const __SYSCALL_ULONG_TYPE = __ULONGWORD_TYPE;
pub const __DEV_T_TYPE = __UQUAD_TYPE;
pub const __UID_T_TYPE = __U32_TYPE;
pub const __GID_T_TYPE = __U32_TYPE;
pub const __INO_T_TYPE = __SYSCALL_ULONG_TYPE;
pub const __INO64_T_TYPE = __UQUAD_TYPE;
pub const __MODE_T_TYPE = __U32_TYPE;
pub const __NLINK_T_TYPE = __SYSCALL_ULONG_TYPE;
pub const __FSWORD_T_TYPE = __SYSCALL_SLONG_TYPE;
pub const __OFF_T_TYPE = __SYSCALL_SLONG_TYPE;
pub const __OFF64_T_TYPE = __SQUAD_TYPE;
pub const __PID_T_TYPE = __S32_TYPE;
pub const __RLIM_T_TYPE = __SYSCALL_ULONG_TYPE;
pub const __RLIM64_T_TYPE = __UQUAD_TYPE;
pub const __BLKCNT_T_TYPE = __SYSCALL_SLONG_TYPE;
pub const __BLKCNT64_T_TYPE = __SQUAD_TYPE;
pub const __FSBLKCNT_T_TYPE = __SYSCALL_ULONG_TYPE;
pub const __FSBLKCNT64_T_TYPE = __UQUAD_TYPE;
pub const __FSFILCNT_T_TYPE = __SYSCALL_ULONG_TYPE;
pub const __FSFILCNT64_T_TYPE = __UQUAD_TYPE;
pub const __ID_T_TYPE = __U32_TYPE;
pub const __CLOCK_T_TYPE = __SYSCALL_SLONG_TYPE;
pub const __TIME_T_TYPE = __SYSCALL_SLONG_TYPE;
pub const __USECONDS_T_TYPE = __U32_TYPE;
pub const __SUSECONDS_T_TYPE = __SYSCALL_SLONG_TYPE;
pub const __SUSECONDS64_T_TYPE = __SQUAD_TYPE;
pub const __DADDR_T_TYPE = __S32_TYPE;
pub const __KEY_T_TYPE = __S32_TYPE;
pub const __CLOCKID_T_TYPE = __S32_TYPE;
pub const __TIMER_T_TYPE = ?*anyopaque;
pub const __BLKSIZE_T_TYPE = __SYSCALL_SLONG_TYPE;
pub const __FSID_T_TYPE = @compileError("unable to translate macro: undefined identifier `__val`");
// /usr/include/x86_64-linux-gnu/bits/typesizes.h:73:9
pub const __SSIZE_T_TYPE = __SWORD_TYPE;
pub const __CPU_MASK_TYPE = __SYSCALL_ULONG_TYPE;
pub const __OFF_T_MATCHES_OFF64_T = @as(c_int, 1);
pub const __INO_T_MATCHES_INO64_T = @as(c_int, 1);
pub const __RLIM_T_MATCHES_RLIM64_T = @as(c_int, 1);
pub const __STATFS_MATCHES_STATFS64 = @as(c_int, 1);
pub const __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64 = @as(c_int, 1);
pub const __FD_SETSIZE = @as(c_int, 1024);
pub const _BITS_TIME64_H = @as(c_int, 1);
pub const __TIME64_T_TYPE = __TIME_T_TYPE;
pub const _BITS_WCHAR_H = @as(c_int, 1);
pub const __WCHAR_MAX = __WCHAR_MAX__;
pub const __WCHAR_MIN = -__WCHAR_MAX - @as(c_int, 1);
pub const _BITS_STDINT_INTN_H = @as(c_int, 1);
pub const _BITS_STDINT_UINTN_H = @as(c_int, 1);
pub const _BITS_STDINT_LEAST_H = @as(c_int, 1);
pub const __intptr_t_defined = "";
pub const __INT64_C = @import("std").zig.c_translation.Macros.L_SUFFIX;
pub const __UINT64_C = @import("std").zig.c_translation.Macros.UL_SUFFIX;
pub const INT8_MIN = -@as(c_int, 128);
pub const INT16_MIN = -@as(c_int, 32767) - @as(c_int, 1);
pub const INT32_MIN = -@import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal) - @as(c_int, 1);
pub const INT64_MIN = -__INT64_C(@import("std").zig.c_translation.promoteIntLiteral(c_int, 9223372036854775807, .decimal)) - @as(c_int, 1);
pub const INT8_MAX = @as(c_int, 127);
pub const INT16_MAX = @as(c_int, 32767);
pub const INT32_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const INT64_MAX = __INT64_C(@import("std").zig.c_translation.promoteIntLiteral(c_int, 9223372036854775807, .decimal));
pub const UINT8_MAX = @as(c_int, 255);
pub const UINT16_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 65535, .decimal);
pub const UINT32_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 4294967295, .decimal);
pub const UINT64_MAX = __UINT64_C(@import("std").zig.c_translation.promoteIntLiteral(c_int, 18446744073709551615, .decimal));
pub const INT_LEAST8_MIN = -@as(c_int, 128);
pub const INT_LEAST16_MIN = -@as(c_int, 32767) - @as(c_int, 1);
pub const INT_LEAST32_MIN = -@import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal) - @as(c_int, 1);
pub const INT_LEAST64_MIN = -__INT64_C(@import("std").zig.c_translation.promoteIntLiteral(c_int, 9223372036854775807, .decimal)) - @as(c_int, 1);
pub const INT_LEAST8_MAX = @as(c_int, 127);
pub const INT_LEAST16_MAX = @as(c_int, 32767);
pub const INT_LEAST32_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const INT_LEAST64_MAX = __INT64_C(@import("std").zig.c_translation.promoteIntLiteral(c_int, 9223372036854775807, .decimal));
pub const UINT_LEAST8_MAX = @as(c_int, 255);
pub const UINT_LEAST16_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 65535, .decimal);
pub const UINT_LEAST32_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 4294967295, .decimal);
pub const UINT_LEAST64_MAX = __UINT64_C(@import("std").zig.c_translation.promoteIntLiteral(c_int, 18446744073709551615, .decimal));
pub const INT_FAST8_MIN = -@as(c_int, 128);
pub const INT_FAST16_MIN = -@import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal) - @as(c_int, 1);
pub const INT_FAST32_MIN = -@import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal) - @as(c_int, 1);
pub const INT_FAST64_MIN = -__INT64_C(@import("std").zig.c_translation.promoteIntLiteral(c_int, 9223372036854775807, .decimal)) - @as(c_int, 1);
pub const INT_FAST8_MAX = @as(c_int, 127);
pub const INT_FAST16_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal);
pub const INT_FAST32_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal);
pub const INT_FAST64_MAX = __INT64_C(@import("std").zig.c_translation.promoteIntLiteral(c_int, 9223372036854775807, .decimal));
pub const UINT_FAST8_MAX = @as(c_int, 255);
pub const UINT_FAST16_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_ulong, 18446744073709551615, .decimal);
pub const UINT_FAST32_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_ulong, 18446744073709551615, .decimal);
pub const UINT_FAST64_MAX = __UINT64_C(@import("std").zig.c_translation.promoteIntLiteral(c_int, 18446744073709551615, .decimal));
pub const INTPTR_MIN = -@import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal) - @as(c_int, 1);
pub const INTPTR_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal);
pub const UINTPTR_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_ulong, 18446744073709551615, .decimal);
pub const INTMAX_MIN = -__INT64_C(@import("std").zig.c_translation.promoteIntLiteral(c_int, 9223372036854775807, .decimal)) - @as(c_int, 1);
pub const INTMAX_MAX = __INT64_C(@import("std").zig.c_translation.promoteIntLiteral(c_int, 9223372036854775807, .decimal));
pub const UINTMAX_MAX = __UINT64_C(@import("std").zig.c_translation.promoteIntLiteral(c_int, 18446744073709551615, .decimal));
pub const PTRDIFF_MIN = -@import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal) - @as(c_int, 1);
pub const PTRDIFF_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal);
pub const SIG_ATOMIC_MIN = -@import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal) - @as(c_int, 1);
pub const SIG_ATOMIC_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const SIZE_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_ulong, 18446744073709551615, .decimal);
pub const WCHAR_MIN = __WCHAR_MIN;
pub const WCHAR_MAX = __WCHAR_MAX;
pub const WINT_MIN = @as(c_uint, 0);
pub const WINT_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 4294967295, .decimal);
pub inline fn INT8_C(c: anytype) @TypeOf(c) {
    _ = &c;
    return c;
}
pub inline fn INT16_C(c: anytype) @TypeOf(c) {
    _ = &c;
    return c;
}
pub inline fn INT32_C(c: anytype) @TypeOf(c) {
    _ = &c;
    return c;
}
pub const INT64_C = @import("std").zig.c_translation.Macros.L_SUFFIX;
pub inline fn UINT8_C(c: anytype) @TypeOf(c) {
    _ = &c;
    return c;
}
pub inline fn UINT16_C(c: anytype) @TypeOf(c) {
    _ = &c;
    return c;
}
pub const UINT32_C = @import("std").zig.c_translation.Macros.U_SUFFIX;
pub const UINT64_C = @import("std").zig.c_translation.Macros.UL_SUFFIX;
pub const INTMAX_C = @import("std").zig.c_translation.Macros.L_SUFFIX;
pub const UINTMAX_C = @import("std").zig.c_translation.Macros.UL_SUFFIX;
pub const INT8_WIDTH = @as(c_int, 8);
pub const UINT8_WIDTH = @as(c_int, 8);
pub const INT16_WIDTH = @as(c_int, 16);
pub const UINT16_WIDTH = @as(c_int, 16);
pub const INT32_WIDTH = @as(c_int, 32);
pub const UINT32_WIDTH = @as(c_int, 32);
pub const INT64_WIDTH = @as(c_int, 64);
pub const UINT64_WIDTH = @as(c_int, 64);
pub const INT_LEAST8_WIDTH = @as(c_int, 8);
pub const UINT_LEAST8_WIDTH = @as(c_int, 8);
pub const INT_LEAST16_WIDTH = @as(c_int, 16);
pub const UINT_LEAST16_WIDTH = @as(c_int, 16);
pub const INT_LEAST32_WIDTH = @as(c_int, 32);
pub const UINT_LEAST32_WIDTH = @as(c_int, 32);
pub const INT_LEAST64_WIDTH = @as(c_int, 64);
pub const UINT_LEAST64_WIDTH = @as(c_int, 64);
pub const INT_FAST8_WIDTH = @as(c_int, 8);
pub const UINT_FAST8_WIDTH = @as(c_int, 8);
pub const INT_FAST16_WIDTH = __WORDSIZE;
pub const UINT_FAST16_WIDTH = __WORDSIZE;
pub const INT_FAST32_WIDTH = __WORDSIZE;
pub const UINT_FAST32_WIDTH = __WORDSIZE;
pub const INT_FAST64_WIDTH = @as(c_int, 64);
pub const UINT_FAST64_WIDTH = @as(c_int, 64);
pub const INTPTR_WIDTH = __WORDSIZE;
pub const UINTPTR_WIDTH = __WORDSIZE;
pub const INTMAX_WIDTH = @as(c_int, 64);
pub const UINTMAX_WIDTH = @as(c_int, 64);
pub const PTRDIFF_WIDTH = __WORDSIZE;
pub const SIG_ATOMIC_WIDTH = @as(c_int, 32);
pub const SIZE_WIDTH = __WORDSIZE;
pub const WCHAR_WIDTH = @as(c_int, 32);
pub const WINT_WIDTH = @as(c_int, 32);
pub const __STDBOOL_H = "";
pub const __bool_true_false_are_defined = @as(c_int, 1);
pub const @"bool" = bool;
pub const @"true" = @as(c_int, 1);
pub const @"false" = @as(c_int, 0);
pub const __CLANG_INTTYPES_H = "";
pub const _INTTYPES_H = @as(c_int, 1);
pub const ____gwchar_t_defined = @as(c_int, 1);
pub const __PRI64_PREFIX = "l";
pub const __PRIPTR_PREFIX = "l";
pub const PRId8 = "d";
pub const PRId16 = "d";
pub const PRId32 = "d";
pub const PRId64 = __PRI64_PREFIX ++ "d";
pub const PRIdLEAST8 = "d";
pub const PRIdLEAST16 = "d";
pub const PRIdLEAST32 = "d";
pub const PRIdLEAST64 = __PRI64_PREFIX ++ "d";
pub const PRIdFAST8 = "d";
pub const PRIdFAST16 = __PRIPTR_PREFIX ++ "d";
pub const PRIdFAST32 = __PRIPTR_PREFIX ++ "d";
pub const PRIdFAST64 = __PRI64_PREFIX ++ "d";
pub const PRIi8 = "i";
pub const PRIi16 = "i";
pub const PRIi32 = "i";
pub const PRIi64 = __PRI64_PREFIX ++ "i";
pub const PRIiLEAST8 = "i";
pub const PRIiLEAST16 = "i";
pub const PRIiLEAST32 = "i";
pub const PRIiLEAST64 = __PRI64_PREFIX ++ "i";
pub const PRIiFAST8 = "i";
pub const PRIiFAST16 = __PRIPTR_PREFIX ++ "i";
pub const PRIiFAST32 = __PRIPTR_PREFIX ++ "i";
pub const PRIiFAST64 = __PRI64_PREFIX ++ "i";
pub const PRIo8 = "o";
pub const PRIo16 = "o";
pub const PRIo32 = "o";
pub const PRIo64 = __PRI64_PREFIX ++ "o";
pub const PRIoLEAST8 = "o";
pub const PRIoLEAST16 = "o";
pub const PRIoLEAST32 = "o";
pub const PRIoLEAST64 = __PRI64_PREFIX ++ "o";
pub const PRIoFAST8 = "o";
pub const PRIoFAST16 = __PRIPTR_PREFIX ++ "o";
pub const PRIoFAST32 = __PRIPTR_PREFIX ++ "o";
pub const PRIoFAST64 = __PRI64_PREFIX ++ "o";
pub const PRIu8 = "u";
pub const PRIu16 = "u";
pub const PRIu32 = "u";
pub const PRIu64 = __PRI64_PREFIX ++ "u";
pub const PRIuLEAST8 = "u";
pub const PRIuLEAST16 = "u";
pub const PRIuLEAST32 = "u";
pub const PRIuLEAST64 = __PRI64_PREFIX ++ "u";
pub const PRIuFAST8 = "u";
pub const PRIuFAST16 = __PRIPTR_PREFIX ++ "u";
pub const PRIuFAST32 = __PRIPTR_PREFIX ++ "u";
pub const PRIuFAST64 = __PRI64_PREFIX ++ "u";
pub const PRIx8 = "x";
pub const PRIx16 = "x";
pub const PRIx32 = "x";
pub const PRIx64 = __PRI64_PREFIX ++ "x";
pub const PRIxLEAST8 = "x";
pub const PRIxLEAST16 = "x";
pub const PRIxLEAST32 = "x";
pub const PRIxLEAST64 = __PRI64_PREFIX ++ "x";
pub const PRIxFAST8 = "x";
pub const PRIxFAST16 = __PRIPTR_PREFIX ++ "x";
pub const PRIxFAST32 = __PRIPTR_PREFIX ++ "x";
pub const PRIxFAST64 = __PRI64_PREFIX ++ "x";
pub const PRIX8 = "X";
pub const PRIX16 = "X";
pub const PRIX32 = "X";
pub const PRIX64 = __PRI64_PREFIX ++ "X";
pub const PRIXLEAST8 = "X";
pub const PRIXLEAST16 = "X";
pub const PRIXLEAST32 = "X";
pub const PRIXLEAST64 = __PRI64_PREFIX ++ "X";
pub const PRIXFAST8 = "X";
pub const PRIXFAST16 = __PRIPTR_PREFIX ++ "X";
pub const PRIXFAST32 = __PRIPTR_PREFIX ++ "X";
pub const PRIXFAST64 = __PRI64_PREFIX ++ "X";
pub const PRIdMAX = __PRI64_PREFIX ++ "d";
pub const PRIiMAX = __PRI64_PREFIX ++ "i";
pub const PRIoMAX = __PRI64_PREFIX ++ "o";
pub const PRIuMAX = __PRI64_PREFIX ++ "u";
pub const PRIxMAX = __PRI64_PREFIX ++ "x";
pub const PRIXMAX = __PRI64_PREFIX ++ "X";
pub const PRIdPTR = __PRIPTR_PREFIX ++ "d";
pub const PRIiPTR = __PRIPTR_PREFIX ++ "i";
pub const PRIoPTR = __PRIPTR_PREFIX ++ "o";
pub const PRIuPTR = __PRIPTR_PREFIX ++ "u";
pub const PRIxPTR = __PRIPTR_PREFIX ++ "x";
pub const PRIXPTR = __PRIPTR_PREFIX ++ "X";
pub const PRIb8 = "b";
pub const PRIb16 = "b";
pub const PRIb32 = "b";
pub const PRIb64 = __PRI64_PREFIX ++ "b";
pub const PRIbLEAST8 = "b";
pub const PRIbLEAST16 = "b";
pub const PRIbLEAST32 = "b";
pub const PRIbLEAST64 = __PRI64_PREFIX ++ "b";
pub const PRIbFAST8 = "b";
pub const PRIbFAST16 = __PRIPTR_PREFIX ++ "b";
pub const PRIbFAST32 = __PRIPTR_PREFIX ++ "b";
pub const PRIbFAST64 = __PRI64_PREFIX ++ "b";
pub const PRIbMAX = __PRI64_PREFIX ++ "b";
pub const PRIbPTR = __PRIPTR_PREFIX ++ "b";
pub const PRIB8 = "B";
pub const PRIB16 = "B";
pub const PRIB32 = "B";
pub const PRIB64 = __PRI64_PREFIX ++ "B";
pub const PRIBLEAST8 = "B";
pub const PRIBLEAST16 = "B";
pub const PRIBLEAST32 = "B";
pub const PRIBLEAST64 = __PRI64_PREFIX ++ "B";
pub const PRIBFAST8 = "B";
pub const PRIBFAST16 = __PRIPTR_PREFIX ++ "B";
pub const PRIBFAST32 = __PRIPTR_PREFIX ++ "B";
pub const PRIBFAST64 = __PRI64_PREFIX ++ "B";
pub const PRIBMAX = __PRI64_PREFIX ++ "B";
pub const PRIBPTR = __PRIPTR_PREFIX ++ "B";
pub const SCNd8 = "hhd";
pub const SCNd16 = "hd";
pub const SCNd32 = "d";
pub const SCNd64 = __PRI64_PREFIX ++ "d";
pub const SCNdLEAST8 = "hhd";
pub const SCNdLEAST16 = "hd";
pub const SCNdLEAST32 = "d";
pub const SCNdLEAST64 = __PRI64_PREFIX ++ "d";
pub const SCNdFAST8 = "hhd";
pub const SCNdFAST16 = __PRIPTR_PREFIX ++ "d";
pub const SCNdFAST32 = __PRIPTR_PREFIX ++ "d";
pub const SCNdFAST64 = __PRI64_PREFIX ++ "d";
pub const SCNi8 = "hhi";
pub const SCNi16 = "hi";
pub const SCNi32 = "i";
pub const SCNi64 = __PRI64_PREFIX ++ "i";
pub const SCNiLEAST8 = "hhi";
pub const SCNiLEAST16 = "hi";
pub const SCNiLEAST32 = "i";
pub const SCNiLEAST64 = __PRI64_PREFIX ++ "i";
pub const SCNiFAST8 = "hhi";
pub const SCNiFAST16 = __PRIPTR_PREFIX ++ "i";
pub const SCNiFAST32 = __PRIPTR_PREFIX ++ "i";
pub const SCNiFAST64 = __PRI64_PREFIX ++ "i";
pub const SCNu8 = "hhu";
pub const SCNu16 = "hu";
pub const SCNu32 = "u";
pub const SCNu64 = __PRI64_PREFIX ++ "u";
pub const SCNuLEAST8 = "hhu";
pub const SCNuLEAST16 = "hu";
pub const SCNuLEAST32 = "u";
pub const SCNuLEAST64 = __PRI64_PREFIX ++ "u";
pub const SCNuFAST8 = "hhu";
pub const SCNuFAST16 = __PRIPTR_PREFIX ++ "u";
pub const SCNuFAST32 = __PRIPTR_PREFIX ++ "u";
pub const SCNuFAST64 = __PRI64_PREFIX ++ "u";
pub const SCNo8 = "hho";
pub const SCNo16 = "ho";
pub const SCNo32 = "o";
pub const SCNo64 = __PRI64_PREFIX ++ "o";
pub const SCNoLEAST8 = "hho";
pub const SCNoLEAST16 = "ho";
pub const SCNoLEAST32 = "o";
pub const SCNoLEAST64 = __PRI64_PREFIX ++ "o";
pub const SCNoFAST8 = "hho";
pub const SCNoFAST16 = __PRIPTR_PREFIX ++ "o";
pub const SCNoFAST32 = __PRIPTR_PREFIX ++ "o";
pub const SCNoFAST64 = __PRI64_PREFIX ++ "o";
pub const SCNx8 = "hhx";
pub const SCNx16 = "hx";
pub const SCNx32 = "x";
pub const SCNx64 = __PRI64_PREFIX ++ "x";
pub const SCNxLEAST8 = "hhx";
pub const SCNxLEAST16 = "hx";
pub const SCNxLEAST32 = "x";
pub const SCNxLEAST64 = __PRI64_PREFIX ++ "x";
pub const SCNxFAST8 = "hhx";
pub const SCNxFAST16 = __PRIPTR_PREFIX ++ "x";
pub const SCNxFAST32 = __PRIPTR_PREFIX ++ "x";
pub const SCNxFAST64 = __PRI64_PREFIX ++ "x";
pub const SCNdMAX = __PRI64_PREFIX ++ "d";
pub const SCNiMAX = __PRI64_PREFIX ++ "i";
pub const SCNoMAX = __PRI64_PREFIX ++ "o";
pub const SCNuMAX = __PRI64_PREFIX ++ "u";
pub const SCNxMAX = __PRI64_PREFIX ++ "x";
pub const SCNdPTR = __PRIPTR_PREFIX ++ "d";
pub const SCNiPTR = __PRIPTR_PREFIX ++ "i";
pub const SCNoPTR = __PRIPTR_PREFIX ++ "o";
pub const SCNuPTR = __PRIPTR_PREFIX ++ "u";
pub const SCNxPTR = __PRIPTR_PREFIX ++ "x";
pub const SCNb8 = "hhb";
pub const SCNb16 = "hb";
pub const SCNb32 = "b";
pub const SCNb64 = __PRI64_PREFIX ++ "b";
pub const SCNbLEAST8 = "hhb";
pub const SCNbLEAST16 = "hb";
pub const SCNbLEAST32 = "b";
pub const SCNbLEAST64 = __PRI64_PREFIX ++ "b";
pub const SCNbFAST8 = "hhb";
pub const SCNbFAST16 = __PRIPTR_PREFIX ++ "b";
pub const SCNbFAST32 = __PRIPTR_PREFIX ++ "b";
pub const SCNbFAST64 = __PRI64_PREFIX ++ "b";
pub const SCNbMAX = __PRI64_PREFIX ++ "b";
pub const SCNbPTR = __PRIPTR_PREFIX ++ "b";
pub const __CLANG_FLOAT_H = "";
pub const FLT_EVAL_METHOD = @compileError("unable to translate macro: undefined identifier `__FLT_EVAL_METHOD__`");
// /home/chris/.zvm/0.14.1/lib/include/float.h:107:9
pub const FLT_ROUNDS = @compileError("unable to translate macro: undefined identifier `__builtin_flt_rounds`");
// /home/chris/.zvm/0.14.1/lib/include/float.h:109:9
pub const FLT_RADIX = __FLT_RADIX__;
pub const FLT_MANT_DIG = __FLT_MANT_DIG__;
pub const DBL_MANT_DIG = __DBL_MANT_DIG__;
pub const LDBL_MANT_DIG = __LDBL_MANT_DIG__;
pub const DECIMAL_DIG = __DECIMAL_DIG__;
pub const FLT_DIG = __FLT_DIG__;
pub const DBL_DIG = __DBL_DIG__;
pub const LDBL_DIG = __LDBL_DIG__;
pub const FLT_MIN_EXP = __FLT_MIN_EXP__;
pub const DBL_MIN_EXP = __DBL_MIN_EXP__;
pub const LDBL_MIN_EXP = __LDBL_MIN_EXP__;
pub const FLT_MIN_10_EXP = __FLT_MIN_10_EXP__;
pub const DBL_MIN_10_EXP = __DBL_MIN_10_EXP__;
pub const LDBL_MIN_10_EXP = __LDBL_MIN_10_EXP__;
pub const FLT_MAX_EXP = __FLT_MAX_EXP__;
pub const DBL_MAX_EXP = __DBL_MAX_EXP__;
pub const LDBL_MAX_EXP = __LDBL_MAX_EXP__;
pub const FLT_MAX_10_EXP = __FLT_MAX_10_EXP__;
pub const DBL_MAX_10_EXP = __DBL_MAX_10_EXP__;
pub const LDBL_MAX_10_EXP = __LDBL_MAX_10_EXP__;
pub const FLT_MAX = __FLT_MAX__;
pub const DBL_MAX = __DBL_MAX__;
pub const LDBL_MAX = __LDBL_MAX__;
pub const FLT_EPSILON = __FLT_EPSILON__;
pub const DBL_EPSILON = __DBL_EPSILON__;
pub const LDBL_EPSILON = __LDBL_EPSILON__;
pub const FLT_MIN = __FLT_MIN__;
pub const DBL_MIN = __DBL_MIN__;
pub const LDBL_MIN = __LDBL_MIN__;
pub const FLT_TRUE_MIN = __FLT_DENORM_MIN__;
pub const DBL_TRUE_MIN = __DBL_DENORM_MIN__;
pub const LDBL_TRUE_MIN = __LDBL_DENORM_MIN__;
pub const FLT_DECIMAL_DIG = __FLT_DECIMAL_DIG__;
pub const DBL_DECIMAL_DIG = __DBL_DECIMAL_DIG__;
pub const LDBL_DECIMAL_DIG = __LDBL_DECIMAL_DIG__;
pub const FLT_HAS_SUBNORM = __FLT_HAS_DENORM__;
pub const DBL_HAS_SUBNORM = __DBL_HAS_DENORM__;
pub const LDBL_HAS_SUBNORM = __LDBL_HAS_DENORM__;
pub const INFINITY = __builtin_inff();
pub const NAN = __builtin_nanf("");
pub const FLT_NORM_MAX = __FLT_NORM_MAX__;
pub const DBL_NORM_MAX = __DBL_NORM_MAX__;
pub const LDBL_NORM_MAX = __LDBL_NORM_MAX__;
pub const _STRING_H = @as(c_int, 1);
pub const _BITS_TYPES_LOCALE_T_H = @as(c_int, 1);
pub const _BITS_TYPES___LOCALE_T_H = @as(c_int, 1);
pub const strdupa = @compileError("unable to translate macro: undefined identifier `__old`");
// /usr/include/string.h:201:10
pub const strndupa = @compileError("unable to translate macro: undefined identifier `__old`");
// /usr/include/string.h:211:10
pub const _STRINGS_H = @as(c_int, 1);
pub const UA_INLINE = @compileError("unable to translate C expr: unexpected token 'inline'");
// ./vendor/open62541.h:203:10
pub const UA_INLINABLE = @compileError("unable to translate C expr: unexpected token 'static'");
// ./vendor/open62541.h:219:10
pub const UA_THREAD_LOCAL = @compileError("unable to translate macro: undefined identifier `__thread`");
// ./vendor/open62541.h:227:11
pub const _STDLIB_H = @as(c_int, 1);
pub const WNOHANG = @as(c_int, 1);
pub const WUNTRACED = @as(c_int, 2);
pub const WSTOPPED = @as(c_int, 2);
pub const WEXITED = @as(c_int, 4);
pub const WCONTINUED = @as(c_int, 8);
pub const WNOWAIT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x01000000, .hex);
pub const __WNOTHREAD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x20000000, .hex);
pub const __WALL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x40000000, .hex);
pub const __WCLONE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80000000, .hex);
pub inline fn __WEXITSTATUS(status: anytype) @TypeOf((status & @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xff00, .hex)) >> @as(c_int, 8)) {
    _ = &status;
    return (status & @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xff00, .hex)) >> @as(c_int, 8);
}
pub inline fn __WTERMSIG(status: anytype) @TypeOf(status & @as(c_int, 0x7f)) {
    _ = &status;
    return status & @as(c_int, 0x7f);
}
pub inline fn __WSTOPSIG(status: anytype) @TypeOf(__WEXITSTATUS(status)) {
    _ = &status;
    return __WEXITSTATUS(status);
}
pub inline fn __WIFEXITED(status: anytype) @TypeOf(__WTERMSIG(status) == @as(c_int, 0)) {
    _ = &status;
    return __WTERMSIG(status) == @as(c_int, 0);
}
pub inline fn __WIFSIGNALED(status: anytype) @TypeOf((@import("std").zig.c_translation.cast(i8, (status & @as(c_int, 0x7f)) + @as(c_int, 1)) >> @as(c_int, 1)) > @as(c_int, 0)) {
    _ = &status;
    return (@import("std").zig.c_translation.cast(i8, (status & @as(c_int, 0x7f)) + @as(c_int, 1)) >> @as(c_int, 1)) > @as(c_int, 0);
}
pub inline fn __WIFSTOPPED(status: anytype) @TypeOf((status & @as(c_int, 0xff)) == @as(c_int, 0x7f)) {
    _ = &status;
    return (status & @as(c_int, 0xff)) == @as(c_int, 0x7f);
}
pub inline fn __WIFCONTINUED(status: anytype) @TypeOf(status == __W_CONTINUED) {
    _ = &status;
    return status == __W_CONTINUED;
}
pub inline fn __WCOREDUMP(status: anytype) @TypeOf(status & __WCOREFLAG) {
    _ = &status;
    return status & __WCOREFLAG;
}
pub inline fn __W_EXITCODE(ret: anytype, sig: anytype) @TypeOf((ret << @as(c_int, 8)) | sig) {
    _ = &ret;
    _ = &sig;
    return (ret << @as(c_int, 8)) | sig;
}
pub inline fn __W_STOPCODE(sig: anytype) @TypeOf((sig << @as(c_int, 8)) | @as(c_int, 0x7f)) {
    _ = &sig;
    return (sig << @as(c_int, 8)) | @as(c_int, 0x7f);
}
pub const __W_CONTINUED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xffff, .hex);
pub const __WCOREFLAG = @as(c_int, 0x80);
pub inline fn WEXITSTATUS(status: anytype) @TypeOf(__WEXITSTATUS(status)) {
    _ = &status;
    return __WEXITSTATUS(status);
}
pub inline fn WTERMSIG(status: anytype) @TypeOf(__WTERMSIG(status)) {
    _ = &status;
    return __WTERMSIG(status);
}
pub inline fn WSTOPSIG(status: anytype) @TypeOf(__WSTOPSIG(status)) {
    _ = &status;
    return __WSTOPSIG(status);
}
pub inline fn WIFEXITED(status: anytype) @TypeOf(__WIFEXITED(status)) {
    _ = &status;
    return __WIFEXITED(status);
}
pub inline fn WIFSIGNALED(status: anytype) @TypeOf(__WIFSIGNALED(status)) {
    _ = &status;
    return __WIFSIGNALED(status);
}
pub inline fn WIFSTOPPED(status: anytype) @TypeOf(__WIFSTOPPED(status)) {
    _ = &status;
    return __WIFSTOPPED(status);
}
pub inline fn WIFCONTINUED(status: anytype) @TypeOf(__WIFCONTINUED(status)) {
    _ = &status;
    return __WIFCONTINUED(status);
}
pub const _BITS_FLOATN_H = "";
pub const __HAVE_FLOAT128 = @as(c_int, 0);
pub const __HAVE_DISTINCT_FLOAT128 = @as(c_int, 0);
pub const __HAVE_FLOAT64X = @as(c_int, 1);
pub const __HAVE_FLOAT64X_LONG_DOUBLE = @as(c_int, 1);
pub const _BITS_FLOATN_COMMON_H = "";
pub const __HAVE_FLOAT16 = @as(c_int, 0);
pub const __HAVE_FLOAT32 = @as(c_int, 1);
pub const __HAVE_FLOAT64 = @as(c_int, 1);
pub const __HAVE_FLOAT32X = @as(c_int, 1);
pub const __HAVE_FLOAT128X = @as(c_int, 0);
pub const __HAVE_DISTINCT_FLOAT16 = __HAVE_FLOAT16;
pub const __HAVE_DISTINCT_FLOAT32 = @as(c_int, 0);
pub const __HAVE_DISTINCT_FLOAT64 = @as(c_int, 0);
pub const __HAVE_DISTINCT_FLOAT32X = @as(c_int, 0);
pub const __HAVE_DISTINCT_FLOAT64X = @as(c_int, 0);
pub const __HAVE_DISTINCT_FLOAT128X = __HAVE_FLOAT128X;
pub const __HAVE_FLOAT128_UNLIKE_LDBL = (__HAVE_DISTINCT_FLOAT128 != 0) and (__LDBL_MANT_DIG__ != @as(c_int, 113));
pub const __HAVE_FLOATN_NOT_TYPEDEF = @as(c_int, 0);
pub const __f32 = @import("std").zig.c_translation.Macros.F_SUFFIX;
pub inline fn __f64(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __f32x(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub const __f64x = @import("std").zig.c_translation.Macros.L_SUFFIX;
pub const __CFLOAT32 = @compileError("unable to translate: TODO _Complex");
// /usr/include/x86_64-linux-gnu/bits/floatn-common.h:149:12
pub const __CFLOAT64 = @compileError("unable to translate: TODO _Complex");
// /usr/include/x86_64-linux-gnu/bits/floatn-common.h:160:13
pub const __CFLOAT32X = @compileError("unable to translate: TODO _Complex");
// /usr/include/x86_64-linux-gnu/bits/floatn-common.h:169:12
pub const __CFLOAT64X = @compileError("unable to translate: TODO _Complex");
// /usr/include/x86_64-linux-gnu/bits/floatn-common.h:178:13
pub inline fn __builtin_huge_valf32() @TypeOf(__builtin_huge_valf()) {
    return __builtin_huge_valf();
}
pub inline fn __builtin_inff32() @TypeOf(__builtin_inff()) {
    return __builtin_inff();
}
pub inline fn __builtin_nanf32(x: anytype) @TypeOf(__builtin_nanf(x)) {
    _ = &x;
    return __builtin_nanf(x);
}
pub const __builtin_nansf32 = @compileError("unable to translate macro: undefined identifier `__builtin_nansf`");
// /usr/include/x86_64-linux-gnu/bits/floatn-common.h:221:12
pub const __builtin_huge_valf64 = @compileError("unable to translate macro: undefined identifier `__builtin_huge_val`");
// /usr/include/x86_64-linux-gnu/bits/floatn-common.h:255:13
pub const __builtin_inff64 = @compileError("unable to translate macro: undefined identifier `__builtin_inf`");
// /usr/include/x86_64-linux-gnu/bits/floatn-common.h:256:13
pub const __builtin_nanf64 = @compileError("unable to translate macro: undefined identifier `__builtin_nan`");
// /usr/include/x86_64-linux-gnu/bits/floatn-common.h:257:13
pub const __builtin_nansf64 = @compileError("unable to translate macro: undefined identifier `__builtin_nans`");
// /usr/include/x86_64-linux-gnu/bits/floatn-common.h:258:13
pub const __builtin_huge_valf32x = @compileError("unable to translate macro: undefined identifier `__builtin_huge_val`");
// /usr/include/x86_64-linux-gnu/bits/floatn-common.h:272:12
pub const __builtin_inff32x = @compileError("unable to translate macro: undefined identifier `__builtin_inf`");
// /usr/include/x86_64-linux-gnu/bits/floatn-common.h:273:12
pub const __builtin_nanf32x = @compileError("unable to translate macro: undefined identifier `__builtin_nan`");
// /usr/include/x86_64-linux-gnu/bits/floatn-common.h:274:12
pub const __builtin_nansf32x = @compileError("unable to translate macro: undefined identifier `__builtin_nans`");
// /usr/include/x86_64-linux-gnu/bits/floatn-common.h:275:12
pub const __builtin_huge_valf64x = @compileError("unable to translate macro: undefined identifier `__builtin_huge_vall`");
// /usr/include/x86_64-linux-gnu/bits/floatn-common.h:289:13
pub const __builtin_inff64x = @compileError("unable to translate macro: undefined identifier `__builtin_infl`");
// /usr/include/x86_64-linux-gnu/bits/floatn-common.h:290:13
pub const __builtin_nanf64x = @compileError("unable to translate macro: undefined identifier `__builtin_nanl`");
// /usr/include/x86_64-linux-gnu/bits/floatn-common.h:291:13
pub const __builtin_nansf64x = @compileError("unable to translate macro: undefined identifier `__builtin_nansl`");
// /usr/include/x86_64-linux-gnu/bits/floatn-common.h:292:13
pub const __ldiv_t_defined = @as(c_int, 1);
pub const __lldiv_t_defined = @as(c_int, 1);
pub const RAND_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const EXIT_FAILURE = @as(c_int, 1);
pub const EXIT_SUCCESS = @as(c_int, 0);
pub const MB_CUR_MAX = __ctype_get_mb_cur_max();
pub const _SYS_TYPES_H = @as(c_int, 1);
pub const __u_char_defined = "";
pub const __ino_t_defined = "";
pub const __ino64_t_defined = "";
pub const __dev_t_defined = "";
pub const __gid_t_defined = "";
pub const __mode_t_defined = "";
pub const __nlink_t_defined = "";
pub const __uid_t_defined = "";
pub const __off_t_defined = "";
pub const __off64_t_defined = "";
pub const __pid_t_defined = "";
pub const __id_t_defined = "";
pub const __ssize_t_defined = "";
pub const __daddr_t_defined = "";
pub const __key_t_defined = "";
pub const __clock_t_defined = @as(c_int, 1);
pub const __clockid_t_defined = @as(c_int, 1);
pub const __time_t_defined = @as(c_int, 1);
pub const __timer_t_defined = @as(c_int, 1);
pub const __useconds_t_defined = "";
pub const __suseconds_t_defined = "";
pub const __BIT_TYPES_DEFINED__ = @as(c_int, 1);
pub const _ENDIAN_H = @as(c_int, 1);
pub const _BITS_ENDIAN_H = @as(c_int, 1);
pub const __LITTLE_ENDIAN = @as(c_int, 1234);
pub const __BIG_ENDIAN = @as(c_int, 4321);
pub const __PDP_ENDIAN = @as(c_int, 3412);
pub const _BITS_ENDIANNESS_H = @as(c_int, 1);
pub const __BYTE_ORDER = __LITTLE_ENDIAN;
pub const __FLOAT_WORD_ORDER = __BYTE_ORDER;
pub inline fn __LONG_LONG_PAIR(HI: anytype, LO: anytype) @TypeOf(HI) {
    _ = &HI;
    _ = &LO;
    return blk: {
        _ = &LO;
        break :blk HI;
    };
}
pub const LITTLE_ENDIAN = __LITTLE_ENDIAN;
pub const BIG_ENDIAN = __BIG_ENDIAN;
pub const PDP_ENDIAN = __PDP_ENDIAN;
pub const BYTE_ORDER = __BYTE_ORDER;
pub const _BITS_BYTESWAP_H = @as(c_int, 1);
pub inline fn __bswap_constant_16(x: anytype) __uint16_t {
    _ = &x;
    return @import("std").zig.c_translation.cast(__uint16_t, ((x >> @as(c_int, 8)) & @as(c_int, 0xff)) | ((x & @as(c_int, 0xff)) << @as(c_int, 8)));
}
pub inline fn __bswap_constant_32(x: anytype) @TypeOf(((((x & @import("std").zig.c_translation.promoteIntLiteral(c_uint, 0xff000000, .hex)) >> @as(c_int, 24)) | ((x & @import("std").zig.c_translation.promoteIntLiteral(c_uint, 0x00ff0000, .hex)) >> @as(c_int, 8))) | ((x & @as(c_uint, 0x0000ff00)) << @as(c_int, 8))) | ((x & @as(c_uint, 0x000000ff)) << @as(c_int, 24))) {
    _ = &x;
    return ((((x & @import("std").zig.c_translation.promoteIntLiteral(c_uint, 0xff000000, .hex)) >> @as(c_int, 24)) | ((x & @import("std").zig.c_translation.promoteIntLiteral(c_uint, 0x00ff0000, .hex)) >> @as(c_int, 8))) | ((x & @as(c_uint, 0x0000ff00)) << @as(c_int, 8))) | ((x & @as(c_uint, 0x000000ff)) << @as(c_int, 24));
}
pub inline fn __bswap_constant_64(x: anytype) @TypeOf(((((((((x & @as(c_ulonglong, 0xff00000000000000)) >> @as(c_int, 56)) | ((x & @as(c_ulonglong, 0x00ff000000000000)) >> @as(c_int, 40))) | ((x & @as(c_ulonglong, 0x0000ff0000000000)) >> @as(c_int, 24))) | ((x & @as(c_ulonglong, 0x000000ff00000000)) >> @as(c_int, 8))) | ((x & @as(c_ulonglong, 0x00000000ff000000)) << @as(c_int, 8))) | ((x & @as(c_ulonglong, 0x0000000000ff0000)) << @as(c_int, 24))) | ((x & @as(c_ulonglong, 0x000000000000ff00)) << @as(c_int, 40))) | ((x & @as(c_ulonglong, 0x00000000000000ff)) << @as(c_int, 56))) {
    _ = &x;
    return ((((((((x & @as(c_ulonglong, 0xff00000000000000)) >> @as(c_int, 56)) | ((x & @as(c_ulonglong, 0x00ff000000000000)) >> @as(c_int, 40))) | ((x & @as(c_ulonglong, 0x0000ff0000000000)) >> @as(c_int, 24))) | ((x & @as(c_ulonglong, 0x000000ff00000000)) >> @as(c_int, 8))) | ((x & @as(c_ulonglong, 0x00000000ff000000)) << @as(c_int, 8))) | ((x & @as(c_ulonglong, 0x0000000000ff0000)) << @as(c_int, 24))) | ((x & @as(c_ulonglong, 0x000000000000ff00)) << @as(c_int, 40))) | ((x & @as(c_ulonglong, 0x00000000000000ff)) << @as(c_int, 56));
}
pub const _BITS_UINTN_IDENTITY_H = @as(c_int, 1);
pub inline fn htobe16(x: anytype) @TypeOf(__bswap_16(x)) {
    _ = &x;
    return __bswap_16(x);
}
pub inline fn htole16(x: anytype) @TypeOf(__uint16_identity(x)) {
    _ = &x;
    return __uint16_identity(x);
}
pub inline fn be16toh(x: anytype) @TypeOf(__bswap_16(x)) {
    _ = &x;
    return __bswap_16(x);
}
pub inline fn le16toh(x: anytype) @TypeOf(__uint16_identity(x)) {
    _ = &x;
    return __uint16_identity(x);
}
pub inline fn htobe32(x: anytype) @TypeOf(__bswap_32(x)) {
    _ = &x;
    return __bswap_32(x);
}
pub inline fn htole32(x: anytype) @TypeOf(__uint32_identity(x)) {
    _ = &x;
    return __uint32_identity(x);
}
pub inline fn be32toh(x: anytype) @TypeOf(__bswap_32(x)) {
    _ = &x;
    return __bswap_32(x);
}
pub inline fn le32toh(x: anytype) @TypeOf(__uint32_identity(x)) {
    _ = &x;
    return __uint32_identity(x);
}
pub inline fn htobe64(x: anytype) @TypeOf(__bswap_64(x)) {
    _ = &x;
    return __bswap_64(x);
}
pub inline fn htole64(x: anytype) @TypeOf(__uint64_identity(x)) {
    _ = &x;
    return __uint64_identity(x);
}
pub inline fn be64toh(x: anytype) @TypeOf(__bswap_64(x)) {
    _ = &x;
    return __bswap_64(x);
}
pub inline fn le64toh(x: anytype) @TypeOf(__uint64_identity(x)) {
    _ = &x;
    return __uint64_identity(x);
}
pub const _SYS_SELECT_H = @as(c_int, 1);
pub const __FD_ZERO = @compileError("unable to translate macro: undefined identifier `__i`");
// /usr/include/x86_64-linux-gnu/bits/select.h:25:9
pub const __FD_SET = @compileError("unable to translate C expr: expected ')' instead got '|='");
// /usr/include/x86_64-linux-gnu/bits/select.h:32:9
pub const __FD_CLR = @compileError("unable to translate C expr: expected ')' instead got '&='");
// /usr/include/x86_64-linux-gnu/bits/select.h:34:9
pub inline fn __FD_ISSET(d: anytype, s: anytype) @TypeOf((__FDS_BITS(s)[@as(usize, @intCast(__FD_ELT(d)))] & __FD_MASK(d)) != @as(c_int, 0)) {
    _ = &d;
    _ = &s;
    return (__FDS_BITS(s)[@as(usize, @intCast(__FD_ELT(d)))] & __FD_MASK(d)) != @as(c_int, 0);
}
pub const __sigset_t_defined = @as(c_int, 1);
pub const ____sigset_t_defined = "";
pub const _SIGSET_NWORDS = @import("std").zig.c_translation.MacroArithmetic.div(@as(c_int, 1024), @as(c_int, 8) * @import("std").zig.c_translation.sizeof(c_ulong));
pub const __timeval_defined = @as(c_int, 1);
pub const _STRUCT_TIMESPEC = @as(c_int, 1);
pub const __NFDBITS = @as(c_int, 8) * @import("std").zig.c_translation.cast(c_int, @import("std").zig.c_translation.sizeof(__fd_mask));
pub inline fn __FD_ELT(d: anytype) @TypeOf(@import("std").zig.c_translation.MacroArithmetic.div(d, __NFDBITS)) {
    _ = &d;
    return @import("std").zig.c_translation.MacroArithmetic.div(d, __NFDBITS);
}
pub inline fn __FD_MASK(d: anytype) __fd_mask {
    _ = &d;
    return @import("std").zig.c_translation.cast(__fd_mask, @as(c_ulong, 1) << @import("std").zig.c_translation.MacroArithmetic.rem(d, __NFDBITS));
}
pub inline fn __FDS_BITS(set: anytype) @TypeOf(set.*.fds_bits) {
    _ = &set;
    return set.*.fds_bits;
}
pub const FD_SETSIZE = __FD_SETSIZE;
pub const NFDBITS = __NFDBITS;
pub inline fn FD_SET(fd: anytype, fdsetp: anytype) @TypeOf(__FD_SET(fd, fdsetp)) {
    _ = &fd;
    _ = &fdsetp;
    return __FD_SET(fd, fdsetp);
}
pub inline fn FD_CLR(fd: anytype, fdsetp: anytype) @TypeOf(__FD_CLR(fd, fdsetp)) {
    _ = &fd;
    _ = &fdsetp;
    return __FD_CLR(fd, fdsetp);
}
pub inline fn FD_ISSET(fd: anytype, fdsetp: anytype) @TypeOf(__FD_ISSET(fd, fdsetp)) {
    _ = &fd;
    _ = &fdsetp;
    return __FD_ISSET(fd, fdsetp);
}
pub inline fn FD_ZERO(fdsetp: anytype) @TypeOf(__FD_ZERO(fdsetp)) {
    _ = &fdsetp;
    return __FD_ZERO(fdsetp);
}
pub const __blksize_t_defined = "";
pub const __blkcnt_t_defined = "";
pub const __fsblkcnt_t_defined = "";
pub const __fsfilcnt_t_defined = "";
pub const _BITS_PTHREADTYPES_COMMON_H = @as(c_int, 1);
pub const _THREAD_SHARED_TYPES_H = @as(c_int, 1);
pub const _BITS_PTHREADTYPES_ARCH_H = @as(c_int, 1);
pub const __SIZEOF_PTHREAD_MUTEX_T = @as(c_int, 40);
pub const __SIZEOF_PTHREAD_ATTR_T = @as(c_int, 56);
pub const __SIZEOF_PTHREAD_RWLOCK_T = @as(c_int, 56);
pub const __SIZEOF_PTHREAD_BARRIER_T = @as(c_int, 32);
pub const __SIZEOF_PTHREAD_MUTEXATTR_T = @as(c_int, 4);
pub const __SIZEOF_PTHREAD_COND_T = @as(c_int, 48);
pub const __SIZEOF_PTHREAD_CONDATTR_T = @as(c_int, 4);
pub const __SIZEOF_PTHREAD_RWLOCKATTR_T = @as(c_int, 8);
pub const __SIZEOF_PTHREAD_BARRIERATTR_T = @as(c_int, 4);
pub const __LOCK_ALIGNMENT = "";
pub const __ONCE_ALIGNMENT = "";
pub const _BITS_ATOMIC_WIDE_COUNTER_H = "";
pub const _THREAD_MUTEX_INTERNAL_H = @as(c_int, 1);
pub const __PTHREAD_MUTEX_HAVE_PREV = @as(c_int, 1);
pub const __PTHREAD_MUTEX_INITIALIZER = @compileError("unable to translate C expr: unexpected token '{'");
// /usr/include/x86_64-linux-gnu/bits/struct_mutex.h:56:10
pub const _RWLOCK_INTERNAL_H = "";
pub const __PTHREAD_RWLOCK_ELISION_EXTRA = @compileError("unable to translate C expr: unexpected token '{'");
// /usr/include/x86_64-linux-gnu/bits/struct_rwlock.h:40:11
pub inline fn __PTHREAD_RWLOCK_INITIALIZER(__flags: anytype) @TypeOf(__flags) {
    _ = &__flags;
    return blk: {
        _ = @as(c_int, 0);
        _ = @as(c_int, 0);
        _ = @as(c_int, 0);
        _ = @as(c_int, 0);
        _ = @as(c_int, 0);
        _ = @as(c_int, 0);
        _ = @as(c_int, 0);
        _ = @as(c_int, 0);
        _ = &__PTHREAD_RWLOCK_ELISION_EXTRA;
        _ = @as(c_int, 0);
        break :blk __flags;
    };
}
pub const __ONCE_FLAG_INIT = @compileError("unable to translate C expr: unexpected token '{'");
// /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:113:9
pub const __have_pthread_attr_t = @as(c_int, 1);
pub const _ALLOCA_H = @as(c_int, 1);
pub const __COMPAR_FN_T = "";
pub const UA_free = free;
pub const UA_malloc = malloc;
pub const UA_calloc = calloc;
pub const UA_realloc = realloc;
pub inline fn UA_STACKARRAY(TYPE: anytype, NAME: anytype, SIZE: anytype) @TypeOf(TYPE ++ NAME[@as(usize, @intCast(SIZE))]) {
    _ = &TYPE;
    _ = &NAME;
    _ = &SIZE;
    return TYPE ++ NAME[@as(usize, @intCast(SIZE))];
}
pub const UA_assert = @compileError("unable to translate C expr: unexpected token 'do'");
// ./vendor/open62541.h:347:10
pub const UA_STATIC_ASSERT = @compileError("unable to translate C expr: unexpected token '_Static_assert'");
// ./vendor/open62541.h:357:10
pub const _PTHREAD_H = @as(c_int, 1);
pub const _SCHED_H = @as(c_int, 1);
pub const _BITS_SCHED_H = @as(c_int, 1);
pub const SCHED_OTHER = @as(c_int, 0);
pub const SCHED_FIFO = @as(c_int, 1);
pub const SCHED_RR = @as(c_int, 2);
pub const SCHED_BATCH = @as(c_int, 3);
pub const SCHED_ISO = @as(c_int, 4);
pub const SCHED_IDLE = @as(c_int, 5);
pub const SCHED_DEADLINE = @as(c_int, 6);
pub const SCHED_RESET_ON_FORK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x40000000, .hex);
pub const CSIGNAL = @as(c_int, 0x000000ff);
pub const CLONE_VM = @as(c_int, 0x00000100);
pub const CLONE_FS = @as(c_int, 0x00000200);
pub const CLONE_FILES = @as(c_int, 0x00000400);
pub const CLONE_SIGHAND = @as(c_int, 0x00000800);
pub const CLONE_PIDFD = @as(c_int, 0x00001000);
pub const CLONE_PTRACE = @as(c_int, 0x00002000);
pub const CLONE_VFORK = @as(c_int, 0x00004000);
pub const CLONE_PARENT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00008000, .hex);
pub const CLONE_THREAD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00010000, .hex);
pub const CLONE_NEWNS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00020000, .hex);
pub const CLONE_SYSVSEM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00040000, .hex);
pub const CLONE_SETTLS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00080000, .hex);
pub const CLONE_PARENT_SETTID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00100000, .hex);
pub const CLONE_CHILD_CLEARTID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00200000, .hex);
pub const CLONE_DETACHED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00400000, .hex);
pub const CLONE_UNTRACED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00800000, .hex);
pub const CLONE_CHILD_SETTID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x01000000, .hex);
pub const CLONE_NEWCGROUP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x02000000, .hex);
pub const CLONE_NEWUTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x04000000, .hex);
pub const CLONE_NEWIPC = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x08000000, .hex);
pub const CLONE_NEWUSER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000000, .hex);
pub const CLONE_NEWPID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x20000000, .hex);
pub const CLONE_NEWNET = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x40000000, .hex);
pub const CLONE_IO = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80000000, .hex);
pub const CLONE_NEWTIME = @as(c_int, 0x00000080);
pub const _BITS_TYPES_STRUCT_SCHED_PARAM = @as(c_int, 1);
pub const _BITS_CPU_SET_H = @as(c_int, 1);
pub const __CPU_SETSIZE = @as(c_int, 1024);
pub const __NCPUBITS = @as(c_int, 8) * @import("std").zig.c_translation.sizeof(__cpu_mask);
pub inline fn __CPUELT(cpu: anytype) @TypeOf(@import("std").zig.c_translation.MacroArithmetic.div(cpu, __NCPUBITS)) {
    _ = &cpu;
    return @import("std").zig.c_translation.MacroArithmetic.div(cpu, __NCPUBITS);
}
pub inline fn __CPUMASK(cpu: anytype) @TypeOf(@import("std").zig.c_translation.cast(__cpu_mask, @as(c_int, 1)) << @import("std").zig.c_translation.MacroArithmetic.rem(cpu, __NCPUBITS)) {
    _ = &cpu;
    return @import("std").zig.c_translation.cast(__cpu_mask, @as(c_int, 1)) << @import("std").zig.c_translation.MacroArithmetic.rem(cpu, __NCPUBITS);
}
pub const __CPU_ZERO_S = @compileError("unable to translate C expr: unexpected token 'do'");
// /usr/include/x86_64-linux-gnu/bits/cpu-set.h:46:10
pub const __CPU_SET_S = @compileError("unable to translate macro: undefined identifier `__cpu`");
// /usr/include/x86_64-linux-gnu/bits/cpu-set.h:58:9
pub const __CPU_CLR_S = @compileError("unable to translate macro: undefined identifier `__cpu`");
// /usr/include/x86_64-linux-gnu/bits/cpu-set.h:65:9
pub const __CPU_ISSET_S = @compileError("unable to translate macro: undefined identifier `__cpu`");
// /usr/include/x86_64-linux-gnu/bits/cpu-set.h:72:9
pub inline fn __CPU_COUNT_S(setsize: anytype, cpusetp: anytype) @TypeOf(__sched_cpucount(setsize, cpusetp)) {
    _ = &setsize;
    _ = &cpusetp;
    return __sched_cpucount(setsize, cpusetp);
}
pub const __CPU_EQUAL_S = @compileError("unable to translate macro: undefined identifier `__builtin_memcmp`");
// /usr/include/x86_64-linux-gnu/bits/cpu-set.h:84:10
pub const __CPU_OP_S = @compileError("unable to translate macro: undefined identifier `__dest`");
// /usr/include/x86_64-linux-gnu/bits/cpu-set.h:99:9
pub inline fn __CPU_ALLOC_SIZE(count: anytype) @TypeOf(@import("std").zig.c_translation.MacroArithmetic.div((count + __NCPUBITS) - @as(c_int, 1), __NCPUBITS) * @import("std").zig.c_translation.sizeof(__cpu_mask)) {
    _ = &count;
    return @import("std").zig.c_translation.MacroArithmetic.div((count + __NCPUBITS) - @as(c_int, 1), __NCPUBITS) * @import("std").zig.c_translation.sizeof(__cpu_mask);
}
pub inline fn __CPU_ALLOC(count: anytype) @TypeOf(__sched_cpualloc(count)) {
    _ = &count;
    return __sched_cpualloc(count);
}
pub inline fn __CPU_FREE(cpuset: anytype) @TypeOf(__sched_cpufree(cpuset)) {
    _ = &cpuset;
    return __sched_cpufree(cpuset);
}
pub const __sched_priority = @compileError("unable to translate macro: undefined identifier `sched_priority`");
// /usr/include/sched.h:48:9
pub const CPU_SETSIZE = __CPU_SETSIZE;
pub inline fn CPU_SET(cpu: anytype, cpusetp: anytype) @TypeOf(__CPU_SET_S(cpu, @import("std").zig.c_translation.sizeof(cpu_set_t), cpusetp)) {
    _ = &cpu;
    _ = &cpusetp;
    return __CPU_SET_S(cpu, @import("std").zig.c_translation.sizeof(cpu_set_t), cpusetp);
}
pub inline fn CPU_CLR(cpu: anytype, cpusetp: anytype) @TypeOf(__CPU_CLR_S(cpu, @import("std").zig.c_translation.sizeof(cpu_set_t), cpusetp)) {
    _ = &cpu;
    _ = &cpusetp;
    return __CPU_CLR_S(cpu, @import("std").zig.c_translation.sizeof(cpu_set_t), cpusetp);
}
pub inline fn CPU_ISSET(cpu: anytype, cpusetp: anytype) @TypeOf(__CPU_ISSET_S(cpu, @import("std").zig.c_translation.sizeof(cpu_set_t), cpusetp)) {
    _ = &cpu;
    _ = &cpusetp;
    return __CPU_ISSET_S(cpu, @import("std").zig.c_translation.sizeof(cpu_set_t), cpusetp);
}
pub inline fn CPU_ZERO(cpusetp: anytype) @TypeOf(__CPU_ZERO_S(@import("std").zig.c_translation.sizeof(cpu_set_t), cpusetp)) {
    _ = &cpusetp;
    return __CPU_ZERO_S(@import("std").zig.c_translation.sizeof(cpu_set_t), cpusetp);
}
pub inline fn CPU_COUNT(cpusetp: anytype) @TypeOf(__CPU_COUNT_S(@import("std").zig.c_translation.sizeof(cpu_set_t), cpusetp)) {
    _ = &cpusetp;
    return __CPU_COUNT_S(@import("std").zig.c_translation.sizeof(cpu_set_t), cpusetp);
}
pub inline fn CPU_SET_S(cpu: anytype, setsize: anytype, cpusetp: anytype) @TypeOf(__CPU_SET_S(cpu, setsize, cpusetp)) {
    _ = &cpu;
    _ = &setsize;
    _ = &cpusetp;
    return __CPU_SET_S(cpu, setsize, cpusetp);
}
pub inline fn CPU_CLR_S(cpu: anytype, setsize: anytype, cpusetp: anytype) @TypeOf(__CPU_CLR_S(cpu, setsize, cpusetp)) {
    _ = &cpu;
    _ = &setsize;
    _ = &cpusetp;
    return __CPU_CLR_S(cpu, setsize, cpusetp);
}
pub inline fn CPU_ISSET_S(cpu: anytype, setsize: anytype, cpusetp: anytype) @TypeOf(__CPU_ISSET_S(cpu, setsize, cpusetp)) {
    _ = &cpu;
    _ = &setsize;
    _ = &cpusetp;
    return __CPU_ISSET_S(cpu, setsize, cpusetp);
}
pub inline fn CPU_ZERO_S(setsize: anytype, cpusetp: anytype) @TypeOf(__CPU_ZERO_S(setsize, cpusetp)) {
    _ = &setsize;
    _ = &cpusetp;
    return __CPU_ZERO_S(setsize, cpusetp);
}
pub inline fn CPU_COUNT_S(setsize: anytype, cpusetp: anytype) @TypeOf(__CPU_COUNT_S(setsize, cpusetp)) {
    _ = &setsize;
    _ = &cpusetp;
    return __CPU_COUNT_S(setsize, cpusetp);
}
pub inline fn CPU_EQUAL(cpusetp1: anytype, cpusetp2: anytype) @TypeOf(__CPU_EQUAL_S(@import("std").zig.c_translation.sizeof(cpu_set_t), cpusetp1, cpusetp2)) {
    _ = &cpusetp1;
    _ = &cpusetp2;
    return __CPU_EQUAL_S(@import("std").zig.c_translation.sizeof(cpu_set_t), cpusetp1, cpusetp2);
}
pub inline fn CPU_EQUAL_S(setsize: anytype, cpusetp1: anytype, cpusetp2: anytype) @TypeOf(__CPU_EQUAL_S(setsize, cpusetp1, cpusetp2)) {
    _ = &setsize;
    _ = &cpusetp1;
    _ = &cpusetp2;
    return __CPU_EQUAL_S(setsize, cpusetp1, cpusetp2);
}
pub const CPU_AND = @compileError("unable to translate C expr: unexpected token ')'");
// /usr/include/sched.h:111:10
pub const CPU_OR = @compileError("unable to translate C expr: unexpected token '|'");
// /usr/include/sched.h:113:10
pub const CPU_XOR = @compileError("unable to translate C expr: unexpected token '^'");
// /usr/include/sched.h:115:10
pub const CPU_AND_S = @compileError("unable to translate C expr: unexpected token ')'");
// /usr/include/sched.h:117:10
pub const CPU_OR_S = @compileError("unable to translate C expr: unexpected token '|'");
// /usr/include/sched.h:119:10
pub const CPU_XOR_S = @compileError("unable to translate C expr: unexpected token '^'");
// /usr/include/sched.h:121:10
pub inline fn CPU_ALLOC_SIZE(count: anytype) @TypeOf(__CPU_ALLOC_SIZE(count)) {
    _ = &count;
    return __CPU_ALLOC_SIZE(count);
}
pub inline fn CPU_ALLOC(count: anytype) @TypeOf(__CPU_ALLOC(count)) {
    _ = &count;
    return __CPU_ALLOC(count);
}
pub inline fn CPU_FREE(cpuset: anytype) @TypeOf(__CPU_FREE(cpuset)) {
    _ = &cpuset;
    return __CPU_FREE(cpuset);
}
pub const _TIME_H = @as(c_int, 1);
pub const _BITS_TIME_H = @as(c_int, 1);
pub const CLOCKS_PER_SEC = @import("std").zig.c_translation.cast(__clock_t, @import("std").zig.c_translation.promoteIntLiteral(c_int, 1000000, .decimal));
pub const CLOCK_REALTIME = @as(c_int, 0);
pub const CLOCK_MONOTONIC = @as(c_int, 1);
pub const CLOCK_PROCESS_CPUTIME_ID = @as(c_int, 2);
pub const CLOCK_THREAD_CPUTIME_ID = @as(c_int, 3);
pub const CLOCK_MONOTONIC_RAW = @as(c_int, 4);
pub const CLOCK_REALTIME_COARSE = @as(c_int, 5);
pub const CLOCK_MONOTONIC_COARSE = @as(c_int, 6);
pub const CLOCK_BOOTTIME = @as(c_int, 7);
pub const CLOCK_REALTIME_ALARM = @as(c_int, 8);
pub const CLOCK_BOOTTIME_ALARM = @as(c_int, 9);
pub const CLOCK_TAI = @as(c_int, 11);
pub const TIMER_ABSTIME = @as(c_int, 1);
pub const _BITS_TIMEX_H = @as(c_int, 1);
pub const ADJ_OFFSET = @as(c_int, 0x0001);
pub const ADJ_FREQUENCY = @as(c_int, 0x0002);
pub const ADJ_MAXERROR = @as(c_int, 0x0004);
pub const ADJ_ESTERROR = @as(c_int, 0x0008);
pub const ADJ_STATUS = @as(c_int, 0x0010);
pub const ADJ_TIMECONST = @as(c_int, 0x0020);
pub const ADJ_TAI = @as(c_int, 0x0080);
pub const ADJ_SETOFFSET = @as(c_int, 0x0100);
pub const ADJ_MICRO = @as(c_int, 0x1000);
pub const ADJ_NANO = @as(c_int, 0x2000);
pub const ADJ_TICK = @as(c_int, 0x4000);
pub const ADJ_OFFSET_SINGLESHOT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8001, .hex);
pub const ADJ_OFFSET_SS_READ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xa001, .hex);
pub const MOD_OFFSET = ADJ_OFFSET;
pub const MOD_FREQUENCY = ADJ_FREQUENCY;
pub const MOD_MAXERROR = ADJ_MAXERROR;
pub const MOD_ESTERROR = ADJ_ESTERROR;
pub const MOD_STATUS = ADJ_STATUS;
pub const MOD_TIMECONST = ADJ_TIMECONST;
pub const MOD_CLKB = ADJ_TICK;
pub const MOD_CLKA = ADJ_OFFSET_SINGLESHOT;
pub const MOD_TAI = ADJ_TAI;
pub const MOD_MICRO = ADJ_MICRO;
pub const MOD_NANO = ADJ_NANO;
pub const STA_PLL = @as(c_int, 0x0001);
pub const STA_PPSFREQ = @as(c_int, 0x0002);
pub const STA_PPSTIME = @as(c_int, 0x0004);
pub const STA_FLL = @as(c_int, 0x0008);
pub const STA_INS = @as(c_int, 0x0010);
pub const STA_DEL = @as(c_int, 0x0020);
pub const STA_UNSYNC = @as(c_int, 0x0040);
pub const STA_FREQHOLD = @as(c_int, 0x0080);
pub const STA_PPSSIGNAL = @as(c_int, 0x0100);
pub const STA_PPSJITTER = @as(c_int, 0x0200);
pub const STA_PPSWANDER = @as(c_int, 0x0400);
pub const STA_PPSERROR = @as(c_int, 0x0800);
pub const STA_CLOCKERR = @as(c_int, 0x1000);
pub const STA_NANO = @as(c_int, 0x2000);
pub const STA_MODE = @as(c_int, 0x4000);
pub const STA_CLK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8000, .hex);
pub const STA_RONLY = ((((((STA_PPSSIGNAL | STA_PPSJITTER) | STA_PPSWANDER) | STA_PPSERROR) | STA_CLOCKERR) | STA_NANO) | STA_MODE) | STA_CLK;
pub const __struct_tm_defined = @as(c_int, 1);
pub const __itimerspec_defined = @as(c_int, 1);
pub const TIME_UTC = @as(c_int, 1);
pub inline fn __isleap(year: anytype) @TypeOf((@import("std").zig.c_translation.MacroArithmetic.rem(year, @as(c_int, 4)) == @as(c_int, 0)) and ((@import("std").zig.c_translation.MacroArithmetic.rem(year, @as(c_int, 100)) != @as(c_int, 0)) or (@import("std").zig.c_translation.MacroArithmetic.rem(year, @as(c_int, 400)) == @as(c_int, 0)))) {
    _ = &year;
    return (@import("std").zig.c_translation.MacroArithmetic.rem(year, @as(c_int, 4)) == @as(c_int, 0)) and ((@import("std").zig.c_translation.MacroArithmetic.rem(year, @as(c_int, 100)) != @as(c_int, 0)) or (@import("std").zig.c_translation.MacroArithmetic.rem(year, @as(c_int, 400)) == @as(c_int, 0)));
}
pub const _BITS_SETJMP_H = @as(c_int, 1);
pub const __jmp_buf_tag_defined = @as(c_int, 1);
pub const __SC_THREAD_STACK_MIN_VALUE = @as(c_int, 75);
pub const PTHREAD_STACK_MIN = __sysconf(__SC_THREAD_STACK_MIN_VALUE);
pub const PTHREAD_MUTEX_INITIALIZER = @compileError("unable to translate C expr: unexpected token '{'");
// /usr/include/pthread.h:90:9
pub const PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP = @compileError("unable to translate C expr: unexpected token '{'");
// /usr/include/pthread.h:93:10
pub const PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP = @compileError("unable to translate C expr: unexpected token '{'");
// /usr/include/pthread.h:95:10
pub const PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP = @compileError("unable to translate C expr: unexpected token '{'");
// /usr/include/pthread.h:97:10
pub const PTHREAD_RWLOCK_INITIALIZER = @compileError("unable to translate C expr: unexpected token '{'");
// /usr/include/pthread.h:114:10
pub const PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP = @compileError("unable to translate C expr: unexpected token '{'");
// /usr/include/pthread.h:117:11
pub const PTHREAD_COND_INITIALIZER = @compileError("unable to translate C expr: unexpected token '{'");
// /usr/include/pthread.h:155:9
pub const PTHREAD_CANCELED = @import("std").zig.c_translation.cast(?*anyopaque, -@as(c_int, 1));
pub const PTHREAD_ONCE_INIT = @as(c_int, 0);
pub const PTHREAD_BARRIER_SERIAL_THREAD = -@as(c_int, 1);
pub const PTHREAD_ATTR_NO_SIGMASK_NP = -@as(c_int, 1);
pub const __cleanup_fct_attribute = "";
pub const pthread_cleanup_push = @compileError("unable to translate macro: undefined identifier `__cancel_buf`");
// /usr/include/pthread.h:681:10
pub const pthread_cleanup_pop = @compileError("unable to translate macro: undefined identifier `__cancel_buf`");
// /usr/include/pthread.h:702:10
pub const pthread_cleanup_push_defer_np = @compileError("unable to translate macro: undefined identifier `__cancel_buf`");
// /usr/include/pthread.h:716:11
pub const pthread_cleanup_pop_restore_np = @compileError("unable to translate macro: undefined identifier `__cancel_buf`");
// /usr/include/pthread.h:738:11
pub inline fn __sigsetjmp_cancel(env: anytype, savemask: anytype) @TypeOf(__sigsetjmp(@import("std").zig.c_translation.cast([*c]struct___jmp_buf_tag, @import("std").zig.c_translation.cast(?*anyopaque, env)), savemask)) {
    _ = &env;
    _ = &savemask;
    return __sigsetjmp(@import("std").zig.c_translation.cast([*c]struct___jmp_buf_tag, @import("std").zig.c_translation.cast(?*anyopaque, env)), savemask);
}
pub const UA_EXPORT = @compileError("unable to translate macro: undefined identifier `visibility`");
// ./vendor/open62541.h:488:11
pub const UA_THREADSAFE = "";
pub const UA_RESTRICT = @compileError("unable to translate C expr: unexpected token '__restrict__'");
// ./vendor/open62541.h:510:10
pub inline fn UA_LIKELY(x: anytype) @TypeOf(__builtin_expect(x, @as(c_int, 1))) {
    _ = &x;
    return __builtin_expect(x, @as(c_int, 1));
}
pub inline fn UA_UNLIKELY(x: anytype) @TypeOf(__builtin_expect(x, @as(c_int, 0))) {
    _ = &x;
    return __builtin_expect(x, @as(c_int, 0));
}
pub const UA_FUNC_ATTR_MALLOC = @compileError("unable to translate C expr: unexpected token '__attribute__'");
// ./vendor/open62541.h:533:10
pub const UA_FUNC_ATTR_PURE = @compileError("unable to translate macro: undefined identifier `pure`");
// ./vendor/open62541.h:534:10
pub const UA_FUNC_ATTR_CONST = @compileError("unable to translate C expr: unexpected token '__attribute__'");
// ./vendor/open62541.h:535:10
pub const UA_FUNC_ATTR_WARN_UNUSED_RESULT = @compileError("unable to translate macro: undefined identifier `warn_unused_result`");
// ./vendor/open62541.h:536:10
pub const UA_FORMAT = @compileError("unable to translate macro: undefined identifier `format`");
// ./vendor/open62541.h:537:10
pub const UA_DEPRECATED = @compileError("unable to translate macro: undefined identifier `deprecated`");
// ./vendor/open62541.h:554:10
pub const UA_INTERNAL_DEPRECATED = "";
pub const UA_INTERNAL_FUNC_ATTR_WARN_UNUSED_RESULT = "";
pub const UA_LITTLE_ENDIAN = @as(c_int, 1);
pub const UA_BINARY_OVERLAYABLE_INTEGER = @as(c_int, 1);
pub const UA_FLOAT_IEEE754 = @as(c_int, 1);
pub const UA_FLOAT_LITTLE_ENDIAN = @as(c_int, 1);
pub const UA_BINARY_OVERLAYABLE_FLOAT = @as(c_int, 1);
pub const UA_STATUSCODE_INFOTYPE_DATAVALUE = @as(c_int, 0x00000400);
pub const UA_STATUSCODE_INFOBITS_OVERFLOW = @as(c_int, 0x00000080);
pub const UA_STATUSCODE_GOOD = @as(c_int, 0x00000000);
pub const UA_STATUSCODE_UNCERTAIN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x40000000, .hex);
pub const UA_STATUSCODE_BAD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80000000, .hex);
pub const UA_STATUSCODE_BADUNEXPECTEDERROR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80010000, .hex);
pub const UA_STATUSCODE_BADINTERNALERROR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80020000, .hex);
pub const UA_STATUSCODE_BADOUTOFMEMORY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80030000, .hex);
pub const UA_STATUSCODE_BADRESOURCEUNAVAILABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80040000, .hex);
pub const UA_STATUSCODE_BADCOMMUNICATIONERROR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80050000, .hex);
pub const UA_STATUSCODE_BADENCODINGERROR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80060000, .hex);
pub const UA_STATUSCODE_BADDECODINGERROR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80070000, .hex);
pub const UA_STATUSCODE_BADENCODINGLIMITSEXCEEDED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80080000, .hex);
pub const UA_STATUSCODE_BADREQUESTTOOLARGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B80000, .hex);
pub const UA_STATUSCODE_BADRESPONSETOOLARGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B90000, .hex);
pub const UA_STATUSCODE_BADUNKNOWNRESPONSE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80090000, .hex);
pub const UA_STATUSCODE_BADTIMEOUT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x800A0000, .hex);
pub const UA_STATUSCODE_BADSERVICEUNSUPPORTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x800B0000, .hex);
pub const UA_STATUSCODE_BADSHUTDOWN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x800C0000, .hex);
pub const UA_STATUSCODE_BADSERVERNOTCONNECTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x800D0000, .hex);
pub const UA_STATUSCODE_BADSERVERHALTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x800E0000, .hex);
pub const UA_STATUSCODE_BADNOTHINGTODO = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x800F0000, .hex);
pub const UA_STATUSCODE_BADTOOMANYOPERATIONS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80100000, .hex);
pub const UA_STATUSCODE_BADTOOMANYMONITOREDITEMS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80DB0000, .hex);
pub const UA_STATUSCODE_BADDATATYPEIDUNKNOWN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80110000, .hex);
pub const UA_STATUSCODE_BADCERTIFICATEINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80120000, .hex);
pub const UA_STATUSCODE_BADSECURITYCHECKSFAILED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80130000, .hex);
pub const UA_STATUSCODE_BADCERTIFICATEPOLICYCHECKFAILED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81140000, .hex);
pub const UA_STATUSCODE_BADCERTIFICATETIMEINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80140000, .hex);
pub const UA_STATUSCODE_BADCERTIFICATEISSUERTIMEINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80150000, .hex);
pub const UA_STATUSCODE_BADCERTIFICATEHOSTNAMEINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80160000, .hex);
pub const UA_STATUSCODE_BADCERTIFICATEURIINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80170000, .hex);
pub const UA_STATUSCODE_BADCERTIFICATEUSENOTALLOWED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80180000, .hex);
pub const UA_STATUSCODE_BADCERTIFICATEISSUERUSENOTALLOWED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80190000, .hex);
pub const UA_STATUSCODE_BADCERTIFICATEUNTRUSTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x801A0000, .hex);
pub const UA_STATUSCODE_BADCERTIFICATEREVOCATIONUNKNOWN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x801B0000, .hex);
pub const UA_STATUSCODE_BADCERTIFICATEISSUERREVOCATIONUNKNOWN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x801C0000, .hex);
pub const UA_STATUSCODE_BADCERTIFICATEREVOKED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x801D0000, .hex);
pub const UA_STATUSCODE_BADCERTIFICATEISSUERREVOKED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x801E0000, .hex);
pub const UA_STATUSCODE_BADCERTIFICATECHAININCOMPLETE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x810D0000, .hex);
pub const UA_STATUSCODE_BADUSERACCESSDENIED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x801F0000, .hex);
pub const UA_STATUSCODE_BADIDENTITYTOKENINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80200000, .hex);
pub const UA_STATUSCODE_BADIDENTITYTOKENREJECTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80210000, .hex);
pub const UA_STATUSCODE_BADSECURECHANNELIDINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80220000, .hex);
pub const UA_STATUSCODE_BADINVALIDTIMESTAMP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80230000, .hex);
pub const UA_STATUSCODE_BADNONCEINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80240000, .hex);
pub const UA_STATUSCODE_BADSESSIONIDINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80250000, .hex);
pub const UA_STATUSCODE_BADSESSIONCLOSED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80260000, .hex);
pub const UA_STATUSCODE_BADSESSIONNOTACTIVATED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80270000, .hex);
pub const UA_STATUSCODE_BADSUBSCRIPTIONIDINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80280000, .hex);
pub const UA_STATUSCODE_BADREQUESTHEADERINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x802A0000, .hex);
pub const UA_STATUSCODE_BADTIMESTAMPSTORETURNINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x802B0000, .hex);
pub const UA_STATUSCODE_BADREQUESTCANCELLEDBYCLIENT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x802C0000, .hex);
pub const UA_STATUSCODE_BADTOOMANYARGUMENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E50000, .hex);
pub const UA_STATUSCODE_BADLICENSEEXPIRED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x810E0000, .hex);
pub const UA_STATUSCODE_BADLICENSELIMITSEXCEEDED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x810F0000, .hex);
pub const UA_STATUSCODE_BADLICENSENOTAVAILABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81100000, .hex);
pub const UA_STATUSCODE_GOODSUBSCRIPTIONTRANSFERRED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x002D0000, .hex);
pub const UA_STATUSCODE_GOODCOMPLETESASYNCHRONOUSLY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x002E0000, .hex);
pub const UA_STATUSCODE_GOODOVERLOAD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x002F0000, .hex);
pub const UA_STATUSCODE_GOODCLAMPED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00300000, .hex);
pub const UA_STATUSCODE_BADNOCOMMUNICATION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80310000, .hex);
pub const UA_STATUSCODE_BADWAITINGFORINITIALDATA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80320000, .hex);
pub const UA_STATUSCODE_BADNODEIDINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80330000, .hex);
pub const UA_STATUSCODE_BADNODEIDUNKNOWN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80340000, .hex);
pub const UA_STATUSCODE_BADATTRIBUTEIDINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80350000, .hex);
pub const UA_STATUSCODE_BADINDEXRANGEINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80360000, .hex);
pub const UA_STATUSCODE_BADINDEXRANGENODATA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80370000, .hex);
pub const UA_STATUSCODE_BADDATAENCODINGINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80380000, .hex);
pub const UA_STATUSCODE_BADDATAENCODINGUNSUPPORTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80390000, .hex);
pub const UA_STATUSCODE_BADNOTREADABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x803A0000, .hex);
pub const UA_STATUSCODE_BADNOTWRITABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x803B0000, .hex);
pub const UA_STATUSCODE_BADOUTOFRANGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x803C0000, .hex);
pub const UA_STATUSCODE_BADNOTSUPPORTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x803D0000, .hex);
pub const UA_STATUSCODE_BADNOTFOUND = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x803E0000, .hex);
pub const UA_STATUSCODE_BADOBJECTDELETED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x803F0000, .hex);
pub const UA_STATUSCODE_BADNOTIMPLEMENTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80400000, .hex);
pub const UA_STATUSCODE_BADMONITORINGMODEINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80410000, .hex);
pub const UA_STATUSCODE_BADMONITOREDITEMIDINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80420000, .hex);
pub const UA_STATUSCODE_BADMONITOREDITEMFILTERINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80430000, .hex);
pub const UA_STATUSCODE_BADMONITOREDITEMFILTERUNSUPPORTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80440000, .hex);
pub const UA_STATUSCODE_BADFILTERNOTALLOWED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80450000, .hex);
pub const UA_STATUSCODE_BADSTRUCTUREMISSING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80460000, .hex);
pub const UA_STATUSCODE_BADEVENTFILTERINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80470000, .hex);
pub const UA_STATUSCODE_BADCONTENTFILTERINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80480000, .hex);
pub const UA_STATUSCODE_BADFILTEROPERATORINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80C10000, .hex);
pub const UA_STATUSCODE_BADFILTEROPERATORUNSUPPORTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80C20000, .hex);
pub const UA_STATUSCODE_BADFILTEROPERANDCOUNTMISMATCH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80C30000, .hex);
pub const UA_STATUSCODE_BADFILTEROPERANDINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80490000, .hex);
pub const UA_STATUSCODE_BADFILTERELEMENTINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80C40000, .hex);
pub const UA_STATUSCODE_BADFILTERLITERALINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80C50000, .hex);
pub const UA_STATUSCODE_BADCONTINUATIONPOINTINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x804A0000, .hex);
pub const UA_STATUSCODE_BADNOCONTINUATIONPOINTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x804B0000, .hex);
pub const UA_STATUSCODE_BADREFERENCETYPEIDINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x804C0000, .hex);
pub const UA_STATUSCODE_BADBROWSEDIRECTIONINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x804D0000, .hex);
pub const UA_STATUSCODE_BADNODENOTINVIEW = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x804E0000, .hex);
pub const UA_STATUSCODE_BADNUMERICOVERFLOW = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81120000, .hex);
pub const UA_STATUSCODE_BADSERVERURIINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x804F0000, .hex);
pub const UA_STATUSCODE_BADSERVERNAMEMISSING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80500000, .hex);
pub const UA_STATUSCODE_BADDISCOVERYURLMISSING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80510000, .hex);
pub const UA_STATUSCODE_BADSEMPAHOREFILEMISSING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80520000, .hex);
pub const UA_STATUSCODE_BADREQUESTTYPEINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80530000, .hex);
pub const UA_STATUSCODE_BADSECURITYMODEREJECTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80540000, .hex);
pub const UA_STATUSCODE_BADSECURITYPOLICYREJECTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80550000, .hex);
pub const UA_STATUSCODE_BADTOOMANYSESSIONS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80560000, .hex);
pub const UA_STATUSCODE_BADUSERSIGNATUREINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80570000, .hex);
pub const UA_STATUSCODE_BADAPPLICATIONSIGNATUREINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80580000, .hex);
pub const UA_STATUSCODE_BADNOVALIDCERTIFICATES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80590000, .hex);
pub const UA_STATUSCODE_BADIDENTITYCHANGENOTSUPPORTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80C60000, .hex);
pub const UA_STATUSCODE_BADREQUESTCANCELLEDBYREQUEST = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x805A0000, .hex);
pub const UA_STATUSCODE_BADPARENTNODEIDINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x805B0000, .hex);
pub const UA_STATUSCODE_BADREFERENCENOTALLOWED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x805C0000, .hex);
pub const UA_STATUSCODE_BADNODEIDREJECTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x805D0000, .hex);
pub const UA_STATUSCODE_BADNODEIDEXISTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x805E0000, .hex);
pub const UA_STATUSCODE_BADNODECLASSINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x805F0000, .hex);
pub const UA_STATUSCODE_BADBROWSENAMEINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80600000, .hex);
pub const UA_STATUSCODE_BADBROWSENAMEDUPLICATED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80610000, .hex);
pub const UA_STATUSCODE_BADNODEATTRIBUTESINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80620000, .hex);
pub const UA_STATUSCODE_BADTYPEDEFINITIONINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80630000, .hex);
pub const UA_STATUSCODE_BADSOURCENODEIDINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80640000, .hex);
pub const UA_STATUSCODE_BADTARGETNODEIDINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80650000, .hex);
pub const UA_STATUSCODE_BADDUPLICATEREFERENCENOTALLOWED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80660000, .hex);
pub const UA_STATUSCODE_BADINVALIDSELFREFERENCE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80670000, .hex);
pub const UA_STATUSCODE_BADREFERENCELOCALONLY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80680000, .hex);
pub const UA_STATUSCODE_BADNODELETERIGHTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80690000, .hex);
pub const UA_STATUSCODE_UNCERTAINREFERENCENOTDELETED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x40BC0000, .hex);
pub const UA_STATUSCODE_BADSERVERINDEXINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x806A0000, .hex);
pub const UA_STATUSCODE_BADVIEWIDUNKNOWN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x806B0000, .hex);
pub const UA_STATUSCODE_BADVIEWTIMESTAMPINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80C90000, .hex);
pub const UA_STATUSCODE_BADVIEWPARAMETERMISMATCH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80CA0000, .hex);
pub const UA_STATUSCODE_BADVIEWVERSIONINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80CB0000, .hex);
pub const UA_STATUSCODE_UNCERTAINNOTALLNODESAVAILABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x40C00000, .hex);
pub const UA_STATUSCODE_GOODRESULTSMAYBEINCOMPLETE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00BA0000, .hex);
pub const UA_STATUSCODE_BADNOTTYPEDEFINITION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80C80000, .hex);
pub const UA_STATUSCODE_UNCERTAINREFERENCEOUTOFSERVER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x406C0000, .hex);
pub const UA_STATUSCODE_BADTOOMANYMATCHES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x806D0000, .hex);
pub const UA_STATUSCODE_BADQUERYTOOCOMPLEX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x806E0000, .hex);
pub const UA_STATUSCODE_BADNOMATCH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x806F0000, .hex);
pub const UA_STATUSCODE_BADMAXAGEINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80700000, .hex);
pub const UA_STATUSCODE_BADSECURITYMODEINSUFFICIENT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E60000, .hex);
pub const UA_STATUSCODE_BADHISTORYOPERATIONINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80710000, .hex);
pub const UA_STATUSCODE_BADHISTORYOPERATIONUNSUPPORTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80720000, .hex);
pub const UA_STATUSCODE_BADINVALIDTIMESTAMPARGUMENT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80BD0000, .hex);
pub const UA_STATUSCODE_BADWRITENOTSUPPORTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80730000, .hex);
pub const UA_STATUSCODE_BADTYPEMISMATCH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80740000, .hex);
pub const UA_STATUSCODE_BADMETHODINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80750000, .hex);
pub const UA_STATUSCODE_BADARGUMENTSMISSING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80760000, .hex);
pub const UA_STATUSCODE_BADNOTEXECUTABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81110000, .hex);
pub const UA_STATUSCODE_BADTOOMANYSUBSCRIPTIONS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80770000, .hex);
pub const UA_STATUSCODE_BADTOOMANYPUBLISHREQUESTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80780000, .hex);
pub const UA_STATUSCODE_BADNOSUBSCRIPTION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80790000, .hex);
pub const UA_STATUSCODE_BADSEQUENCENUMBERUNKNOWN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x807A0000, .hex);
pub const UA_STATUSCODE_GOODRETRANSMISSIONQUEUENOTSUPPORTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00DF0000, .hex);
pub const UA_STATUSCODE_BADMESSAGENOTAVAILABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x807B0000, .hex);
pub const UA_STATUSCODE_BADINSUFFICIENTCLIENTPROFILE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x807C0000, .hex);
pub const UA_STATUSCODE_BADSTATENOTACTIVE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80BF0000, .hex);
pub const UA_STATUSCODE_BADALREADYEXISTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81150000, .hex);
pub const UA_STATUSCODE_BADTCPSERVERTOOBUSY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x807D0000, .hex);
pub const UA_STATUSCODE_BADTCPMESSAGETYPEINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x807E0000, .hex);
pub const UA_STATUSCODE_BADTCPSECURECHANNELUNKNOWN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x807F0000, .hex);
pub const UA_STATUSCODE_BADTCPMESSAGETOOLARGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80800000, .hex);
pub const UA_STATUSCODE_BADTCPNOTENOUGHRESOURCES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80810000, .hex);
pub const UA_STATUSCODE_BADTCPINTERNALERROR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80820000, .hex);
pub const UA_STATUSCODE_BADTCPENDPOINTURLINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80830000, .hex);
pub const UA_STATUSCODE_BADREQUESTINTERRUPTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80840000, .hex);
pub const UA_STATUSCODE_BADREQUESTTIMEOUT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80850000, .hex);
pub const UA_STATUSCODE_BADSECURECHANNELCLOSED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80860000, .hex);
pub const UA_STATUSCODE_BADSECURECHANNELTOKENUNKNOWN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80870000, .hex);
pub const UA_STATUSCODE_BADSEQUENCENUMBERINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80880000, .hex);
pub const UA_STATUSCODE_BADPROTOCOLVERSIONUNSUPPORTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80BE0000, .hex);
pub const UA_STATUSCODE_BADCONFIGURATIONERROR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80890000, .hex);
pub const UA_STATUSCODE_BADNOTCONNECTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x808A0000, .hex);
pub const UA_STATUSCODE_BADDEVICEFAILURE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x808B0000, .hex);
pub const UA_STATUSCODE_BADSENSORFAILURE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x808C0000, .hex);
pub const UA_STATUSCODE_BADOUTOFSERVICE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x808D0000, .hex);
pub const UA_STATUSCODE_BADDEADBANDFILTERINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x808E0000, .hex);
pub const UA_STATUSCODE_UNCERTAINNOCOMMUNICATIONLASTUSABLEVALUE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x408F0000, .hex);
pub const UA_STATUSCODE_UNCERTAINLASTUSABLEVALUE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x40900000, .hex);
pub const UA_STATUSCODE_UNCERTAINSUBSTITUTEVALUE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x40910000, .hex);
pub const UA_STATUSCODE_UNCERTAININITIALVALUE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x40920000, .hex);
pub const UA_STATUSCODE_UNCERTAINSENSORNOTACCURATE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x40930000, .hex);
pub const UA_STATUSCODE_UNCERTAINENGINEERINGUNITSEXCEEDED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x40940000, .hex);
pub const UA_STATUSCODE_UNCERTAINSUBNORMAL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x40950000, .hex);
pub const UA_STATUSCODE_GOODLOCALOVERRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00960000, .hex);
pub const UA_STATUSCODE_BADREFRESHINPROGRESS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80970000, .hex);
pub const UA_STATUSCODE_BADCONDITIONALREADYDISABLED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80980000, .hex);
pub const UA_STATUSCODE_BADCONDITIONALREADYENABLED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80CC0000, .hex);
pub const UA_STATUSCODE_BADCONDITIONDISABLED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80990000, .hex);
pub const UA_STATUSCODE_BADEVENTIDUNKNOWN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x809A0000, .hex);
pub const UA_STATUSCODE_BADEVENTNOTACKNOWLEDGEABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80BB0000, .hex);
pub const UA_STATUSCODE_BADDIALOGNOTACTIVE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80CD0000, .hex);
pub const UA_STATUSCODE_BADDIALOGRESPONSEINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80CE0000, .hex);
pub const UA_STATUSCODE_BADCONDITIONBRANCHALREADYACKED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80CF0000, .hex);
pub const UA_STATUSCODE_BADCONDITIONBRANCHALREADYCONFIRMED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D00000, .hex);
pub const UA_STATUSCODE_BADCONDITIONALREADYSHELVED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D10000, .hex);
pub const UA_STATUSCODE_BADCONDITIONNOTSHELVED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D20000, .hex);
pub const UA_STATUSCODE_BADSHELVINGTIMEOUTOFRANGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D30000, .hex);
pub const UA_STATUSCODE_BADNODATA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x809B0000, .hex);
pub const UA_STATUSCODE_BADBOUNDNOTFOUND = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D70000, .hex);
pub const UA_STATUSCODE_BADBOUNDNOTSUPPORTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D80000, .hex);
pub const UA_STATUSCODE_BADDATALOST = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x809D0000, .hex);
pub const UA_STATUSCODE_BADDATAUNAVAILABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x809E0000, .hex);
pub const UA_STATUSCODE_BADENTRYEXISTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x809F0000, .hex);
pub const UA_STATUSCODE_BADNOENTRYEXISTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A00000, .hex);
pub const UA_STATUSCODE_BADTIMESTAMPNOTSUPPORTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A10000, .hex);
pub const UA_STATUSCODE_GOODENTRYINSERTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00A20000, .hex);
pub const UA_STATUSCODE_GOODENTRYREPLACED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00A30000, .hex);
pub const UA_STATUSCODE_UNCERTAINDATASUBNORMAL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x40A40000, .hex);
pub const UA_STATUSCODE_GOODNODATA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00A50000, .hex);
pub const UA_STATUSCODE_GOODMOREDATA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00A60000, .hex);
pub const UA_STATUSCODE_BADAGGREGATELISTMISMATCH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D40000, .hex);
pub const UA_STATUSCODE_BADAGGREGATENOTSUPPORTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D50000, .hex);
pub const UA_STATUSCODE_BADAGGREGATEINVALIDINPUTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D60000, .hex);
pub const UA_STATUSCODE_BADAGGREGATECONFIGURATIONREJECTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80DA0000, .hex);
pub const UA_STATUSCODE_GOODDATAIGNORED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00D90000, .hex);
pub const UA_STATUSCODE_BADREQUESTNOTALLOWED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E40000, .hex);
pub const UA_STATUSCODE_BADREQUESTNOTCOMPLETE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81130000, .hex);
pub const UA_STATUSCODE_BADTRANSACTIONPENDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E80000, .hex);
pub const UA_STATUSCODE_BADTICKETREQUIRED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x811F0000, .hex);
pub const UA_STATUSCODE_BADTICKETINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81200000, .hex);
pub const UA_STATUSCODE_BADLOCKED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E90000, .hex);
pub const UA_STATUSCODE_GOODEDITED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00DC0000, .hex);
pub const UA_STATUSCODE_GOODPOSTACTIONFAILED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00DD0000, .hex);
pub const UA_STATUSCODE_UNCERTAINDOMINANTVALUECHANGED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x40DE0000, .hex);
pub const UA_STATUSCODE_GOODDEPENDENTVALUECHANGED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00E00000, .hex);
pub const UA_STATUSCODE_BADDOMINANTVALUECHANGED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E10000, .hex);
pub const UA_STATUSCODE_UNCERTAINDEPENDENTVALUECHANGED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x40E20000, .hex);
pub const UA_STATUSCODE_BADDEPENDENTVALUECHANGED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E30000, .hex);
pub const UA_STATUSCODE_GOODEDITED_DEPENDENTVALUECHANGED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x01160000, .hex);
pub const UA_STATUSCODE_GOODEDITED_DOMINANTVALUECHANGED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x01170000, .hex);
pub const UA_STATUSCODE_GOODEDITED_DOMINANTVALUECHANGED_DEPENDENTVALUECHANGED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x01180000, .hex);
pub const UA_STATUSCODE_BADEDITED_OUTOFRANGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81190000, .hex);
pub const UA_STATUSCODE_BADINITIALVALUE_OUTOFRANGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x811A0000, .hex);
pub const UA_STATUSCODE_BADOUTOFRANGE_DOMINANTVALUECHANGED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x811B0000, .hex);
pub const UA_STATUSCODE_BADEDITED_OUTOFRANGE_DOMINANTVALUECHANGED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x811C0000, .hex);
pub const UA_STATUSCODE_BADOUTOFRANGE_DOMINANTVALUECHANGED_DEPENDENTVALUECHANGED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x811D0000, .hex);
pub const UA_STATUSCODE_BADEDITED_OUTOFRANGE_DOMINANTVALUECHANGED_DEPENDENTVALUECHANGED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x811E0000, .hex);
pub const UA_STATUSCODE_GOODCOMMUNICATIONEVENT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00A70000, .hex);
pub const UA_STATUSCODE_GOODSHUTDOWNEVENT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00A80000, .hex);
pub const UA_STATUSCODE_GOODCALLAGAIN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00A90000, .hex);
pub const UA_STATUSCODE_GOODNONCRITICALTIMEOUT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00AA0000, .hex);
pub const UA_STATUSCODE_BADINVALIDARGUMENT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80AB0000, .hex);
pub const UA_STATUSCODE_BADCONNECTIONREJECTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80AC0000, .hex);
pub const UA_STATUSCODE_BADDISCONNECT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80AD0000, .hex);
pub const UA_STATUSCODE_BADCONNECTIONCLOSED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80AE0000, .hex);
pub const UA_STATUSCODE_BADINVALIDSTATE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80AF0000, .hex);
pub const UA_STATUSCODE_BADENDOFSTREAM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B00000, .hex);
pub const UA_STATUSCODE_BADNODATAAVAILABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B10000, .hex);
pub const UA_STATUSCODE_BADWAITINGFORRESPONSE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B20000, .hex);
pub const UA_STATUSCODE_BADOPERATIONABANDONED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B30000, .hex);
pub const UA_STATUSCODE_BADEXPECTEDSTREAMTOBLOCK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B40000, .hex);
pub const UA_STATUSCODE_BADWOULDBLOCK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B50000, .hex);
pub const UA_STATUSCODE_BADSYNTAXERROR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B60000, .hex);
pub const UA_STATUSCODE_BADMAXCONNECTIONSREACHED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B70000, .hex);
pub const UA_STATUSCODE_UNCERTAINTRANSDUCERINMANUAL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x42080000, .hex);
pub const UA_STATUSCODE_UNCERTAINSIMULATEDVALUE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x42090000, .hex);
pub const UA_STATUSCODE_UNCERTAINSENSORCALIBRATION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x420A0000, .hex);
pub const UA_STATUSCODE_UNCERTAINCONFIGURATIONERROR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x420F0000, .hex);
pub const UA_STATUSCODE_GOODCASCADEINITIALIZATIONACKNOWLEDGED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x04010000, .hex);
pub const UA_STATUSCODE_GOODCASCADEINITIALIZATIONREQUEST = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x04020000, .hex);
pub const UA_STATUSCODE_GOODCASCADENOTINVITED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x04030000, .hex);
pub const UA_STATUSCODE_GOODCASCADENOTSELECTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x04040000, .hex);
pub const UA_STATUSCODE_GOODFAULTSTATEACTIVE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x04070000, .hex);
pub const UA_STATUSCODE_GOODINITIATEFAULTSTATE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x04080000, .hex);
pub const UA_STATUSCODE_GOODCASCADE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x04090000, .hex);
pub const UA_STATUSCODE_BADDATASETIDINVALID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E70000, .hex);
pub const UA_NODEIDS_NS0_H_ = "";
pub const UA_NS0ID_BOOLEAN = @as(c_int, 1);
pub const UA_NS0ID_SBYTE = @as(c_int, 2);
pub const UA_NS0ID_BYTE = @as(c_int, 3);
pub const UA_NS0ID_INT16 = @as(c_int, 4);
pub const UA_NS0ID_UINT16 = @as(c_int, 5);
pub const UA_NS0ID_INT32 = @as(c_int, 6);
pub const UA_NS0ID_UINT32 = @as(c_int, 7);
pub const UA_NS0ID_INT64 = @as(c_int, 8);
pub const UA_NS0ID_UINT64 = @as(c_int, 9);
pub const UA_NS0ID_FLOAT = @as(c_int, 10);
pub const UA_NS0ID_DOUBLE = @as(c_int, 11);
pub const UA_NS0ID_STRING = @as(c_int, 12);
pub const UA_NS0ID_DATETIME = @as(c_int, 13);
pub const UA_NS0ID_GUID = @as(c_int, 14);
pub const UA_NS0ID_BYTESTRING = @as(c_int, 15);
pub const UA_NS0ID_XMLELEMENT = @as(c_int, 16);
pub const UA_NS0ID_NODEID = @as(c_int, 17);
pub const UA_NS0ID_EXPANDEDNODEID = @as(c_int, 18);
pub const UA_NS0ID_STATUSCODE = @as(c_int, 19);
pub const UA_NS0ID_QUALIFIEDNAME = @as(c_int, 20);
pub const UA_NS0ID_LOCALIZEDTEXT = @as(c_int, 21);
pub const UA_NS0ID_STRUCTURE = @as(c_int, 22);
pub const UA_NS0ID_DATAVALUE = @as(c_int, 23);
pub const UA_NS0ID_BASEDATATYPE = @as(c_int, 24);
pub const UA_NS0ID_DIAGNOSTICINFO = @as(c_int, 25);
pub const UA_NS0ID_NUMBER = @as(c_int, 26);
pub const UA_NS0ID_INTEGER = @as(c_int, 27);
pub const UA_NS0ID_UINTEGER = @as(c_int, 28);
pub const UA_NS0ID_ENUMERATION = @as(c_int, 29);
pub const UA_NS0ID_IMAGE = @as(c_int, 30);
pub const UA_NS0ID_REFERENCES = @as(c_int, 31);
pub const UA_NS0ID_NONHIERARCHICALREFERENCES = @as(c_int, 32);
pub const UA_NS0ID_HIERARCHICALREFERENCES = @as(c_int, 33);
pub const UA_NS0ID_HASCHILD = @as(c_int, 34);
pub const UA_NS0ID_ORGANIZES = @as(c_int, 35);
pub const UA_NS0ID_HASEVENTSOURCE = @as(c_int, 36);
pub const UA_NS0ID_HASMODELLINGRULE = @as(c_int, 37);
pub const UA_NS0ID_HASENCODING = @as(c_int, 38);
pub const UA_NS0ID_HASDESCRIPTION = @as(c_int, 39);
pub const UA_NS0ID_HASTYPEDEFINITION = @as(c_int, 40);
pub const UA_NS0ID_GENERATESEVENT = @as(c_int, 41);
pub const UA_NS0ID_AGGREGATES = @as(c_int, 44);
pub const UA_NS0ID_HASSUBTYPE = @as(c_int, 45);
pub const UA_NS0ID_HASPROPERTY = @as(c_int, 46);
pub const UA_NS0ID_HASCOMPONENT = @as(c_int, 47);
pub const UA_NS0ID_HASNOTIFIER = @as(c_int, 48);
pub const UA_NS0ID_HASORDEREDCOMPONENT = @as(c_int, 49);
pub const UA_NS0ID_DECIMAL = @as(c_int, 50);
pub const UA_NS0ID_FROMSTATE = @as(c_int, 51);
pub const UA_NS0ID_TOSTATE = @as(c_int, 52);
pub const UA_NS0ID_HASCAUSE = @as(c_int, 53);
pub const UA_NS0ID_HASEFFECT = @as(c_int, 54);
pub const UA_NS0ID_HASHISTORICALCONFIGURATION = @as(c_int, 56);
pub const UA_NS0ID_BASEOBJECTTYPE = @as(c_int, 58);
pub const UA_NS0ID_FOLDERTYPE = @as(c_int, 61);
pub const UA_NS0ID_BASEVARIABLETYPE = @as(c_int, 62);
pub const UA_NS0ID_BASEDATAVARIABLETYPE = @as(c_int, 63);
pub const UA_NS0ID_PROPERTYTYPE = @as(c_int, 68);
pub const UA_NS0ID_DATATYPEDESCRIPTIONTYPE = @as(c_int, 69);
pub const UA_NS0ID_DATATYPEDICTIONARYTYPE = @as(c_int, 72);
pub const UA_NS0ID_DATATYPESYSTEMTYPE = @as(c_int, 75);
pub const UA_NS0ID_DATATYPEENCODINGTYPE = @as(c_int, 76);
pub const UA_NS0ID_MODELLINGRULETYPE = @as(c_int, 77);
pub const UA_NS0ID_MODELLINGRULE_MANDATORY = @as(c_int, 78);
pub const UA_NS0ID_MODELLINGRULE_OPTIONAL = @as(c_int, 80);
pub const UA_NS0ID_MODELLINGRULE_EXPOSESITSARRAY = @as(c_int, 83);
pub const UA_NS0ID_ROOTFOLDER = @as(c_int, 84);
pub const UA_NS0ID_OBJECTSFOLDER = @as(c_int, 85);
pub const UA_NS0ID_TYPESFOLDER = @as(c_int, 86);
pub const UA_NS0ID_VIEWSFOLDER = @as(c_int, 87);
pub const UA_NS0ID_OBJECTTYPESFOLDER = @as(c_int, 88);
pub const UA_NS0ID_VARIABLETYPESFOLDER = @as(c_int, 89);
pub const UA_NS0ID_DATATYPESFOLDER = @as(c_int, 90);
pub const UA_NS0ID_REFERENCETYPESFOLDER = @as(c_int, 91);
pub const UA_NS0ID_XMLSCHEMA_TYPESYSTEM = @as(c_int, 92);
pub const UA_NS0ID_OPCBINARYSCHEMA_TYPESYSTEM = @as(c_int, 93);
pub const UA_NS0ID_PERMISSIONTYPE = @as(c_int, 94);
pub const UA_NS0ID_ACCESSRESTRICTIONTYPE = @as(c_int, 95);
pub const UA_NS0ID_ROLEPERMISSIONTYPE = @as(c_int, 96);
pub const UA_NS0ID_DATATYPEDEFINITION = @as(c_int, 97);
pub const UA_NS0ID_STRUCTURETYPE = @as(c_int, 98);
pub const UA_NS0ID_STRUCTUREDEFINITION = @as(c_int, 99);
pub const UA_NS0ID_ENUMDEFINITION = @as(c_int, 100);
pub const UA_NS0ID_STRUCTUREFIELD = @as(c_int, 101);
pub const UA_NS0ID_ENUMFIELD = @as(c_int, 102);
pub const UA_NS0ID_DATATYPEDESCRIPTIONTYPE_DATATYPEVERSION = @as(c_int, 104);
pub const UA_NS0ID_DATATYPEDESCRIPTIONTYPE_DICTIONARYFRAGMENT = @as(c_int, 105);
pub const UA_NS0ID_DATATYPEDICTIONARYTYPE_DATATYPEVERSION = @as(c_int, 106);
pub const UA_NS0ID_DATATYPEDICTIONARYTYPE_NAMESPACEURI = @as(c_int, 107);
pub const UA_NS0ID_HASSUBSTATEMACHINE = @as(c_int, 117);
pub const UA_NS0ID_NAMINGRULETYPE = @as(c_int, 120);
pub const UA_NS0ID_DATATYPEDEFINITION_ENCODING_DEFAULTBINARY = @as(c_int, 121);
pub const UA_NS0ID_STRUCTUREDEFINITION_ENCODING_DEFAULTBINARY = @as(c_int, 122);
pub const UA_NS0ID_ENUMDEFINITION_ENCODING_DEFAULTBINARY = @as(c_int, 123);
pub const UA_NS0ID_DATASETMETADATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 124);
pub const UA_NS0ID_DATATYPEDESCRIPTION_ENCODING_DEFAULTBINARY = @as(c_int, 125);
pub const UA_NS0ID_STRUCTUREDESCRIPTION_ENCODING_DEFAULTBINARY = @as(c_int, 126);
pub const UA_NS0ID_ENUMDESCRIPTION_ENCODING_DEFAULTBINARY = @as(c_int, 127);
pub const UA_NS0ID_ROLEPERMISSIONTYPE_ENCODING_DEFAULTBINARY = @as(c_int, 128);
pub const UA_NS0ID_HASARGUMENTDESCRIPTION = @as(c_int, 129);
pub const UA_NS0ID_HASOPTIONALINPUTARGUMENTDESCRIPTION = @as(c_int, 131);
pub const UA_NS0ID_IDTYPE = @as(c_int, 256);
pub const UA_NS0ID_NODECLASS = @as(c_int, 257);
pub const UA_NS0ID_NODE = @as(c_int, 258);
pub const UA_NS0ID_NODE_ENCODING_DEFAULTXML = @as(c_int, 259);
pub const UA_NS0ID_NODE_ENCODING_DEFAULTBINARY = @as(c_int, 260);
pub const UA_NS0ID_OBJECTNODE = @as(c_int, 261);
pub const UA_NS0ID_OBJECTNODE_ENCODING_DEFAULTXML = @as(c_int, 262);
pub const UA_NS0ID_OBJECTNODE_ENCODING_DEFAULTBINARY = @as(c_int, 263);
pub const UA_NS0ID_OBJECTTYPENODE = @as(c_int, 264);
pub const UA_NS0ID_OBJECTTYPENODE_ENCODING_DEFAULTXML = @as(c_int, 265);
pub const UA_NS0ID_OBJECTTYPENODE_ENCODING_DEFAULTBINARY = @as(c_int, 266);
pub const UA_NS0ID_VARIABLENODE = @as(c_int, 267);
pub const UA_NS0ID_VARIABLENODE_ENCODING_DEFAULTXML = @as(c_int, 268);
pub const UA_NS0ID_VARIABLENODE_ENCODING_DEFAULTBINARY = @as(c_int, 269);
pub const UA_NS0ID_VARIABLETYPENODE = @as(c_int, 270);
pub const UA_NS0ID_VARIABLETYPENODE_ENCODING_DEFAULTXML = @as(c_int, 271);
pub const UA_NS0ID_VARIABLETYPENODE_ENCODING_DEFAULTBINARY = @as(c_int, 272);
pub const UA_NS0ID_REFERENCETYPENODE = @as(c_int, 273);
pub const UA_NS0ID_REFERENCETYPENODE_ENCODING_DEFAULTXML = @as(c_int, 274);
pub const UA_NS0ID_REFERENCETYPENODE_ENCODING_DEFAULTBINARY = @as(c_int, 275);
pub const UA_NS0ID_METHODNODE = @as(c_int, 276);
pub const UA_NS0ID_METHODNODE_ENCODING_DEFAULTXML = @as(c_int, 277);
pub const UA_NS0ID_METHODNODE_ENCODING_DEFAULTBINARY = @as(c_int, 278);
pub const UA_NS0ID_VIEWNODE = @as(c_int, 279);
pub const UA_NS0ID_VIEWNODE_ENCODING_DEFAULTXML = @as(c_int, 280);
pub const UA_NS0ID_VIEWNODE_ENCODING_DEFAULTBINARY = @as(c_int, 281);
pub const UA_NS0ID_DATATYPENODE = @as(c_int, 282);
pub const UA_NS0ID_DATATYPENODE_ENCODING_DEFAULTXML = @as(c_int, 283);
pub const UA_NS0ID_DATATYPENODE_ENCODING_DEFAULTBINARY = @as(c_int, 284);
pub const UA_NS0ID_REFERENCENODE = @as(c_int, 285);
pub const UA_NS0ID_REFERENCENODE_ENCODING_DEFAULTXML = @as(c_int, 286);
pub const UA_NS0ID_REFERENCENODE_ENCODING_DEFAULTBINARY = @as(c_int, 287);
pub const UA_NS0ID_INTEGERID = @as(c_int, 288);
pub const UA_NS0ID_COUNTER = @as(c_int, 289);
pub const UA_NS0ID_DURATION = @as(c_int, 290);
pub const UA_NS0ID_NUMERICRANGE = @as(c_int, 291);
pub const UA_NS0ID_UTCTIME = @as(c_int, 294);
pub const UA_NS0ID_LOCALEID = @as(c_int, 295);
pub const UA_NS0ID_ARGUMENT = @as(c_int, 296);
pub const UA_NS0ID_ARGUMENT_ENCODING_DEFAULTXML = @as(c_int, 297);
pub const UA_NS0ID_ARGUMENT_ENCODING_DEFAULTBINARY = @as(c_int, 298);
pub const UA_NS0ID_STATUSRESULT = @as(c_int, 299);
pub const UA_NS0ID_STATUSRESULT_ENCODING_DEFAULTXML = @as(c_int, 300);
pub const UA_NS0ID_STATUSRESULT_ENCODING_DEFAULTBINARY = @as(c_int, 301);
pub const UA_NS0ID_MESSAGESECURITYMODE = @as(c_int, 302);
pub const UA_NS0ID_USERTOKENTYPE = @as(c_int, 303);
pub const UA_NS0ID_USERTOKENPOLICY = @as(c_int, 304);
pub const UA_NS0ID_USERTOKENPOLICY_ENCODING_DEFAULTXML = @as(c_int, 305);
pub const UA_NS0ID_USERTOKENPOLICY_ENCODING_DEFAULTBINARY = @as(c_int, 306);
pub const UA_NS0ID_APPLICATIONTYPE = @as(c_int, 307);
pub const UA_NS0ID_APPLICATIONDESCRIPTION = @as(c_int, 308);
pub const UA_NS0ID_APPLICATIONDESCRIPTION_ENCODING_DEFAULTXML = @as(c_int, 309);
pub const UA_NS0ID_APPLICATIONDESCRIPTION_ENCODING_DEFAULTBINARY = @as(c_int, 310);
pub const UA_NS0ID_APPLICATIONINSTANCECERTIFICATE = @as(c_int, 311);
pub const UA_NS0ID_ENDPOINTDESCRIPTION = @as(c_int, 312);
pub const UA_NS0ID_ENDPOINTDESCRIPTION_ENCODING_DEFAULTXML = @as(c_int, 313);
pub const UA_NS0ID_ENDPOINTDESCRIPTION_ENCODING_DEFAULTBINARY = @as(c_int, 314);
pub const UA_NS0ID_SECURITYTOKENREQUESTTYPE = @as(c_int, 315);
pub const UA_NS0ID_USERIDENTITYTOKEN = @as(c_int, 316);
pub const UA_NS0ID_USERIDENTITYTOKEN_ENCODING_DEFAULTXML = @as(c_int, 317);
pub const UA_NS0ID_USERIDENTITYTOKEN_ENCODING_DEFAULTBINARY = @as(c_int, 318);
pub const UA_NS0ID_ANONYMOUSIDENTITYTOKEN = @as(c_int, 319);
pub const UA_NS0ID_ANONYMOUSIDENTITYTOKEN_ENCODING_DEFAULTXML = @as(c_int, 320);
pub const UA_NS0ID_ANONYMOUSIDENTITYTOKEN_ENCODING_DEFAULTBINARY = @as(c_int, 321);
pub const UA_NS0ID_USERNAMEIDENTITYTOKEN = @as(c_int, 322);
pub const UA_NS0ID_USERNAMEIDENTITYTOKEN_ENCODING_DEFAULTXML = @as(c_int, 323);
pub const UA_NS0ID_USERNAMEIDENTITYTOKEN_ENCODING_DEFAULTBINARY = @as(c_int, 324);
pub const UA_NS0ID_X509IDENTITYTOKEN = @as(c_int, 325);
pub const UA_NS0ID_X509IDENTITYTOKEN_ENCODING_DEFAULTXML = @as(c_int, 326);
pub const UA_NS0ID_X509IDENTITYTOKEN_ENCODING_DEFAULTBINARY = @as(c_int, 327);
pub const UA_NS0ID_ENDPOINTCONFIGURATION = @as(c_int, 331);
pub const UA_NS0ID_ENDPOINTCONFIGURATION_ENCODING_DEFAULTXML = @as(c_int, 332);
pub const UA_NS0ID_ENDPOINTCONFIGURATION_ENCODING_DEFAULTBINARY = @as(c_int, 333);
pub const UA_NS0ID_BUILDINFO = @as(c_int, 338);
pub const UA_NS0ID_BUILDINFO_ENCODING_DEFAULTXML = @as(c_int, 339);
pub const UA_NS0ID_BUILDINFO_ENCODING_DEFAULTBINARY = @as(c_int, 340);
pub const UA_NS0ID_SIGNEDSOFTWARECERTIFICATE = @as(c_int, 344);
pub const UA_NS0ID_SIGNEDSOFTWARECERTIFICATE_ENCODING_DEFAULTXML = @as(c_int, 345);
pub const UA_NS0ID_SIGNEDSOFTWARECERTIFICATE_ENCODING_DEFAULTBINARY = @as(c_int, 346);
pub const UA_NS0ID_ATTRIBUTEWRITEMASK = @as(c_int, 347);
pub const UA_NS0ID_NODEATTRIBUTESMASK = @as(c_int, 348);
pub const UA_NS0ID_NODEATTRIBUTES = @as(c_int, 349);
pub const UA_NS0ID_NODEATTRIBUTES_ENCODING_DEFAULTXML = @as(c_int, 350);
pub const UA_NS0ID_NODEATTRIBUTES_ENCODING_DEFAULTBINARY = @as(c_int, 351);
pub const UA_NS0ID_OBJECTATTRIBUTES = @as(c_int, 352);
pub const UA_NS0ID_OBJECTATTRIBUTES_ENCODING_DEFAULTXML = @as(c_int, 353);
pub const UA_NS0ID_OBJECTATTRIBUTES_ENCODING_DEFAULTBINARY = @as(c_int, 354);
pub const UA_NS0ID_VARIABLEATTRIBUTES = @as(c_int, 355);
pub const UA_NS0ID_VARIABLEATTRIBUTES_ENCODING_DEFAULTXML = @as(c_int, 356);
pub const UA_NS0ID_VARIABLEATTRIBUTES_ENCODING_DEFAULTBINARY = @as(c_int, 357);
pub const UA_NS0ID_METHODATTRIBUTES = @as(c_int, 358);
pub const UA_NS0ID_METHODATTRIBUTES_ENCODING_DEFAULTXML = @as(c_int, 359);
pub const UA_NS0ID_METHODATTRIBUTES_ENCODING_DEFAULTBINARY = @as(c_int, 360);
pub const UA_NS0ID_OBJECTTYPEATTRIBUTES = @as(c_int, 361);
pub const UA_NS0ID_OBJECTTYPEATTRIBUTES_ENCODING_DEFAULTXML = @as(c_int, 362);
pub const UA_NS0ID_OBJECTTYPEATTRIBUTES_ENCODING_DEFAULTBINARY = @as(c_int, 363);
pub const UA_NS0ID_VARIABLETYPEATTRIBUTES = @as(c_int, 364);
pub const UA_NS0ID_VARIABLETYPEATTRIBUTES_ENCODING_DEFAULTXML = @as(c_int, 365);
pub const UA_NS0ID_VARIABLETYPEATTRIBUTES_ENCODING_DEFAULTBINARY = @as(c_int, 366);
pub const UA_NS0ID_REFERENCETYPEATTRIBUTES = @as(c_int, 367);
pub const UA_NS0ID_REFERENCETYPEATTRIBUTES_ENCODING_DEFAULTXML = @as(c_int, 368);
pub const UA_NS0ID_REFERENCETYPEATTRIBUTES_ENCODING_DEFAULTBINARY = @as(c_int, 369);
pub const UA_NS0ID_DATATYPEATTRIBUTES = @as(c_int, 370);
pub const UA_NS0ID_DATATYPEATTRIBUTES_ENCODING_DEFAULTXML = @as(c_int, 371);
pub const UA_NS0ID_DATATYPEATTRIBUTES_ENCODING_DEFAULTBINARY = @as(c_int, 372);
pub const UA_NS0ID_VIEWATTRIBUTES = @as(c_int, 373);
pub const UA_NS0ID_VIEWATTRIBUTES_ENCODING_DEFAULTXML = @as(c_int, 374);
pub const UA_NS0ID_VIEWATTRIBUTES_ENCODING_DEFAULTBINARY = @as(c_int, 375);
pub const UA_NS0ID_ADDNODESITEM = @as(c_int, 376);
pub const UA_NS0ID_ADDNODESITEM_ENCODING_DEFAULTXML = @as(c_int, 377);
pub const UA_NS0ID_ADDNODESITEM_ENCODING_DEFAULTBINARY = @as(c_int, 378);
pub const UA_NS0ID_ADDREFERENCESITEM = @as(c_int, 379);
pub const UA_NS0ID_ADDREFERENCESITEM_ENCODING_DEFAULTXML = @as(c_int, 380);
pub const UA_NS0ID_ADDREFERENCESITEM_ENCODING_DEFAULTBINARY = @as(c_int, 381);
pub const UA_NS0ID_DELETENODESITEM = @as(c_int, 382);
pub const UA_NS0ID_DELETENODESITEM_ENCODING_DEFAULTXML = @as(c_int, 383);
pub const UA_NS0ID_DELETENODESITEM_ENCODING_DEFAULTBINARY = @as(c_int, 384);
pub const UA_NS0ID_DELETEREFERENCESITEM = @as(c_int, 385);
pub const UA_NS0ID_DELETEREFERENCESITEM_ENCODING_DEFAULTXML = @as(c_int, 386);
pub const UA_NS0ID_DELETEREFERENCESITEM_ENCODING_DEFAULTBINARY = @as(c_int, 387);
pub const UA_NS0ID_SESSIONAUTHENTICATIONTOKEN = @as(c_int, 388);
pub const UA_NS0ID_REQUESTHEADER = @as(c_int, 389);
pub const UA_NS0ID_REQUESTHEADER_ENCODING_DEFAULTXML = @as(c_int, 390);
pub const UA_NS0ID_REQUESTHEADER_ENCODING_DEFAULTBINARY = @as(c_int, 391);
pub const UA_NS0ID_RESPONSEHEADER = @as(c_int, 392);
pub const UA_NS0ID_RESPONSEHEADER_ENCODING_DEFAULTXML = @as(c_int, 393);
pub const UA_NS0ID_RESPONSEHEADER_ENCODING_DEFAULTBINARY = @as(c_int, 394);
pub const UA_NS0ID_SERVICEFAULT = @as(c_int, 395);
pub const UA_NS0ID_SERVICEFAULT_ENCODING_DEFAULTXML = @as(c_int, 396);
pub const UA_NS0ID_SERVICEFAULT_ENCODING_DEFAULTBINARY = @as(c_int, 397);
pub const UA_NS0ID_FINDSERVERSREQUEST = @as(c_int, 420);
pub const UA_NS0ID_FINDSERVERSREQUEST_ENCODING_DEFAULTXML = @as(c_int, 421);
pub const UA_NS0ID_FINDSERVERSREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 422);
pub const UA_NS0ID_FINDSERVERSRESPONSE = @as(c_int, 423);
pub const UA_NS0ID_FINDSERVERSRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 424);
pub const UA_NS0ID_FINDSERVERSRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 425);
pub const UA_NS0ID_GETENDPOINTSREQUEST = @as(c_int, 426);
pub const UA_NS0ID_GETENDPOINTSREQUEST_ENCODING_DEFAULTXML = @as(c_int, 427);
pub const UA_NS0ID_GETENDPOINTSREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 428);
pub const UA_NS0ID_GETENDPOINTSRESPONSE = @as(c_int, 429);
pub const UA_NS0ID_GETENDPOINTSRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 430);
pub const UA_NS0ID_GETENDPOINTSRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 431);
pub const UA_NS0ID_REGISTEREDSERVER = @as(c_int, 432);
pub const UA_NS0ID_REGISTEREDSERVER_ENCODING_DEFAULTXML = @as(c_int, 433);
pub const UA_NS0ID_REGISTEREDSERVER_ENCODING_DEFAULTBINARY = @as(c_int, 434);
pub const UA_NS0ID_REGISTERSERVERREQUEST = @as(c_int, 435);
pub const UA_NS0ID_REGISTERSERVERREQUEST_ENCODING_DEFAULTXML = @as(c_int, 436);
pub const UA_NS0ID_REGISTERSERVERREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 437);
pub const UA_NS0ID_REGISTERSERVERRESPONSE = @as(c_int, 438);
pub const UA_NS0ID_REGISTERSERVERRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 439);
pub const UA_NS0ID_REGISTERSERVERRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 440);
pub const UA_NS0ID_CHANNELSECURITYTOKEN = @as(c_int, 441);
pub const UA_NS0ID_CHANNELSECURITYTOKEN_ENCODING_DEFAULTXML = @as(c_int, 442);
pub const UA_NS0ID_CHANNELSECURITYTOKEN_ENCODING_DEFAULTBINARY = @as(c_int, 443);
pub const UA_NS0ID_OPENSECURECHANNELREQUEST = @as(c_int, 444);
pub const UA_NS0ID_OPENSECURECHANNELREQUEST_ENCODING_DEFAULTXML = @as(c_int, 445);
pub const UA_NS0ID_OPENSECURECHANNELREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 446);
pub const UA_NS0ID_OPENSECURECHANNELRESPONSE = @as(c_int, 447);
pub const UA_NS0ID_OPENSECURECHANNELRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 448);
pub const UA_NS0ID_OPENSECURECHANNELRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 449);
pub const UA_NS0ID_CLOSESECURECHANNELREQUEST = @as(c_int, 450);
pub const UA_NS0ID_CLOSESECURECHANNELREQUEST_ENCODING_DEFAULTXML = @as(c_int, 451);
pub const UA_NS0ID_CLOSESECURECHANNELREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 452);
pub const UA_NS0ID_CLOSESECURECHANNELRESPONSE = @as(c_int, 453);
pub const UA_NS0ID_CLOSESECURECHANNELRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 454);
pub const UA_NS0ID_CLOSESECURECHANNELRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 455);
pub const UA_NS0ID_SIGNATUREDATA = @as(c_int, 456);
pub const UA_NS0ID_SIGNATUREDATA_ENCODING_DEFAULTXML = @as(c_int, 457);
pub const UA_NS0ID_SIGNATUREDATA_ENCODING_DEFAULTBINARY = @as(c_int, 458);
pub const UA_NS0ID_CREATESESSIONREQUEST = @as(c_int, 459);
pub const UA_NS0ID_CREATESESSIONREQUEST_ENCODING_DEFAULTXML = @as(c_int, 460);
pub const UA_NS0ID_CREATESESSIONREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 461);
pub const UA_NS0ID_CREATESESSIONRESPONSE = @as(c_int, 462);
pub const UA_NS0ID_CREATESESSIONRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 463);
pub const UA_NS0ID_CREATESESSIONRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 464);
pub const UA_NS0ID_ACTIVATESESSIONREQUEST = @as(c_int, 465);
pub const UA_NS0ID_ACTIVATESESSIONREQUEST_ENCODING_DEFAULTXML = @as(c_int, 466);
pub const UA_NS0ID_ACTIVATESESSIONREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 467);
pub const UA_NS0ID_ACTIVATESESSIONRESPONSE = @as(c_int, 468);
pub const UA_NS0ID_ACTIVATESESSIONRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 469);
pub const UA_NS0ID_ACTIVATESESSIONRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 470);
pub const UA_NS0ID_CLOSESESSIONREQUEST = @as(c_int, 471);
pub const UA_NS0ID_CLOSESESSIONREQUEST_ENCODING_DEFAULTXML = @as(c_int, 472);
pub const UA_NS0ID_CLOSESESSIONREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 473);
pub const UA_NS0ID_CLOSESESSIONRESPONSE = @as(c_int, 474);
pub const UA_NS0ID_CLOSESESSIONRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 475);
pub const UA_NS0ID_CLOSESESSIONRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 476);
pub const UA_NS0ID_CANCELREQUEST = @as(c_int, 477);
pub const UA_NS0ID_CANCELREQUEST_ENCODING_DEFAULTXML = @as(c_int, 478);
pub const UA_NS0ID_CANCELREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 479);
pub const UA_NS0ID_CANCELRESPONSE = @as(c_int, 480);
pub const UA_NS0ID_CANCELRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 481);
pub const UA_NS0ID_CANCELRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 482);
pub const UA_NS0ID_ADDNODESRESULT = @as(c_int, 483);
pub const UA_NS0ID_ADDNODESRESULT_ENCODING_DEFAULTXML = @as(c_int, 484);
pub const UA_NS0ID_ADDNODESRESULT_ENCODING_DEFAULTBINARY = @as(c_int, 485);
pub const UA_NS0ID_ADDNODESREQUEST = @as(c_int, 486);
pub const UA_NS0ID_ADDNODESREQUEST_ENCODING_DEFAULTXML = @as(c_int, 487);
pub const UA_NS0ID_ADDNODESREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 488);
pub const UA_NS0ID_ADDNODESRESPONSE = @as(c_int, 489);
pub const UA_NS0ID_ADDNODESRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 490);
pub const UA_NS0ID_ADDNODESRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 491);
pub const UA_NS0ID_ADDREFERENCESREQUEST = @as(c_int, 492);
pub const UA_NS0ID_ADDREFERENCESREQUEST_ENCODING_DEFAULTXML = @as(c_int, 493);
pub const UA_NS0ID_ADDREFERENCESREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 494);
pub const UA_NS0ID_ADDREFERENCESRESPONSE = @as(c_int, 495);
pub const UA_NS0ID_ADDREFERENCESRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 496);
pub const UA_NS0ID_ADDREFERENCESRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 497);
pub const UA_NS0ID_DELETENODESREQUEST = @as(c_int, 498);
pub const UA_NS0ID_DELETENODESREQUEST_ENCODING_DEFAULTXML = @as(c_int, 499);
pub const UA_NS0ID_DELETENODESREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 500);
pub const UA_NS0ID_DELETENODESRESPONSE = @as(c_int, 501);
pub const UA_NS0ID_DELETENODESRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 502);
pub const UA_NS0ID_DELETENODESRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 503);
pub const UA_NS0ID_DELETEREFERENCESREQUEST = @as(c_int, 504);
pub const UA_NS0ID_DELETEREFERENCESREQUEST_ENCODING_DEFAULTXML = @as(c_int, 505);
pub const UA_NS0ID_DELETEREFERENCESREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 506);
pub const UA_NS0ID_DELETEREFERENCESRESPONSE = @as(c_int, 507);
pub const UA_NS0ID_DELETEREFERENCESRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 508);
pub const UA_NS0ID_DELETEREFERENCESRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 509);
pub const UA_NS0ID_BROWSEDIRECTION = @as(c_int, 510);
pub const UA_NS0ID_VIEWDESCRIPTION = @as(c_int, 511);
pub const UA_NS0ID_VIEWDESCRIPTION_ENCODING_DEFAULTXML = @as(c_int, 512);
pub const UA_NS0ID_VIEWDESCRIPTION_ENCODING_DEFAULTBINARY = @as(c_int, 513);
pub const UA_NS0ID_BROWSEDESCRIPTION = @as(c_int, 514);
pub const UA_NS0ID_BROWSEDESCRIPTION_ENCODING_DEFAULTXML = @as(c_int, 515);
pub const UA_NS0ID_BROWSEDESCRIPTION_ENCODING_DEFAULTBINARY = @as(c_int, 516);
pub const UA_NS0ID_BROWSERESULTMASK = @as(c_int, 517);
pub const UA_NS0ID_REFERENCEDESCRIPTION = @as(c_int, 518);
pub const UA_NS0ID_REFERENCEDESCRIPTION_ENCODING_DEFAULTXML = @as(c_int, 519);
pub const UA_NS0ID_REFERENCEDESCRIPTION_ENCODING_DEFAULTBINARY = @as(c_int, 520);
pub const UA_NS0ID_CONTINUATIONPOINT = @as(c_int, 521);
pub const UA_NS0ID_BROWSERESULT = @as(c_int, 522);
pub const UA_NS0ID_BROWSERESULT_ENCODING_DEFAULTXML = @as(c_int, 523);
pub const UA_NS0ID_BROWSERESULT_ENCODING_DEFAULTBINARY = @as(c_int, 524);
pub const UA_NS0ID_BROWSEREQUEST = @as(c_int, 525);
pub const UA_NS0ID_BROWSEREQUEST_ENCODING_DEFAULTXML = @as(c_int, 526);
pub const UA_NS0ID_BROWSEREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 527);
pub const UA_NS0ID_BROWSERESPONSE = @as(c_int, 528);
pub const UA_NS0ID_BROWSERESPONSE_ENCODING_DEFAULTXML = @as(c_int, 529);
pub const UA_NS0ID_BROWSERESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 530);
pub const UA_NS0ID_BROWSENEXTREQUEST = @as(c_int, 531);
pub const UA_NS0ID_BROWSENEXTREQUEST_ENCODING_DEFAULTXML = @as(c_int, 532);
pub const UA_NS0ID_BROWSENEXTREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 533);
pub const UA_NS0ID_BROWSENEXTRESPONSE = @as(c_int, 534);
pub const UA_NS0ID_BROWSENEXTRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 535);
pub const UA_NS0ID_BROWSENEXTRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 536);
pub const UA_NS0ID_RELATIVEPATHELEMENT = @as(c_int, 537);
pub const UA_NS0ID_RELATIVEPATHELEMENT_ENCODING_DEFAULTXML = @as(c_int, 538);
pub const UA_NS0ID_RELATIVEPATHELEMENT_ENCODING_DEFAULTBINARY = @as(c_int, 539);
pub const UA_NS0ID_RELATIVEPATH = @as(c_int, 540);
pub const UA_NS0ID_RELATIVEPATH_ENCODING_DEFAULTXML = @as(c_int, 541);
pub const UA_NS0ID_RELATIVEPATH_ENCODING_DEFAULTBINARY = @as(c_int, 542);
pub const UA_NS0ID_BROWSEPATH = @as(c_int, 543);
pub const UA_NS0ID_BROWSEPATH_ENCODING_DEFAULTXML = @as(c_int, 544);
pub const UA_NS0ID_BROWSEPATH_ENCODING_DEFAULTBINARY = @as(c_int, 545);
pub const UA_NS0ID_BROWSEPATHTARGET = @as(c_int, 546);
pub const UA_NS0ID_BROWSEPATHTARGET_ENCODING_DEFAULTXML = @as(c_int, 547);
pub const UA_NS0ID_BROWSEPATHTARGET_ENCODING_DEFAULTBINARY = @as(c_int, 548);
pub const UA_NS0ID_BROWSEPATHRESULT = @as(c_int, 549);
pub const UA_NS0ID_BROWSEPATHRESULT_ENCODING_DEFAULTXML = @as(c_int, 550);
pub const UA_NS0ID_BROWSEPATHRESULT_ENCODING_DEFAULTBINARY = @as(c_int, 551);
pub const UA_NS0ID_TRANSLATEBROWSEPATHSTONODEIDSREQUEST = @as(c_int, 552);
pub const UA_NS0ID_TRANSLATEBROWSEPATHSTONODEIDSREQUEST_ENCODING_DEFAULTXML = @as(c_int, 553);
pub const UA_NS0ID_TRANSLATEBROWSEPATHSTONODEIDSREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 554);
pub const UA_NS0ID_TRANSLATEBROWSEPATHSTONODEIDSRESPONSE = @as(c_int, 555);
pub const UA_NS0ID_TRANSLATEBROWSEPATHSTONODEIDSRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 556);
pub const UA_NS0ID_TRANSLATEBROWSEPATHSTONODEIDSRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 557);
pub const UA_NS0ID_REGISTERNODESREQUEST = @as(c_int, 558);
pub const UA_NS0ID_REGISTERNODESREQUEST_ENCODING_DEFAULTXML = @as(c_int, 559);
pub const UA_NS0ID_REGISTERNODESREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 560);
pub const UA_NS0ID_REGISTERNODESRESPONSE = @as(c_int, 561);
pub const UA_NS0ID_REGISTERNODESRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 562);
pub const UA_NS0ID_REGISTERNODESRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 563);
pub const UA_NS0ID_UNREGISTERNODESREQUEST = @as(c_int, 564);
pub const UA_NS0ID_UNREGISTERNODESREQUEST_ENCODING_DEFAULTXML = @as(c_int, 565);
pub const UA_NS0ID_UNREGISTERNODESREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 566);
pub const UA_NS0ID_UNREGISTERNODESRESPONSE = @as(c_int, 567);
pub const UA_NS0ID_UNREGISTERNODESRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 568);
pub const UA_NS0ID_UNREGISTERNODESRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 569);
pub const UA_NS0ID_QUERYDATADESCRIPTION = @as(c_int, 570);
pub const UA_NS0ID_QUERYDATADESCRIPTION_ENCODING_DEFAULTXML = @as(c_int, 571);
pub const UA_NS0ID_QUERYDATADESCRIPTION_ENCODING_DEFAULTBINARY = @as(c_int, 572);
pub const UA_NS0ID_NODETYPEDESCRIPTION = @as(c_int, 573);
pub const UA_NS0ID_NODETYPEDESCRIPTION_ENCODING_DEFAULTXML = @as(c_int, 574);
pub const UA_NS0ID_NODETYPEDESCRIPTION_ENCODING_DEFAULTBINARY = @as(c_int, 575);
pub const UA_NS0ID_FILTEROPERATOR = @as(c_int, 576);
pub const UA_NS0ID_QUERYDATASET = @as(c_int, 577);
pub const UA_NS0ID_QUERYDATASET_ENCODING_DEFAULTXML = @as(c_int, 578);
pub const UA_NS0ID_QUERYDATASET_ENCODING_DEFAULTBINARY = @as(c_int, 579);
pub const UA_NS0ID_NODEREFERENCE = @as(c_int, 580);
pub const UA_NS0ID_NODEREFERENCE_ENCODING_DEFAULTXML = @as(c_int, 581);
pub const UA_NS0ID_NODEREFERENCE_ENCODING_DEFAULTBINARY = @as(c_int, 582);
pub const UA_NS0ID_CONTENTFILTERELEMENT = @as(c_int, 583);
pub const UA_NS0ID_CONTENTFILTERELEMENT_ENCODING_DEFAULTXML = @as(c_int, 584);
pub const UA_NS0ID_CONTENTFILTERELEMENT_ENCODING_DEFAULTBINARY = @as(c_int, 585);
pub const UA_NS0ID_CONTENTFILTER = @as(c_int, 586);
pub const UA_NS0ID_CONTENTFILTER_ENCODING_DEFAULTXML = @as(c_int, 587);
pub const UA_NS0ID_CONTENTFILTER_ENCODING_DEFAULTBINARY = @as(c_int, 588);
pub const UA_NS0ID_FILTEROPERAND = @as(c_int, 589);
pub const UA_NS0ID_FILTEROPERAND_ENCODING_DEFAULTXML = @as(c_int, 590);
pub const UA_NS0ID_FILTEROPERAND_ENCODING_DEFAULTBINARY = @as(c_int, 591);
pub const UA_NS0ID_ELEMENTOPERAND = @as(c_int, 592);
pub const UA_NS0ID_ELEMENTOPERAND_ENCODING_DEFAULTXML = @as(c_int, 593);
pub const UA_NS0ID_ELEMENTOPERAND_ENCODING_DEFAULTBINARY = @as(c_int, 594);
pub const UA_NS0ID_LITERALOPERAND = @as(c_int, 595);
pub const UA_NS0ID_LITERALOPERAND_ENCODING_DEFAULTXML = @as(c_int, 596);
pub const UA_NS0ID_LITERALOPERAND_ENCODING_DEFAULTBINARY = @as(c_int, 597);
pub const UA_NS0ID_ATTRIBUTEOPERAND = @as(c_int, 598);
pub const UA_NS0ID_ATTRIBUTEOPERAND_ENCODING_DEFAULTXML = @as(c_int, 599);
pub const UA_NS0ID_ATTRIBUTEOPERAND_ENCODING_DEFAULTBINARY = @as(c_int, 600);
pub const UA_NS0ID_SIMPLEATTRIBUTEOPERAND = @as(c_int, 601);
pub const UA_NS0ID_SIMPLEATTRIBUTEOPERAND_ENCODING_DEFAULTXML = @as(c_int, 602);
pub const UA_NS0ID_SIMPLEATTRIBUTEOPERAND_ENCODING_DEFAULTBINARY = @as(c_int, 603);
pub const UA_NS0ID_CONTENTFILTERELEMENTRESULT = @as(c_int, 604);
pub const UA_NS0ID_CONTENTFILTERELEMENTRESULT_ENCODING_DEFAULTXML = @as(c_int, 605);
pub const UA_NS0ID_CONTENTFILTERELEMENTRESULT_ENCODING_DEFAULTBINARY = @as(c_int, 606);
pub const UA_NS0ID_CONTENTFILTERRESULT = @as(c_int, 607);
pub const UA_NS0ID_CONTENTFILTERRESULT_ENCODING_DEFAULTXML = @as(c_int, 608);
pub const UA_NS0ID_CONTENTFILTERRESULT_ENCODING_DEFAULTBINARY = @as(c_int, 609);
pub const UA_NS0ID_PARSINGRESULT = @as(c_int, 610);
pub const UA_NS0ID_PARSINGRESULT_ENCODING_DEFAULTXML = @as(c_int, 611);
pub const UA_NS0ID_PARSINGRESULT_ENCODING_DEFAULTBINARY = @as(c_int, 612);
pub const UA_NS0ID_QUERYFIRSTREQUEST = @as(c_int, 613);
pub const UA_NS0ID_QUERYFIRSTREQUEST_ENCODING_DEFAULTXML = @as(c_int, 614);
pub const UA_NS0ID_QUERYFIRSTREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 615);
pub const UA_NS0ID_QUERYFIRSTRESPONSE = @as(c_int, 616);
pub const UA_NS0ID_QUERYFIRSTRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 617);
pub const UA_NS0ID_QUERYFIRSTRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 618);
pub const UA_NS0ID_QUERYNEXTREQUEST = @as(c_int, 619);
pub const UA_NS0ID_QUERYNEXTREQUEST_ENCODING_DEFAULTXML = @as(c_int, 620);
pub const UA_NS0ID_QUERYNEXTREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 621);
pub const UA_NS0ID_QUERYNEXTRESPONSE = @as(c_int, 622);
pub const UA_NS0ID_QUERYNEXTRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 623);
pub const UA_NS0ID_QUERYNEXTRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 624);
pub const UA_NS0ID_TIMESTAMPSTORETURN = @as(c_int, 625);
pub const UA_NS0ID_READVALUEID = @as(c_int, 626);
pub const UA_NS0ID_READVALUEID_ENCODING_DEFAULTXML = @as(c_int, 627);
pub const UA_NS0ID_READVALUEID_ENCODING_DEFAULTBINARY = @as(c_int, 628);
pub const UA_NS0ID_READREQUEST = @as(c_int, 629);
pub const UA_NS0ID_READREQUEST_ENCODING_DEFAULTXML = @as(c_int, 630);
pub const UA_NS0ID_READREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 631);
pub const UA_NS0ID_READRESPONSE = @as(c_int, 632);
pub const UA_NS0ID_READRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 633);
pub const UA_NS0ID_READRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 634);
pub const UA_NS0ID_HISTORYREADVALUEID = @as(c_int, 635);
pub const UA_NS0ID_HISTORYREADVALUEID_ENCODING_DEFAULTXML = @as(c_int, 636);
pub const UA_NS0ID_HISTORYREADVALUEID_ENCODING_DEFAULTBINARY = @as(c_int, 637);
pub const UA_NS0ID_HISTORYREADRESULT = @as(c_int, 638);
pub const UA_NS0ID_HISTORYREADRESULT_ENCODING_DEFAULTXML = @as(c_int, 639);
pub const UA_NS0ID_HISTORYREADRESULT_ENCODING_DEFAULTBINARY = @as(c_int, 640);
pub const UA_NS0ID_HISTORYREADDETAILS = @as(c_int, 641);
pub const UA_NS0ID_HISTORYREADDETAILS_ENCODING_DEFAULTXML = @as(c_int, 642);
pub const UA_NS0ID_HISTORYREADDETAILS_ENCODING_DEFAULTBINARY = @as(c_int, 643);
pub const UA_NS0ID_READEVENTDETAILS = @as(c_int, 644);
pub const UA_NS0ID_READEVENTDETAILS_ENCODING_DEFAULTXML = @as(c_int, 645);
pub const UA_NS0ID_READEVENTDETAILS_ENCODING_DEFAULTBINARY = @as(c_int, 646);
pub const UA_NS0ID_READRAWMODIFIEDDETAILS = @as(c_int, 647);
pub const UA_NS0ID_READRAWMODIFIEDDETAILS_ENCODING_DEFAULTXML = @as(c_int, 648);
pub const UA_NS0ID_READRAWMODIFIEDDETAILS_ENCODING_DEFAULTBINARY = @as(c_int, 649);
pub const UA_NS0ID_READPROCESSEDDETAILS = @as(c_int, 650);
pub const UA_NS0ID_READPROCESSEDDETAILS_ENCODING_DEFAULTXML = @as(c_int, 651);
pub const UA_NS0ID_READPROCESSEDDETAILS_ENCODING_DEFAULTBINARY = @as(c_int, 652);
pub const UA_NS0ID_READATTIMEDETAILS = @as(c_int, 653);
pub const UA_NS0ID_READATTIMEDETAILS_ENCODING_DEFAULTXML = @as(c_int, 654);
pub const UA_NS0ID_READATTIMEDETAILS_ENCODING_DEFAULTBINARY = @as(c_int, 655);
pub const UA_NS0ID_HISTORYDATA = @as(c_int, 656);
pub const UA_NS0ID_HISTORYDATA_ENCODING_DEFAULTXML = @as(c_int, 657);
pub const UA_NS0ID_HISTORYDATA_ENCODING_DEFAULTBINARY = @as(c_int, 658);
pub const UA_NS0ID_HISTORYEVENT = @as(c_int, 659);
pub const UA_NS0ID_HISTORYEVENT_ENCODING_DEFAULTXML = @as(c_int, 660);
pub const UA_NS0ID_HISTORYEVENT_ENCODING_DEFAULTBINARY = @as(c_int, 661);
pub const UA_NS0ID_HISTORYREADREQUEST = @as(c_int, 662);
pub const UA_NS0ID_HISTORYREADREQUEST_ENCODING_DEFAULTXML = @as(c_int, 663);
pub const UA_NS0ID_HISTORYREADREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 664);
pub const UA_NS0ID_HISTORYREADRESPONSE = @as(c_int, 665);
pub const UA_NS0ID_HISTORYREADRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 666);
pub const UA_NS0ID_HISTORYREADRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 667);
pub const UA_NS0ID_WRITEVALUE = @as(c_int, 668);
pub const UA_NS0ID_WRITEVALUE_ENCODING_DEFAULTXML = @as(c_int, 669);
pub const UA_NS0ID_WRITEVALUE_ENCODING_DEFAULTBINARY = @as(c_int, 670);
pub const UA_NS0ID_WRITEREQUEST = @as(c_int, 671);
pub const UA_NS0ID_WRITEREQUEST_ENCODING_DEFAULTXML = @as(c_int, 672);
pub const UA_NS0ID_WRITEREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 673);
pub const UA_NS0ID_WRITERESPONSE = @as(c_int, 674);
pub const UA_NS0ID_WRITERESPONSE_ENCODING_DEFAULTXML = @as(c_int, 675);
pub const UA_NS0ID_WRITERESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 676);
pub const UA_NS0ID_HISTORYUPDATEDETAILS = @as(c_int, 677);
pub const UA_NS0ID_HISTORYUPDATEDETAILS_ENCODING_DEFAULTXML = @as(c_int, 678);
pub const UA_NS0ID_HISTORYUPDATEDETAILS_ENCODING_DEFAULTBINARY = @as(c_int, 679);
pub const UA_NS0ID_UPDATEDATADETAILS = @as(c_int, 680);
pub const UA_NS0ID_UPDATEDATADETAILS_ENCODING_DEFAULTXML = @as(c_int, 681);
pub const UA_NS0ID_UPDATEDATADETAILS_ENCODING_DEFAULTBINARY = @as(c_int, 682);
pub const UA_NS0ID_UPDATEEVENTDETAILS = @as(c_int, 683);
pub const UA_NS0ID_UPDATEEVENTDETAILS_ENCODING_DEFAULTXML = @as(c_int, 684);
pub const UA_NS0ID_UPDATEEVENTDETAILS_ENCODING_DEFAULTBINARY = @as(c_int, 685);
pub const UA_NS0ID_DELETERAWMODIFIEDDETAILS = @as(c_int, 686);
pub const UA_NS0ID_DELETERAWMODIFIEDDETAILS_ENCODING_DEFAULTXML = @as(c_int, 687);
pub const UA_NS0ID_DELETERAWMODIFIEDDETAILS_ENCODING_DEFAULTBINARY = @as(c_int, 688);
pub const UA_NS0ID_DELETEATTIMEDETAILS = @as(c_int, 689);
pub const UA_NS0ID_DELETEATTIMEDETAILS_ENCODING_DEFAULTXML = @as(c_int, 690);
pub const UA_NS0ID_DELETEATTIMEDETAILS_ENCODING_DEFAULTBINARY = @as(c_int, 691);
pub const UA_NS0ID_DELETEEVENTDETAILS = @as(c_int, 692);
pub const UA_NS0ID_DELETEEVENTDETAILS_ENCODING_DEFAULTXML = @as(c_int, 693);
pub const UA_NS0ID_DELETEEVENTDETAILS_ENCODING_DEFAULTBINARY = @as(c_int, 694);
pub const UA_NS0ID_HISTORYUPDATERESULT = @as(c_int, 695);
pub const UA_NS0ID_HISTORYUPDATERESULT_ENCODING_DEFAULTXML = @as(c_int, 696);
pub const UA_NS0ID_HISTORYUPDATERESULT_ENCODING_DEFAULTBINARY = @as(c_int, 697);
pub const UA_NS0ID_HISTORYUPDATEREQUEST = @as(c_int, 698);
pub const UA_NS0ID_HISTORYUPDATEREQUEST_ENCODING_DEFAULTXML = @as(c_int, 699);
pub const UA_NS0ID_HISTORYUPDATEREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 700);
pub const UA_NS0ID_HISTORYUPDATERESPONSE = @as(c_int, 701);
pub const UA_NS0ID_HISTORYUPDATERESPONSE_ENCODING_DEFAULTXML = @as(c_int, 702);
pub const UA_NS0ID_HISTORYUPDATERESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 703);
pub const UA_NS0ID_CALLMETHODREQUEST = @as(c_int, 704);
pub const UA_NS0ID_CALLMETHODREQUEST_ENCODING_DEFAULTXML = @as(c_int, 705);
pub const UA_NS0ID_CALLMETHODREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 706);
pub const UA_NS0ID_CALLMETHODRESULT = @as(c_int, 707);
pub const UA_NS0ID_CALLMETHODRESULT_ENCODING_DEFAULTXML = @as(c_int, 708);
pub const UA_NS0ID_CALLMETHODRESULT_ENCODING_DEFAULTBINARY = @as(c_int, 709);
pub const UA_NS0ID_CALLREQUEST = @as(c_int, 710);
pub const UA_NS0ID_CALLREQUEST_ENCODING_DEFAULTXML = @as(c_int, 711);
pub const UA_NS0ID_CALLREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 712);
pub const UA_NS0ID_CALLRESPONSE = @as(c_int, 713);
pub const UA_NS0ID_CALLRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 714);
pub const UA_NS0ID_CALLRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 715);
pub const UA_NS0ID_MONITORINGMODE = @as(c_int, 716);
pub const UA_NS0ID_DATACHANGETRIGGER = @as(c_int, 717);
pub const UA_NS0ID_DEADBANDTYPE = @as(c_int, 718);
pub const UA_NS0ID_MONITORINGFILTER = @as(c_int, 719);
pub const UA_NS0ID_MONITORINGFILTER_ENCODING_DEFAULTXML = @as(c_int, 720);
pub const UA_NS0ID_MONITORINGFILTER_ENCODING_DEFAULTBINARY = @as(c_int, 721);
pub const UA_NS0ID_DATACHANGEFILTER = @as(c_int, 722);
pub const UA_NS0ID_DATACHANGEFILTER_ENCODING_DEFAULTXML = @as(c_int, 723);
pub const UA_NS0ID_DATACHANGEFILTER_ENCODING_DEFAULTBINARY = @as(c_int, 724);
pub const UA_NS0ID_EVENTFILTER = @as(c_int, 725);
pub const UA_NS0ID_EVENTFILTER_ENCODING_DEFAULTXML = @as(c_int, 726);
pub const UA_NS0ID_EVENTFILTER_ENCODING_DEFAULTBINARY = @as(c_int, 727);
pub const UA_NS0ID_AGGREGATEFILTER = @as(c_int, 728);
pub const UA_NS0ID_AGGREGATEFILTER_ENCODING_DEFAULTXML = @as(c_int, 729);
pub const UA_NS0ID_AGGREGATEFILTER_ENCODING_DEFAULTBINARY = @as(c_int, 730);
pub const UA_NS0ID_MONITORINGFILTERRESULT = @as(c_int, 731);
pub const UA_NS0ID_MONITORINGFILTERRESULT_ENCODING_DEFAULTXML = @as(c_int, 732);
pub const UA_NS0ID_MONITORINGFILTERRESULT_ENCODING_DEFAULTBINARY = @as(c_int, 733);
pub const UA_NS0ID_EVENTFILTERRESULT = @as(c_int, 734);
pub const UA_NS0ID_EVENTFILTERRESULT_ENCODING_DEFAULTXML = @as(c_int, 735);
pub const UA_NS0ID_EVENTFILTERRESULT_ENCODING_DEFAULTBINARY = @as(c_int, 736);
pub const UA_NS0ID_AGGREGATEFILTERRESULT = @as(c_int, 737);
pub const UA_NS0ID_AGGREGATEFILTERRESULT_ENCODING_DEFAULTXML = @as(c_int, 738);
pub const UA_NS0ID_AGGREGATEFILTERRESULT_ENCODING_DEFAULTBINARY = @as(c_int, 739);
pub const UA_NS0ID_MONITORINGPARAMETERS = @as(c_int, 740);
pub const UA_NS0ID_MONITORINGPARAMETERS_ENCODING_DEFAULTXML = @as(c_int, 741);
pub const UA_NS0ID_MONITORINGPARAMETERS_ENCODING_DEFAULTBINARY = @as(c_int, 742);
pub const UA_NS0ID_MONITOREDITEMCREATEREQUEST = @as(c_int, 743);
pub const UA_NS0ID_MONITOREDITEMCREATEREQUEST_ENCODING_DEFAULTXML = @as(c_int, 744);
pub const UA_NS0ID_MONITOREDITEMCREATEREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 745);
pub const UA_NS0ID_MONITOREDITEMCREATERESULT = @as(c_int, 746);
pub const UA_NS0ID_MONITOREDITEMCREATERESULT_ENCODING_DEFAULTXML = @as(c_int, 747);
pub const UA_NS0ID_MONITOREDITEMCREATERESULT_ENCODING_DEFAULTBINARY = @as(c_int, 748);
pub const UA_NS0ID_CREATEMONITOREDITEMSREQUEST = @as(c_int, 749);
pub const UA_NS0ID_CREATEMONITOREDITEMSREQUEST_ENCODING_DEFAULTXML = @as(c_int, 750);
pub const UA_NS0ID_CREATEMONITOREDITEMSREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 751);
pub const UA_NS0ID_CREATEMONITOREDITEMSRESPONSE = @as(c_int, 752);
pub const UA_NS0ID_CREATEMONITOREDITEMSRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 753);
pub const UA_NS0ID_CREATEMONITOREDITEMSRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 754);
pub const UA_NS0ID_MONITOREDITEMMODIFYREQUEST = @as(c_int, 755);
pub const UA_NS0ID_MONITOREDITEMMODIFYREQUEST_ENCODING_DEFAULTXML = @as(c_int, 756);
pub const UA_NS0ID_MONITOREDITEMMODIFYREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 757);
pub const UA_NS0ID_MONITOREDITEMMODIFYRESULT = @as(c_int, 758);
pub const UA_NS0ID_MONITOREDITEMMODIFYRESULT_ENCODING_DEFAULTXML = @as(c_int, 759);
pub const UA_NS0ID_MONITOREDITEMMODIFYRESULT_ENCODING_DEFAULTBINARY = @as(c_int, 760);
pub const UA_NS0ID_MODIFYMONITOREDITEMSREQUEST = @as(c_int, 761);
pub const UA_NS0ID_MODIFYMONITOREDITEMSREQUEST_ENCODING_DEFAULTXML = @as(c_int, 762);
pub const UA_NS0ID_MODIFYMONITOREDITEMSREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 763);
pub const UA_NS0ID_MODIFYMONITOREDITEMSRESPONSE = @as(c_int, 764);
pub const UA_NS0ID_MODIFYMONITOREDITEMSRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 765);
pub const UA_NS0ID_MODIFYMONITOREDITEMSRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 766);
pub const UA_NS0ID_SETMONITORINGMODEREQUEST = @as(c_int, 767);
pub const UA_NS0ID_SETMONITORINGMODEREQUEST_ENCODING_DEFAULTXML = @as(c_int, 768);
pub const UA_NS0ID_SETMONITORINGMODEREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 769);
pub const UA_NS0ID_SETMONITORINGMODERESPONSE = @as(c_int, 770);
pub const UA_NS0ID_SETMONITORINGMODERESPONSE_ENCODING_DEFAULTXML = @as(c_int, 771);
pub const UA_NS0ID_SETMONITORINGMODERESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 772);
pub const UA_NS0ID_SETTRIGGERINGREQUEST = @as(c_int, 773);
pub const UA_NS0ID_SETTRIGGERINGREQUEST_ENCODING_DEFAULTXML = @as(c_int, 774);
pub const UA_NS0ID_SETTRIGGERINGREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 775);
pub const UA_NS0ID_SETTRIGGERINGRESPONSE = @as(c_int, 776);
pub const UA_NS0ID_SETTRIGGERINGRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 777);
pub const UA_NS0ID_SETTRIGGERINGRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 778);
pub const UA_NS0ID_DELETEMONITOREDITEMSREQUEST = @as(c_int, 779);
pub const UA_NS0ID_DELETEMONITOREDITEMSREQUEST_ENCODING_DEFAULTXML = @as(c_int, 780);
pub const UA_NS0ID_DELETEMONITOREDITEMSREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 781);
pub const UA_NS0ID_DELETEMONITOREDITEMSRESPONSE = @as(c_int, 782);
pub const UA_NS0ID_DELETEMONITOREDITEMSRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 783);
pub const UA_NS0ID_DELETEMONITOREDITEMSRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 784);
pub const UA_NS0ID_CREATESUBSCRIPTIONREQUEST = @as(c_int, 785);
pub const UA_NS0ID_CREATESUBSCRIPTIONREQUEST_ENCODING_DEFAULTXML = @as(c_int, 786);
pub const UA_NS0ID_CREATESUBSCRIPTIONREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 787);
pub const UA_NS0ID_CREATESUBSCRIPTIONRESPONSE = @as(c_int, 788);
pub const UA_NS0ID_CREATESUBSCRIPTIONRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 789);
pub const UA_NS0ID_CREATESUBSCRIPTIONRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 790);
pub const UA_NS0ID_MODIFYSUBSCRIPTIONREQUEST = @as(c_int, 791);
pub const UA_NS0ID_MODIFYSUBSCRIPTIONREQUEST_ENCODING_DEFAULTXML = @as(c_int, 792);
pub const UA_NS0ID_MODIFYSUBSCRIPTIONREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 793);
pub const UA_NS0ID_MODIFYSUBSCRIPTIONRESPONSE = @as(c_int, 794);
pub const UA_NS0ID_MODIFYSUBSCRIPTIONRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 795);
pub const UA_NS0ID_MODIFYSUBSCRIPTIONRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 796);
pub const UA_NS0ID_SETPUBLISHINGMODEREQUEST = @as(c_int, 797);
pub const UA_NS0ID_SETPUBLISHINGMODEREQUEST_ENCODING_DEFAULTXML = @as(c_int, 798);
pub const UA_NS0ID_SETPUBLISHINGMODEREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 799);
pub const UA_NS0ID_SETPUBLISHINGMODERESPONSE = @as(c_int, 800);
pub const UA_NS0ID_SETPUBLISHINGMODERESPONSE_ENCODING_DEFAULTXML = @as(c_int, 801);
pub const UA_NS0ID_SETPUBLISHINGMODERESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 802);
pub const UA_NS0ID_NOTIFICATIONMESSAGE = @as(c_int, 803);
pub const UA_NS0ID_NOTIFICATIONMESSAGE_ENCODING_DEFAULTXML = @as(c_int, 804);
pub const UA_NS0ID_NOTIFICATIONMESSAGE_ENCODING_DEFAULTBINARY = @as(c_int, 805);
pub const UA_NS0ID_MONITOREDITEMNOTIFICATION = @as(c_int, 806);
pub const UA_NS0ID_MONITOREDITEMNOTIFICATION_ENCODING_DEFAULTXML = @as(c_int, 807);
pub const UA_NS0ID_MONITOREDITEMNOTIFICATION_ENCODING_DEFAULTBINARY = @as(c_int, 808);
pub const UA_NS0ID_DATACHANGENOTIFICATION = @as(c_int, 809);
pub const UA_NS0ID_DATACHANGENOTIFICATION_ENCODING_DEFAULTXML = @as(c_int, 810);
pub const UA_NS0ID_DATACHANGENOTIFICATION_ENCODING_DEFAULTBINARY = @as(c_int, 811);
pub const UA_NS0ID_STATUSCHANGENOTIFICATION = @as(c_int, 818);
pub const UA_NS0ID_STATUSCHANGENOTIFICATION_ENCODING_DEFAULTXML = @as(c_int, 819);
pub const UA_NS0ID_STATUSCHANGENOTIFICATION_ENCODING_DEFAULTBINARY = @as(c_int, 820);
pub const UA_NS0ID_SUBSCRIPTIONACKNOWLEDGEMENT = @as(c_int, 821);
pub const UA_NS0ID_SUBSCRIPTIONACKNOWLEDGEMENT_ENCODING_DEFAULTXML = @as(c_int, 822);
pub const UA_NS0ID_SUBSCRIPTIONACKNOWLEDGEMENT_ENCODING_DEFAULTBINARY = @as(c_int, 823);
pub const UA_NS0ID_PUBLISHREQUEST = @as(c_int, 824);
pub const UA_NS0ID_PUBLISHREQUEST_ENCODING_DEFAULTXML = @as(c_int, 825);
pub const UA_NS0ID_PUBLISHREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 826);
pub const UA_NS0ID_PUBLISHRESPONSE = @as(c_int, 827);
pub const UA_NS0ID_PUBLISHRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 828);
pub const UA_NS0ID_PUBLISHRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 829);
pub const UA_NS0ID_REPUBLISHREQUEST = @as(c_int, 830);
pub const UA_NS0ID_REPUBLISHREQUEST_ENCODING_DEFAULTXML = @as(c_int, 831);
pub const UA_NS0ID_REPUBLISHREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 832);
pub const UA_NS0ID_REPUBLISHRESPONSE = @as(c_int, 833);
pub const UA_NS0ID_REPUBLISHRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 834);
pub const UA_NS0ID_REPUBLISHRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 835);
pub const UA_NS0ID_TRANSFERRESULT = @as(c_int, 836);
pub const UA_NS0ID_TRANSFERRESULT_ENCODING_DEFAULTXML = @as(c_int, 837);
pub const UA_NS0ID_TRANSFERRESULT_ENCODING_DEFAULTBINARY = @as(c_int, 838);
pub const UA_NS0ID_TRANSFERSUBSCRIPTIONSREQUEST = @as(c_int, 839);
pub const UA_NS0ID_TRANSFERSUBSCRIPTIONSREQUEST_ENCODING_DEFAULTXML = @as(c_int, 840);
pub const UA_NS0ID_TRANSFERSUBSCRIPTIONSREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 841);
pub const UA_NS0ID_TRANSFERSUBSCRIPTIONSRESPONSE = @as(c_int, 842);
pub const UA_NS0ID_TRANSFERSUBSCRIPTIONSRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 843);
pub const UA_NS0ID_TRANSFERSUBSCRIPTIONSRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 844);
pub const UA_NS0ID_DELETESUBSCRIPTIONSREQUEST = @as(c_int, 845);
pub const UA_NS0ID_DELETESUBSCRIPTIONSREQUEST_ENCODING_DEFAULTXML = @as(c_int, 846);
pub const UA_NS0ID_DELETESUBSCRIPTIONSREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 847);
pub const UA_NS0ID_DELETESUBSCRIPTIONSRESPONSE = @as(c_int, 848);
pub const UA_NS0ID_DELETESUBSCRIPTIONSRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 849);
pub const UA_NS0ID_DELETESUBSCRIPTIONSRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 850);
pub const UA_NS0ID_REDUNDANCYSUPPORT = @as(c_int, 851);
pub const UA_NS0ID_SERVERSTATE = @as(c_int, 852);
pub const UA_NS0ID_REDUNDANTSERVERDATATYPE = @as(c_int, 853);
pub const UA_NS0ID_REDUNDANTSERVERDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 854);
pub const UA_NS0ID_REDUNDANTSERVERDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 855);
pub const UA_NS0ID_SAMPLINGINTERVALDIAGNOSTICSDATATYPE = @as(c_int, 856);
pub const UA_NS0ID_SAMPLINGINTERVALDIAGNOSTICSDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 857);
pub const UA_NS0ID_SAMPLINGINTERVALDIAGNOSTICSDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 858);
pub const UA_NS0ID_SERVERDIAGNOSTICSSUMMARYDATATYPE = @as(c_int, 859);
pub const UA_NS0ID_SERVERDIAGNOSTICSSUMMARYDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 860);
pub const UA_NS0ID_SERVERDIAGNOSTICSSUMMARYDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 861);
pub const UA_NS0ID_SERVERSTATUSDATATYPE = @as(c_int, 862);
pub const UA_NS0ID_SERVERSTATUSDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 863);
pub const UA_NS0ID_SERVERSTATUSDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 864);
pub const UA_NS0ID_SESSIONDIAGNOSTICSDATATYPE = @as(c_int, 865);
pub const UA_NS0ID_SESSIONDIAGNOSTICSDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 866);
pub const UA_NS0ID_SESSIONDIAGNOSTICSDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 867);
pub const UA_NS0ID_SESSIONSECURITYDIAGNOSTICSDATATYPE = @as(c_int, 868);
pub const UA_NS0ID_SESSIONSECURITYDIAGNOSTICSDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 869);
pub const UA_NS0ID_SESSIONSECURITYDIAGNOSTICSDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 870);
pub const UA_NS0ID_SERVICECOUNTERDATATYPE = @as(c_int, 871);
pub const UA_NS0ID_SERVICECOUNTERDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 872);
pub const UA_NS0ID_SERVICECOUNTERDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 873);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSDATATYPE = @as(c_int, 874);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 875);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 876);
pub const UA_NS0ID_MODELCHANGESTRUCTUREDATATYPE = @as(c_int, 877);
pub const UA_NS0ID_MODELCHANGESTRUCTUREDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 878);
pub const UA_NS0ID_MODELCHANGESTRUCTUREDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 879);
pub const UA_NS0ID_RANGE = @as(c_int, 884);
pub const UA_NS0ID_RANGE_ENCODING_DEFAULTXML = @as(c_int, 885);
pub const UA_NS0ID_RANGE_ENCODING_DEFAULTBINARY = @as(c_int, 886);
pub const UA_NS0ID_EUINFORMATION = @as(c_int, 887);
pub const UA_NS0ID_EUINFORMATION_ENCODING_DEFAULTXML = @as(c_int, 888);
pub const UA_NS0ID_EUINFORMATION_ENCODING_DEFAULTBINARY = @as(c_int, 889);
pub const UA_NS0ID_EXCEPTIONDEVIATIONFORMAT = @as(c_int, 890);
pub const UA_NS0ID_ANNOTATION = @as(c_int, 891);
pub const UA_NS0ID_ANNOTATION_ENCODING_DEFAULTXML = @as(c_int, 892);
pub const UA_NS0ID_ANNOTATION_ENCODING_DEFAULTBINARY = @as(c_int, 893);
pub const UA_NS0ID_PROGRAMDIAGNOSTICDATATYPE = @as(c_int, 894);
pub const UA_NS0ID_PROGRAMDIAGNOSTICDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 895);
pub const UA_NS0ID_PROGRAMDIAGNOSTICDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 896);
pub const UA_NS0ID_SEMANTICCHANGESTRUCTUREDATATYPE = @as(c_int, 897);
pub const UA_NS0ID_SEMANTICCHANGESTRUCTUREDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 898);
pub const UA_NS0ID_SEMANTICCHANGESTRUCTUREDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 899);
pub const UA_NS0ID_EVENTNOTIFICATIONLIST = @as(c_int, 914);
pub const UA_NS0ID_EVENTNOTIFICATIONLIST_ENCODING_DEFAULTXML = @as(c_int, 915);
pub const UA_NS0ID_EVENTNOTIFICATIONLIST_ENCODING_DEFAULTBINARY = @as(c_int, 916);
pub const UA_NS0ID_EVENTFIELDLIST = @as(c_int, 917);
pub const UA_NS0ID_EVENTFIELDLIST_ENCODING_DEFAULTXML = @as(c_int, 918);
pub const UA_NS0ID_EVENTFIELDLIST_ENCODING_DEFAULTBINARY = @as(c_int, 919);
pub const UA_NS0ID_HISTORYEVENTFIELDLIST = @as(c_int, 920);
pub const UA_NS0ID_HISTORYEVENTFIELDLIST_ENCODING_DEFAULTXML = @as(c_int, 921);
pub const UA_NS0ID_HISTORYEVENTFIELDLIST_ENCODING_DEFAULTBINARY = @as(c_int, 922);
pub const UA_NS0ID_ISSUEDIDENTITYTOKEN = @as(c_int, 938);
pub const UA_NS0ID_ISSUEDIDENTITYTOKEN_ENCODING_DEFAULTXML = @as(c_int, 939);
pub const UA_NS0ID_ISSUEDIDENTITYTOKEN_ENCODING_DEFAULTBINARY = @as(c_int, 940);
pub const UA_NS0ID_NOTIFICATIONDATA = @as(c_int, 945);
pub const UA_NS0ID_NOTIFICATIONDATA_ENCODING_DEFAULTXML = @as(c_int, 946);
pub const UA_NS0ID_NOTIFICATIONDATA_ENCODING_DEFAULTBINARY = @as(c_int, 947);
pub const UA_NS0ID_AGGREGATECONFIGURATION = @as(c_int, 948);
pub const UA_NS0ID_AGGREGATECONFIGURATION_ENCODING_DEFAULTXML = @as(c_int, 949);
pub const UA_NS0ID_AGGREGATECONFIGURATION_ENCODING_DEFAULTBINARY = @as(c_int, 950);
pub const UA_NS0ID_IMAGEBMP = @as(c_int, 2000);
pub const UA_NS0ID_IMAGEGIF = @as(c_int, 2001);
pub const UA_NS0ID_IMAGEJPG = @as(c_int, 2002);
pub const UA_NS0ID_IMAGEPNG = @as(c_int, 2003);
pub const UA_NS0ID_SERVERTYPE = @as(c_int, 2004);
pub const UA_NS0ID_SERVERTYPE_SERVERARRAY = @as(c_int, 2005);
pub const UA_NS0ID_SERVERTYPE_NAMESPACEARRAY = @as(c_int, 2006);
pub const UA_NS0ID_SERVERTYPE_SERVERSTATUS = @as(c_int, 2007);
pub const UA_NS0ID_SERVERTYPE_SERVICELEVEL = @as(c_int, 2008);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES = @as(c_int, 2009);
pub const UA_NS0ID_SERVERTYPE_SERVERDIAGNOSTICS = @as(c_int, 2010);
pub const UA_NS0ID_SERVERTYPE_VENDORSERVERINFO = @as(c_int, 2011);
pub const UA_NS0ID_SERVERTYPE_SERVERREDUNDANCY = @as(c_int, 2012);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE = @as(c_int, 2013);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_SERVERPROFILEARRAY = @as(c_int, 2014);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_LOCALEIDARRAY = @as(c_int, 2016);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_MINSUPPORTEDSAMPLERATE = @as(c_int, 2017);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_MODELLINGRULES = @as(c_int, 2019);
pub const UA_NS0ID_SERVERDIAGNOSTICSTYPE = @as(c_int, 2020);
pub const UA_NS0ID_SERVERDIAGNOSTICSTYPE_SERVERDIAGNOSTICSSUMMARY = @as(c_int, 2021);
pub const UA_NS0ID_SERVERDIAGNOSTICSTYPE_SAMPLINGINTERVALDIAGNOSTICSARRAY = @as(c_int, 2022);
pub const UA_NS0ID_SERVERDIAGNOSTICSTYPE_SUBSCRIPTIONDIAGNOSTICSARRAY = @as(c_int, 2023);
pub const UA_NS0ID_SERVERDIAGNOSTICSTYPE_ENABLEDFLAG = @as(c_int, 2025);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE = @as(c_int, 2026);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_SESSIONDIAGNOSTICSARRAY = @as(c_int, 2027);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_SESSIONSECURITYDIAGNOSTICSARRAY = @as(c_int, 2028);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE = @as(c_int, 2029);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS = @as(c_int, 2030);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONSECURITYDIAGNOSTICS = @as(c_int, 2031);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SUBSCRIPTIONDIAGNOSTICSARRAY = @as(c_int, 2032);
pub const UA_NS0ID_VENDORSERVERINFOTYPE = @as(c_int, 2033);
pub const UA_NS0ID_SERVERREDUNDANCYTYPE = @as(c_int, 2034);
pub const UA_NS0ID_SERVERREDUNDANCYTYPE_REDUNDANCYSUPPORT = @as(c_int, 2035);
pub const UA_NS0ID_TRANSPARENTREDUNDANCYTYPE = @as(c_int, 2036);
pub const UA_NS0ID_TRANSPARENTREDUNDANCYTYPE_CURRENTSERVERID = @as(c_int, 2037);
pub const UA_NS0ID_TRANSPARENTREDUNDANCYTYPE_REDUNDANTSERVERARRAY = @as(c_int, 2038);
pub const UA_NS0ID_NONTRANSPARENTREDUNDANCYTYPE = @as(c_int, 2039);
pub const UA_NS0ID_NONTRANSPARENTREDUNDANCYTYPE_SERVERURIARRAY = @as(c_int, 2040);
pub const UA_NS0ID_BASEEVENTTYPE = @as(c_int, 2041);
pub const UA_NS0ID_BASEEVENTTYPE_EVENTID = @as(c_int, 2042);
pub const UA_NS0ID_BASEEVENTTYPE_EVENTTYPE = @as(c_int, 2043);
pub const UA_NS0ID_BASEEVENTTYPE_SOURCENODE = @as(c_int, 2044);
pub const UA_NS0ID_BASEEVENTTYPE_SOURCENAME = @as(c_int, 2045);
pub const UA_NS0ID_BASEEVENTTYPE_TIME = @as(c_int, 2046);
pub const UA_NS0ID_BASEEVENTTYPE_RECEIVETIME = @as(c_int, 2047);
pub const UA_NS0ID_BASEEVENTTYPE_MESSAGE = @as(c_int, 2050);
pub const UA_NS0ID_BASEEVENTTYPE_SEVERITY = @as(c_int, 2051);
pub const UA_NS0ID_AUDITEVENTTYPE = @as(c_int, 2052);
pub const UA_NS0ID_AUDITEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 2053);
pub const UA_NS0ID_AUDITEVENTTYPE_STATUS = @as(c_int, 2054);
pub const UA_NS0ID_AUDITEVENTTYPE_SERVERID = @as(c_int, 2055);
pub const UA_NS0ID_AUDITEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 2056);
pub const UA_NS0ID_AUDITEVENTTYPE_CLIENTUSERID = @as(c_int, 2057);
pub const UA_NS0ID_AUDITSECURITYEVENTTYPE = @as(c_int, 2058);
pub const UA_NS0ID_AUDITCHANNELEVENTTYPE = @as(c_int, 2059);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE = @as(c_int, 2060);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_CLIENTCERTIFICATE = @as(c_int, 2061);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_REQUESTTYPE = @as(c_int, 2062);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_SECURITYPOLICYURI = @as(c_int, 2063);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_SECURITYMODE = @as(c_int, 2065);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_REQUESTEDLIFETIME = @as(c_int, 2066);
pub const UA_NS0ID_AUDITSESSIONEVENTTYPE = @as(c_int, 2069);
pub const UA_NS0ID_AUDITSESSIONEVENTTYPE_SESSIONID = @as(c_int, 2070);
pub const UA_NS0ID_AUDITCREATESESSIONEVENTTYPE = @as(c_int, 2071);
pub const UA_NS0ID_AUDITCREATESESSIONEVENTTYPE_SECURECHANNELID = @as(c_int, 2072);
pub const UA_NS0ID_AUDITCREATESESSIONEVENTTYPE_CLIENTCERTIFICATE = @as(c_int, 2073);
pub const UA_NS0ID_AUDITCREATESESSIONEVENTTYPE_REVISEDSESSIONTIMEOUT = @as(c_int, 2074);
pub const UA_NS0ID_AUDITACTIVATESESSIONEVENTTYPE = @as(c_int, 2075);
pub const UA_NS0ID_AUDITACTIVATESESSIONEVENTTYPE_CLIENTSOFTWARECERTIFICATES = @as(c_int, 2076);
pub const UA_NS0ID_AUDITACTIVATESESSIONEVENTTYPE_USERIDENTITYTOKEN = @as(c_int, 2077);
pub const UA_NS0ID_AUDITCANCELEVENTTYPE = @as(c_int, 2078);
pub const UA_NS0ID_AUDITCANCELEVENTTYPE_REQUESTHANDLE = @as(c_int, 2079);
pub const UA_NS0ID_AUDITCERTIFICATEEVENTTYPE = @as(c_int, 2080);
pub const UA_NS0ID_AUDITCERTIFICATEEVENTTYPE_CERTIFICATE = @as(c_int, 2081);
pub const UA_NS0ID_AUDITCERTIFICATEDATAMISMATCHEVENTTYPE = @as(c_int, 2082);
pub const UA_NS0ID_AUDITCERTIFICATEDATAMISMATCHEVENTTYPE_INVALIDHOSTNAME = @as(c_int, 2083);
pub const UA_NS0ID_AUDITCERTIFICATEDATAMISMATCHEVENTTYPE_INVALIDURI = @as(c_int, 2084);
pub const UA_NS0ID_AUDITCERTIFICATEEXPIREDEVENTTYPE = @as(c_int, 2085);
pub const UA_NS0ID_AUDITCERTIFICATEINVALIDEVENTTYPE = @as(c_int, 2086);
pub const UA_NS0ID_AUDITCERTIFICATEUNTRUSTEDEVENTTYPE = @as(c_int, 2087);
pub const UA_NS0ID_AUDITCERTIFICATEREVOKEDEVENTTYPE = @as(c_int, 2088);
pub const UA_NS0ID_AUDITCERTIFICATEMISMATCHEVENTTYPE = @as(c_int, 2089);
pub const UA_NS0ID_AUDITNODEMANAGEMENTEVENTTYPE = @as(c_int, 2090);
pub const UA_NS0ID_AUDITADDNODESEVENTTYPE = @as(c_int, 2091);
pub const UA_NS0ID_AUDITADDNODESEVENTTYPE_NODESTOADD = @as(c_int, 2092);
pub const UA_NS0ID_AUDITDELETENODESEVENTTYPE = @as(c_int, 2093);
pub const UA_NS0ID_AUDITDELETENODESEVENTTYPE_NODESTODELETE = @as(c_int, 2094);
pub const UA_NS0ID_AUDITADDREFERENCESEVENTTYPE = @as(c_int, 2095);
pub const UA_NS0ID_AUDITADDREFERENCESEVENTTYPE_REFERENCESTOADD = @as(c_int, 2096);
pub const UA_NS0ID_AUDITDELETEREFERENCESEVENTTYPE = @as(c_int, 2097);
pub const UA_NS0ID_AUDITDELETEREFERENCESEVENTTYPE_REFERENCESTODELETE = @as(c_int, 2098);
pub const UA_NS0ID_AUDITUPDATEEVENTTYPE = @as(c_int, 2099);
pub const UA_NS0ID_AUDITWRITEUPDATEEVENTTYPE = @as(c_int, 2100);
pub const UA_NS0ID_AUDITWRITEUPDATEEVENTTYPE_INDEXRANGE = @as(c_int, 2101);
pub const UA_NS0ID_AUDITWRITEUPDATEEVENTTYPE_OLDVALUE = @as(c_int, 2102);
pub const UA_NS0ID_AUDITWRITEUPDATEEVENTTYPE_NEWVALUE = @as(c_int, 2103);
pub const UA_NS0ID_AUDITHISTORYUPDATEEVENTTYPE = @as(c_int, 2104);
pub const UA_NS0ID_AUDITUPDATEMETHODEVENTTYPE = @as(c_int, 2127);
pub const UA_NS0ID_AUDITUPDATEMETHODEVENTTYPE_METHODID = @as(c_int, 2128);
pub const UA_NS0ID_AUDITUPDATEMETHODEVENTTYPE_INPUTARGUMENTS = @as(c_int, 2129);
pub const UA_NS0ID_SYSTEMEVENTTYPE = @as(c_int, 2130);
pub const UA_NS0ID_DEVICEFAILUREEVENTTYPE = @as(c_int, 2131);
pub const UA_NS0ID_BASEMODELCHANGEEVENTTYPE = @as(c_int, 2132);
pub const UA_NS0ID_GENERALMODELCHANGEEVENTTYPE = @as(c_int, 2133);
pub const UA_NS0ID_GENERALMODELCHANGEEVENTTYPE_CHANGES = @as(c_int, 2134);
pub const UA_NS0ID_SERVERVENDORCAPABILITYTYPE = @as(c_int, 2137);
pub const UA_NS0ID_SERVERSTATUSTYPE = @as(c_int, 2138);
pub const UA_NS0ID_SERVERSTATUSTYPE_STARTTIME = @as(c_int, 2139);
pub const UA_NS0ID_SERVERSTATUSTYPE_CURRENTTIME = @as(c_int, 2140);
pub const UA_NS0ID_SERVERSTATUSTYPE_STATE = @as(c_int, 2141);
pub const UA_NS0ID_SERVERSTATUSTYPE_BUILDINFO = @as(c_int, 2142);
pub const UA_NS0ID_SERVERDIAGNOSTICSSUMMARYTYPE = @as(c_int, 2150);
pub const UA_NS0ID_SERVERDIAGNOSTICSSUMMARYTYPE_SERVERVIEWCOUNT = @as(c_int, 2151);
pub const UA_NS0ID_SERVERDIAGNOSTICSSUMMARYTYPE_CURRENTSESSIONCOUNT = @as(c_int, 2152);
pub const UA_NS0ID_SERVERDIAGNOSTICSSUMMARYTYPE_CUMULATEDSESSIONCOUNT = @as(c_int, 2153);
pub const UA_NS0ID_SERVERDIAGNOSTICSSUMMARYTYPE_SECURITYREJECTEDSESSIONCOUNT = @as(c_int, 2154);
pub const UA_NS0ID_SERVERDIAGNOSTICSSUMMARYTYPE_REJECTEDSESSIONCOUNT = @as(c_int, 2155);
pub const UA_NS0ID_SERVERDIAGNOSTICSSUMMARYTYPE_SESSIONTIMEOUTCOUNT = @as(c_int, 2156);
pub const UA_NS0ID_SERVERDIAGNOSTICSSUMMARYTYPE_SESSIONABORTCOUNT = @as(c_int, 2157);
pub const UA_NS0ID_SERVERDIAGNOSTICSSUMMARYTYPE_PUBLISHINGINTERVALCOUNT = @as(c_int, 2159);
pub const UA_NS0ID_SERVERDIAGNOSTICSSUMMARYTYPE_CURRENTSUBSCRIPTIONCOUNT = @as(c_int, 2160);
pub const UA_NS0ID_SERVERDIAGNOSTICSSUMMARYTYPE_CUMULATEDSUBSCRIPTIONCOUNT = @as(c_int, 2161);
pub const UA_NS0ID_SERVERDIAGNOSTICSSUMMARYTYPE_SECURITYREJECTEDREQUESTSCOUNT = @as(c_int, 2162);
pub const UA_NS0ID_SERVERDIAGNOSTICSSUMMARYTYPE_REJECTEDREQUESTSCOUNT = @as(c_int, 2163);
pub const UA_NS0ID_SAMPLINGINTERVALDIAGNOSTICSARRAYTYPE = @as(c_int, 2164);
pub const UA_NS0ID_SAMPLINGINTERVALDIAGNOSTICSTYPE = @as(c_int, 2165);
pub const UA_NS0ID_SAMPLINGINTERVALDIAGNOSTICSTYPE_SAMPLINGINTERVAL = @as(c_int, 2166);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE = @as(c_int, 2171);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE = @as(c_int, 2172);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_SESSIONID = @as(c_int, 2173);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_SUBSCRIPTIONID = @as(c_int, 2174);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_PRIORITY = @as(c_int, 2175);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_PUBLISHINGINTERVAL = @as(c_int, 2176);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_MAXKEEPALIVECOUNT = @as(c_int, 2177);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_MAXNOTIFICATIONSPERPUBLISH = @as(c_int, 2179);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_PUBLISHINGENABLED = @as(c_int, 2180);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_MODIFYCOUNT = @as(c_int, 2181);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_ENABLECOUNT = @as(c_int, 2182);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_DISABLECOUNT = @as(c_int, 2183);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_REPUBLISHREQUESTCOUNT = @as(c_int, 2184);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_REPUBLISHMESSAGEREQUESTCOUNT = @as(c_int, 2185);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_REPUBLISHMESSAGECOUNT = @as(c_int, 2186);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_TRANSFERREQUESTCOUNT = @as(c_int, 2187);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_TRANSFERREDTOALTCLIENTCOUNT = @as(c_int, 2188);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_TRANSFERREDTOSAMECLIENTCOUNT = @as(c_int, 2189);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_PUBLISHREQUESTCOUNT = @as(c_int, 2190);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_DATACHANGENOTIFICATIONSCOUNT = @as(c_int, 2191);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_NOTIFICATIONSCOUNT = @as(c_int, 2193);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE = @as(c_int, 2196);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE = @as(c_int, 2197);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_SESSIONID = @as(c_int, 2198);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_SESSIONNAME = @as(c_int, 2199);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_CLIENTDESCRIPTION = @as(c_int, 2200);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_SERVERURI = @as(c_int, 2201);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_ENDPOINTURL = @as(c_int, 2202);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_LOCALEIDS = @as(c_int, 2203);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_ACTUALSESSIONTIMEOUT = @as(c_int, 2204);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_CLIENTCONNECTIONTIME = @as(c_int, 2205);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_CLIENTLASTCONTACTTIME = @as(c_int, 2206);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_CURRENTSUBSCRIPTIONSCOUNT = @as(c_int, 2207);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_CURRENTMONITOREDITEMSCOUNT = @as(c_int, 2208);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_CURRENTPUBLISHREQUESTSINQUEUE = @as(c_int, 2209);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_READCOUNT = @as(c_int, 2217);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_HISTORYREADCOUNT = @as(c_int, 2218);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_WRITECOUNT = @as(c_int, 2219);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_HISTORYUPDATECOUNT = @as(c_int, 2220);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_CALLCOUNT = @as(c_int, 2221);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_CREATEMONITOREDITEMSCOUNT = @as(c_int, 2222);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_MODIFYMONITOREDITEMSCOUNT = @as(c_int, 2223);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_SETMONITORINGMODECOUNT = @as(c_int, 2224);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_SETTRIGGERINGCOUNT = @as(c_int, 2225);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_DELETEMONITOREDITEMSCOUNT = @as(c_int, 2226);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_CREATESUBSCRIPTIONCOUNT = @as(c_int, 2227);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_MODIFYSUBSCRIPTIONCOUNT = @as(c_int, 2228);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_SETPUBLISHINGMODECOUNT = @as(c_int, 2229);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_PUBLISHCOUNT = @as(c_int, 2230);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_REPUBLISHCOUNT = @as(c_int, 2231);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_TRANSFERSUBSCRIPTIONSCOUNT = @as(c_int, 2232);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_DELETESUBSCRIPTIONSCOUNT = @as(c_int, 2233);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_ADDNODESCOUNT = @as(c_int, 2234);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_ADDREFERENCESCOUNT = @as(c_int, 2235);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_DELETENODESCOUNT = @as(c_int, 2236);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_DELETEREFERENCESCOUNT = @as(c_int, 2237);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_BROWSECOUNT = @as(c_int, 2238);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_BROWSENEXTCOUNT = @as(c_int, 2239);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_TRANSLATEBROWSEPATHSTONODEIDSCOUNT = @as(c_int, 2240);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_QUERYFIRSTCOUNT = @as(c_int, 2241);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_QUERYNEXTCOUNT = @as(c_int, 2242);
pub const UA_NS0ID_SESSIONSECURITYDIAGNOSTICSARRAYTYPE = @as(c_int, 2243);
pub const UA_NS0ID_SESSIONSECURITYDIAGNOSTICSTYPE = @as(c_int, 2244);
pub const UA_NS0ID_SESSIONSECURITYDIAGNOSTICSTYPE_SESSIONID = @as(c_int, 2245);
pub const UA_NS0ID_SESSIONSECURITYDIAGNOSTICSTYPE_CLIENTUSERIDOFSESSION = @as(c_int, 2246);
pub const UA_NS0ID_SESSIONSECURITYDIAGNOSTICSTYPE_CLIENTUSERIDHISTORY = @as(c_int, 2247);
pub const UA_NS0ID_SESSIONSECURITYDIAGNOSTICSTYPE_AUTHENTICATIONMECHANISM = @as(c_int, 2248);
pub const UA_NS0ID_SESSIONSECURITYDIAGNOSTICSTYPE_ENCODING = @as(c_int, 2249);
pub const UA_NS0ID_SESSIONSECURITYDIAGNOSTICSTYPE_TRANSPORTPROTOCOL = @as(c_int, 2250);
pub const UA_NS0ID_SESSIONSECURITYDIAGNOSTICSTYPE_SECURITYMODE = @as(c_int, 2251);
pub const UA_NS0ID_SESSIONSECURITYDIAGNOSTICSTYPE_SECURITYPOLICYURI = @as(c_int, 2252);
pub const UA_NS0ID_SERVER = @as(c_int, 2253);
pub const UA_NS0ID_SERVER_SERVERARRAY = @as(c_int, 2254);
pub const UA_NS0ID_SERVER_NAMESPACEARRAY = @as(c_int, 2255);
pub const UA_NS0ID_SERVER_SERVERSTATUS = @as(c_int, 2256);
pub const UA_NS0ID_SERVER_SERVERSTATUS_STARTTIME = @as(c_int, 2257);
pub const UA_NS0ID_SERVER_SERVERSTATUS_CURRENTTIME = @as(c_int, 2258);
pub const UA_NS0ID_SERVER_SERVERSTATUS_STATE = @as(c_int, 2259);
pub const UA_NS0ID_SERVER_SERVERSTATUS_BUILDINFO = @as(c_int, 2260);
pub const UA_NS0ID_SERVER_SERVERSTATUS_BUILDINFO_PRODUCTNAME = @as(c_int, 2261);
pub const UA_NS0ID_SERVER_SERVERSTATUS_BUILDINFO_PRODUCTURI = @as(c_int, 2262);
pub const UA_NS0ID_SERVER_SERVERSTATUS_BUILDINFO_MANUFACTURERNAME = @as(c_int, 2263);
pub const UA_NS0ID_SERVER_SERVERSTATUS_BUILDINFO_SOFTWAREVERSION = @as(c_int, 2264);
pub const UA_NS0ID_SERVER_SERVERSTATUS_BUILDINFO_BUILDNUMBER = @as(c_int, 2265);
pub const UA_NS0ID_SERVER_SERVERSTATUS_BUILDINFO_BUILDDATE = @as(c_int, 2266);
pub const UA_NS0ID_SERVER_SERVICELEVEL = @as(c_int, 2267);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES = @as(c_int, 2268);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_SERVERPROFILEARRAY = @as(c_int, 2269);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_LOCALEIDARRAY = @as(c_int, 2271);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_MINSUPPORTEDSAMPLERATE = @as(c_int, 2272);
pub const UA_NS0ID_SERVER_SERVERDIAGNOSTICS = @as(c_int, 2274);
pub const UA_NS0ID_SERVER_SERVERDIAGNOSTICS_SERVERDIAGNOSTICSSUMMARY = @as(c_int, 2275);
pub const UA_NS0ID_SERVER_SERVERDIAGNOSTICS_SERVERDIAGNOSTICSSUMMARY_SERVERVIEWCOUNT = @as(c_int, 2276);
pub const UA_NS0ID_SERVER_SERVERDIAGNOSTICS_SERVERDIAGNOSTICSSUMMARY_CURRENTSESSIONCOUNT = @as(c_int, 2277);
pub const UA_NS0ID_SERVER_SERVERDIAGNOSTICS_SERVERDIAGNOSTICSSUMMARY_CUMULATEDSESSIONCOUNT = @as(c_int, 2278);
pub const UA_NS0ID_SERVER_SERVERDIAGNOSTICS_SERVERDIAGNOSTICSSUMMARY_SECURITYREJECTEDSESSIONCOUNT = @as(c_int, 2279);
pub const UA_NS0ID_SERVER_SERVERDIAGNOSTICS_SERVERDIAGNOSTICSSUMMARY_SESSIONTIMEOUTCOUNT = @as(c_int, 2281);
pub const UA_NS0ID_SERVER_SERVERDIAGNOSTICS_SERVERDIAGNOSTICSSUMMARY_SESSIONABORTCOUNT = @as(c_int, 2282);
pub const UA_NS0ID_SERVER_SERVERDIAGNOSTICS_SERVERDIAGNOSTICSSUMMARY_PUBLISHINGINTERVALCOUNT = @as(c_int, 2284);
pub const UA_NS0ID_SERVER_SERVERDIAGNOSTICS_SERVERDIAGNOSTICSSUMMARY_CURRENTSUBSCRIPTIONCOUNT = @as(c_int, 2285);
pub const UA_NS0ID_SERVER_SERVERDIAGNOSTICS_SERVERDIAGNOSTICSSUMMARY_CUMULATEDSUBSCRIPTIONCOUNT = @as(c_int, 2286);
pub const UA_NS0ID_SERVER_SERVERDIAGNOSTICS_SERVERDIAGNOSTICSSUMMARY_SECURITYREJECTEDREQUESTSCOUNT = @as(c_int, 2287);
pub const UA_NS0ID_SERVER_SERVERDIAGNOSTICS_SERVERDIAGNOSTICSSUMMARY_REJECTEDREQUESTSCOUNT = @as(c_int, 2288);
pub const UA_NS0ID_SERVER_SERVERDIAGNOSTICS_SAMPLINGINTERVALDIAGNOSTICSARRAY = @as(c_int, 2289);
pub const UA_NS0ID_SERVER_SERVERDIAGNOSTICS_SUBSCRIPTIONDIAGNOSTICSARRAY = @as(c_int, 2290);
pub const UA_NS0ID_SERVER_SERVERDIAGNOSTICS_ENABLEDFLAG = @as(c_int, 2294);
pub const UA_NS0ID_SERVER_VENDORSERVERINFO = @as(c_int, 2295);
pub const UA_NS0ID_SERVER_SERVERREDUNDANCY = @as(c_int, 2296);
pub const UA_NS0ID_STATEMACHINETYPE = @as(c_int, 2299);
pub const UA_NS0ID_STATETYPE = @as(c_int, 2307);
pub const UA_NS0ID_STATETYPE_STATENUMBER = @as(c_int, 2308);
pub const UA_NS0ID_INITIALSTATETYPE = @as(c_int, 2309);
pub const UA_NS0ID_TRANSITIONTYPE = @as(c_int, 2310);
pub const UA_NS0ID_TRANSITIONEVENTTYPE = @as(c_int, 2311);
pub const UA_NS0ID_TRANSITIONTYPE_TRANSITIONNUMBER = @as(c_int, 2312);
pub const UA_NS0ID_AUDITUPDATESTATEEVENTTYPE = @as(c_int, 2315);
pub const UA_NS0ID_HISTORICALDATACONFIGURATIONTYPE = @as(c_int, 2318);
pub const UA_NS0ID_HISTORICALDATACONFIGURATIONTYPE_STEPPED = @as(c_int, 2323);
pub const UA_NS0ID_HISTORICALDATACONFIGURATIONTYPE_DEFINITION = @as(c_int, 2324);
pub const UA_NS0ID_HISTORICALDATACONFIGURATIONTYPE_MAXTIMEINTERVAL = @as(c_int, 2325);
pub const UA_NS0ID_HISTORICALDATACONFIGURATIONTYPE_MINTIMEINTERVAL = @as(c_int, 2326);
pub const UA_NS0ID_HISTORICALDATACONFIGURATIONTYPE_EXCEPTIONDEVIATION = @as(c_int, 2327);
pub const UA_NS0ID_HISTORICALDATACONFIGURATIONTYPE_EXCEPTIONDEVIATIONFORMAT = @as(c_int, 2328);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIESTYPE = @as(c_int, 2330);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIESTYPE_ACCESSHISTORYDATACAPABILITY = @as(c_int, 2331);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIESTYPE_ACCESSHISTORYEVENTSCAPABILITY = @as(c_int, 2332);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIESTYPE_INSERTDATACAPABILITY = @as(c_int, 2334);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIESTYPE_REPLACEDATACAPABILITY = @as(c_int, 2335);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIESTYPE_UPDATEDATACAPABILITY = @as(c_int, 2336);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIESTYPE_DELETERAWCAPABILITY = @as(c_int, 2337);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIESTYPE_DELETEATTIMECAPABILITY = @as(c_int, 2338);
pub const UA_NS0ID_AGGREGATEFUNCTIONTYPE = @as(c_int, 2340);
pub const UA_NS0ID_AGGREGATEFUNCTION_INTERPOLATIVE = @as(c_int, 2341);
pub const UA_NS0ID_AGGREGATEFUNCTION_AVERAGE = @as(c_int, 2342);
pub const UA_NS0ID_AGGREGATEFUNCTION_TIMEAVERAGE = @as(c_int, 2343);
pub const UA_NS0ID_AGGREGATEFUNCTION_TOTAL = @as(c_int, 2344);
pub const UA_NS0ID_AGGREGATEFUNCTION_MINIMUM = @as(c_int, 2346);
pub const UA_NS0ID_AGGREGATEFUNCTION_MAXIMUM = @as(c_int, 2347);
pub const UA_NS0ID_AGGREGATEFUNCTION_MINIMUMACTUALTIME = @as(c_int, 2348);
pub const UA_NS0ID_AGGREGATEFUNCTION_MAXIMUMACTUALTIME = @as(c_int, 2349);
pub const UA_NS0ID_AGGREGATEFUNCTION_RANGE = @as(c_int, 2350);
pub const UA_NS0ID_AGGREGATEFUNCTION_ANNOTATIONCOUNT = @as(c_int, 2351);
pub const UA_NS0ID_AGGREGATEFUNCTION_COUNT = @as(c_int, 2352);
pub const UA_NS0ID_AGGREGATEFUNCTION_NUMBEROFTRANSITIONS = @as(c_int, 2355);
pub const UA_NS0ID_AGGREGATEFUNCTION_START = @as(c_int, 2357);
pub const UA_NS0ID_AGGREGATEFUNCTION_END = @as(c_int, 2358);
pub const UA_NS0ID_AGGREGATEFUNCTION_DELTA = @as(c_int, 2359);
pub const UA_NS0ID_AGGREGATEFUNCTION_DURATIONGOOD = @as(c_int, 2360);
pub const UA_NS0ID_AGGREGATEFUNCTION_DURATIONBAD = @as(c_int, 2361);
pub const UA_NS0ID_AGGREGATEFUNCTION_PERCENTGOOD = @as(c_int, 2362);
pub const UA_NS0ID_AGGREGATEFUNCTION_PERCENTBAD = @as(c_int, 2363);
pub const UA_NS0ID_AGGREGATEFUNCTION_WORSTQUALITY = @as(c_int, 2364);
pub const UA_NS0ID_DATAITEMTYPE = @as(c_int, 2365);
pub const UA_NS0ID_DATAITEMTYPE_DEFINITION = @as(c_int, 2366);
pub const UA_NS0ID_DATAITEMTYPE_VALUEPRECISION = @as(c_int, 2367);
pub const UA_NS0ID_ANALOGITEMTYPE = @as(c_int, 2368);
pub const UA_NS0ID_ANALOGITEMTYPE_EURANGE = @as(c_int, 2369);
pub const UA_NS0ID_ANALOGITEMTYPE_INSTRUMENTRANGE = @as(c_int, 2370);
pub const UA_NS0ID_ANALOGITEMTYPE_ENGINEERINGUNITS = @as(c_int, 2371);
pub const UA_NS0ID_DISCRETEITEMTYPE = @as(c_int, 2372);
pub const UA_NS0ID_TWOSTATEDISCRETETYPE = @as(c_int, 2373);
pub const UA_NS0ID_TWOSTATEDISCRETETYPE_FALSESTATE = @as(c_int, 2374);
pub const UA_NS0ID_TWOSTATEDISCRETETYPE_TRUESTATE = @as(c_int, 2375);
pub const UA_NS0ID_MULTISTATEDISCRETETYPE = @as(c_int, 2376);
pub const UA_NS0ID_MULTISTATEDISCRETETYPE_ENUMSTRINGS = @as(c_int, 2377);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE = @as(c_int, 2378);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_INTERMEDIATERESULT = @as(c_int, 2379);
pub const UA_NS0ID_PROGRAMDIAGNOSTICTYPE = @as(c_int, 2380);
pub const UA_NS0ID_PROGRAMDIAGNOSTICTYPE_CREATESESSIONID = @as(c_int, 2381);
pub const UA_NS0ID_PROGRAMDIAGNOSTICTYPE_CREATECLIENTNAME = @as(c_int, 2382);
pub const UA_NS0ID_PROGRAMDIAGNOSTICTYPE_INVOCATIONCREATIONTIME = @as(c_int, 2383);
pub const UA_NS0ID_PROGRAMDIAGNOSTICTYPE_LASTTRANSITIONTIME = @as(c_int, 2384);
pub const UA_NS0ID_PROGRAMDIAGNOSTICTYPE_LASTMETHODCALL = @as(c_int, 2385);
pub const UA_NS0ID_PROGRAMDIAGNOSTICTYPE_LASTMETHODSESSIONID = @as(c_int, 2386);
pub const UA_NS0ID_PROGRAMDIAGNOSTICTYPE_LASTMETHODINPUTARGUMENTS = @as(c_int, 2387);
pub const UA_NS0ID_PROGRAMDIAGNOSTICTYPE_LASTMETHODOUTPUTARGUMENTS = @as(c_int, 2388);
pub const UA_NS0ID_PROGRAMDIAGNOSTICTYPE_LASTMETHODCALLTIME = @as(c_int, 2389);
pub const UA_NS0ID_PROGRAMDIAGNOSTICTYPE_LASTMETHODRETURNSTATUS = @as(c_int, 2390);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE = @as(c_int, 2391);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_CREATABLE = @as(c_int, 2392);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_DELETABLE = @as(c_int, 2393);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_AUTODELETE = @as(c_int, 2394);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_RECYCLECOUNT = @as(c_int, 2395);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_INSTANCECOUNT = @as(c_int, 2396);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_MAXINSTANCECOUNT = @as(c_int, 2397);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_MAXRECYCLECOUNT = @as(c_int, 2398);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_PROGRAMDIAGNOSTIC = @as(c_int, 2399);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_READY = @as(c_int, 2400);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_READY_STATENUMBER = @as(c_int, 2401);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_RUNNING = @as(c_int, 2402);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_RUNNING_STATENUMBER = @as(c_int, 2403);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_SUSPENDED = @as(c_int, 2404);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_SUSPENDED_STATENUMBER = @as(c_int, 2405);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_HALTED = @as(c_int, 2406);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_HALTED_STATENUMBER = @as(c_int, 2407);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_HALTEDTOREADY = @as(c_int, 2408);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_HALTEDTOREADY_TRANSITIONNUMBER = @as(c_int, 2409);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_READYTORUNNING = @as(c_int, 2410);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_READYTORUNNING_TRANSITIONNUMBER = @as(c_int, 2411);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_RUNNINGTOHALTED = @as(c_int, 2412);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_RUNNINGTOHALTED_TRANSITIONNUMBER = @as(c_int, 2413);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_RUNNINGTOREADY = @as(c_int, 2414);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_RUNNINGTOREADY_TRANSITIONNUMBER = @as(c_int, 2415);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_RUNNINGTOSUSPENDED = @as(c_int, 2416);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_RUNNINGTOSUSPENDED_TRANSITIONNUMBER = @as(c_int, 2417);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_SUSPENDEDTORUNNING = @as(c_int, 2418);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_SUSPENDEDTORUNNING_TRANSITIONNUMBER = @as(c_int, 2419);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_SUSPENDEDTOHALTED = @as(c_int, 2420);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_SUSPENDEDTOHALTED_TRANSITIONNUMBER = @as(c_int, 2421);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_SUSPENDEDTOREADY = @as(c_int, 2422);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_SUSPENDEDTOREADY_TRANSITIONNUMBER = @as(c_int, 2423);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_READYTOHALTED = @as(c_int, 2424);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_READYTOHALTED_TRANSITIONNUMBER = @as(c_int, 2425);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_START = @as(c_int, 2426);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_SUSPEND = @as(c_int, 2427);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_RESUME = @as(c_int, 2428);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_HALT = @as(c_int, 2429);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_RESET = @as(c_int, 2430);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_REGISTERNODESCOUNT = @as(c_int, 2730);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_UNREGISTERNODESCOUNT = @as(c_int, 2731);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_MAXBROWSECONTINUATIONPOINTS = @as(c_int, 2732);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_MAXQUERYCONTINUATIONPOINTS = @as(c_int, 2733);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_MAXHISTORYCONTINUATIONPOINTS = @as(c_int, 2734);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_MAXBROWSECONTINUATIONPOINTS = @as(c_int, 2735);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_MAXQUERYCONTINUATIONPOINTS = @as(c_int, 2736);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_MAXHISTORYCONTINUATIONPOINTS = @as(c_int, 2737);
pub const UA_NS0ID_SEMANTICCHANGEEVENTTYPE = @as(c_int, 2738);
pub const UA_NS0ID_SEMANTICCHANGEEVENTTYPE_CHANGES = @as(c_int, 2739);
pub const UA_NS0ID_SERVERTYPE_AUDITING = @as(c_int, 2742);
pub const UA_NS0ID_SERVERDIAGNOSTICSTYPE_SESSIONSDIAGNOSTICSSUMMARY = @as(c_int, 2744);
pub const UA_NS0ID_AUDITCHANNELEVENTTYPE_SECURECHANNELID = @as(c_int, 2745);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_CLIENTCERTIFICATETHUMBPRINT = @as(c_int, 2746);
pub const UA_NS0ID_AUDITCREATESESSIONEVENTTYPE_CLIENTCERTIFICATETHUMBPRINT = @as(c_int, 2747);
pub const UA_NS0ID_AUDITURLMISMATCHEVENTTYPE = @as(c_int, 2748);
pub const UA_NS0ID_AUDITURLMISMATCHEVENTTYPE_ENDPOINTURL = @as(c_int, 2749);
pub const UA_NS0ID_AUDITWRITEUPDATEEVENTTYPE_ATTRIBUTEID = @as(c_int, 2750);
pub const UA_NS0ID_AUDITHISTORYUPDATEEVENTTYPE_PARAMETERDATATYPEID = @as(c_int, 2751);
pub const UA_NS0ID_SERVERSTATUSTYPE_SECONDSTILLSHUTDOWN = @as(c_int, 2752);
pub const UA_NS0ID_SERVERSTATUSTYPE_SHUTDOWNREASON = @as(c_int, 2753);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_AGGREGATEFUNCTIONS = @as(c_int, 2754);
pub const UA_NS0ID_STATEVARIABLETYPE = @as(c_int, 2755);
pub const UA_NS0ID_STATEVARIABLETYPE_ID = @as(c_int, 2756);
pub const UA_NS0ID_STATEVARIABLETYPE_NAME = @as(c_int, 2757);
pub const UA_NS0ID_STATEVARIABLETYPE_NUMBER = @as(c_int, 2758);
pub const UA_NS0ID_STATEVARIABLETYPE_EFFECTIVEDISPLAYNAME = @as(c_int, 2759);
pub const UA_NS0ID_FINITESTATEVARIABLETYPE = @as(c_int, 2760);
pub const UA_NS0ID_FINITESTATEVARIABLETYPE_ID = @as(c_int, 2761);
pub const UA_NS0ID_TRANSITIONVARIABLETYPE = @as(c_int, 2762);
pub const UA_NS0ID_TRANSITIONVARIABLETYPE_ID = @as(c_int, 2763);
pub const UA_NS0ID_TRANSITIONVARIABLETYPE_NAME = @as(c_int, 2764);
pub const UA_NS0ID_TRANSITIONVARIABLETYPE_NUMBER = @as(c_int, 2765);
pub const UA_NS0ID_TRANSITIONVARIABLETYPE_TRANSITIONTIME = @as(c_int, 2766);
pub const UA_NS0ID_FINITETRANSITIONVARIABLETYPE = @as(c_int, 2767);
pub const UA_NS0ID_FINITETRANSITIONVARIABLETYPE_ID = @as(c_int, 2768);
pub const UA_NS0ID_STATEMACHINETYPE_CURRENTSTATE = @as(c_int, 2769);
pub const UA_NS0ID_STATEMACHINETYPE_LASTTRANSITION = @as(c_int, 2770);
pub const UA_NS0ID_FINITESTATEMACHINETYPE = @as(c_int, 2771);
pub const UA_NS0ID_FINITESTATEMACHINETYPE_CURRENTSTATE = @as(c_int, 2772);
pub const UA_NS0ID_FINITESTATEMACHINETYPE_LASTTRANSITION = @as(c_int, 2773);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_TRANSITION = @as(c_int, 2774);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_FROMSTATE = @as(c_int, 2775);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_TOSTATE = @as(c_int, 2776);
pub const UA_NS0ID_AUDITUPDATESTATEEVENTTYPE_OLDSTATEID = @as(c_int, 2777);
pub const UA_NS0ID_AUDITUPDATESTATEEVENTTYPE_NEWSTATEID = @as(c_int, 2778);
pub const UA_NS0ID_CONDITIONTYPE = @as(c_int, 2782);
pub const UA_NS0ID_REFRESHSTARTEVENTTYPE = @as(c_int, 2787);
pub const UA_NS0ID_REFRESHENDEVENTTYPE = @as(c_int, 2788);
pub const UA_NS0ID_REFRESHREQUIREDEVENTTYPE = @as(c_int, 2789);
pub const UA_NS0ID_AUDITCONDITIONEVENTTYPE = @as(c_int, 2790);
pub const UA_NS0ID_AUDITCONDITIONENABLEEVENTTYPE = @as(c_int, 2803);
pub const UA_NS0ID_AUDITCONDITIONCOMMENTEVENTTYPE = @as(c_int, 2829);
pub const UA_NS0ID_DIALOGCONDITIONTYPE = @as(c_int, 2830);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_PROMPT = @as(c_int, 2831);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE = @as(c_int, 2881);
pub const UA_NS0ID_ALARMCONDITIONTYPE = @as(c_int, 2915);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE = @as(c_int, 2929);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_UNSHELVED = @as(c_int, 2930);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_TIMEDSHELVED = @as(c_int, 2932);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_ONESHOTSHELVED = @as(c_int, 2933);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_UNSHELVEDTOTIMEDSHELVED = @as(c_int, 2935);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_UNSHELVEDTOONESHOTSHELVED = @as(c_int, 2936);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_TIMEDSHELVEDTOUNSHELVED = @as(c_int, 2940);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_TIMEDSHELVEDTOONESHOTSHELVED = @as(c_int, 2942);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_ONESHOTSHELVEDTOUNSHELVED = @as(c_int, 2943);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_ONESHOTSHELVEDTOTIMEDSHELVED = @as(c_int, 2945);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_UNSHELVE = @as(c_int, 2947);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_ONESHOTSHELVE = @as(c_int, 2948);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_TIMEDSHELVE = @as(c_int, 2949);
pub const UA_NS0ID_LIMITALARMTYPE = @as(c_int, 2955);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 2991);
pub const UA_NS0ID_SERVER_SERVERSTATUS_SECONDSTILLSHUTDOWN = @as(c_int, 2992);
pub const UA_NS0ID_SERVER_SERVERSTATUS_SHUTDOWNREASON = @as(c_int, 2993);
pub const UA_NS0ID_SERVER_AUDITING = @as(c_int, 2994);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_MODELLINGRULES = @as(c_int, 2996);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_AGGREGATEFUNCTIONS = @as(c_int, 2997);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_EVENTNOTIFICATIONSCOUNT = @as(c_int, 2998);
pub const UA_NS0ID_AUDITHISTORYEVENTUPDATEEVENTTYPE = @as(c_int, 2999);
pub const UA_NS0ID_AUDITHISTORYEVENTUPDATEEVENTTYPE_FILTER = @as(c_int, 3003);
pub const UA_NS0ID_AUDITHISTORYVALUEUPDATEEVENTTYPE = @as(c_int, 3006);
pub const UA_NS0ID_AUDITHISTORYDELETEEVENTTYPE = @as(c_int, 3012);
pub const UA_NS0ID_AUDITHISTORYRAWMODIFYDELETEEVENTTYPE = @as(c_int, 3014);
pub const UA_NS0ID_AUDITHISTORYRAWMODIFYDELETEEVENTTYPE_ISDELETEMODIFIED = @as(c_int, 3015);
pub const UA_NS0ID_AUDITHISTORYRAWMODIFYDELETEEVENTTYPE_STARTTIME = @as(c_int, 3016);
pub const UA_NS0ID_AUDITHISTORYRAWMODIFYDELETEEVENTTYPE_ENDTIME = @as(c_int, 3017);
pub const UA_NS0ID_AUDITHISTORYATTIMEDELETEEVENTTYPE = @as(c_int, 3019);
pub const UA_NS0ID_AUDITHISTORYATTIMEDELETEEVENTTYPE_REQTIMES = @as(c_int, 3020);
pub const UA_NS0ID_AUDITHISTORYATTIMEDELETEEVENTTYPE_OLDVALUES = @as(c_int, 3021);
pub const UA_NS0ID_AUDITHISTORYEVENTDELETEEVENTTYPE = @as(c_int, 3022);
pub const UA_NS0ID_AUDITHISTORYEVENTDELETEEVENTTYPE_EVENTIDS = @as(c_int, 3023);
pub const UA_NS0ID_AUDITHISTORYEVENTDELETEEVENTTYPE_OLDVALUES = @as(c_int, 3024);
pub const UA_NS0ID_AUDITHISTORYEVENTUPDATEEVENTTYPE_UPDATEDNODE = @as(c_int, 3025);
pub const UA_NS0ID_AUDITHISTORYVALUEUPDATEEVENTTYPE_UPDATEDNODE = @as(c_int, 3026);
pub const UA_NS0ID_AUDITHISTORYDELETEEVENTTYPE_UPDATEDNODE = @as(c_int, 3027);
pub const UA_NS0ID_AUDITHISTORYEVENTUPDATEEVENTTYPE_PERFORMINSERTREPLACE = @as(c_int, 3028);
pub const UA_NS0ID_AUDITHISTORYEVENTUPDATEEVENTTYPE_NEWVALUES = @as(c_int, 3029);
pub const UA_NS0ID_AUDITHISTORYEVENTUPDATEEVENTTYPE_OLDVALUES = @as(c_int, 3030);
pub const UA_NS0ID_AUDITHISTORYVALUEUPDATEEVENTTYPE_PERFORMINSERTREPLACE = @as(c_int, 3031);
pub const UA_NS0ID_AUDITHISTORYVALUEUPDATEEVENTTYPE_NEWVALUES = @as(c_int, 3032);
pub const UA_NS0ID_AUDITHISTORYVALUEUPDATEEVENTTYPE_OLDVALUES = @as(c_int, 3033);
pub const UA_NS0ID_AUDITHISTORYRAWMODIFYDELETEEVENTTYPE_OLDVALUES = @as(c_int, 3034);
pub const UA_NS0ID_EVENTQUEUEOVERFLOWEVENTTYPE = @as(c_int, 3035);
pub const UA_NS0ID_EVENTTYPESFOLDER = @as(c_int, 3048);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_SOFTWARECERTIFICATES = @as(c_int, 3049);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_MAXRESPONSEMESSAGESIZE = @as(c_int, 3050);
pub const UA_NS0ID_BUILDINFOTYPE = @as(c_int, 3051);
pub const UA_NS0ID_BUILDINFOTYPE_PRODUCTURI = @as(c_int, 3052);
pub const UA_NS0ID_BUILDINFOTYPE_MANUFACTURERNAME = @as(c_int, 3053);
pub const UA_NS0ID_BUILDINFOTYPE_PRODUCTNAME = @as(c_int, 3054);
pub const UA_NS0ID_BUILDINFOTYPE_SOFTWAREVERSION = @as(c_int, 3055);
pub const UA_NS0ID_BUILDINFOTYPE_BUILDNUMBER = @as(c_int, 3056);
pub const UA_NS0ID_BUILDINFOTYPE_BUILDDATE = @as(c_int, 3057);
pub const UA_NS0ID_SESSIONSECURITYDIAGNOSTICSTYPE_CLIENTCERTIFICATE = @as(c_int, 3058);
pub const UA_NS0ID_HISTORICALDATACONFIGURATIONTYPE_AGGREGATECONFIGURATION = @as(c_int, 3059);
pub const UA_NS0ID_DEFAULTBINARY = @as(c_int, 3062);
pub const UA_NS0ID_DEFAULTXML = @as(c_int, 3063);
pub const UA_NS0ID_ALWAYSGENERATESEVENT = @as(c_int, 3065);
pub const UA_NS0ID_ICON = @as(c_int, 3067);
pub const UA_NS0ID_NODEVERSION = @as(c_int, 3068);
pub const UA_NS0ID_LOCALTIME = @as(c_int, 3069);
pub const UA_NS0ID_ALLOWNULLS = @as(c_int, 3070);
pub const UA_NS0ID_ENUMVALUES = @as(c_int, 3071);
pub const UA_NS0ID_INPUTARGUMENTS = @as(c_int, 3072);
pub const UA_NS0ID_OUTPUTARGUMENTS = @as(c_int, 3073);
pub const UA_NS0ID_SERVERTYPE_SERVERSTATUS_STARTTIME = @as(c_int, 3074);
pub const UA_NS0ID_SERVERTYPE_SERVERSTATUS_CURRENTTIME = @as(c_int, 3075);
pub const UA_NS0ID_SERVERTYPE_SERVERSTATUS_STATE = @as(c_int, 3076);
pub const UA_NS0ID_SERVERTYPE_SERVERSTATUS_BUILDINFO = @as(c_int, 3077);
pub const UA_NS0ID_SERVERTYPE_SERVERSTATUS_BUILDINFO_PRODUCTURI = @as(c_int, 3078);
pub const UA_NS0ID_SERVERTYPE_SERVERSTATUS_BUILDINFO_MANUFACTURERNAME = @as(c_int, 3079);
pub const UA_NS0ID_SERVERTYPE_SERVERSTATUS_BUILDINFO_PRODUCTNAME = @as(c_int, 3080);
pub const UA_NS0ID_SERVERTYPE_SERVERSTATUS_BUILDINFO_SOFTWAREVERSION = @as(c_int, 3081);
pub const UA_NS0ID_SERVERTYPE_SERVERSTATUS_BUILDINFO_BUILDNUMBER = @as(c_int, 3082);
pub const UA_NS0ID_SERVERTYPE_SERVERSTATUS_BUILDINFO_BUILDDATE = @as(c_int, 3083);
pub const UA_NS0ID_SERVERTYPE_SERVERSTATUS_SECONDSTILLSHUTDOWN = @as(c_int, 3084);
pub const UA_NS0ID_SERVERTYPE_SERVERSTATUS_SHUTDOWNREASON = @as(c_int, 3085);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_SERVERPROFILEARRAY = @as(c_int, 3086);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_LOCALEIDARRAY = @as(c_int, 3087);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_MINSUPPORTEDSAMPLERATE = @as(c_int, 3088);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_MAXBROWSECONTINUATIONPOINTS = @as(c_int, 3089);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_MAXQUERYCONTINUATIONPOINTS = @as(c_int, 3090);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_MAXHISTORYCONTINUATIONPOINTS = @as(c_int, 3091);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_SOFTWARECERTIFICATES = @as(c_int, 3092);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_MODELLINGRULES = @as(c_int, 3093);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_AGGREGATEFUNCTIONS = @as(c_int, 3094);
pub const UA_NS0ID_SERVERTYPE_SERVERDIAGNOSTICS_SERVERDIAGNOSTICSSUMMARY = @as(c_int, 3095);
pub const UA_NS0ID_SERVERTYPE_SERVERDIAGNOSTICS_SERVERDIAGNOSTICSSUMMARY_SERVERVIEWCOUNT = @as(c_int, 3096);
pub const UA_NS0ID_SERVERTYPE_SERVERDIAGNOSTICS_SERVERDIAGNOSTICSSUMMARY_CURRENTSESSIONCOUNT = @as(c_int, 3097);
pub const UA_NS0ID_SERVERTYPE_SERVERDIAGNOSTICS_SERVERDIAGNOSTICSSUMMARY_CUMULATEDSESSIONCOUNT = @as(c_int, 3098);
pub const UA_NS0ID_SERVERTYPE_SERVERDIAGNOSTICS_SERVERDIAGNOSTICSSUMMARY_SECURITYREJECTEDSESSIONCOUNT = @as(c_int, 3099);
pub const UA_NS0ID_SERVERTYPE_SERVERDIAGNOSTICS_SERVERDIAGNOSTICSSUMMARY_REJECTEDSESSIONCOUNT = @as(c_int, 3100);
pub const UA_NS0ID_SERVERTYPE_SERVERDIAGNOSTICS_SERVERDIAGNOSTICSSUMMARY_SESSIONTIMEOUTCOUNT = @as(c_int, 3101);
pub const UA_NS0ID_SERVERTYPE_SERVERDIAGNOSTICS_SERVERDIAGNOSTICSSUMMARY_SESSIONABORTCOUNT = @as(c_int, 3102);
pub const UA_NS0ID_SERVERTYPE_SERVERDIAGNOSTICS_SERVERDIAGNOSTICSSUMMARY_PUBLISHINGINTERVALCOUNT = @as(c_int, 3104);
pub const UA_NS0ID_SERVERTYPE_SERVERDIAGNOSTICS_SERVERDIAGNOSTICSSUMMARY_CURRENTSUBSCRIPTIONCOUNT = @as(c_int, 3105);
pub const UA_NS0ID_SERVERTYPE_SERVERDIAGNOSTICS_SERVERDIAGNOSTICSSUMMARY_CUMULATEDSUBSCRIPTIONCOUNT = @as(c_int, 3106);
pub const UA_NS0ID_SERVERTYPE_SERVERDIAGNOSTICS_SERVERDIAGNOSTICSSUMMARY_SECURITYREJECTEDREQUESTSCOUNT = @as(c_int, 3107);
pub const UA_NS0ID_SERVERTYPE_SERVERDIAGNOSTICS_SERVERDIAGNOSTICSSUMMARY_REJECTEDREQUESTSCOUNT = @as(c_int, 3108);
pub const UA_NS0ID_SERVERTYPE_SERVERDIAGNOSTICS_SAMPLINGINTERVALDIAGNOSTICSARRAY = @as(c_int, 3109);
pub const UA_NS0ID_SERVERTYPE_SERVERDIAGNOSTICS_SUBSCRIPTIONDIAGNOSTICSARRAY = @as(c_int, 3110);
pub const UA_NS0ID_SERVERTYPE_SERVERDIAGNOSTICS_SESSIONSDIAGNOSTICSSUMMARY = @as(c_int, 3111);
pub const UA_NS0ID_SERVERTYPE_SERVERDIAGNOSTICS_SESSIONSDIAGNOSTICSSUMMARY_SESSIONDIAGNOSTICSARRAY = @as(c_int, 3112);
pub const UA_NS0ID_SERVERTYPE_SERVERDIAGNOSTICS_SESSIONSDIAGNOSTICSSUMMARY_SESSIONSECURITYDIAGNOSTICSARRAY = @as(c_int, 3113);
pub const UA_NS0ID_SERVERTYPE_SERVERDIAGNOSTICS_ENABLEDFLAG = @as(c_int, 3114);
pub const UA_NS0ID_SERVERTYPE_SERVERREDUNDANCY_REDUNDANCYSUPPORT = @as(c_int, 3115);
pub const UA_NS0ID_SERVERDIAGNOSTICSTYPE_SERVERDIAGNOSTICSSUMMARY_SERVERVIEWCOUNT = @as(c_int, 3116);
pub const UA_NS0ID_SERVERDIAGNOSTICSTYPE_SERVERDIAGNOSTICSSUMMARY_CURRENTSESSIONCOUNT = @as(c_int, 3117);
pub const UA_NS0ID_SERVERDIAGNOSTICSTYPE_SERVERDIAGNOSTICSSUMMARY_CUMULATEDSESSIONCOUNT = @as(c_int, 3118);
pub const UA_NS0ID_SERVERDIAGNOSTICSTYPE_SERVERDIAGNOSTICSSUMMARY_SECURITYREJECTEDSESSIONCOUNT = @as(c_int, 3119);
pub const UA_NS0ID_SERVERDIAGNOSTICSTYPE_SERVERDIAGNOSTICSSUMMARY_REJECTEDSESSIONCOUNT = @as(c_int, 3120);
pub const UA_NS0ID_SERVERDIAGNOSTICSTYPE_SERVERDIAGNOSTICSSUMMARY_SESSIONTIMEOUTCOUNT = @as(c_int, 3121);
pub const UA_NS0ID_SERVERDIAGNOSTICSTYPE_SERVERDIAGNOSTICSSUMMARY_SESSIONABORTCOUNT = @as(c_int, 3122);
pub const UA_NS0ID_SERVERDIAGNOSTICSTYPE_SERVERDIAGNOSTICSSUMMARY_PUBLISHINGINTERVALCOUNT = @as(c_int, 3124);
pub const UA_NS0ID_SERVERDIAGNOSTICSTYPE_SERVERDIAGNOSTICSSUMMARY_CURRENTSUBSCRIPTIONCOUNT = @as(c_int, 3125);
pub const UA_NS0ID_SERVERDIAGNOSTICSTYPE_SERVERDIAGNOSTICSSUMMARY_CUMULATEDSUBSCRIPTIONCOUNT = @as(c_int, 3126);
pub const UA_NS0ID_SERVERDIAGNOSTICSTYPE_SERVERDIAGNOSTICSSUMMARY_SECURITYREJECTEDREQUESTSCOUNT = @as(c_int, 3127);
pub const UA_NS0ID_SERVERDIAGNOSTICSTYPE_SERVERDIAGNOSTICSSUMMARY_REJECTEDREQUESTSCOUNT = @as(c_int, 3128);
pub const UA_NS0ID_SERVERDIAGNOSTICSTYPE_SESSIONSDIAGNOSTICSSUMMARY_SESSIONDIAGNOSTICSARRAY = @as(c_int, 3129);
pub const UA_NS0ID_SERVERDIAGNOSTICSTYPE_SESSIONSDIAGNOSTICSSUMMARY_SESSIONSECURITYDIAGNOSTICSARRAY = @as(c_int, 3130);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_SESSIONID = @as(c_int, 3131);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_SESSIONNAME = @as(c_int, 3132);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_CLIENTDESCRIPTION = @as(c_int, 3133);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_SERVERURI = @as(c_int, 3134);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_ENDPOINTURL = @as(c_int, 3135);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_LOCALEIDS = @as(c_int, 3136);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_ACTUALSESSIONTIMEOUT = @as(c_int, 3137);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_MAXRESPONSEMESSAGESIZE = @as(c_int, 3138);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_CLIENTCONNECTIONTIME = @as(c_int, 3139);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_CLIENTLASTCONTACTTIME = @as(c_int, 3140);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_CURRENTSUBSCRIPTIONSCOUNT = @as(c_int, 3141);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_CURRENTMONITOREDITEMSCOUNT = @as(c_int, 3142);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_CURRENTPUBLISHREQUESTSINQUEUE = @as(c_int, 3143);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_READCOUNT = @as(c_int, 3151);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_HISTORYREADCOUNT = @as(c_int, 3152);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_WRITECOUNT = @as(c_int, 3153);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_HISTORYUPDATECOUNT = @as(c_int, 3154);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_CALLCOUNT = @as(c_int, 3155);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_CREATEMONITOREDITEMSCOUNT = @as(c_int, 3156);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_MODIFYMONITOREDITEMSCOUNT = @as(c_int, 3157);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_SETMONITORINGMODECOUNT = @as(c_int, 3158);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_SETTRIGGERINGCOUNT = @as(c_int, 3159);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_DELETEMONITOREDITEMSCOUNT = @as(c_int, 3160);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_CREATESUBSCRIPTIONCOUNT = @as(c_int, 3161);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_MODIFYSUBSCRIPTIONCOUNT = @as(c_int, 3162);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_SETPUBLISHINGMODECOUNT = @as(c_int, 3163);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_PUBLISHCOUNT = @as(c_int, 3164);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_REPUBLISHCOUNT = @as(c_int, 3165);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_TRANSFERSUBSCRIPTIONSCOUNT = @as(c_int, 3166);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_DELETESUBSCRIPTIONSCOUNT = @as(c_int, 3167);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_ADDNODESCOUNT = @as(c_int, 3168);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_ADDREFERENCESCOUNT = @as(c_int, 3169);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_DELETENODESCOUNT = @as(c_int, 3170);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_DELETEREFERENCESCOUNT = @as(c_int, 3171);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_BROWSECOUNT = @as(c_int, 3172);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_BROWSENEXTCOUNT = @as(c_int, 3173);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_TRANSLATEBROWSEPATHSTONODEIDSCOUNT = @as(c_int, 3174);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_QUERYFIRSTCOUNT = @as(c_int, 3175);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_QUERYNEXTCOUNT = @as(c_int, 3176);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_REGISTERNODESCOUNT = @as(c_int, 3177);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_UNREGISTERNODESCOUNT = @as(c_int, 3178);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONSECURITYDIAGNOSTICS_SESSIONID = @as(c_int, 3179);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONSECURITYDIAGNOSTICS_CLIENTUSERIDOFSESSION = @as(c_int, 3180);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONSECURITYDIAGNOSTICS_CLIENTUSERIDHISTORY = @as(c_int, 3181);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONSECURITYDIAGNOSTICS_AUTHENTICATIONMECHANISM = @as(c_int, 3182);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONSECURITYDIAGNOSTICS_ENCODING = @as(c_int, 3183);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONSECURITYDIAGNOSTICS_TRANSPORTPROTOCOL = @as(c_int, 3184);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONSECURITYDIAGNOSTICS_SECURITYMODE = @as(c_int, 3185);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONSECURITYDIAGNOSTICS_SECURITYPOLICYURI = @as(c_int, 3186);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONSECURITYDIAGNOSTICS_CLIENTCERTIFICATE = @as(c_int, 3187);
pub const UA_NS0ID_TRANSPARENTREDUNDANCYTYPE_REDUNDANCYSUPPORT = @as(c_int, 3188);
pub const UA_NS0ID_NONTRANSPARENTREDUNDANCYTYPE_REDUNDANCYSUPPORT = @as(c_int, 3189);
pub const UA_NS0ID_BASEEVENTTYPE_LOCALTIME = @as(c_int, 3190);
pub const UA_NS0ID_EVENTQUEUEOVERFLOWEVENTTYPE_EVENTID = @as(c_int, 3191);
pub const UA_NS0ID_EVENTQUEUEOVERFLOWEVENTTYPE_EVENTTYPE = @as(c_int, 3192);
pub const UA_NS0ID_EVENTQUEUEOVERFLOWEVENTTYPE_SOURCENODE = @as(c_int, 3193);
pub const UA_NS0ID_EVENTQUEUEOVERFLOWEVENTTYPE_SOURCENAME = @as(c_int, 3194);
pub const UA_NS0ID_EVENTQUEUEOVERFLOWEVENTTYPE_TIME = @as(c_int, 3195);
pub const UA_NS0ID_EVENTQUEUEOVERFLOWEVENTTYPE_RECEIVETIME = @as(c_int, 3196);
pub const UA_NS0ID_EVENTQUEUEOVERFLOWEVENTTYPE_LOCALTIME = @as(c_int, 3197);
pub const UA_NS0ID_EVENTQUEUEOVERFLOWEVENTTYPE_MESSAGE = @as(c_int, 3198);
pub const UA_NS0ID_EVENTQUEUEOVERFLOWEVENTTYPE_SEVERITY = @as(c_int, 3199);
pub const UA_NS0ID_AUDITEVENTTYPE_EVENTID = @as(c_int, 3200);
pub const UA_NS0ID_AUDITEVENTTYPE_EVENTTYPE = @as(c_int, 3201);
pub const UA_NS0ID_AUDITEVENTTYPE_SOURCENODE = @as(c_int, 3202);
pub const UA_NS0ID_AUDITEVENTTYPE_SOURCENAME = @as(c_int, 3203);
pub const UA_NS0ID_AUDITEVENTTYPE_TIME = @as(c_int, 3204);
pub const UA_NS0ID_AUDITEVENTTYPE_RECEIVETIME = @as(c_int, 3205);
pub const UA_NS0ID_AUDITEVENTTYPE_LOCALTIME = @as(c_int, 3206);
pub const UA_NS0ID_AUDITEVENTTYPE_MESSAGE = @as(c_int, 3207);
pub const UA_NS0ID_AUDITEVENTTYPE_SEVERITY = @as(c_int, 3208);
pub const UA_NS0ID_AUDITSECURITYEVENTTYPE_EVENTID = @as(c_int, 3209);
pub const UA_NS0ID_AUDITSECURITYEVENTTYPE_EVENTTYPE = @as(c_int, 3210);
pub const UA_NS0ID_AUDITSECURITYEVENTTYPE_SOURCENODE = @as(c_int, 3211);
pub const UA_NS0ID_AUDITSECURITYEVENTTYPE_SOURCENAME = @as(c_int, 3212);
pub const UA_NS0ID_AUDITSECURITYEVENTTYPE_TIME = @as(c_int, 3213);
pub const UA_NS0ID_AUDITSECURITYEVENTTYPE_RECEIVETIME = @as(c_int, 3214);
pub const UA_NS0ID_AUDITSECURITYEVENTTYPE_LOCALTIME = @as(c_int, 3215);
pub const UA_NS0ID_AUDITSECURITYEVENTTYPE_MESSAGE = @as(c_int, 3216);
pub const UA_NS0ID_AUDITSECURITYEVENTTYPE_SEVERITY = @as(c_int, 3217);
pub const UA_NS0ID_AUDITSECURITYEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3218);
pub const UA_NS0ID_AUDITSECURITYEVENTTYPE_STATUS = @as(c_int, 3219);
pub const UA_NS0ID_AUDITSECURITYEVENTTYPE_SERVERID = @as(c_int, 3220);
pub const UA_NS0ID_AUDITSECURITYEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3221);
pub const UA_NS0ID_AUDITSECURITYEVENTTYPE_CLIENTUSERID = @as(c_int, 3222);
pub const UA_NS0ID_AUDITCHANNELEVENTTYPE_EVENTID = @as(c_int, 3223);
pub const UA_NS0ID_AUDITCHANNELEVENTTYPE_EVENTTYPE = @as(c_int, 3224);
pub const UA_NS0ID_AUDITCHANNELEVENTTYPE_SOURCENODE = @as(c_int, 3225);
pub const UA_NS0ID_AUDITCHANNELEVENTTYPE_SOURCENAME = @as(c_int, 3226);
pub const UA_NS0ID_AUDITCHANNELEVENTTYPE_TIME = @as(c_int, 3227);
pub const UA_NS0ID_AUDITCHANNELEVENTTYPE_RECEIVETIME = @as(c_int, 3228);
pub const UA_NS0ID_AUDITCHANNELEVENTTYPE_LOCALTIME = @as(c_int, 3229);
pub const UA_NS0ID_AUDITCHANNELEVENTTYPE_MESSAGE = @as(c_int, 3230);
pub const UA_NS0ID_AUDITCHANNELEVENTTYPE_SEVERITY = @as(c_int, 3231);
pub const UA_NS0ID_AUDITCHANNELEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3232);
pub const UA_NS0ID_AUDITCHANNELEVENTTYPE_STATUS = @as(c_int, 3233);
pub const UA_NS0ID_AUDITCHANNELEVENTTYPE_SERVERID = @as(c_int, 3234);
pub const UA_NS0ID_AUDITCHANNELEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3235);
pub const UA_NS0ID_AUDITCHANNELEVENTTYPE_CLIENTUSERID = @as(c_int, 3236);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_EVENTID = @as(c_int, 3237);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_EVENTTYPE = @as(c_int, 3238);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_SOURCENODE = @as(c_int, 3239);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_SOURCENAME = @as(c_int, 3240);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_TIME = @as(c_int, 3241);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_RECEIVETIME = @as(c_int, 3242);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_LOCALTIME = @as(c_int, 3243);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_MESSAGE = @as(c_int, 3244);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_SEVERITY = @as(c_int, 3245);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3246);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_STATUS = @as(c_int, 3247);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_SERVERID = @as(c_int, 3248);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3249);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_CLIENTUSERID = @as(c_int, 3250);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_SECURECHANNELID = @as(c_int, 3251);
pub const UA_NS0ID_AUDITSESSIONEVENTTYPE_EVENTID = @as(c_int, 3252);
pub const UA_NS0ID_AUDITSESSIONEVENTTYPE_EVENTTYPE = @as(c_int, 3253);
pub const UA_NS0ID_AUDITSESSIONEVENTTYPE_SOURCENODE = @as(c_int, 3254);
pub const UA_NS0ID_AUDITSESSIONEVENTTYPE_SOURCENAME = @as(c_int, 3255);
pub const UA_NS0ID_AUDITSESSIONEVENTTYPE_TIME = @as(c_int, 3256);
pub const UA_NS0ID_AUDITSESSIONEVENTTYPE_RECEIVETIME = @as(c_int, 3257);
pub const UA_NS0ID_AUDITSESSIONEVENTTYPE_LOCALTIME = @as(c_int, 3258);
pub const UA_NS0ID_AUDITSESSIONEVENTTYPE_MESSAGE = @as(c_int, 3259);
pub const UA_NS0ID_AUDITSESSIONEVENTTYPE_SEVERITY = @as(c_int, 3260);
pub const UA_NS0ID_AUDITSESSIONEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3261);
pub const UA_NS0ID_AUDITSESSIONEVENTTYPE_STATUS = @as(c_int, 3262);
pub const UA_NS0ID_AUDITSESSIONEVENTTYPE_SERVERID = @as(c_int, 3263);
pub const UA_NS0ID_AUDITSESSIONEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3264);
pub const UA_NS0ID_AUDITSESSIONEVENTTYPE_CLIENTUSERID = @as(c_int, 3265);
pub const UA_NS0ID_AUDITCREATESESSIONEVENTTYPE_EVENTID = @as(c_int, 3266);
pub const UA_NS0ID_AUDITCREATESESSIONEVENTTYPE_EVENTTYPE = @as(c_int, 3267);
pub const UA_NS0ID_AUDITCREATESESSIONEVENTTYPE_SOURCENODE = @as(c_int, 3268);
pub const UA_NS0ID_AUDITCREATESESSIONEVENTTYPE_SOURCENAME = @as(c_int, 3269);
pub const UA_NS0ID_AUDITCREATESESSIONEVENTTYPE_TIME = @as(c_int, 3270);
pub const UA_NS0ID_AUDITCREATESESSIONEVENTTYPE_RECEIVETIME = @as(c_int, 3271);
pub const UA_NS0ID_AUDITCREATESESSIONEVENTTYPE_LOCALTIME = @as(c_int, 3272);
pub const UA_NS0ID_AUDITCREATESESSIONEVENTTYPE_MESSAGE = @as(c_int, 3273);
pub const UA_NS0ID_AUDITCREATESESSIONEVENTTYPE_SEVERITY = @as(c_int, 3274);
pub const UA_NS0ID_AUDITCREATESESSIONEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3275);
pub const UA_NS0ID_AUDITCREATESESSIONEVENTTYPE_STATUS = @as(c_int, 3276);
pub const UA_NS0ID_AUDITCREATESESSIONEVENTTYPE_SERVERID = @as(c_int, 3277);
pub const UA_NS0ID_AUDITCREATESESSIONEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3278);
pub const UA_NS0ID_AUDITCREATESESSIONEVENTTYPE_CLIENTUSERID = @as(c_int, 3279);
pub const UA_NS0ID_AUDITURLMISMATCHEVENTTYPE_EVENTID = @as(c_int, 3281);
pub const UA_NS0ID_AUDITURLMISMATCHEVENTTYPE_EVENTTYPE = @as(c_int, 3282);
pub const UA_NS0ID_AUDITURLMISMATCHEVENTTYPE_SOURCENODE = @as(c_int, 3283);
pub const UA_NS0ID_AUDITURLMISMATCHEVENTTYPE_SOURCENAME = @as(c_int, 3284);
pub const UA_NS0ID_AUDITURLMISMATCHEVENTTYPE_TIME = @as(c_int, 3285);
pub const UA_NS0ID_AUDITURLMISMATCHEVENTTYPE_RECEIVETIME = @as(c_int, 3286);
pub const UA_NS0ID_AUDITURLMISMATCHEVENTTYPE_LOCALTIME = @as(c_int, 3287);
pub const UA_NS0ID_AUDITURLMISMATCHEVENTTYPE_MESSAGE = @as(c_int, 3288);
pub const UA_NS0ID_AUDITURLMISMATCHEVENTTYPE_SEVERITY = @as(c_int, 3289);
pub const UA_NS0ID_AUDITURLMISMATCHEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3290);
pub const UA_NS0ID_AUDITURLMISMATCHEVENTTYPE_STATUS = @as(c_int, 3291);
pub const UA_NS0ID_AUDITURLMISMATCHEVENTTYPE_SERVERID = @as(c_int, 3292);
pub const UA_NS0ID_AUDITURLMISMATCHEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3293);
pub const UA_NS0ID_AUDITURLMISMATCHEVENTTYPE_CLIENTUSERID = @as(c_int, 3294);
pub const UA_NS0ID_AUDITURLMISMATCHEVENTTYPE_SECURECHANNELID = @as(c_int, 3296);
pub const UA_NS0ID_AUDITURLMISMATCHEVENTTYPE_CLIENTCERTIFICATE = @as(c_int, 3297);
pub const UA_NS0ID_AUDITURLMISMATCHEVENTTYPE_CLIENTCERTIFICATETHUMBPRINT = @as(c_int, 3298);
pub const UA_NS0ID_AUDITURLMISMATCHEVENTTYPE_REVISEDSESSIONTIMEOUT = @as(c_int, 3299);
pub const UA_NS0ID_AUDITACTIVATESESSIONEVENTTYPE_EVENTID = @as(c_int, 3300);
pub const UA_NS0ID_AUDITACTIVATESESSIONEVENTTYPE_EVENTTYPE = @as(c_int, 3301);
pub const UA_NS0ID_AUDITACTIVATESESSIONEVENTTYPE_SOURCENODE = @as(c_int, 3302);
pub const UA_NS0ID_AUDITACTIVATESESSIONEVENTTYPE_SOURCENAME = @as(c_int, 3303);
pub const UA_NS0ID_AUDITACTIVATESESSIONEVENTTYPE_TIME = @as(c_int, 3304);
pub const UA_NS0ID_AUDITACTIVATESESSIONEVENTTYPE_RECEIVETIME = @as(c_int, 3305);
pub const UA_NS0ID_AUDITACTIVATESESSIONEVENTTYPE_LOCALTIME = @as(c_int, 3306);
pub const UA_NS0ID_AUDITACTIVATESESSIONEVENTTYPE_MESSAGE = @as(c_int, 3307);
pub const UA_NS0ID_AUDITACTIVATESESSIONEVENTTYPE_SEVERITY = @as(c_int, 3308);
pub const UA_NS0ID_AUDITACTIVATESESSIONEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3309);
pub const UA_NS0ID_AUDITACTIVATESESSIONEVENTTYPE_STATUS = @as(c_int, 3310);
pub const UA_NS0ID_AUDITACTIVATESESSIONEVENTTYPE_SERVERID = @as(c_int, 3311);
pub const UA_NS0ID_AUDITACTIVATESESSIONEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3312);
pub const UA_NS0ID_AUDITACTIVATESESSIONEVENTTYPE_CLIENTUSERID = @as(c_int, 3313);
pub const UA_NS0ID_AUDITACTIVATESESSIONEVENTTYPE_SESSIONID = @as(c_int, 3314);
pub const UA_NS0ID_AUDITCANCELEVENTTYPE_EVENTID = @as(c_int, 3315);
pub const UA_NS0ID_AUDITCANCELEVENTTYPE_EVENTTYPE = @as(c_int, 3316);
pub const UA_NS0ID_AUDITCANCELEVENTTYPE_SOURCENODE = @as(c_int, 3317);
pub const UA_NS0ID_AUDITCANCELEVENTTYPE_SOURCENAME = @as(c_int, 3318);
pub const UA_NS0ID_AUDITCANCELEVENTTYPE_TIME = @as(c_int, 3319);
pub const UA_NS0ID_AUDITCANCELEVENTTYPE_RECEIVETIME = @as(c_int, 3320);
pub const UA_NS0ID_AUDITCANCELEVENTTYPE_LOCALTIME = @as(c_int, 3321);
pub const UA_NS0ID_AUDITCANCELEVENTTYPE_MESSAGE = @as(c_int, 3322);
pub const UA_NS0ID_AUDITCANCELEVENTTYPE_SEVERITY = @as(c_int, 3323);
pub const UA_NS0ID_AUDITCANCELEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3324);
pub const UA_NS0ID_AUDITCANCELEVENTTYPE_STATUS = @as(c_int, 3325);
pub const UA_NS0ID_AUDITCANCELEVENTTYPE_SERVERID = @as(c_int, 3326);
pub const UA_NS0ID_AUDITCANCELEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3327);
pub const UA_NS0ID_AUDITCANCELEVENTTYPE_CLIENTUSERID = @as(c_int, 3328);
pub const UA_NS0ID_AUDITCANCELEVENTTYPE_SESSIONID = @as(c_int, 3329);
pub const UA_NS0ID_AUDITCERTIFICATEEVENTTYPE_EVENTID = @as(c_int, 3330);
pub const UA_NS0ID_AUDITCERTIFICATEEVENTTYPE_EVENTTYPE = @as(c_int, 3331);
pub const UA_NS0ID_AUDITCERTIFICATEEVENTTYPE_SOURCENODE = @as(c_int, 3332);
pub const UA_NS0ID_AUDITCERTIFICATEEVENTTYPE_SOURCENAME = @as(c_int, 3333);
pub const UA_NS0ID_AUDITCERTIFICATEEVENTTYPE_TIME = @as(c_int, 3334);
pub const UA_NS0ID_AUDITCERTIFICATEEVENTTYPE_RECEIVETIME = @as(c_int, 3335);
pub const UA_NS0ID_AUDITCERTIFICATEEVENTTYPE_LOCALTIME = @as(c_int, 3336);
pub const UA_NS0ID_AUDITCERTIFICATEEVENTTYPE_MESSAGE = @as(c_int, 3337);
pub const UA_NS0ID_AUDITCERTIFICATEEVENTTYPE_SEVERITY = @as(c_int, 3338);
pub const UA_NS0ID_AUDITCERTIFICATEEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3339);
pub const UA_NS0ID_AUDITCERTIFICATEEVENTTYPE_STATUS = @as(c_int, 3340);
pub const UA_NS0ID_AUDITCERTIFICATEEVENTTYPE_SERVERID = @as(c_int, 3341);
pub const UA_NS0ID_AUDITCERTIFICATEEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3342);
pub const UA_NS0ID_AUDITCERTIFICATEEVENTTYPE_CLIENTUSERID = @as(c_int, 3343);
pub const UA_NS0ID_AUDITCERTIFICATEDATAMISMATCHEVENTTYPE_EVENTID = @as(c_int, 3344);
pub const UA_NS0ID_AUDITCERTIFICATEDATAMISMATCHEVENTTYPE_EVENTTYPE = @as(c_int, 3345);
pub const UA_NS0ID_AUDITCERTIFICATEDATAMISMATCHEVENTTYPE_SOURCENODE = @as(c_int, 3346);
pub const UA_NS0ID_AUDITCERTIFICATEDATAMISMATCHEVENTTYPE_SOURCENAME = @as(c_int, 3347);
pub const UA_NS0ID_AUDITCERTIFICATEDATAMISMATCHEVENTTYPE_TIME = @as(c_int, 3348);
pub const UA_NS0ID_AUDITCERTIFICATEDATAMISMATCHEVENTTYPE_RECEIVETIME = @as(c_int, 3349);
pub const UA_NS0ID_AUDITCERTIFICATEDATAMISMATCHEVENTTYPE_LOCALTIME = @as(c_int, 3350);
pub const UA_NS0ID_AUDITCERTIFICATEDATAMISMATCHEVENTTYPE_MESSAGE = @as(c_int, 3351);
pub const UA_NS0ID_AUDITCERTIFICATEDATAMISMATCHEVENTTYPE_SEVERITY = @as(c_int, 3352);
pub const UA_NS0ID_AUDITCERTIFICATEDATAMISMATCHEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3353);
pub const UA_NS0ID_AUDITCERTIFICATEDATAMISMATCHEVENTTYPE_STATUS = @as(c_int, 3354);
pub const UA_NS0ID_AUDITCERTIFICATEDATAMISMATCHEVENTTYPE_SERVERID = @as(c_int, 3355);
pub const UA_NS0ID_AUDITCERTIFICATEDATAMISMATCHEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3356);
pub const UA_NS0ID_AUDITCERTIFICATEDATAMISMATCHEVENTTYPE_CLIENTUSERID = @as(c_int, 3357);
pub const UA_NS0ID_AUDITCERTIFICATEDATAMISMATCHEVENTTYPE_CERTIFICATE = @as(c_int, 3358);
pub const UA_NS0ID_AUDITCERTIFICATEEXPIREDEVENTTYPE_EVENTID = @as(c_int, 3359);
pub const UA_NS0ID_AUDITCERTIFICATEEXPIREDEVENTTYPE_EVENTTYPE = @as(c_int, 3360);
pub const UA_NS0ID_AUDITCERTIFICATEEXPIREDEVENTTYPE_SOURCENODE = @as(c_int, 3361);
pub const UA_NS0ID_AUDITCERTIFICATEEXPIREDEVENTTYPE_SOURCENAME = @as(c_int, 3362);
pub const UA_NS0ID_AUDITCERTIFICATEEXPIREDEVENTTYPE_TIME = @as(c_int, 3363);
pub const UA_NS0ID_AUDITCERTIFICATEEXPIREDEVENTTYPE_RECEIVETIME = @as(c_int, 3364);
pub const UA_NS0ID_AUDITCERTIFICATEEXPIREDEVENTTYPE_LOCALTIME = @as(c_int, 3365);
pub const UA_NS0ID_AUDITCERTIFICATEEXPIREDEVENTTYPE_MESSAGE = @as(c_int, 3366);
pub const UA_NS0ID_AUDITCERTIFICATEEXPIREDEVENTTYPE_SEVERITY = @as(c_int, 3367);
pub const UA_NS0ID_AUDITCERTIFICATEEXPIREDEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3368);
pub const UA_NS0ID_AUDITCERTIFICATEEXPIREDEVENTTYPE_STATUS = @as(c_int, 3369);
pub const UA_NS0ID_AUDITCERTIFICATEEXPIREDEVENTTYPE_SERVERID = @as(c_int, 3370);
pub const UA_NS0ID_AUDITCERTIFICATEEXPIREDEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3371);
pub const UA_NS0ID_AUDITCERTIFICATEEXPIREDEVENTTYPE_CLIENTUSERID = @as(c_int, 3372);
pub const UA_NS0ID_AUDITCERTIFICATEEXPIREDEVENTTYPE_CERTIFICATE = @as(c_int, 3373);
pub const UA_NS0ID_AUDITCERTIFICATEINVALIDEVENTTYPE_EVENTID = @as(c_int, 3374);
pub const UA_NS0ID_AUDITCERTIFICATEINVALIDEVENTTYPE_EVENTTYPE = @as(c_int, 3375);
pub const UA_NS0ID_AUDITCERTIFICATEINVALIDEVENTTYPE_SOURCENODE = @as(c_int, 3376);
pub const UA_NS0ID_AUDITCERTIFICATEINVALIDEVENTTYPE_SOURCENAME = @as(c_int, 3377);
pub const UA_NS0ID_AUDITCERTIFICATEINVALIDEVENTTYPE_TIME = @as(c_int, 3378);
pub const UA_NS0ID_AUDITCERTIFICATEINVALIDEVENTTYPE_RECEIVETIME = @as(c_int, 3379);
pub const UA_NS0ID_AUDITCERTIFICATEINVALIDEVENTTYPE_LOCALTIME = @as(c_int, 3380);
pub const UA_NS0ID_AUDITCERTIFICATEINVALIDEVENTTYPE_MESSAGE = @as(c_int, 3381);
pub const UA_NS0ID_AUDITCERTIFICATEINVALIDEVENTTYPE_SEVERITY = @as(c_int, 3382);
pub const UA_NS0ID_AUDITCERTIFICATEINVALIDEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3383);
pub const UA_NS0ID_AUDITCERTIFICATEINVALIDEVENTTYPE_STATUS = @as(c_int, 3384);
pub const UA_NS0ID_AUDITCERTIFICATEINVALIDEVENTTYPE_SERVERID = @as(c_int, 3385);
pub const UA_NS0ID_AUDITCERTIFICATEINVALIDEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3386);
pub const UA_NS0ID_AUDITCERTIFICATEINVALIDEVENTTYPE_CLIENTUSERID = @as(c_int, 3387);
pub const UA_NS0ID_AUDITCERTIFICATEINVALIDEVENTTYPE_CERTIFICATE = @as(c_int, 3388);
pub const UA_NS0ID_AUDITCERTIFICATEUNTRUSTEDEVENTTYPE_EVENTID = @as(c_int, 3389);
pub const UA_NS0ID_AUDITCERTIFICATEUNTRUSTEDEVENTTYPE_EVENTTYPE = @as(c_int, 3390);
pub const UA_NS0ID_AUDITCERTIFICATEUNTRUSTEDEVENTTYPE_SOURCENODE = @as(c_int, 3391);
pub const UA_NS0ID_AUDITCERTIFICATEUNTRUSTEDEVENTTYPE_SOURCENAME = @as(c_int, 3392);
pub const UA_NS0ID_AUDITCERTIFICATEUNTRUSTEDEVENTTYPE_TIME = @as(c_int, 3393);
pub const UA_NS0ID_AUDITCERTIFICATEUNTRUSTEDEVENTTYPE_RECEIVETIME = @as(c_int, 3394);
pub const UA_NS0ID_AUDITCERTIFICATEUNTRUSTEDEVENTTYPE_LOCALTIME = @as(c_int, 3395);
pub const UA_NS0ID_AUDITCERTIFICATEUNTRUSTEDEVENTTYPE_MESSAGE = @as(c_int, 3396);
pub const UA_NS0ID_AUDITCERTIFICATEUNTRUSTEDEVENTTYPE_SEVERITY = @as(c_int, 3397);
pub const UA_NS0ID_AUDITCERTIFICATEUNTRUSTEDEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3398);
pub const UA_NS0ID_AUDITCERTIFICATEUNTRUSTEDEVENTTYPE_STATUS = @as(c_int, 3399);
pub const UA_NS0ID_AUDITCERTIFICATEUNTRUSTEDEVENTTYPE_SERVERID = @as(c_int, 3400);
pub const UA_NS0ID_AUDITCERTIFICATEUNTRUSTEDEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3401);
pub const UA_NS0ID_AUDITCERTIFICATEUNTRUSTEDEVENTTYPE_CLIENTUSERID = @as(c_int, 3402);
pub const UA_NS0ID_AUDITCERTIFICATEUNTRUSTEDEVENTTYPE_CERTIFICATE = @as(c_int, 3403);
pub const UA_NS0ID_AUDITCERTIFICATEREVOKEDEVENTTYPE_EVENTID = @as(c_int, 3404);
pub const UA_NS0ID_AUDITCERTIFICATEREVOKEDEVENTTYPE_EVENTTYPE = @as(c_int, 3405);
pub const UA_NS0ID_AUDITCERTIFICATEREVOKEDEVENTTYPE_SOURCENODE = @as(c_int, 3406);
pub const UA_NS0ID_AUDITCERTIFICATEREVOKEDEVENTTYPE_SOURCENAME = @as(c_int, 3407);
pub const UA_NS0ID_AUDITCERTIFICATEREVOKEDEVENTTYPE_TIME = @as(c_int, 3408);
pub const UA_NS0ID_AUDITCERTIFICATEREVOKEDEVENTTYPE_RECEIVETIME = @as(c_int, 3409);
pub const UA_NS0ID_AUDITCERTIFICATEREVOKEDEVENTTYPE_LOCALTIME = @as(c_int, 3410);
pub const UA_NS0ID_AUDITCERTIFICATEREVOKEDEVENTTYPE_MESSAGE = @as(c_int, 3411);
pub const UA_NS0ID_AUDITCERTIFICATEREVOKEDEVENTTYPE_SEVERITY = @as(c_int, 3412);
pub const UA_NS0ID_AUDITCERTIFICATEREVOKEDEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3413);
pub const UA_NS0ID_AUDITCERTIFICATEREVOKEDEVENTTYPE_STATUS = @as(c_int, 3414);
pub const UA_NS0ID_AUDITCERTIFICATEREVOKEDEVENTTYPE_SERVERID = @as(c_int, 3415);
pub const UA_NS0ID_AUDITCERTIFICATEREVOKEDEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3416);
pub const UA_NS0ID_AUDITCERTIFICATEREVOKEDEVENTTYPE_CLIENTUSERID = @as(c_int, 3417);
pub const UA_NS0ID_AUDITCERTIFICATEREVOKEDEVENTTYPE_CERTIFICATE = @as(c_int, 3418);
pub const UA_NS0ID_AUDITCERTIFICATEMISMATCHEVENTTYPE_EVENTID = @as(c_int, 3419);
pub const UA_NS0ID_AUDITCERTIFICATEMISMATCHEVENTTYPE_EVENTTYPE = @as(c_int, 3420);
pub const UA_NS0ID_AUDITCERTIFICATEMISMATCHEVENTTYPE_SOURCENODE = @as(c_int, 3421);
pub const UA_NS0ID_AUDITCERTIFICATEMISMATCHEVENTTYPE_SOURCENAME = @as(c_int, 3422);
pub const UA_NS0ID_AUDITCERTIFICATEMISMATCHEVENTTYPE_TIME = @as(c_int, 3423);
pub const UA_NS0ID_AUDITCERTIFICATEMISMATCHEVENTTYPE_RECEIVETIME = @as(c_int, 3424);
pub const UA_NS0ID_AUDITCERTIFICATEMISMATCHEVENTTYPE_LOCALTIME = @as(c_int, 3425);
pub const UA_NS0ID_AUDITCERTIFICATEMISMATCHEVENTTYPE_MESSAGE = @as(c_int, 3426);
pub const UA_NS0ID_AUDITCERTIFICATEMISMATCHEVENTTYPE_SEVERITY = @as(c_int, 3427);
pub const UA_NS0ID_AUDITCERTIFICATEMISMATCHEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3428);
pub const UA_NS0ID_AUDITCERTIFICATEMISMATCHEVENTTYPE_STATUS = @as(c_int, 3429);
pub const UA_NS0ID_AUDITCERTIFICATEMISMATCHEVENTTYPE_SERVERID = @as(c_int, 3430);
pub const UA_NS0ID_AUDITCERTIFICATEMISMATCHEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3431);
pub const UA_NS0ID_AUDITCERTIFICATEMISMATCHEVENTTYPE_CLIENTUSERID = @as(c_int, 3432);
pub const UA_NS0ID_AUDITCERTIFICATEMISMATCHEVENTTYPE_CERTIFICATE = @as(c_int, 3433);
pub const UA_NS0ID_AUDITNODEMANAGEMENTEVENTTYPE_EVENTID = @as(c_int, 3434);
pub const UA_NS0ID_AUDITNODEMANAGEMENTEVENTTYPE_EVENTTYPE = @as(c_int, 3435);
pub const UA_NS0ID_AUDITNODEMANAGEMENTEVENTTYPE_SOURCENODE = @as(c_int, 3436);
pub const UA_NS0ID_AUDITNODEMANAGEMENTEVENTTYPE_SOURCENAME = @as(c_int, 3437);
pub const UA_NS0ID_AUDITNODEMANAGEMENTEVENTTYPE_TIME = @as(c_int, 3438);
pub const UA_NS0ID_AUDITNODEMANAGEMENTEVENTTYPE_RECEIVETIME = @as(c_int, 3439);
pub const UA_NS0ID_AUDITNODEMANAGEMENTEVENTTYPE_LOCALTIME = @as(c_int, 3440);
pub const UA_NS0ID_AUDITNODEMANAGEMENTEVENTTYPE_MESSAGE = @as(c_int, 3441);
pub const UA_NS0ID_AUDITNODEMANAGEMENTEVENTTYPE_SEVERITY = @as(c_int, 3442);
pub const UA_NS0ID_AUDITNODEMANAGEMENTEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3443);
pub const UA_NS0ID_AUDITNODEMANAGEMENTEVENTTYPE_STATUS = @as(c_int, 3444);
pub const UA_NS0ID_AUDITNODEMANAGEMENTEVENTTYPE_SERVERID = @as(c_int, 3445);
pub const UA_NS0ID_AUDITNODEMANAGEMENTEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3446);
pub const UA_NS0ID_AUDITNODEMANAGEMENTEVENTTYPE_CLIENTUSERID = @as(c_int, 3447);
pub const UA_NS0ID_AUDITADDNODESEVENTTYPE_EVENTID = @as(c_int, 3448);
pub const UA_NS0ID_AUDITADDNODESEVENTTYPE_EVENTTYPE = @as(c_int, 3449);
pub const UA_NS0ID_AUDITADDNODESEVENTTYPE_SOURCENODE = @as(c_int, 3450);
pub const UA_NS0ID_AUDITADDNODESEVENTTYPE_SOURCENAME = @as(c_int, 3451);
pub const UA_NS0ID_AUDITADDNODESEVENTTYPE_TIME = @as(c_int, 3452);
pub const UA_NS0ID_AUDITADDNODESEVENTTYPE_RECEIVETIME = @as(c_int, 3453);
pub const UA_NS0ID_AUDITADDNODESEVENTTYPE_LOCALTIME = @as(c_int, 3454);
pub const UA_NS0ID_AUDITADDNODESEVENTTYPE_MESSAGE = @as(c_int, 3455);
pub const UA_NS0ID_AUDITADDNODESEVENTTYPE_SEVERITY = @as(c_int, 3456);
pub const UA_NS0ID_AUDITADDNODESEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3457);
pub const UA_NS0ID_AUDITADDNODESEVENTTYPE_STATUS = @as(c_int, 3458);
pub const UA_NS0ID_AUDITADDNODESEVENTTYPE_SERVERID = @as(c_int, 3459);
pub const UA_NS0ID_AUDITADDNODESEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3460);
pub const UA_NS0ID_AUDITADDNODESEVENTTYPE_CLIENTUSERID = @as(c_int, 3461);
pub const UA_NS0ID_AUDITDELETENODESEVENTTYPE_EVENTID = @as(c_int, 3462);
pub const UA_NS0ID_AUDITDELETENODESEVENTTYPE_EVENTTYPE = @as(c_int, 3463);
pub const UA_NS0ID_AUDITDELETENODESEVENTTYPE_SOURCENODE = @as(c_int, 3464);
pub const UA_NS0ID_AUDITDELETENODESEVENTTYPE_SOURCENAME = @as(c_int, 3465);
pub const UA_NS0ID_AUDITDELETENODESEVENTTYPE_TIME = @as(c_int, 3466);
pub const UA_NS0ID_AUDITDELETENODESEVENTTYPE_RECEIVETIME = @as(c_int, 3467);
pub const UA_NS0ID_AUDITDELETENODESEVENTTYPE_LOCALTIME = @as(c_int, 3468);
pub const UA_NS0ID_AUDITDELETENODESEVENTTYPE_MESSAGE = @as(c_int, 3469);
pub const UA_NS0ID_AUDITDELETENODESEVENTTYPE_SEVERITY = @as(c_int, 3470);
pub const UA_NS0ID_AUDITDELETENODESEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3471);
pub const UA_NS0ID_AUDITDELETENODESEVENTTYPE_STATUS = @as(c_int, 3472);
pub const UA_NS0ID_AUDITDELETENODESEVENTTYPE_SERVERID = @as(c_int, 3473);
pub const UA_NS0ID_AUDITDELETENODESEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3474);
pub const UA_NS0ID_AUDITDELETENODESEVENTTYPE_CLIENTUSERID = @as(c_int, 3475);
pub const UA_NS0ID_AUDITADDREFERENCESEVENTTYPE_EVENTID = @as(c_int, 3476);
pub const UA_NS0ID_AUDITADDREFERENCESEVENTTYPE_EVENTTYPE = @as(c_int, 3477);
pub const UA_NS0ID_AUDITADDREFERENCESEVENTTYPE_SOURCENODE = @as(c_int, 3478);
pub const UA_NS0ID_AUDITADDREFERENCESEVENTTYPE_SOURCENAME = @as(c_int, 3479);
pub const UA_NS0ID_AUDITADDREFERENCESEVENTTYPE_TIME = @as(c_int, 3480);
pub const UA_NS0ID_AUDITADDREFERENCESEVENTTYPE_RECEIVETIME = @as(c_int, 3481);
pub const UA_NS0ID_AUDITADDREFERENCESEVENTTYPE_LOCALTIME = @as(c_int, 3482);
pub const UA_NS0ID_AUDITADDREFERENCESEVENTTYPE_MESSAGE = @as(c_int, 3483);
pub const UA_NS0ID_AUDITADDREFERENCESEVENTTYPE_SEVERITY = @as(c_int, 3484);
pub const UA_NS0ID_AUDITADDREFERENCESEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3485);
pub const UA_NS0ID_AUDITADDREFERENCESEVENTTYPE_STATUS = @as(c_int, 3486);
pub const UA_NS0ID_AUDITADDREFERENCESEVENTTYPE_SERVERID = @as(c_int, 3487);
pub const UA_NS0ID_AUDITADDREFERENCESEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3488);
pub const UA_NS0ID_AUDITADDREFERENCESEVENTTYPE_CLIENTUSERID = @as(c_int, 3489);
pub const UA_NS0ID_AUDITDELETEREFERENCESEVENTTYPE_EVENTID = @as(c_int, 3490);
pub const UA_NS0ID_AUDITDELETEREFERENCESEVENTTYPE_EVENTTYPE = @as(c_int, 3491);
pub const UA_NS0ID_AUDITDELETEREFERENCESEVENTTYPE_SOURCENODE = @as(c_int, 3492);
pub const UA_NS0ID_AUDITDELETEREFERENCESEVENTTYPE_SOURCENAME = @as(c_int, 3493);
pub const UA_NS0ID_AUDITDELETEREFERENCESEVENTTYPE_TIME = @as(c_int, 3494);
pub const UA_NS0ID_AUDITDELETEREFERENCESEVENTTYPE_RECEIVETIME = @as(c_int, 3495);
pub const UA_NS0ID_AUDITDELETEREFERENCESEVENTTYPE_LOCALTIME = @as(c_int, 3496);
pub const UA_NS0ID_AUDITDELETEREFERENCESEVENTTYPE_MESSAGE = @as(c_int, 3497);
pub const UA_NS0ID_AUDITDELETEREFERENCESEVENTTYPE_SEVERITY = @as(c_int, 3498);
pub const UA_NS0ID_AUDITDELETEREFERENCESEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3499);
pub const UA_NS0ID_AUDITDELETEREFERENCESEVENTTYPE_STATUS = @as(c_int, 3500);
pub const UA_NS0ID_AUDITDELETEREFERENCESEVENTTYPE_SERVERID = @as(c_int, 3501);
pub const UA_NS0ID_AUDITDELETEREFERENCESEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3502);
pub const UA_NS0ID_AUDITDELETEREFERENCESEVENTTYPE_CLIENTUSERID = @as(c_int, 3503);
pub const UA_NS0ID_AUDITUPDATEEVENTTYPE_EVENTID = @as(c_int, 3504);
pub const UA_NS0ID_AUDITUPDATEEVENTTYPE_EVENTTYPE = @as(c_int, 3505);
pub const UA_NS0ID_AUDITUPDATEEVENTTYPE_SOURCENODE = @as(c_int, 3506);
pub const UA_NS0ID_AUDITUPDATEEVENTTYPE_SOURCENAME = @as(c_int, 3507);
pub const UA_NS0ID_AUDITUPDATEEVENTTYPE_TIME = @as(c_int, 3508);
pub const UA_NS0ID_AUDITUPDATEEVENTTYPE_RECEIVETIME = @as(c_int, 3509);
pub const UA_NS0ID_AUDITUPDATEEVENTTYPE_LOCALTIME = @as(c_int, 3510);
pub const UA_NS0ID_AUDITUPDATEEVENTTYPE_MESSAGE = @as(c_int, 3511);
pub const UA_NS0ID_AUDITUPDATEEVENTTYPE_SEVERITY = @as(c_int, 3512);
pub const UA_NS0ID_AUDITUPDATEEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3513);
pub const UA_NS0ID_AUDITUPDATEEVENTTYPE_STATUS = @as(c_int, 3514);
pub const UA_NS0ID_AUDITUPDATEEVENTTYPE_SERVERID = @as(c_int, 3515);
pub const UA_NS0ID_AUDITUPDATEEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3516);
pub const UA_NS0ID_AUDITUPDATEEVENTTYPE_CLIENTUSERID = @as(c_int, 3517);
pub const UA_NS0ID_AUDITWRITEUPDATEEVENTTYPE_EVENTID = @as(c_int, 3518);
pub const UA_NS0ID_AUDITWRITEUPDATEEVENTTYPE_EVENTTYPE = @as(c_int, 3519);
pub const UA_NS0ID_AUDITWRITEUPDATEEVENTTYPE_SOURCENODE = @as(c_int, 3520);
pub const UA_NS0ID_AUDITWRITEUPDATEEVENTTYPE_SOURCENAME = @as(c_int, 3521);
pub const UA_NS0ID_AUDITWRITEUPDATEEVENTTYPE_TIME = @as(c_int, 3522);
pub const UA_NS0ID_AUDITWRITEUPDATEEVENTTYPE_RECEIVETIME = @as(c_int, 3523);
pub const UA_NS0ID_AUDITWRITEUPDATEEVENTTYPE_LOCALTIME = @as(c_int, 3524);
pub const UA_NS0ID_AUDITWRITEUPDATEEVENTTYPE_MESSAGE = @as(c_int, 3525);
pub const UA_NS0ID_AUDITWRITEUPDATEEVENTTYPE_SEVERITY = @as(c_int, 3526);
pub const UA_NS0ID_AUDITWRITEUPDATEEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3527);
pub const UA_NS0ID_AUDITWRITEUPDATEEVENTTYPE_STATUS = @as(c_int, 3528);
pub const UA_NS0ID_AUDITWRITEUPDATEEVENTTYPE_SERVERID = @as(c_int, 3529);
pub const UA_NS0ID_AUDITWRITEUPDATEEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3530);
pub const UA_NS0ID_AUDITWRITEUPDATEEVENTTYPE_CLIENTUSERID = @as(c_int, 3531);
pub const UA_NS0ID_AUDITHISTORYUPDATEEVENTTYPE_EVENTID = @as(c_int, 3532);
pub const UA_NS0ID_AUDITHISTORYUPDATEEVENTTYPE_EVENTTYPE = @as(c_int, 3533);
pub const UA_NS0ID_AUDITHISTORYUPDATEEVENTTYPE_SOURCENODE = @as(c_int, 3534);
pub const UA_NS0ID_AUDITHISTORYUPDATEEVENTTYPE_SOURCENAME = @as(c_int, 3535);
pub const UA_NS0ID_AUDITHISTORYUPDATEEVENTTYPE_TIME = @as(c_int, 3536);
pub const UA_NS0ID_AUDITHISTORYUPDATEEVENTTYPE_RECEIVETIME = @as(c_int, 3537);
pub const UA_NS0ID_AUDITHISTORYUPDATEEVENTTYPE_LOCALTIME = @as(c_int, 3538);
pub const UA_NS0ID_AUDITHISTORYUPDATEEVENTTYPE_MESSAGE = @as(c_int, 3539);
pub const UA_NS0ID_AUDITHISTORYUPDATEEVENTTYPE_SEVERITY = @as(c_int, 3540);
pub const UA_NS0ID_AUDITHISTORYUPDATEEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3541);
pub const UA_NS0ID_AUDITHISTORYUPDATEEVENTTYPE_STATUS = @as(c_int, 3542);
pub const UA_NS0ID_AUDITHISTORYUPDATEEVENTTYPE_SERVERID = @as(c_int, 3543);
pub const UA_NS0ID_AUDITHISTORYUPDATEEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3544);
pub const UA_NS0ID_AUDITHISTORYUPDATEEVENTTYPE_CLIENTUSERID = @as(c_int, 3545);
pub const UA_NS0ID_AUDITHISTORYEVENTUPDATEEVENTTYPE_EVENTID = @as(c_int, 3546);
pub const UA_NS0ID_AUDITHISTORYEVENTUPDATEEVENTTYPE_EVENTTYPE = @as(c_int, 3547);
pub const UA_NS0ID_AUDITHISTORYEVENTUPDATEEVENTTYPE_SOURCENODE = @as(c_int, 3548);
pub const UA_NS0ID_AUDITHISTORYEVENTUPDATEEVENTTYPE_SOURCENAME = @as(c_int, 3549);
pub const UA_NS0ID_AUDITHISTORYEVENTUPDATEEVENTTYPE_TIME = @as(c_int, 3550);
pub const UA_NS0ID_AUDITHISTORYEVENTUPDATEEVENTTYPE_RECEIVETIME = @as(c_int, 3551);
pub const UA_NS0ID_AUDITHISTORYEVENTUPDATEEVENTTYPE_LOCALTIME = @as(c_int, 3552);
pub const UA_NS0ID_AUDITHISTORYEVENTUPDATEEVENTTYPE_MESSAGE = @as(c_int, 3553);
pub const UA_NS0ID_AUDITHISTORYEVENTUPDATEEVENTTYPE_SEVERITY = @as(c_int, 3554);
pub const UA_NS0ID_AUDITHISTORYEVENTUPDATEEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3555);
pub const UA_NS0ID_AUDITHISTORYEVENTUPDATEEVENTTYPE_STATUS = @as(c_int, 3556);
pub const UA_NS0ID_AUDITHISTORYEVENTUPDATEEVENTTYPE_SERVERID = @as(c_int, 3557);
pub const UA_NS0ID_AUDITHISTORYEVENTUPDATEEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3558);
pub const UA_NS0ID_AUDITHISTORYEVENTUPDATEEVENTTYPE_CLIENTUSERID = @as(c_int, 3559);
pub const UA_NS0ID_AUDITHISTORYEVENTUPDATEEVENTTYPE_PARAMETERDATATYPEID = @as(c_int, 3560);
pub const UA_NS0ID_AUDITHISTORYVALUEUPDATEEVENTTYPE_EVENTID = @as(c_int, 3561);
pub const UA_NS0ID_AUDITHISTORYVALUEUPDATEEVENTTYPE_EVENTTYPE = @as(c_int, 3562);
pub const UA_NS0ID_AUDITHISTORYVALUEUPDATEEVENTTYPE_SOURCENODE = @as(c_int, 3563);
pub const UA_NS0ID_AUDITHISTORYVALUEUPDATEEVENTTYPE_SOURCENAME = @as(c_int, 3564);
pub const UA_NS0ID_AUDITHISTORYVALUEUPDATEEVENTTYPE_TIME = @as(c_int, 3565);
pub const UA_NS0ID_AUDITHISTORYVALUEUPDATEEVENTTYPE_RECEIVETIME = @as(c_int, 3566);
pub const UA_NS0ID_AUDITHISTORYVALUEUPDATEEVENTTYPE_LOCALTIME = @as(c_int, 3567);
pub const UA_NS0ID_AUDITHISTORYVALUEUPDATEEVENTTYPE_MESSAGE = @as(c_int, 3568);
pub const UA_NS0ID_AUDITHISTORYVALUEUPDATEEVENTTYPE_SEVERITY = @as(c_int, 3569);
pub const UA_NS0ID_AUDITHISTORYVALUEUPDATEEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3570);
pub const UA_NS0ID_AUDITHISTORYVALUEUPDATEEVENTTYPE_STATUS = @as(c_int, 3571);
pub const UA_NS0ID_AUDITHISTORYVALUEUPDATEEVENTTYPE_SERVERID = @as(c_int, 3572);
pub const UA_NS0ID_AUDITHISTORYVALUEUPDATEEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3573);
pub const UA_NS0ID_AUDITHISTORYVALUEUPDATEEVENTTYPE_CLIENTUSERID = @as(c_int, 3574);
pub const UA_NS0ID_AUDITHISTORYVALUEUPDATEEVENTTYPE_PARAMETERDATATYPEID = @as(c_int, 3575);
pub const UA_NS0ID_AUDITHISTORYDELETEEVENTTYPE_EVENTID = @as(c_int, 3576);
pub const UA_NS0ID_AUDITHISTORYDELETEEVENTTYPE_EVENTTYPE = @as(c_int, 3577);
pub const UA_NS0ID_AUDITHISTORYDELETEEVENTTYPE_SOURCENODE = @as(c_int, 3578);
pub const UA_NS0ID_AUDITHISTORYDELETEEVENTTYPE_SOURCENAME = @as(c_int, 3579);
pub const UA_NS0ID_AUDITHISTORYDELETEEVENTTYPE_TIME = @as(c_int, 3580);
pub const UA_NS0ID_AUDITHISTORYDELETEEVENTTYPE_RECEIVETIME = @as(c_int, 3581);
pub const UA_NS0ID_AUDITHISTORYDELETEEVENTTYPE_LOCALTIME = @as(c_int, 3582);
pub const UA_NS0ID_AUDITHISTORYDELETEEVENTTYPE_MESSAGE = @as(c_int, 3583);
pub const UA_NS0ID_AUDITHISTORYDELETEEVENTTYPE_SEVERITY = @as(c_int, 3584);
pub const UA_NS0ID_AUDITHISTORYDELETEEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3585);
pub const UA_NS0ID_AUDITHISTORYDELETEEVENTTYPE_STATUS = @as(c_int, 3586);
pub const UA_NS0ID_AUDITHISTORYDELETEEVENTTYPE_SERVERID = @as(c_int, 3587);
pub const UA_NS0ID_AUDITHISTORYDELETEEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3588);
pub const UA_NS0ID_AUDITHISTORYDELETEEVENTTYPE_CLIENTUSERID = @as(c_int, 3589);
pub const UA_NS0ID_AUDITHISTORYDELETEEVENTTYPE_PARAMETERDATATYPEID = @as(c_int, 3590);
pub const UA_NS0ID_AUDITHISTORYRAWMODIFYDELETEEVENTTYPE_EVENTID = @as(c_int, 3591);
pub const UA_NS0ID_AUDITHISTORYRAWMODIFYDELETEEVENTTYPE_EVENTTYPE = @as(c_int, 3592);
pub const UA_NS0ID_AUDITHISTORYRAWMODIFYDELETEEVENTTYPE_SOURCENODE = @as(c_int, 3593);
pub const UA_NS0ID_AUDITHISTORYRAWMODIFYDELETEEVENTTYPE_SOURCENAME = @as(c_int, 3594);
pub const UA_NS0ID_AUDITHISTORYRAWMODIFYDELETEEVENTTYPE_TIME = @as(c_int, 3595);
pub const UA_NS0ID_AUDITHISTORYRAWMODIFYDELETEEVENTTYPE_RECEIVETIME = @as(c_int, 3596);
pub const UA_NS0ID_AUDITHISTORYRAWMODIFYDELETEEVENTTYPE_LOCALTIME = @as(c_int, 3597);
pub const UA_NS0ID_AUDITHISTORYRAWMODIFYDELETEEVENTTYPE_MESSAGE = @as(c_int, 3598);
pub const UA_NS0ID_AUDITHISTORYRAWMODIFYDELETEEVENTTYPE_SEVERITY = @as(c_int, 3599);
pub const UA_NS0ID_AUDITHISTORYRAWMODIFYDELETEEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3600);
pub const UA_NS0ID_AUDITHISTORYRAWMODIFYDELETEEVENTTYPE_STATUS = @as(c_int, 3601);
pub const UA_NS0ID_AUDITHISTORYRAWMODIFYDELETEEVENTTYPE_SERVERID = @as(c_int, 3602);
pub const UA_NS0ID_AUDITHISTORYRAWMODIFYDELETEEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3603);
pub const UA_NS0ID_AUDITHISTORYRAWMODIFYDELETEEVENTTYPE_CLIENTUSERID = @as(c_int, 3604);
pub const UA_NS0ID_AUDITHISTORYRAWMODIFYDELETEEVENTTYPE_PARAMETERDATATYPEID = @as(c_int, 3605);
pub const UA_NS0ID_AUDITHISTORYRAWMODIFYDELETEEVENTTYPE_UPDATEDNODE = @as(c_int, 3606);
pub const UA_NS0ID_AUDITHISTORYATTIMEDELETEEVENTTYPE_EVENTID = @as(c_int, 3607);
pub const UA_NS0ID_AUDITHISTORYATTIMEDELETEEVENTTYPE_EVENTTYPE = @as(c_int, 3608);
pub const UA_NS0ID_AUDITHISTORYATTIMEDELETEEVENTTYPE_SOURCENODE = @as(c_int, 3609);
pub const UA_NS0ID_AUDITHISTORYATTIMEDELETEEVENTTYPE_SOURCENAME = @as(c_int, 3610);
pub const UA_NS0ID_AUDITHISTORYATTIMEDELETEEVENTTYPE_TIME = @as(c_int, 3611);
pub const UA_NS0ID_AUDITHISTORYATTIMEDELETEEVENTTYPE_RECEIVETIME = @as(c_int, 3612);
pub const UA_NS0ID_AUDITHISTORYATTIMEDELETEEVENTTYPE_LOCALTIME = @as(c_int, 3613);
pub const UA_NS0ID_AUDITHISTORYATTIMEDELETEEVENTTYPE_MESSAGE = @as(c_int, 3614);
pub const UA_NS0ID_AUDITHISTORYATTIMEDELETEEVENTTYPE_SEVERITY = @as(c_int, 3615);
pub const UA_NS0ID_AUDITHISTORYATTIMEDELETEEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3616);
pub const UA_NS0ID_AUDITHISTORYATTIMEDELETEEVENTTYPE_STATUS = @as(c_int, 3617);
pub const UA_NS0ID_AUDITHISTORYATTIMEDELETEEVENTTYPE_SERVERID = @as(c_int, 3618);
pub const UA_NS0ID_AUDITHISTORYATTIMEDELETEEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3619);
pub const UA_NS0ID_AUDITHISTORYATTIMEDELETEEVENTTYPE_CLIENTUSERID = @as(c_int, 3620);
pub const UA_NS0ID_AUDITHISTORYATTIMEDELETEEVENTTYPE_PARAMETERDATATYPEID = @as(c_int, 3621);
pub const UA_NS0ID_AUDITHISTORYATTIMEDELETEEVENTTYPE_UPDATEDNODE = @as(c_int, 3622);
pub const UA_NS0ID_AUDITHISTORYEVENTDELETEEVENTTYPE_EVENTID = @as(c_int, 3623);
pub const UA_NS0ID_AUDITHISTORYEVENTDELETEEVENTTYPE_EVENTTYPE = @as(c_int, 3624);
pub const UA_NS0ID_AUDITHISTORYEVENTDELETEEVENTTYPE_SOURCENODE = @as(c_int, 3625);
pub const UA_NS0ID_AUDITHISTORYEVENTDELETEEVENTTYPE_SOURCENAME = @as(c_int, 3626);
pub const UA_NS0ID_AUDITHISTORYEVENTDELETEEVENTTYPE_TIME = @as(c_int, 3627);
pub const UA_NS0ID_AUDITHISTORYEVENTDELETEEVENTTYPE_RECEIVETIME = @as(c_int, 3628);
pub const UA_NS0ID_AUDITHISTORYEVENTDELETEEVENTTYPE_LOCALTIME = @as(c_int, 3629);
pub const UA_NS0ID_AUDITHISTORYEVENTDELETEEVENTTYPE_MESSAGE = @as(c_int, 3630);
pub const UA_NS0ID_AUDITHISTORYEVENTDELETEEVENTTYPE_SEVERITY = @as(c_int, 3631);
pub const UA_NS0ID_AUDITHISTORYEVENTDELETEEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3632);
pub const UA_NS0ID_AUDITHISTORYEVENTDELETEEVENTTYPE_STATUS = @as(c_int, 3633);
pub const UA_NS0ID_AUDITHISTORYEVENTDELETEEVENTTYPE_SERVERID = @as(c_int, 3634);
pub const UA_NS0ID_AUDITHISTORYEVENTDELETEEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3635);
pub const UA_NS0ID_AUDITHISTORYEVENTDELETEEVENTTYPE_CLIENTUSERID = @as(c_int, 3636);
pub const UA_NS0ID_AUDITHISTORYEVENTDELETEEVENTTYPE_PARAMETERDATATYPEID = @as(c_int, 3637);
pub const UA_NS0ID_AUDITHISTORYEVENTDELETEEVENTTYPE_UPDATEDNODE = @as(c_int, 3638);
pub const UA_NS0ID_AUDITUPDATEMETHODEVENTTYPE_EVENTID = @as(c_int, 3639);
pub const UA_NS0ID_AUDITUPDATEMETHODEVENTTYPE_EVENTTYPE = @as(c_int, 3640);
pub const UA_NS0ID_AUDITUPDATEMETHODEVENTTYPE_SOURCENODE = @as(c_int, 3641);
pub const UA_NS0ID_AUDITUPDATEMETHODEVENTTYPE_SOURCENAME = @as(c_int, 3642);
pub const UA_NS0ID_AUDITUPDATEMETHODEVENTTYPE_TIME = @as(c_int, 3643);
pub const UA_NS0ID_AUDITUPDATEMETHODEVENTTYPE_RECEIVETIME = @as(c_int, 3644);
pub const UA_NS0ID_AUDITUPDATEMETHODEVENTTYPE_LOCALTIME = @as(c_int, 3645);
pub const UA_NS0ID_AUDITUPDATEMETHODEVENTTYPE_MESSAGE = @as(c_int, 3646);
pub const UA_NS0ID_AUDITUPDATEMETHODEVENTTYPE_SEVERITY = @as(c_int, 3647);
pub const UA_NS0ID_AUDITUPDATEMETHODEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3648);
pub const UA_NS0ID_AUDITUPDATEMETHODEVENTTYPE_STATUS = @as(c_int, 3649);
pub const UA_NS0ID_AUDITUPDATEMETHODEVENTTYPE_SERVERID = @as(c_int, 3650);
pub const UA_NS0ID_AUDITUPDATEMETHODEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3651);
pub const UA_NS0ID_AUDITUPDATEMETHODEVENTTYPE_CLIENTUSERID = @as(c_int, 3652);
pub const UA_NS0ID_SYSTEMEVENTTYPE_EVENTID = @as(c_int, 3653);
pub const UA_NS0ID_SYSTEMEVENTTYPE_EVENTTYPE = @as(c_int, 3654);
pub const UA_NS0ID_SYSTEMEVENTTYPE_SOURCENODE = @as(c_int, 3655);
pub const UA_NS0ID_SYSTEMEVENTTYPE_SOURCENAME = @as(c_int, 3656);
pub const UA_NS0ID_SYSTEMEVENTTYPE_TIME = @as(c_int, 3657);
pub const UA_NS0ID_SYSTEMEVENTTYPE_RECEIVETIME = @as(c_int, 3658);
pub const UA_NS0ID_SYSTEMEVENTTYPE_LOCALTIME = @as(c_int, 3659);
pub const UA_NS0ID_SYSTEMEVENTTYPE_MESSAGE = @as(c_int, 3660);
pub const UA_NS0ID_SYSTEMEVENTTYPE_SEVERITY = @as(c_int, 3661);
pub const UA_NS0ID_DEVICEFAILUREEVENTTYPE_EVENTID = @as(c_int, 3662);
pub const UA_NS0ID_DEVICEFAILUREEVENTTYPE_EVENTTYPE = @as(c_int, 3663);
pub const UA_NS0ID_DEVICEFAILUREEVENTTYPE_SOURCENODE = @as(c_int, 3664);
pub const UA_NS0ID_DEVICEFAILUREEVENTTYPE_SOURCENAME = @as(c_int, 3665);
pub const UA_NS0ID_DEVICEFAILUREEVENTTYPE_TIME = @as(c_int, 3666);
pub const UA_NS0ID_DEVICEFAILUREEVENTTYPE_RECEIVETIME = @as(c_int, 3667);
pub const UA_NS0ID_DEVICEFAILUREEVENTTYPE_LOCALTIME = @as(c_int, 3668);
pub const UA_NS0ID_DEVICEFAILUREEVENTTYPE_MESSAGE = @as(c_int, 3669);
pub const UA_NS0ID_DEVICEFAILUREEVENTTYPE_SEVERITY = @as(c_int, 3670);
pub const UA_NS0ID_BASEMODELCHANGEEVENTTYPE_EVENTID = @as(c_int, 3671);
pub const UA_NS0ID_BASEMODELCHANGEEVENTTYPE_EVENTTYPE = @as(c_int, 3672);
pub const UA_NS0ID_BASEMODELCHANGEEVENTTYPE_SOURCENODE = @as(c_int, 3673);
pub const UA_NS0ID_BASEMODELCHANGEEVENTTYPE_SOURCENAME = @as(c_int, 3674);
pub const UA_NS0ID_BASEMODELCHANGEEVENTTYPE_TIME = @as(c_int, 3675);
pub const UA_NS0ID_BASEMODELCHANGEEVENTTYPE_RECEIVETIME = @as(c_int, 3676);
pub const UA_NS0ID_BASEMODELCHANGEEVENTTYPE_LOCALTIME = @as(c_int, 3677);
pub const UA_NS0ID_BASEMODELCHANGEEVENTTYPE_MESSAGE = @as(c_int, 3678);
pub const UA_NS0ID_BASEMODELCHANGEEVENTTYPE_SEVERITY = @as(c_int, 3679);
pub const UA_NS0ID_GENERALMODELCHANGEEVENTTYPE_EVENTID = @as(c_int, 3680);
pub const UA_NS0ID_GENERALMODELCHANGEEVENTTYPE_EVENTTYPE = @as(c_int, 3681);
pub const UA_NS0ID_GENERALMODELCHANGEEVENTTYPE_SOURCENODE = @as(c_int, 3682);
pub const UA_NS0ID_GENERALMODELCHANGEEVENTTYPE_SOURCENAME = @as(c_int, 3683);
pub const UA_NS0ID_GENERALMODELCHANGEEVENTTYPE_TIME = @as(c_int, 3684);
pub const UA_NS0ID_GENERALMODELCHANGEEVENTTYPE_RECEIVETIME = @as(c_int, 3685);
pub const UA_NS0ID_GENERALMODELCHANGEEVENTTYPE_LOCALTIME = @as(c_int, 3686);
pub const UA_NS0ID_GENERALMODELCHANGEEVENTTYPE_MESSAGE = @as(c_int, 3687);
pub const UA_NS0ID_GENERALMODELCHANGEEVENTTYPE_SEVERITY = @as(c_int, 3688);
pub const UA_NS0ID_SEMANTICCHANGEEVENTTYPE_EVENTID = @as(c_int, 3689);
pub const UA_NS0ID_SEMANTICCHANGEEVENTTYPE_EVENTTYPE = @as(c_int, 3690);
pub const UA_NS0ID_SEMANTICCHANGEEVENTTYPE_SOURCENODE = @as(c_int, 3691);
pub const UA_NS0ID_SEMANTICCHANGEEVENTTYPE_SOURCENAME = @as(c_int, 3692);
pub const UA_NS0ID_SEMANTICCHANGEEVENTTYPE_TIME = @as(c_int, 3693);
pub const UA_NS0ID_SEMANTICCHANGEEVENTTYPE_RECEIVETIME = @as(c_int, 3694);
pub const UA_NS0ID_SEMANTICCHANGEEVENTTYPE_LOCALTIME = @as(c_int, 3695);
pub const UA_NS0ID_SEMANTICCHANGEEVENTTYPE_MESSAGE = @as(c_int, 3696);
pub const UA_NS0ID_SEMANTICCHANGEEVENTTYPE_SEVERITY = @as(c_int, 3697);
pub const UA_NS0ID_SERVERSTATUSTYPE_BUILDINFO_PRODUCTURI = @as(c_int, 3698);
pub const UA_NS0ID_SERVERSTATUSTYPE_BUILDINFO_MANUFACTURERNAME = @as(c_int, 3699);
pub const UA_NS0ID_SERVERSTATUSTYPE_BUILDINFO_PRODUCTNAME = @as(c_int, 3700);
pub const UA_NS0ID_SERVERSTATUSTYPE_BUILDINFO_SOFTWAREVERSION = @as(c_int, 3701);
pub const UA_NS0ID_SERVERSTATUSTYPE_BUILDINFO_BUILDNUMBER = @as(c_int, 3702);
pub const UA_NS0ID_SERVERSTATUSTYPE_BUILDINFO_BUILDDATE = @as(c_int, 3703);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_SOFTWARECERTIFICATES = @as(c_int, 3704);
pub const UA_NS0ID_SERVER_SERVERDIAGNOSTICS_SERVERDIAGNOSTICSSUMMARY_REJECTEDSESSIONCOUNT = @as(c_int, 3705);
pub const UA_NS0ID_SERVER_SERVERDIAGNOSTICS_SESSIONSDIAGNOSTICSSUMMARY = @as(c_int, 3706);
pub const UA_NS0ID_SERVER_SERVERDIAGNOSTICS_SESSIONSDIAGNOSTICSSUMMARY_SESSIONDIAGNOSTICSARRAY = @as(c_int, 3707);
pub const UA_NS0ID_SERVER_SERVERDIAGNOSTICS_SESSIONSDIAGNOSTICSSUMMARY_SESSIONSECURITYDIAGNOSTICSARRAY = @as(c_int, 3708);
pub const UA_NS0ID_SERVER_SERVERREDUNDANCY_REDUNDANCYSUPPORT = @as(c_int, 3709);
pub const UA_NS0ID_FINITESTATEVARIABLETYPE_NAME = @as(c_int, 3714);
pub const UA_NS0ID_FINITESTATEVARIABLETYPE_NUMBER = @as(c_int, 3715);
pub const UA_NS0ID_FINITESTATEVARIABLETYPE_EFFECTIVEDISPLAYNAME = @as(c_int, 3716);
pub const UA_NS0ID_FINITETRANSITIONVARIABLETYPE_NAME = @as(c_int, 3717);
pub const UA_NS0ID_FINITETRANSITIONVARIABLETYPE_NUMBER = @as(c_int, 3718);
pub const UA_NS0ID_FINITETRANSITIONVARIABLETYPE_TRANSITIONTIME = @as(c_int, 3719);
pub const UA_NS0ID_STATEMACHINETYPE_CURRENTSTATE_ID = @as(c_int, 3720);
pub const UA_NS0ID_STATEMACHINETYPE_CURRENTSTATE_NAME = @as(c_int, 3721);
pub const UA_NS0ID_STATEMACHINETYPE_CURRENTSTATE_NUMBER = @as(c_int, 3722);
pub const UA_NS0ID_STATEMACHINETYPE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 3723);
pub const UA_NS0ID_STATEMACHINETYPE_LASTTRANSITION_ID = @as(c_int, 3724);
pub const UA_NS0ID_STATEMACHINETYPE_LASTTRANSITION_NAME = @as(c_int, 3725);
pub const UA_NS0ID_STATEMACHINETYPE_LASTTRANSITION_NUMBER = @as(c_int, 3726);
pub const UA_NS0ID_STATEMACHINETYPE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 3727);
pub const UA_NS0ID_FINITESTATEMACHINETYPE_CURRENTSTATE_ID = @as(c_int, 3728);
pub const UA_NS0ID_FINITESTATEMACHINETYPE_CURRENTSTATE_NAME = @as(c_int, 3729);
pub const UA_NS0ID_FINITESTATEMACHINETYPE_CURRENTSTATE_NUMBER = @as(c_int, 3730);
pub const UA_NS0ID_FINITESTATEMACHINETYPE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 3731);
pub const UA_NS0ID_FINITESTATEMACHINETYPE_LASTTRANSITION_ID = @as(c_int, 3732);
pub const UA_NS0ID_FINITESTATEMACHINETYPE_LASTTRANSITION_NAME = @as(c_int, 3733);
pub const UA_NS0ID_FINITESTATEMACHINETYPE_LASTTRANSITION_NUMBER = @as(c_int, 3734);
pub const UA_NS0ID_FINITESTATEMACHINETYPE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 3735);
pub const UA_NS0ID_INITIALSTATETYPE_STATENUMBER = @as(c_int, 3736);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_EVENTID = @as(c_int, 3737);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_EVENTTYPE = @as(c_int, 3738);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_SOURCENODE = @as(c_int, 3739);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_SOURCENAME = @as(c_int, 3740);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_TIME = @as(c_int, 3741);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_RECEIVETIME = @as(c_int, 3742);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_LOCALTIME = @as(c_int, 3743);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_MESSAGE = @as(c_int, 3744);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_SEVERITY = @as(c_int, 3745);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_FROMSTATE_ID = @as(c_int, 3746);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_FROMSTATE_NAME = @as(c_int, 3747);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_FROMSTATE_NUMBER = @as(c_int, 3748);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_FROMSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 3749);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_TOSTATE_ID = @as(c_int, 3750);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_TOSTATE_NAME = @as(c_int, 3751);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_TOSTATE_NUMBER = @as(c_int, 3752);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_TOSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 3753);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_TRANSITION_ID = @as(c_int, 3754);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_TRANSITION_NAME = @as(c_int, 3755);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_TRANSITION_NUMBER = @as(c_int, 3756);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_TRANSITION_TRANSITIONTIME = @as(c_int, 3757);
pub const UA_NS0ID_AUDITUPDATESTATEEVENTTYPE_EVENTID = @as(c_int, 3758);
pub const UA_NS0ID_AUDITUPDATESTATEEVENTTYPE_EVENTTYPE = @as(c_int, 3759);
pub const UA_NS0ID_AUDITUPDATESTATEEVENTTYPE_SOURCENODE = @as(c_int, 3760);
pub const UA_NS0ID_AUDITUPDATESTATEEVENTTYPE_SOURCENAME = @as(c_int, 3761);
pub const UA_NS0ID_AUDITUPDATESTATEEVENTTYPE_TIME = @as(c_int, 3762);
pub const UA_NS0ID_AUDITUPDATESTATEEVENTTYPE_RECEIVETIME = @as(c_int, 3763);
pub const UA_NS0ID_AUDITUPDATESTATEEVENTTYPE_LOCALTIME = @as(c_int, 3764);
pub const UA_NS0ID_AUDITUPDATESTATEEVENTTYPE_MESSAGE = @as(c_int, 3765);
pub const UA_NS0ID_AUDITUPDATESTATEEVENTTYPE_SEVERITY = @as(c_int, 3766);
pub const UA_NS0ID_AUDITUPDATESTATEEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3767);
pub const UA_NS0ID_AUDITUPDATESTATEEVENTTYPE_STATUS = @as(c_int, 3768);
pub const UA_NS0ID_AUDITUPDATESTATEEVENTTYPE_SERVERID = @as(c_int, 3769);
pub const UA_NS0ID_AUDITUPDATESTATEEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3770);
pub const UA_NS0ID_AUDITUPDATESTATEEVENTTYPE_CLIENTUSERID = @as(c_int, 3771);
pub const UA_NS0ID_AUDITUPDATESTATEEVENTTYPE_METHODID = @as(c_int, 3772);
pub const UA_NS0ID_AUDITUPDATESTATEEVENTTYPE_INPUTARGUMENTS = @as(c_int, 3773);
pub const UA_NS0ID_ANALOGITEMTYPE_DEFINITION = @as(c_int, 3774);
pub const UA_NS0ID_ANALOGITEMTYPE_VALUEPRECISION = @as(c_int, 3775);
pub const UA_NS0ID_DISCRETEITEMTYPE_DEFINITION = @as(c_int, 3776);
pub const UA_NS0ID_DISCRETEITEMTYPE_VALUEPRECISION = @as(c_int, 3777);
pub const UA_NS0ID_TWOSTATEDISCRETETYPE_DEFINITION = @as(c_int, 3778);
pub const UA_NS0ID_TWOSTATEDISCRETETYPE_VALUEPRECISION = @as(c_int, 3779);
pub const UA_NS0ID_MULTISTATEDISCRETETYPE_DEFINITION = @as(c_int, 3780);
pub const UA_NS0ID_MULTISTATEDISCRETETYPE_VALUEPRECISION = @as(c_int, 3781);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_EVENTID = @as(c_int, 3782);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_EVENTTYPE = @as(c_int, 3783);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_SOURCENODE = @as(c_int, 3784);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_SOURCENAME = @as(c_int, 3785);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_TIME = @as(c_int, 3786);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_RECEIVETIME = @as(c_int, 3787);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_LOCALTIME = @as(c_int, 3788);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_MESSAGE = @as(c_int, 3789);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_SEVERITY = @as(c_int, 3790);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_FROMSTATE = @as(c_int, 3791);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_FROMSTATE_ID = @as(c_int, 3792);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_FROMSTATE_NAME = @as(c_int, 3793);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_FROMSTATE_NUMBER = @as(c_int, 3794);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_FROMSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 3795);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_TOSTATE = @as(c_int, 3796);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_TOSTATE_ID = @as(c_int, 3797);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_TOSTATE_NAME = @as(c_int, 3798);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_TOSTATE_NUMBER = @as(c_int, 3799);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_TOSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 3800);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_TRANSITION = @as(c_int, 3801);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_TRANSITION_ID = @as(c_int, 3802);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_TRANSITION_NAME = @as(c_int, 3803);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_TRANSITION_NUMBER = @as(c_int, 3804);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_TRANSITION_TRANSITIONTIME = @as(c_int, 3805);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE = @as(c_int, 3806);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_EVENTID = @as(c_int, 3807);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_EVENTTYPE = @as(c_int, 3808);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_SOURCENODE = @as(c_int, 3809);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_SOURCENAME = @as(c_int, 3810);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_TIME = @as(c_int, 3811);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_RECEIVETIME = @as(c_int, 3812);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_LOCALTIME = @as(c_int, 3813);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_MESSAGE = @as(c_int, 3814);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_SEVERITY = @as(c_int, 3815);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 3816);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_STATUS = @as(c_int, 3817);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_SERVERID = @as(c_int, 3818);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 3819);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_CLIENTUSERID = @as(c_int, 3820);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_METHODID = @as(c_int, 3821);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_INPUTARGUMENTS = @as(c_int, 3822);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_OLDSTATEID = @as(c_int, 3823);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_NEWSTATEID = @as(c_int, 3824);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_TRANSITION = @as(c_int, 3825);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_TRANSITION_ID = @as(c_int, 3826);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_TRANSITION_NAME = @as(c_int, 3827);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_TRANSITION_NUMBER = @as(c_int, 3828);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_TRANSITION_TRANSITIONTIME = @as(c_int, 3829);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_CURRENTSTATE = @as(c_int, 3830);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_CURRENTSTATE_ID = @as(c_int, 3831);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_CURRENTSTATE_NAME = @as(c_int, 3832);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_CURRENTSTATE_NUMBER = @as(c_int, 3833);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 3834);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_LASTTRANSITION = @as(c_int, 3835);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_LASTTRANSITION_ID = @as(c_int, 3836);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_LASTTRANSITION_NAME = @as(c_int, 3837);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_LASTTRANSITION_NUMBER = @as(c_int, 3838);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 3839);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_PROGRAMDIAGNOSTIC_CREATESESSIONID = @as(c_int, 3840);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_PROGRAMDIAGNOSTIC_CREATECLIENTNAME = @as(c_int, 3841);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_PROGRAMDIAGNOSTIC_INVOCATIONCREATIONTIME = @as(c_int, 3842);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_PROGRAMDIAGNOSTIC_LASTTRANSITIONTIME = @as(c_int, 3843);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_PROGRAMDIAGNOSTIC_LASTMETHODCALL = @as(c_int, 3844);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_PROGRAMDIAGNOSTIC_LASTMETHODSESSIONID = @as(c_int, 3845);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_PROGRAMDIAGNOSTIC_LASTMETHODINPUTARGUMENTS = @as(c_int, 3846);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_PROGRAMDIAGNOSTIC_LASTMETHODOUTPUTARGUMENTS = @as(c_int, 3847);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_PROGRAMDIAGNOSTIC_LASTMETHODCALLTIME = @as(c_int, 3848);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_PROGRAMDIAGNOSTIC_LASTMETHODRETURNSTATUS = @as(c_int, 3849);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_FINALRESULTDATA = @as(c_int, 3850);
pub const UA_NS0ID_ADDCOMMENTMETHODTYPE = @as(c_int, 3863);
pub const UA_NS0ID_ADDCOMMENTMETHODTYPE_INPUTARGUMENTS = @as(c_int, 3864);
pub const UA_NS0ID_CONDITIONTYPE_EVENTID = @as(c_int, 3865);
pub const UA_NS0ID_CONDITIONTYPE_EVENTTYPE = @as(c_int, 3866);
pub const UA_NS0ID_CONDITIONTYPE_SOURCENODE = @as(c_int, 3867);
pub const UA_NS0ID_CONDITIONTYPE_SOURCENAME = @as(c_int, 3868);
pub const UA_NS0ID_CONDITIONTYPE_TIME = @as(c_int, 3869);
pub const UA_NS0ID_CONDITIONTYPE_RECEIVETIME = @as(c_int, 3870);
pub const UA_NS0ID_CONDITIONTYPE_LOCALTIME = @as(c_int, 3871);
pub const UA_NS0ID_CONDITIONTYPE_MESSAGE = @as(c_int, 3872);
pub const UA_NS0ID_CONDITIONTYPE_SEVERITY = @as(c_int, 3873);
pub const UA_NS0ID_CONDITIONTYPE_RETAIN = @as(c_int, 3874);
pub const UA_NS0ID_CONDITIONTYPE_CONDITIONREFRESH = @as(c_int, 3875);
pub const UA_NS0ID_CONDITIONTYPE_CONDITIONREFRESH_INPUTARGUMENTS = @as(c_int, 3876);
pub const UA_NS0ID_REFRESHSTARTEVENTTYPE_EVENTID = @as(c_int, 3969);
pub const UA_NS0ID_REFRESHSTARTEVENTTYPE_EVENTTYPE = @as(c_int, 3970);
pub const UA_NS0ID_REFRESHSTARTEVENTTYPE_SOURCENODE = @as(c_int, 3971);
pub const UA_NS0ID_REFRESHSTARTEVENTTYPE_SOURCENAME = @as(c_int, 3972);
pub const UA_NS0ID_REFRESHSTARTEVENTTYPE_TIME = @as(c_int, 3973);
pub const UA_NS0ID_REFRESHSTARTEVENTTYPE_RECEIVETIME = @as(c_int, 3974);
pub const UA_NS0ID_REFRESHSTARTEVENTTYPE_LOCALTIME = @as(c_int, 3975);
pub const UA_NS0ID_REFRESHSTARTEVENTTYPE_MESSAGE = @as(c_int, 3976);
pub const UA_NS0ID_REFRESHSTARTEVENTTYPE_SEVERITY = @as(c_int, 3977);
pub const UA_NS0ID_REFRESHENDEVENTTYPE_EVENTID = @as(c_int, 3978);
pub const UA_NS0ID_REFRESHENDEVENTTYPE_EVENTTYPE = @as(c_int, 3979);
pub const UA_NS0ID_REFRESHENDEVENTTYPE_SOURCENODE = @as(c_int, 3980);
pub const UA_NS0ID_REFRESHENDEVENTTYPE_SOURCENAME = @as(c_int, 3981);
pub const UA_NS0ID_REFRESHENDEVENTTYPE_TIME = @as(c_int, 3982);
pub const UA_NS0ID_REFRESHENDEVENTTYPE_RECEIVETIME = @as(c_int, 3983);
pub const UA_NS0ID_REFRESHENDEVENTTYPE_LOCALTIME = @as(c_int, 3984);
pub const UA_NS0ID_REFRESHENDEVENTTYPE_MESSAGE = @as(c_int, 3985);
pub const UA_NS0ID_REFRESHENDEVENTTYPE_SEVERITY = @as(c_int, 3986);
pub const UA_NS0ID_REFRESHREQUIREDEVENTTYPE_EVENTID = @as(c_int, 3987);
pub const UA_NS0ID_REFRESHREQUIREDEVENTTYPE_EVENTTYPE = @as(c_int, 3988);
pub const UA_NS0ID_REFRESHREQUIREDEVENTTYPE_SOURCENODE = @as(c_int, 3989);
pub const UA_NS0ID_REFRESHREQUIREDEVENTTYPE_SOURCENAME = @as(c_int, 3990);
pub const UA_NS0ID_REFRESHREQUIREDEVENTTYPE_TIME = @as(c_int, 3991);
pub const UA_NS0ID_REFRESHREQUIREDEVENTTYPE_RECEIVETIME = @as(c_int, 3992);
pub const UA_NS0ID_REFRESHREQUIREDEVENTTYPE_LOCALTIME = @as(c_int, 3993);
pub const UA_NS0ID_REFRESHREQUIREDEVENTTYPE_MESSAGE = @as(c_int, 3994);
pub const UA_NS0ID_REFRESHREQUIREDEVENTTYPE_SEVERITY = @as(c_int, 3995);
pub const UA_NS0ID_AUDITCONDITIONEVENTTYPE_EVENTID = @as(c_int, 3996);
pub const UA_NS0ID_AUDITCONDITIONEVENTTYPE_EVENTTYPE = @as(c_int, 3997);
pub const UA_NS0ID_AUDITCONDITIONEVENTTYPE_SOURCENODE = @as(c_int, 3998);
pub const UA_NS0ID_AUDITCONDITIONEVENTTYPE_SOURCENAME = @as(c_int, 3999);
pub const UA_NS0ID_AUDITCONDITIONEVENTTYPE_TIME = @as(c_int, 4000);
pub const UA_NS0ID_AUDITCONDITIONEVENTTYPE_RECEIVETIME = @as(c_int, 4001);
pub const UA_NS0ID_AUDITCONDITIONEVENTTYPE_LOCALTIME = @as(c_int, 4002);
pub const UA_NS0ID_AUDITCONDITIONEVENTTYPE_MESSAGE = @as(c_int, 4003);
pub const UA_NS0ID_AUDITCONDITIONEVENTTYPE_SEVERITY = @as(c_int, 4004);
pub const UA_NS0ID_AUDITCONDITIONEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 4005);
pub const UA_NS0ID_AUDITCONDITIONEVENTTYPE_STATUS = @as(c_int, 4006);
pub const UA_NS0ID_AUDITCONDITIONEVENTTYPE_SERVERID = @as(c_int, 4007);
pub const UA_NS0ID_AUDITCONDITIONEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 4008);
pub const UA_NS0ID_AUDITCONDITIONEVENTTYPE_CLIENTUSERID = @as(c_int, 4009);
pub const UA_NS0ID_AUDITCONDITIONEVENTTYPE_METHODID = @as(c_int, 4010);
pub const UA_NS0ID_AUDITCONDITIONEVENTTYPE_INPUTARGUMENTS = @as(c_int, 4011);
pub const UA_NS0ID_AUDITCONDITIONENABLEEVENTTYPE_EVENTID = @as(c_int, 4106);
pub const UA_NS0ID_AUDITCONDITIONENABLEEVENTTYPE_EVENTTYPE = @as(c_int, 4107);
pub const UA_NS0ID_AUDITCONDITIONENABLEEVENTTYPE_SOURCENODE = @as(c_int, 4108);
pub const UA_NS0ID_AUDITCONDITIONENABLEEVENTTYPE_SOURCENAME = @as(c_int, 4109);
pub const UA_NS0ID_AUDITCONDITIONENABLEEVENTTYPE_TIME = @as(c_int, 4110);
pub const UA_NS0ID_AUDITCONDITIONENABLEEVENTTYPE_RECEIVETIME = @as(c_int, 4111);
pub const UA_NS0ID_AUDITCONDITIONENABLEEVENTTYPE_LOCALTIME = @as(c_int, 4112);
pub const UA_NS0ID_AUDITCONDITIONENABLEEVENTTYPE_MESSAGE = @as(c_int, 4113);
pub const UA_NS0ID_AUDITCONDITIONENABLEEVENTTYPE_SEVERITY = @as(c_int, 4114);
pub const UA_NS0ID_AUDITCONDITIONENABLEEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 4115);
pub const UA_NS0ID_AUDITCONDITIONENABLEEVENTTYPE_STATUS = @as(c_int, 4116);
pub const UA_NS0ID_AUDITCONDITIONENABLEEVENTTYPE_SERVERID = @as(c_int, 4117);
pub const UA_NS0ID_AUDITCONDITIONENABLEEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 4118);
pub const UA_NS0ID_AUDITCONDITIONENABLEEVENTTYPE_CLIENTUSERID = @as(c_int, 4119);
pub const UA_NS0ID_AUDITCONDITIONENABLEEVENTTYPE_METHODID = @as(c_int, 4120);
pub const UA_NS0ID_AUDITCONDITIONENABLEEVENTTYPE_INPUTARGUMENTS = @as(c_int, 4121);
pub const UA_NS0ID_AUDITCONDITIONCOMMENTEVENTTYPE_EVENTID = @as(c_int, 4170);
pub const UA_NS0ID_AUDITCONDITIONCOMMENTEVENTTYPE_EVENTTYPE = @as(c_int, 4171);
pub const UA_NS0ID_AUDITCONDITIONCOMMENTEVENTTYPE_SOURCENODE = @as(c_int, 4172);
pub const UA_NS0ID_AUDITCONDITIONCOMMENTEVENTTYPE_SOURCENAME = @as(c_int, 4173);
pub const UA_NS0ID_AUDITCONDITIONCOMMENTEVENTTYPE_TIME = @as(c_int, 4174);
pub const UA_NS0ID_AUDITCONDITIONCOMMENTEVENTTYPE_RECEIVETIME = @as(c_int, 4175);
pub const UA_NS0ID_AUDITCONDITIONCOMMENTEVENTTYPE_LOCALTIME = @as(c_int, 4176);
pub const UA_NS0ID_AUDITCONDITIONCOMMENTEVENTTYPE_MESSAGE = @as(c_int, 4177);
pub const UA_NS0ID_AUDITCONDITIONCOMMENTEVENTTYPE_SEVERITY = @as(c_int, 4178);
pub const UA_NS0ID_AUDITCONDITIONCOMMENTEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 4179);
pub const UA_NS0ID_AUDITCONDITIONCOMMENTEVENTTYPE_STATUS = @as(c_int, 4180);
pub const UA_NS0ID_AUDITCONDITIONCOMMENTEVENTTYPE_SERVERID = @as(c_int, 4181);
pub const UA_NS0ID_AUDITCONDITIONCOMMENTEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 4182);
pub const UA_NS0ID_AUDITCONDITIONCOMMENTEVENTTYPE_CLIENTUSERID = @as(c_int, 4183);
pub const UA_NS0ID_AUDITCONDITIONCOMMENTEVENTTYPE_METHODID = @as(c_int, 4184);
pub const UA_NS0ID_AUDITCONDITIONCOMMENTEVENTTYPE_INPUTARGUMENTS = @as(c_int, 4185);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_EVENTID = @as(c_int, 4188);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_EVENTTYPE = @as(c_int, 4189);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_SOURCENODE = @as(c_int, 4190);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_SOURCENAME = @as(c_int, 4191);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_TIME = @as(c_int, 4192);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_RECEIVETIME = @as(c_int, 4193);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_LOCALTIME = @as(c_int, 4194);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_MESSAGE = @as(c_int, 4195);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_SEVERITY = @as(c_int, 4196);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_RETAIN = @as(c_int, 4197);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_CONDITIONREFRESH = @as(c_int, 4198);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_CONDITIONREFRESH_INPUTARGUMENTS = @as(c_int, 4199);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_EVENTID = @as(c_int, 5113);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_EVENTTYPE = @as(c_int, 5114);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_SOURCENODE = @as(c_int, 5115);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_SOURCENAME = @as(c_int, 5116);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_TIME = @as(c_int, 5117);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_RECEIVETIME = @as(c_int, 5118);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_LOCALTIME = @as(c_int, 5119);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_MESSAGE = @as(c_int, 5120);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_SEVERITY = @as(c_int, 5121);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_RETAIN = @as(c_int, 5122);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_CONDITIONREFRESH = @as(c_int, 5123);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_CONDITIONREFRESH_INPUTARGUMENTS = @as(c_int, 5124);
pub const UA_NS0ID_ALARMCONDITIONTYPE_EVENTID = @as(c_int, 5540);
pub const UA_NS0ID_ALARMCONDITIONTYPE_EVENTTYPE = @as(c_int, 5541);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SOURCENODE = @as(c_int, 5542);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SOURCENAME = @as(c_int, 5543);
pub const UA_NS0ID_ALARMCONDITIONTYPE_TIME = @as(c_int, 5544);
pub const UA_NS0ID_ALARMCONDITIONTYPE_RECEIVETIME = @as(c_int, 5545);
pub const UA_NS0ID_ALARMCONDITIONTYPE_LOCALTIME = @as(c_int, 5546);
pub const UA_NS0ID_ALARMCONDITIONTYPE_MESSAGE = @as(c_int, 5547);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SEVERITY = @as(c_int, 5548);
pub const UA_NS0ID_ALARMCONDITIONTYPE_RETAIN = @as(c_int, 5549);
pub const UA_NS0ID_ALARMCONDITIONTYPE_CONDITIONREFRESH = @as(c_int, 5550);
pub const UA_NS0ID_ALARMCONDITIONTYPE_CONDITIONREFRESH_INPUTARGUMENTS = @as(c_int, 5551);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_CURRENTSTATE = @as(c_int, 6088);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_CURRENTSTATE_ID = @as(c_int, 6089);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_CURRENTSTATE_NAME = @as(c_int, 6090);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_CURRENTSTATE_NUMBER = @as(c_int, 6091);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 6092);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_LASTTRANSITION = @as(c_int, 6093);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_LASTTRANSITION_ID = @as(c_int, 6094);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_LASTTRANSITION_NAME = @as(c_int, 6095);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_LASTTRANSITION_NUMBER = @as(c_int, 6096);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 6097);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_UNSHELVED_STATENUMBER = @as(c_int, 6098);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_TIMEDSHELVED_STATENUMBER = @as(c_int, 6100);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_ONESHOTSHELVED_STATENUMBER = @as(c_int, 6101);
pub const UA_NS0ID_TIMEDSHELVEMETHODTYPE = @as(c_int, 6102);
pub const UA_NS0ID_TIMEDSHELVEMETHODTYPE_INPUTARGUMENTS = @as(c_int, 6103);
pub const UA_NS0ID_LIMITALARMTYPE_EVENTID = @as(c_int, 6116);
pub const UA_NS0ID_LIMITALARMTYPE_EVENTTYPE = @as(c_int, 6117);
pub const UA_NS0ID_LIMITALARMTYPE_SOURCENODE = @as(c_int, 6118);
pub const UA_NS0ID_LIMITALARMTYPE_SOURCENAME = @as(c_int, 6119);
pub const UA_NS0ID_LIMITALARMTYPE_TIME = @as(c_int, 6120);
pub const UA_NS0ID_LIMITALARMTYPE_RECEIVETIME = @as(c_int, 6121);
pub const UA_NS0ID_LIMITALARMTYPE_LOCALTIME = @as(c_int, 6122);
pub const UA_NS0ID_LIMITALARMTYPE_MESSAGE = @as(c_int, 6123);
pub const UA_NS0ID_LIMITALARMTYPE_SEVERITY = @as(c_int, 6124);
pub const UA_NS0ID_LIMITALARMTYPE_RETAIN = @as(c_int, 6125);
pub const UA_NS0ID_LIMITALARMTYPE_CONDITIONREFRESH = @as(c_int, 6126);
pub const UA_NS0ID_LIMITALARMTYPE_CONDITIONREFRESH_INPUTARGUMENTS = @as(c_int, 6127);
pub const UA_NS0ID_IDTYPE_ENUMSTRINGS = @as(c_int, 7591);
pub const UA_NS0ID_ENUMVALUETYPE = @as(c_int, 7594);
pub const UA_NS0ID_MESSAGESECURITYMODE_ENUMSTRINGS = @as(c_int, 7595);
pub const UA_NS0ID_USERTOKENTYPE_ENUMSTRINGS = @as(c_int, 7596);
pub const UA_NS0ID_APPLICATIONTYPE_ENUMSTRINGS = @as(c_int, 7597);
pub const UA_NS0ID_SECURITYTOKENREQUESTTYPE_ENUMSTRINGS = @as(c_int, 7598);
pub const UA_NS0ID_BROWSEDIRECTION_ENUMSTRINGS = @as(c_int, 7603);
pub const UA_NS0ID_FILTEROPERATOR_ENUMSTRINGS = @as(c_int, 7605);
pub const UA_NS0ID_TIMESTAMPSTORETURN_ENUMSTRINGS = @as(c_int, 7606);
pub const UA_NS0ID_MONITORINGMODE_ENUMSTRINGS = @as(c_int, 7608);
pub const UA_NS0ID_DATACHANGETRIGGER_ENUMSTRINGS = @as(c_int, 7609);
pub const UA_NS0ID_DEADBANDTYPE_ENUMSTRINGS = @as(c_int, 7610);
pub const UA_NS0ID_REDUNDANCYSUPPORT_ENUMSTRINGS = @as(c_int, 7611);
pub const UA_NS0ID_SERVERSTATE_ENUMSTRINGS = @as(c_int, 7612);
pub const UA_NS0ID_EXCEPTIONDEVIATIONFORMAT_ENUMSTRINGS = @as(c_int, 7614);
pub const UA_NS0ID_ENUMVALUETYPE_ENCODING_DEFAULTXML = @as(c_int, 7616);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA = @as(c_int, 7617);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATATYPEVERSION = @as(c_int, 7618);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_NAMESPACEURI = @as(c_int, 7619);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ARGUMENT = @as(c_int, 7650);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ARGUMENT_DATATYPEVERSION = @as(c_int, 7651);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ARGUMENT_DICTIONARYFRAGMENT = @as(c_int, 7652);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ENUMVALUETYPE = @as(c_int, 7656);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ENUMVALUETYPE_DATATYPEVERSION = @as(c_int, 7657);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ENUMVALUETYPE_DICTIONARYFRAGMENT = @as(c_int, 7658);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_STATUSRESULT = @as(c_int, 7659);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_STATUSRESULT_DATATYPEVERSION = @as(c_int, 7660);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_STATUSRESULT_DICTIONARYFRAGMENT = @as(c_int, 7661);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_USERTOKENPOLICY = @as(c_int, 7662);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_USERTOKENPOLICY_DATATYPEVERSION = @as(c_int, 7663);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_USERTOKENPOLICY_DICTIONARYFRAGMENT = @as(c_int, 7664);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_APPLICATIONDESCRIPTION = @as(c_int, 7665);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_APPLICATIONDESCRIPTION_DATATYPEVERSION = @as(c_int, 7666);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_APPLICATIONDESCRIPTION_DICTIONARYFRAGMENT = @as(c_int, 7667);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ENDPOINTDESCRIPTION = @as(c_int, 7668);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ENDPOINTDESCRIPTION_DATATYPEVERSION = @as(c_int, 7669);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ENDPOINTDESCRIPTION_DICTIONARYFRAGMENT = @as(c_int, 7670);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_USERIDENTITYTOKEN = @as(c_int, 7671);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_USERIDENTITYTOKEN_DATATYPEVERSION = @as(c_int, 7672);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_USERIDENTITYTOKEN_DICTIONARYFRAGMENT = @as(c_int, 7673);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ANONYMOUSIDENTITYTOKEN = @as(c_int, 7674);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ANONYMOUSIDENTITYTOKEN_DATATYPEVERSION = @as(c_int, 7675);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ANONYMOUSIDENTITYTOKEN_DICTIONARYFRAGMENT = @as(c_int, 7676);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_USERNAMEIDENTITYTOKEN = @as(c_int, 7677);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_USERNAMEIDENTITYTOKEN_DATATYPEVERSION = @as(c_int, 7678);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_USERNAMEIDENTITYTOKEN_DICTIONARYFRAGMENT = @as(c_int, 7679);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_X509IDENTITYTOKEN = @as(c_int, 7680);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_X509IDENTITYTOKEN_DATATYPEVERSION = @as(c_int, 7681);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_X509IDENTITYTOKEN_DICTIONARYFRAGMENT = @as(c_int, 7682);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ISSUEDIDENTITYTOKEN = @as(c_int, 7683);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ISSUEDIDENTITYTOKEN_DATATYPEVERSION = @as(c_int, 7684);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ISSUEDIDENTITYTOKEN_DICTIONARYFRAGMENT = @as(c_int, 7685);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ENDPOINTCONFIGURATION = @as(c_int, 7686);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ENDPOINTCONFIGURATION_DATATYPEVERSION = @as(c_int, 7687);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ENDPOINTCONFIGURATION_DICTIONARYFRAGMENT = @as(c_int, 7688);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_BUILDINFO = @as(c_int, 7692);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_BUILDINFO_DATATYPEVERSION = @as(c_int, 7693);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_BUILDINFO_DICTIONARYFRAGMENT = @as(c_int, 7694);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SIGNEDSOFTWARECERTIFICATE = @as(c_int, 7698);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SIGNEDSOFTWARECERTIFICATE_DATATYPEVERSION = @as(c_int, 7699);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SIGNEDSOFTWARECERTIFICATE_DICTIONARYFRAGMENT = @as(c_int, 7700);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ADDNODESITEM = @as(c_int, 7728);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ADDNODESITEM_DATATYPEVERSION = @as(c_int, 7729);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ADDNODESITEM_DICTIONARYFRAGMENT = @as(c_int, 7730);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ADDREFERENCESITEM = @as(c_int, 7731);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ADDREFERENCESITEM_DATATYPEVERSION = @as(c_int, 7732);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ADDREFERENCESITEM_DICTIONARYFRAGMENT = @as(c_int, 7733);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DELETENODESITEM = @as(c_int, 7734);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DELETENODESITEM_DATATYPEVERSION = @as(c_int, 7735);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DELETENODESITEM_DICTIONARYFRAGMENT = @as(c_int, 7736);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DELETEREFERENCESITEM = @as(c_int, 7737);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DELETEREFERENCESITEM_DATATYPEVERSION = @as(c_int, 7738);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DELETEREFERENCESITEM_DICTIONARYFRAGMENT = @as(c_int, 7739);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_REGISTEREDSERVER = @as(c_int, 7782);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_REGISTEREDSERVER_DATATYPEVERSION = @as(c_int, 7783);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_REGISTEREDSERVER_DICTIONARYFRAGMENT = @as(c_int, 7784);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_CONTENTFILTERELEMENT = @as(c_int, 7929);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_CONTENTFILTERELEMENT_DATATYPEVERSION = @as(c_int, 7930);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_CONTENTFILTERELEMENT_DICTIONARYFRAGMENT = @as(c_int, 7931);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_CONTENTFILTER = @as(c_int, 7932);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_CONTENTFILTER_DATATYPEVERSION = @as(c_int, 7933);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_CONTENTFILTER_DICTIONARYFRAGMENT = @as(c_int, 7934);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_FILTEROPERAND = @as(c_int, 7935);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_FILTEROPERAND_DATATYPEVERSION = @as(c_int, 7936);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_FILTEROPERAND_DICTIONARYFRAGMENT = @as(c_int, 7937);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ELEMENTOPERAND = @as(c_int, 7938);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ELEMENTOPERAND_DATATYPEVERSION = @as(c_int, 7939);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ELEMENTOPERAND_DICTIONARYFRAGMENT = @as(c_int, 7940);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_LITERALOPERAND = @as(c_int, 7941);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_LITERALOPERAND_DATATYPEVERSION = @as(c_int, 7942);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_LITERALOPERAND_DICTIONARYFRAGMENT = @as(c_int, 7943);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ATTRIBUTEOPERAND = @as(c_int, 7944);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ATTRIBUTEOPERAND_DATATYPEVERSION = @as(c_int, 7945);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ATTRIBUTEOPERAND_DICTIONARYFRAGMENT = @as(c_int, 7946);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SIMPLEATTRIBUTEOPERAND = @as(c_int, 7947);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SIMPLEATTRIBUTEOPERAND_DATATYPEVERSION = @as(c_int, 7948);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SIMPLEATTRIBUTEOPERAND_DICTIONARYFRAGMENT = @as(c_int, 7949);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_HISTORYEVENT = @as(c_int, 8004);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_HISTORYEVENT_DATATYPEVERSION = @as(c_int, 8005);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_HISTORYEVENT_DICTIONARYFRAGMENT = @as(c_int, 8006);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_MONITORINGFILTER = @as(c_int, 8067);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_MONITORINGFILTER_DATATYPEVERSION = @as(c_int, 8068);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_MONITORINGFILTER_DICTIONARYFRAGMENT = @as(c_int, 8069);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_EVENTFILTER = @as(c_int, 8073);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_EVENTFILTER_DATATYPEVERSION = @as(c_int, 8074);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_EVENTFILTER_DICTIONARYFRAGMENT = @as(c_int, 8075);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_AGGREGATECONFIGURATION = @as(c_int, 8076);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_AGGREGATECONFIGURATION_DATATYPEVERSION = @as(c_int, 8077);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_AGGREGATECONFIGURATION_DICTIONARYFRAGMENT = @as(c_int, 8078);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_HISTORYEVENTFIELDLIST = @as(c_int, 8172);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_HISTORYEVENTFIELDLIST_DATATYPEVERSION = @as(c_int, 8173);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_HISTORYEVENTFIELDLIST_DICTIONARYFRAGMENT = @as(c_int, 8174);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_REDUNDANTSERVERDATATYPE = @as(c_int, 8208);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_REDUNDANTSERVERDATATYPE_DATATYPEVERSION = @as(c_int, 8209);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_REDUNDANTSERVERDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 8210);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SAMPLINGINTERVALDIAGNOSTICSDATATYPE = @as(c_int, 8211);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SAMPLINGINTERVALDIAGNOSTICSDATATYPE_DATATYPEVERSION = @as(c_int, 8212);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SAMPLINGINTERVALDIAGNOSTICSDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 8213);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SERVERDIAGNOSTICSSUMMARYDATATYPE = @as(c_int, 8214);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SERVERDIAGNOSTICSSUMMARYDATATYPE_DATATYPEVERSION = @as(c_int, 8215);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SERVERDIAGNOSTICSSUMMARYDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 8216);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SERVERSTATUSDATATYPE = @as(c_int, 8217);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SERVERSTATUSDATATYPE_DATATYPEVERSION = @as(c_int, 8218);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SERVERSTATUSDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 8219);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SESSIONDIAGNOSTICSDATATYPE = @as(c_int, 8220);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SESSIONDIAGNOSTICSDATATYPE_DATATYPEVERSION = @as(c_int, 8221);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SESSIONDIAGNOSTICSDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 8222);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SESSIONSECURITYDIAGNOSTICSDATATYPE = @as(c_int, 8223);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SESSIONSECURITYDIAGNOSTICSDATATYPE_DATATYPEVERSION = @as(c_int, 8224);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SESSIONSECURITYDIAGNOSTICSDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 8225);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SERVICECOUNTERDATATYPE = @as(c_int, 8226);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SERVICECOUNTERDATATYPE_DATATYPEVERSION = @as(c_int, 8227);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SERVICECOUNTERDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 8228);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SUBSCRIPTIONDIAGNOSTICSDATATYPE = @as(c_int, 8229);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SUBSCRIPTIONDIAGNOSTICSDATATYPE_DATATYPEVERSION = @as(c_int, 8230);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SUBSCRIPTIONDIAGNOSTICSDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 8231);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_MODELCHANGESTRUCTUREDATATYPE = @as(c_int, 8232);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_MODELCHANGESTRUCTUREDATATYPE_DATATYPEVERSION = @as(c_int, 8233);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_MODELCHANGESTRUCTUREDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 8234);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SEMANTICCHANGESTRUCTUREDATATYPE = @as(c_int, 8235);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SEMANTICCHANGESTRUCTUREDATATYPE_DATATYPEVERSION = @as(c_int, 8236);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SEMANTICCHANGESTRUCTUREDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 8237);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_RANGE = @as(c_int, 8238);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_RANGE_DATATYPEVERSION = @as(c_int, 8239);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_RANGE_DICTIONARYFRAGMENT = @as(c_int, 8240);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_EUINFORMATION = @as(c_int, 8241);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_EUINFORMATION_DATATYPEVERSION = @as(c_int, 8242);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_EUINFORMATION_DICTIONARYFRAGMENT = @as(c_int, 8243);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ANNOTATION = @as(c_int, 8244);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ANNOTATION_DATATYPEVERSION = @as(c_int, 8245);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ANNOTATION_DICTIONARYFRAGMENT = @as(c_int, 8246);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PROGRAMDIAGNOSTICDATATYPE = @as(c_int, 8247);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PROGRAMDIAGNOSTICDATATYPE_DATATYPEVERSION = @as(c_int, 8248);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PROGRAMDIAGNOSTICDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 8249);
pub const UA_NS0ID_ENUMVALUETYPE_ENCODING_DEFAULTBINARY = @as(c_int, 8251);
pub const UA_NS0ID_OPCUA_XMLSCHEMA = @as(c_int, 8252);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATATYPEVERSION = @as(c_int, 8253);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_NAMESPACEURI = @as(c_int, 8254);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ARGUMENT = @as(c_int, 8285);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ARGUMENT_DATATYPEVERSION = @as(c_int, 8286);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ARGUMENT_DICTIONARYFRAGMENT = @as(c_int, 8287);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ENUMVALUETYPE = @as(c_int, 8291);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ENUMVALUETYPE_DATATYPEVERSION = @as(c_int, 8292);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ENUMVALUETYPE_DICTIONARYFRAGMENT = @as(c_int, 8293);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_STATUSRESULT = @as(c_int, 8294);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_STATUSRESULT_DATATYPEVERSION = @as(c_int, 8295);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_STATUSRESULT_DICTIONARYFRAGMENT = @as(c_int, 8296);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_USERTOKENPOLICY = @as(c_int, 8297);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_USERTOKENPOLICY_DATATYPEVERSION = @as(c_int, 8298);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_USERTOKENPOLICY_DICTIONARYFRAGMENT = @as(c_int, 8299);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_APPLICATIONDESCRIPTION = @as(c_int, 8300);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_APPLICATIONDESCRIPTION_DATATYPEVERSION = @as(c_int, 8301);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_APPLICATIONDESCRIPTION_DICTIONARYFRAGMENT = @as(c_int, 8302);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ENDPOINTDESCRIPTION = @as(c_int, 8303);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ENDPOINTDESCRIPTION_DATATYPEVERSION = @as(c_int, 8304);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ENDPOINTDESCRIPTION_DICTIONARYFRAGMENT = @as(c_int, 8305);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_USERIDENTITYTOKEN = @as(c_int, 8306);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_USERIDENTITYTOKEN_DATATYPEVERSION = @as(c_int, 8307);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_USERIDENTITYTOKEN_DICTIONARYFRAGMENT = @as(c_int, 8308);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ANONYMOUSIDENTITYTOKEN = @as(c_int, 8309);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ANONYMOUSIDENTITYTOKEN_DATATYPEVERSION = @as(c_int, 8310);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ANONYMOUSIDENTITYTOKEN_DICTIONARYFRAGMENT = @as(c_int, 8311);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_USERNAMEIDENTITYTOKEN = @as(c_int, 8312);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_USERNAMEIDENTITYTOKEN_DATATYPEVERSION = @as(c_int, 8313);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_USERNAMEIDENTITYTOKEN_DICTIONARYFRAGMENT = @as(c_int, 8314);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_X509IDENTITYTOKEN = @as(c_int, 8315);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_X509IDENTITYTOKEN_DATATYPEVERSION = @as(c_int, 8316);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_X509IDENTITYTOKEN_DICTIONARYFRAGMENT = @as(c_int, 8317);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ISSUEDIDENTITYTOKEN = @as(c_int, 8318);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ISSUEDIDENTITYTOKEN_DATATYPEVERSION = @as(c_int, 8319);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ISSUEDIDENTITYTOKEN_DICTIONARYFRAGMENT = @as(c_int, 8320);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ENDPOINTCONFIGURATION = @as(c_int, 8321);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ENDPOINTCONFIGURATION_DATATYPEVERSION = @as(c_int, 8322);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ENDPOINTCONFIGURATION_DICTIONARYFRAGMENT = @as(c_int, 8323);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_BUILDINFO = @as(c_int, 8327);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_BUILDINFO_DATATYPEVERSION = @as(c_int, 8328);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_BUILDINFO_DICTIONARYFRAGMENT = @as(c_int, 8329);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SIGNEDSOFTWARECERTIFICATE = @as(c_int, 8333);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SIGNEDSOFTWARECERTIFICATE_DATATYPEVERSION = @as(c_int, 8334);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SIGNEDSOFTWARECERTIFICATE_DICTIONARYFRAGMENT = @as(c_int, 8335);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ADDNODESITEM = @as(c_int, 8363);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ADDNODESITEM_DATATYPEVERSION = @as(c_int, 8364);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ADDNODESITEM_DICTIONARYFRAGMENT = @as(c_int, 8365);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ADDREFERENCESITEM = @as(c_int, 8366);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ADDREFERENCESITEM_DATATYPEVERSION = @as(c_int, 8367);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ADDREFERENCESITEM_DICTIONARYFRAGMENT = @as(c_int, 8368);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DELETENODESITEM = @as(c_int, 8369);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DELETENODESITEM_DATATYPEVERSION = @as(c_int, 8370);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DELETENODESITEM_DICTIONARYFRAGMENT = @as(c_int, 8371);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DELETEREFERENCESITEM = @as(c_int, 8372);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DELETEREFERENCESITEM_DATATYPEVERSION = @as(c_int, 8373);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DELETEREFERENCESITEM_DICTIONARYFRAGMENT = @as(c_int, 8374);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_REGISTEREDSERVER = @as(c_int, 8417);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_REGISTEREDSERVER_DATATYPEVERSION = @as(c_int, 8418);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_REGISTEREDSERVER_DICTIONARYFRAGMENT = @as(c_int, 8419);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_CONTENTFILTERELEMENT = @as(c_int, 8564);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_CONTENTFILTERELEMENT_DATATYPEVERSION = @as(c_int, 8565);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_CONTENTFILTERELEMENT_DICTIONARYFRAGMENT = @as(c_int, 8566);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_CONTENTFILTER = @as(c_int, 8567);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_CONTENTFILTER_DATATYPEVERSION = @as(c_int, 8568);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_CONTENTFILTER_DICTIONARYFRAGMENT = @as(c_int, 8569);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_FILTEROPERAND = @as(c_int, 8570);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_FILTEROPERAND_DATATYPEVERSION = @as(c_int, 8571);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_FILTEROPERAND_DICTIONARYFRAGMENT = @as(c_int, 8572);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ELEMENTOPERAND = @as(c_int, 8573);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ELEMENTOPERAND_DATATYPEVERSION = @as(c_int, 8574);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ELEMENTOPERAND_DICTIONARYFRAGMENT = @as(c_int, 8575);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_LITERALOPERAND = @as(c_int, 8576);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_LITERALOPERAND_DATATYPEVERSION = @as(c_int, 8577);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_LITERALOPERAND_DICTIONARYFRAGMENT = @as(c_int, 8578);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ATTRIBUTEOPERAND = @as(c_int, 8579);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ATTRIBUTEOPERAND_DATATYPEVERSION = @as(c_int, 8580);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ATTRIBUTEOPERAND_DICTIONARYFRAGMENT = @as(c_int, 8581);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SIMPLEATTRIBUTEOPERAND = @as(c_int, 8582);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SIMPLEATTRIBUTEOPERAND_DATATYPEVERSION = @as(c_int, 8583);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SIMPLEATTRIBUTEOPERAND_DICTIONARYFRAGMENT = @as(c_int, 8584);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_HISTORYEVENT = @as(c_int, 8639);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_HISTORYEVENT_DATATYPEVERSION = @as(c_int, 8640);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_HISTORYEVENT_DICTIONARYFRAGMENT = @as(c_int, 8641);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_MONITORINGFILTER = @as(c_int, 8702);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_MONITORINGFILTER_DATATYPEVERSION = @as(c_int, 8703);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_MONITORINGFILTER_DICTIONARYFRAGMENT = @as(c_int, 8704);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_EVENTFILTER = @as(c_int, 8708);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_EVENTFILTER_DATATYPEVERSION = @as(c_int, 8709);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_EVENTFILTER_DICTIONARYFRAGMENT = @as(c_int, 8710);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_AGGREGATECONFIGURATION = @as(c_int, 8711);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_AGGREGATECONFIGURATION_DATATYPEVERSION = @as(c_int, 8712);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_AGGREGATECONFIGURATION_DICTIONARYFRAGMENT = @as(c_int, 8713);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_HISTORYEVENTFIELDLIST = @as(c_int, 8807);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_HISTORYEVENTFIELDLIST_DATATYPEVERSION = @as(c_int, 8808);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_HISTORYEVENTFIELDLIST_DICTIONARYFRAGMENT = @as(c_int, 8809);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_REDUNDANTSERVERDATATYPE = @as(c_int, 8843);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_REDUNDANTSERVERDATATYPE_DATATYPEVERSION = @as(c_int, 8844);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_REDUNDANTSERVERDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 8845);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SAMPLINGINTERVALDIAGNOSTICSDATATYPE = @as(c_int, 8846);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SAMPLINGINTERVALDIAGNOSTICSDATATYPE_DATATYPEVERSION = @as(c_int, 8847);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SAMPLINGINTERVALDIAGNOSTICSDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 8848);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SERVERDIAGNOSTICSSUMMARYDATATYPE = @as(c_int, 8849);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SERVERDIAGNOSTICSSUMMARYDATATYPE_DATATYPEVERSION = @as(c_int, 8850);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SERVERDIAGNOSTICSSUMMARYDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 8851);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SERVERSTATUSDATATYPE = @as(c_int, 8852);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SERVERSTATUSDATATYPE_DATATYPEVERSION = @as(c_int, 8853);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SERVERSTATUSDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 8854);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SESSIONDIAGNOSTICSDATATYPE = @as(c_int, 8855);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SESSIONDIAGNOSTICSDATATYPE_DATATYPEVERSION = @as(c_int, 8856);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SESSIONDIAGNOSTICSDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 8857);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SESSIONSECURITYDIAGNOSTICSDATATYPE = @as(c_int, 8858);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SESSIONSECURITYDIAGNOSTICSDATATYPE_DATATYPEVERSION = @as(c_int, 8859);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SESSIONSECURITYDIAGNOSTICSDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 8860);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SERVICECOUNTERDATATYPE = @as(c_int, 8861);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SERVICECOUNTERDATATYPE_DATATYPEVERSION = @as(c_int, 8862);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SERVICECOUNTERDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 8863);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SUBSCRIPTIONDIAGNOSTICSDATATYPE = @as(c_int, 8864);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SUBSCRIPTIONDIAGNOSTICSDATATYPE_DATATYPEVERSION = @as(c_int, 8865);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SUBSCRIPTIONDIAGNOSTICSDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 8866);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_MODELCHANGESTRUCTUREDATATYPE = @as(c_int, 8867);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_MODELCHANGESTRUCTUREDATATYPE_DATATYPEVERSION = @as(c_int, 8868);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_MODELCHANGESTRUCTUREDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 8869);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SEMANTICCHANGESTRUCTUREDATATYPE = @as(c_int, 8870);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SEMANTICCHANGESTRUCTUREDATATYPE_DATATYPEVERSION = @as(c_int, 8871);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SEMANTICCHANGESTRUCTUREDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 8872);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_RANGE = @as(c_int, 8873);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_RANGE_DATATYPEVERSION = @as(c_int, 8874);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_RANGE_DICTIONARYFRAGMENT = @as(c_int, 8875);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_EUINFORMATION = @as(c_int, 8876);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_EUINFORMATION_DATATYPEVERSION = @as(c_int, 8877);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_EUINFORMATION_DICTIONARYFRAGMENT = @as(c_int, 8878);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ANNOTATION = @as(c_int, 8879);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ANNOTATION_DATATYPEVERSION = @as(c_int, 8880);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ANNOTATION_DICTIONARYFRAGMENT = @as(c_int, 8881);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PROGRAMDIAGNOSTICDATATYPE = @as(c_int, 8882);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PROGRAMDIAGNOSTICDATATYPE_DATATYPEVERSION = @as(c_int, 8883);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PROGRAMDIAGNOSTICDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 8884);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_MAXLIFETIMECOUNT = @as(c_int, 8888);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_LATEPUBLISHREQUESTCOUNT = @as(c_int, 8889);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_CURRENTKEEPALIVECOUNT = @as(c_int, 8890);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_CURRENTLIFETIMECOUNT = @as(c_int, 8891);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_UNACKNOWLEDGEDMESSAGECOUNT = @as(c_int, 8892);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_DISCARDEDMESSAGECOUNT = @as(c_int, 8893);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_MONITOREDITEMCOUNT = @as(c_int, 8894);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_DISABLEDMONITOREDITEMCOUNT = @as(c_int, 8895);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_MONITORINGQUEUEOVERFLOWCOUNT = @as(c_int, 8896);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_NEXTSEQUENCENUMBER = @as(c_int, 8897);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_TOTALREQUESTCOUNT = @as(c_int, 8898);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_TOTALREQUESTCOUNT = @as(c_int, 8900);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSTYPE_EVENTQUEUEOVERFLOWCOUNT = @as(c_int, 8902);
pub const UA_NS0ID_TIMEZONEDATATYPE = @as(c_int, 8912);
pub const UA_NS0ID_TIMEZONEDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 8913);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_TIMEZONEDATATYPE = @as(c_int, 8914);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_TIMEZONEDATATYPE_DATATYPEVERSION = @as(c_int, 8915);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_TIMEZONEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 8916);
pub const UA_NS0ID_TIMEZONEDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 8917);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_TIMEZONEDATATYPE = @as(c_int, 8918);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_TIMEZONEDATATYPE_DATATYPEVERSION = @as(c_int, 8919);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_TIMEZONEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 8920);
pub const UA_NS0ID_AUDITCONDITIONRESPONDEVENTTYPE = @as(c_int, 8927);
pub const UA_NS0ID_AUDITCONDITIONRESPONDEVENTTYPE_EVENTID = @as(c_int, 8928);
pub const UA_NS0ID_AUDITCONDITIONRESPONDEVENTTYPE_EVENTTYPE = @as(c_int, 8929);
pub const UA_NS0ID_AUDITCONDITIONRESPONDEVENTTYPE_SOURCENODE = @as(c_int, 8930);
pub const UA_NS0ID_AUDITCONDITIONRESPONDEVENTTYPE_SOURCENAME = @as(c_int, 8931);
pub const UA_NS0ID_AUDITCONDITIONRESPONDEVENTTYPE_TIME = @as(c_int, 8932);
pub const UA_NS0ID_AUDITCONDITIONRESPONDEVENTTYPE_RECEIVETIME = @as(c_int, 8933);
pub const UA_NS0ID_AUDITCONDITIONRESPONDEVENTTYPE_LOCALTIME = @as(c_int, 8934);
pub const UA_NS0ID_AUDITCONDITIONRESPONDEVENTTYPE_MESSAGE = @as(c_int, 8935);
pub const UA_NS0ID_AUDITCONDITIONRESPONDEVENTTYPE_SEVERITY = @as(c_int, 8936);
pub const UA_NS0ID_AUDITCONDITIONRESPONDEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 8937);
pub const UA_NS0ID_AUDITCONDITIONRESPONDEVENTTYPE_STATUS = @as(c_int, 8938);
pub const UA_NS0ID_AUDITCONDITIONRESPONDEVENTTYPE_SERVERID = @as(c_int, 8939);
pub const UA_NS0ID_AUDITCONDITIONRESPONDEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 8940);
pub const UA_NS0ID_AUDITCONDITIONRESPONDEVENTTYPE_CLIENTUSERID = @as(c_int, 8941);
pub const UA_NS0ID_AUDITCONDITIONRESPONDEVENTTYPE_METHODID = @as(c_int, 8942);
pub const UA_NS0ID_AUDITCONDITIONRESPONDEVENTTYPE_INPUTARGUMENTS = @as(c_int, 8943);
pub const UA_NS0ID_AUDITCONDITIONACKNOWLEDGEEVENTTYPE = @as(c_int, 8944);
pub const UA_NS0ID_AUDITCONDITIONACKNOWLEDGEEVENTTYPE_EVENTID = @as(c_int, 8945);
pub const UA_NS0ID_AUDITCONDITIONACKNOWLEDGEEVENTTYPE_EVENTTYPE = @as(c_int, 8946);
pub const UA_NS0ID_AUDITCONDITIONACKNOWLEDGEEVENTTYPE_SOURCENODE = @as(c_int, 8947);
pub const UA_NS0ID_AUDITCONDITIONACKNOWLEDGEEVENTTYPE_SOURCENAME = @as(c_int, 8948);
pub const UA_NS0ID_AUDITCONDITIONACKNOWLEDGEEVENTTYPE_TIME = @as(c_int, 8949);
pub const UA_NS0ID_AUDITCONDITIONACKNOWLEDGEEVENTTYPE_RECEIVETIME = @as(c_int, 8950);
pub const UA_NS0ID_AUDITCONDITIONACKNOWLEDGEEVENTTYPE_LOCALTIME = @as(c_int, 8951);
pub const UA_NS0ID_AUDITCONDITIONACKNOWLEDGEEVENTTYPE_MESSAGE = @as(c_int, 8952);
pub const UA_NS0ID_AUDITCONDITIONACKNOWLEDGEEVENTTYPE_SEVERITY = @as(c_int, 8953);
pub const UA_NS0ID_AUDITCONDITIONACKNOWLEDGEEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 8954);
pub const UA_NS0ID_AUDITCONDITIONACKNOWLEDGEEVENTTYPE_STATUS = @as(c_int, 8955);
pub const UA_NS0ID_AUDITCONDITIONACKNOWLEDGEEVENTTYPE_SERVERID = @as(c_int, 8956);
pub const UA_NS0ID_AUDITCONDITIONACKNOWLEDGEEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 8957);
pub const UA_NS0ID_AUDITCONDITIONACKNOWLEDGEEVENTTYPE_CLIENTUSERID = @as(c_int, 8958);
pub const UA_NS0ID_AUDITCONDITIONACKNOWLEDGEEVENTTYPE_METHODID = @as(c_int, 8959);
pub const UA_NS0ID_AUDITCONDITIONACKNOWLEDGEEVENTTYPE_INPUTARGUMENTS = @as(c_int, 8960);
pub const UA_NS0ID_AUDITCONDITIONCONFIRMEVENTTYPE = @as(c_int, 8961);
pub const UA_NS0ID_AUDITCONDITIONCONFIRMEVENTTYPE_EVENTID = @as(c_int, 8962);
pub const UA_NS0ID_AUDITCONDITIONCONFIRMEVENTTYPE_EVENTTYPE = @as(c_int, 8963);
pub const UA_NS0ID_AUDITCONDITIONCONFIRMEVENTTYPE_SOURCENODE = @as(c_int, 8964);
pub const UA_NS0ID_AUDITCONDITIONCONFIRMEVENTTYPE_SOURCENAME = @as(c_int, 8965);
pub const UA_NS0ID_AUDITCONDITIONCONFIRMEVENTTYPE_TIME = @as(c_int, 8966);
pub const UA_NS0ID_AUDITCONDITIONCONFIRMEVENTTYPE_RECEIVETIME = @as(c_int, 8967);
pub const UA_NS0ID_AUDITCONDITIONCONFIRMEVENTTYPE_LOCALTIME = @as(c_int, 8968);
pub const UA_NS0ID_AUDITCONDITIONCONFIRMEVENTTYPE_MESSAGE = @as(c_int, 8969);
pub const UA_NS0ID_AUDITCONDITIONCONFIRMEVENTTYPE_SEVERITY = @as(c_int, 8970);
pub const UA_NS0ID_AUDITCONDITIONCONFIRMEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 8971);
pub const UA_NS0ID_AUDITCONDITIONCONFIRMEVENTTYPE_STATUS = @as(c_int, 8972);
pub const UA_NS0ID_AUDITCONDITIONCONFIRMEVENTTYPE_SERVERID = @as(c_int, 8973);
pub const UA_NS0ID_AUDITCONDITIONCONFIRMEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 8974);
pub const UA_NS0ID_AUDITCONDITIONCONFIRMEVENTTYPE_CLIENTUSERID = @as(c_int, 8975);
pub const UA_NS0ID_AUDITCONDITIONCONFIRMEVENTTYPE_METHODID = @as(c_int, 8976);
pub const UA_NS0ID_AUDITCONDITIONCONFIRMEVENTTYPE_INPUTARGUMENTS = @as(c_int, 8977);
pub const UA_NS0ID_TWOSTATEVARIABLETYPE = @as(c_int, 8995);
pub const UA_NS0ID_TWOSTATEVARIABLETYPE_ID = @as(c_int, 8996);
pub const UA_NS0ID_TWOSTATEVARIABLETYPE_NAME = @as(c_int, 8997);
pub const UA_NS0ID_TWOSTATEVARIABLETYPE_NUMBER = @as(c_int, 8998);
pub const UA_NS0ID_TWOSTATEVARIABLETYPE_EFFECTIVEDISPLAYNAME = @as(c_int, 8999);
pub const UA_NS0ID_TWOSTATEVARIABLETYPE_TRANSITIONTIME = @as(c_int, 9000);
pub const UA_NS0ID_TWOSTATEVARIABLETYPE_EFFECTIVETRANSITIONTIME = @as(c_int, 9001);
pub const UA_NS0ID_CONDITIONVARIABLETYPE = @as(c_int, 9002);
pub const UA_NS0ID_CONDITIONVARIABLETYPE_SOURCETIMESTAMP = @as(c_int, 9003);
pub const UA_NS0ID_HASTRUESUBSTATE = @as(c_int, 9004);
pub const UA_NS0ID_HASFALSESUBSTATE = @as(c_int, 9005);
pub const UA_NS0ID_HASCONDITION = @as(c_int, 9006);
pub const UA_NS0ID_CONDITIONREFRESHMETHODTYPE = @as(c_int, 9007);
pub const UA_NS0ID_CONDITIONREFRESHMETHODTYPE_INPUTARGUMENTS = @as(c_int, 9008);
pub const UA_NS0ID_CONDITIONTYPE_CONDITIONNAME = @as(c_int, 9009);
pub const UA_NS0ID_CONDITIONTYPE_BRANCHID = @as(c_int, 9010);
pub const UA_NS0ID_CONDITIONTYPE_ENABLEDSTATE = @as(c_int, 9011);
pub const UA_NS0ID_CONDITIONTYPE_ENABLEDSTATE_ID = @as(c_int, 9012);
pub const UA_NS0ID_CONDITIONTYPE_ENABLEDSTATE_NAME = @as(c_int, 9013);
pub const UA_NS0ID_CONDITIONTYPE_ENABLEDSTATE_NUMBER = @as(c_int, 9014);
pub const UA_NS0ID_CONDITIONTYPE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9015);
pub const UA_NS0ID_CONDITIONTYPE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 9016);
pub const UA_NS0ID_CONDITIONTYPE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9017);
pub const UA_NS0ID_CONDITIONTYPE_ENABLEDSTATE_TRUESTATE = @as(c_int, 9018);
pub const UA_NS0ID_CONDITIONTYPE_ENABLEDSTATE_FALSESTATE = @as(c_int, 9019);
pub const UA_NS0ID_CONDITIONTYPE_QUALITY = @as(c_int, 9020);
pub const UA_NS0ID_CONDITIONTYPE_QUALITY_SOURCETIMESTAMP = @as(c_int, 9021);
pub const UA_NS0ID_CONDITIONTYPE_LASTSEVERITY = @as(c_int, 9022);
pub const UA_NS0ID_CONDITIONTYPE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 9023);
pub const UA_NS0ID_CONDITIONTYPE_COMMENT = @as(c_int, 9024);
pub const UA_NS0ID_CONDITIONTYPE_COMMENT_SOURCETIMESTAMP = @as(c_int, 9025);
pub const UA_NS0ID_CONDITIONTYPE_CLIENTUSERID = @as(c_int, 9026);
pub const UA_NS0ID_CONDITIONTYPE_ENABLE = @as(c_int, 9027);
pub const UA_NS0ID_CONDITIONTYPE_DISABLE = @as(c_int, 9028);
pub const UA_NS0ID_CONDITIONTYPE_ADDCOMMENT = @as(c_int, 9029);
pub const UA_NS0ID_CONDITIONTYPE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 9030);
pub const UA_NS0ID_DIALOGRESPONSEMETHODTYPE = @as(c_int, 9031);
pub const UA_NS0ID_DIALOGRESPONSEMETHODTYPE_INPUTARGUMENTS = @as(c_int, 9032);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_CONDITIONNAME = @as(c_int, 9033);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_BRANCHID = @as(c_int, 9034);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_ENABLEDSTATE = @as(c_int, 9035);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_ENABLEDSTATE_ID = @as(c_int, 9036);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_ENABLEDSTATE_NAME = @as(c_int, 9037);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_ENABLEDSTATE_NUMBER = @as(c_int, 9038);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9039);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 9040);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9041);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_ENABLEDSTATE_TRUESTATE = @as(c_int, 9042);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_ENABLEDSTATE_FALSESTATE = @as(c_int, 9043);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_QUALITY = @as(c_int, 9044);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_QUALITY_SOURCETIMESTAMP = @as(c_int, 9045);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_LASTSEVERITY = @as(c_int, 9046);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 9047);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_COMMENT = @as(c_int, 9048);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_COMMENT_SOURCETIMESTAMP = @as(c_int, 9049);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_CLIENTUSERID = @as(c_int, 9050);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_ENABLE = @as(c_int, 9051);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_DISABLE = @as(c_int, 9052);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_ADDCOMMENT = @as(c_int, 9053);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 9054);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_DIALOGSTATE = @as(c_int, 9055);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_DIALOGSTATE_ID = @as(c_int, 9056);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_DIALOGSTATE_NAME = @as(c_int, 9057);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_DIALOGSTATE_NUMBER = @as(c_int, 9058);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_DIALOGSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9059);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_DIALOGSTATE_TRANSITIONTIME = @as(c_int, 9060);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_DIALOGSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9061);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_DIALOGSTATE_TRUESTATE = @as(c_int, 9062);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_DIALOGSTATE_FALSESTATE = @as(c_int, 9063);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_RESPONSEOPTIONSET = @as(c_int, 9064);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_DEFAULTRESPONSE = @as(c_int, 9065);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_OKRESPONSE = @as(c_int, 9066);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_CANCELRESPONSE = @as(c_int, 9067);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_LASTRESPONSE = @as(c_int, 9068);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_RESPOND = @as(c_int, 9069);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_RESPOND_INPUTARGUMENTS = @as(c_int, 9070);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_CONDITIONNAME = @as(c_int, 9071);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_BRANCHID = @as(c_int, 9072);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_ENABLEDSTATE = @as(c_int, 9073);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_ENABLEDSTATE_ID = @as(c_int, 9074);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_ENABLEDSTATE_NAME = @as(c_int, 9075);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_ENABLEDSTATE_NUMBER = @as(c_int, 9076);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9077);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 9078);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9079);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_ENABLEDSTATE_TRUESTATE = @as(c_int, 9080);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_ENABLEDSTATE_FALSESTATE = @as(c_int, 9081);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_QUALITY = @as(c_int, 9082);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_QUALITY_SOURCETIMESTAMP = @as(c_int, 9083);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_LASTSEVERITY = @as(c_int, 9084);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 9085);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_COMMENT = @as(c_int, 9086);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_COMMENT_SOURCETIMESTAMP = @as(c_int, 9087);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_CLIENTUSERID = @as(c_int, 9088);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_ENABLE = @as(c_int, 9089);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_DISABLE = @as(c_int, 9090);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_ADDCOMMENT = @as(c_int, 9091);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 9092);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_ACKEDSTATE = @as(c_int, 9093);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_ACKEDSTATE_ID = @as(c_int, 9094);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_ACKEDSTATE_NAME = @as(c_int, 9095);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_ACKEDSTATE_NUMBER = @as(c_int, 9096);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9097);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 9098);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9099);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_ACKEDSTATE_TRUESTATE = @as(c_int, 9100);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_ACKEDSTATE_FALSESTATE = @as(c_int, 9101);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_CONFIRMEDSTATE = @as(c_int, 9102);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_CONFIRMEDSTATE_ID = @as(c_int, 9103);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_CONFIRMEDSTATE_NAME = @as(c_int, 9104);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_CONFIRMEDSTATE_NUMBER = @as(c_int, 9105);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9106);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 9107);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9108);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 9109);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 9110);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_ACKNOWLEDGE = @as(c_int, 9111);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 9112);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_CONFIRM = @as(c_int, 9113);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_CONFIRM_INPUTARGUMENTS = @as(c_int, 9114);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_UNSHELVETIME = @as(c_int, 9115);
pub const UA_NS0ID_ALARMCONDITIONTYPE_CONDITIONNAME = @as(c_int, 9116);
pub const UA_NS0ID_ALARMCONDITIONTYPE_BRANCHID = @as(c_int, 9117);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ENABLEDSTATE = @as(c_int, 9118);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ENABLEDSTATE_ID = @as(c_int, 9119);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ENABLEDSTATE_NAME = @as(c_int, 9120);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ENABLEDSTATE_NUMBER = @as(c_int, 9121);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9122);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 9123);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9124);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ENABLEDSTATE_TRUESTATE = @as(c_int, 9125);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ENABLEDSTATE_FALSESTATE = @as(c_int, 9126);
pub const UA_NS0ID_ALARMCONDITIONTYPE_QUALITY = @as(c_int, 9127);
pub const UA_NS0ID_ALARMCONDITIONTYPE_QUALITY_SOURCETIMESTAMP = @as(c_int, 9128);
pub const UA_NS0ID_ALARMCONDITIONTYPE_LASTSEVERITY = @as(c_int, 9129);
pub const UA_NS0ID_ALARMCONDITIONTYPE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 9130);
pub const UA_NS0ID_ALARMCONDITIONTYPE_COMMENT = @as(c_int, 9131);
pub const UA_NS0ID_ALARMCONDITIONTYPE_COMMENT_SOURCETIMESTAMP = @as(c_int, 9132);
pub const UA_NS0ID_ALARMCONDITIONTYPE_CLIENTUSERID = @as(c_int, 9133);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ENABLE = @as(c_int, 9134);
pub const UA_NS0ID_ALARMCONDITIONTYPE_DISABLE = @as(c_int, 9135);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ADDCOMMENT = @as(c_int, 9136);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 9137);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ACKEDSTATE = @as(c_int, 9138);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ACKEDSTATE_ID = @as(c_int, 9139);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ACKEDSTATE_NAME = @as(c_int, 9140);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ACKEDSTATE_NUMBER = @as(c_int, 9141);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9142);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 9143);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9144);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ACKEDSTATE_TRUESTATE = @as(c_int, 9145);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ACKEDSTATE_FALSESTATE = @as(c_int, 9146);
pub const UA_NS0ID_ALARMCONDITIONTYPE_CONFIRMEDSTATE = @as(c_int, 9147);
pub const UA_NS0ID_ALARMCONDITIONTYPE_CONFIRMEDSTATE_ID = @as(c_int, 9148);
pub const UA_NS0ID_ALARMCONDITIONTYPE_CONFIRMEDSTATE_NAME = @as(c_int, 9149);
pub const UA_NS0ID_ALARMCONDITIONTYPE_CONFIRMEDSTATE_NUMBER = @as(c_int, 9150);
pub const UA_NS0ID_ALARMCONDITIONTYPE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9151);
pub const UA_NS0ID_ALARMCONDITIONTYPE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 9152);
pub const UA_NS0ID_ALARMCONDITIONTYPE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9153);
pub const UA_NS0ID_ALARMCONDITIONTYPE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 9154);
pub const UA_NS0ID_ALARMCONDITIONTYPE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 9155);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ACKNOWLEDGE = @as(c_int, 9156);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 9157);
pub const UA_NS0ID_ALARMCONDITIONTYPE_CONFIRM = @as(c_int, 9158);
pub const UA_NS0ID_ALARMCONDITIONTYPE_CONFIRM_INPUTARGUMENTS = @as(c_int, 9159);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ACTIVESTATE = @as(c_int, 9160);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ACTIVESTATE_ID = @as(c_int, 9161);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ACTIVESTATE_NAME = @as(c_int, 9162);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ACTIVESTATE_NUMBER = @as(c_int, 9163);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9164);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 9165);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9166);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ACTIVESTATE_TRUESTATE = @as(c_int, 9167);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ACTIVESTATE_FALSESTATE = @as(c_int, 9168);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SUPPRESSEDSTATE = @as(c_int, 9169);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SUPPRESSEDSTATE_ID = @as(c_int, 9170);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SUPPRESSEDSTATE_NAME = @as(c_int, 9171);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 9172);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9173);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 9174);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9175);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 9176);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 9177);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SHELVINGSTATE = @as(c_int, 9178);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 9179);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 9180);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 9181);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 9182);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9183);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 9184);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 9185);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 9186);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 9187);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 9188);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 9189);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SHELVINGSTATE_UNSHELVE = @as(c_int, 9211);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 9212);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 9213);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 9214);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SUPPRESSEDORSHELVED = @as(c_int, 9215);
pub const UA_NS0ID_ALARMCONDITIONTYPE_MAXTIMESHELVED = @as(c_int, 9216);
pub const UA_NS0ID_LIMITALARMTYPE_CONDITIONNAME = @as(c_int, 9217);
pub const UA_NS0ID_LIMITALARMTYPE_BRANCHID = @as(c_int, 9218);
pub const UA_NS0ID_LIMITALARMTYPE_ENABLEDSTATE = @as(c_int, 9219);
pub const UA_NS0ID_LIMITALARMTYPE_ENABLEDSTATE_ID = @as(c_int, 9220);
pub const UA_NS0ID_LIMITALARMTYPE_ENABLEDSTATE_NAME = @as(c_int, 9221);
pub const UA_NS0ID_LIMITALARMTYPE_ENABLEDSTATE_NUMBER = @as(c_int, 9222);
pub const UA_NS0ID_LIMITALARMTYPE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9223);
pub const UA_NS0ID_LIMITALARMTYPE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 9224);
pub const UA_NS0ID_LIMITALARMTYPE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9225);
pub const UA_NS0ID_LIMITALARMTYPE_ENABLEDSTATE_TRUESTATE = @as(c_int, 9226);
pub const UA_NS0ID_LIMITALARMTYPE_ENABLEDSTATE_FALSESTATE = @as(c_int, 9227);
pub const UA_NS0ID_LIMITALARMTYPE_QUALITY = @as(c_int, 9228);
pub const UA_NS0ID_LIMITALARMTYPE_QUALITY_SOURCETIMESTAMP = @as(c_int, 9229);
pub const UA_NS0ID_LIMITALARMTYPE_LASTSEVERITY = @as(c_int, 9230);
pub const UA_NS0ID_LIMITALARMTYPE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 9231);
pub const UA_NS0ID_LIMITALARMTYPE_COMMENT = @as(c_int, 9232);
pub const UA_NS0ID_LIMITALARMTYPE_COMMENT_SOURCETIMESTAMP = @as(c_int, 9233);
pub const UA_NS0ID_LIMITALARMTYPE_CLIENTUSERID = @as(c_int, 9234);
pub const UA_NS0ID_LIMITALARMTYPE_ENABLE = @as(c_int, 9235);
pub const UA_NS0ID_LIMITALARMTYPE_DISABLE = @as(c_int, 9236);
pub const UA_NS0ID_LIMITALARMTYPE_ADDCOMMENT = @as(c_int, 9237);
pub const UA_NS0ID_LIMITALARMTYPE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 9238);
pub const UA_NS0ID_LIMITALARMTYPE_ACKEDSTATE = @as(c_int, 9239);
pub const UA_NS0ID_LIMITALARMTYPE_ACKEDSTATE_ID = @as(c_int, 9240);
pub const UA_NS0ID_LIMITALARMTYPE_ACKEDSTATE_NAME = @as(c_int, 9241);
pub const UA_NS0ID_LIMITALARMTYPE_ACKEDSTATE_NUMBER = @as(c_int, 9242);
pub const UA_NS0ID_LIMITALARMTYPE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9243);
pub const UA_NS0ID_LIMITALARMTYPE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 9244);
pub const UA_NS0ID_LIMITALARMTYPE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9245);
pub const UA_NS0ID_LIMITALARMTYPE_ACKEDSTATE_TRUESTATE = @as(c_int, 9246);
pub const UA_NS0ID_LIMITALARMTYPE_ACKEDSTATE_FALSESTATE = @as(c_int, 9247);
pub const UA_NS0ID_LIMITALARMTYPE_CONFIRMEDSTATE = @as(c_int, 9248);
pub const UA_NS0ID_LIMITALARMTYPE_CONFIRMEDSTATE_ID = @as(c_int, 9249);
pub const UA_NS0ID_LIMITALARMTYPE_CONFIRMEDSTATE_NAME = @as(c_int, 9250);
pub const UA_NS0ID_LIMITALARMTYPE_CONFIRMEDSTATE_NUMBER = @as(c_int, 9251);
pub const UA_NS0ID_LIMITALARMTYPE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9252);
pub const UA_NS0ID_LIMITALARMTYPE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 9253);
pub const UA_NS0ID_LIMITALARMTYPE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9254);
pub const UA_NS0ID_LIMITALARMTYPE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 9255);
pub const UA_NS0ID_LIMITALARMTYPE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 9256);
pub const UA_NS0ID_LIMITALARMTYPE_ACKNOWLEDGE = @as(c_int, 9257);
pub const UA_NS0ID_LIMITALARMTYPE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 9258);
pub const UA_NS0ID_LIMITALARMTYPE_CONFIRM = @as(c_int, 9259);
pub const UA_NS0ID_LIMITALARMTYPE_CONFIRM_INPUTARGUMENTS = @as(c_int, 9260);
pub const UA_NS0ID_LIMITALARMTYPE_ACTIVESTATE = @as(c_int, 9261);
pub const UA_NS0ID_LIMITALARMTYPE_ACTIVESTATE_ID = @as(c_int, 9262);
pub const UA_NS0ID_LIMITALARMTYPE_ACTIVESTATE_NAME = @as(c_int, 9263);
pub const UA_NS0ID_LIMITALARMTYPE_ACTIVESTATE_NUMBER = @as(c_int, 9264);
pub const UA_NS0ID_LIMITALARMTYPE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9265);
pub const UA_NS0ID_LIMITALARMTYPE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 9266);
pub const UA_NS0ID_LIMITALARMTYPE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9267);
pub const UA_NS0ID_LIMITALARMTYPE_ACTIVESTATE_TRUESTATE = @as(c_int, 9268);
pub const UA_NS0ID_LIMITALARMTYPE_ACTIVESTATE_FALSESTATE = @as(c_int, 9269);
pub const UA_NS0ID_LIMITALARMTYPE_SUPPRESSEDSTATE = @as(c_int, 9270);
pub const UA_NS0ID_LIMITALARMTYPE_SUPPRESSEDSTATE_ID = @as(c_int, 9271);
pub const UA_NS0ID_LIMITALARMTYPE_SUPPRESSEDSTATE_NAME = @as(c_int, 9272);
pub const UA_NS0ID_LIMITALARMTYPE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 9273);
pub const UA_NS0ID_LIMITALARMTYPE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9274);
pub const UA_NS0ID_LIMITALARMTYPE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 9275);
pub const UA_NS0ID_LIMITALARMTYPE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9276);
pub const UA_NS0ID_LIMITALARMTYPE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 9277);
pub const UA_NS0ID_LIMITALARMTYPE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 9278);
pub const UA_NS0ID_LIMITALARMTYPE_SHELVINGSTATE = @as(c_int, 9279);
pub const UA_NS0ID_LIMITALARMTYPE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 9280);
pub const UA_NS0ID_LIMITALARMTYPE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 9281);
pub const UA_NS0ID_LIMITALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 9282);
pub const UA_NS0ID_LIMITALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 9283);
pub const UA_NS0ID_LIMITALARMTYPE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9284);
pub const UA_NS0ID_LIMITALARMTYPE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 9285);
pub const UA_NS0ID_LIMITALARMTYPE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 9286);
pub const UA_NS0ID_LIMITALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 9287);
pub const UA_NS0ID_LIMITALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 9288);
pub const UA_NS0ID_LIMITALARMTYPE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 9289);
pub const UA_NS0ID_LIMITALARMTYPE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 9290);
pub const UA_NS0ID_LIMITALARMTYPE_SHELVINGSTATE_UNSHELVE = @as(c_int, 9312);
pub const UA_NS0ID_LIMITALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 9313);
pub const UA_NS0ID_LIMITALARMTYPE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 9314);
pub const UA_NS0ID_LIMITALARMTYPE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 9315);
pub const UA_NS0ID_LIMITALARMTYPE_SUPPRESSEDORSHELVED = @as(c_int, 9316);
pub const UA_NS0ID_LIMITALARMTYPE_MAXTIMESHELVED = @as(c_int, 9317);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE = @as(c_int, 9318);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_CURRENTSTATE = @as(c_int, 9319);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_CURRENTSTATE_ID = @as(c_int, 9320);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_CURRENTSTATE_NAME = @as(c_int, 9321);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_CURRENTSTATE_NUMBER = @as(c_int, 9322);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9323);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_LASTTRANSITION = @as(c_int, 9324);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_LASTTRANSITION_ID = @as(c_int, 9325);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_LASTTRANSITION_NAME = @as(c_int, 9326);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_LASTTRANSITION_NUMBER = @as(c_int, 9327);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 9328);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_HIGHHIGH = @as(c_int, 9329);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_HIGHHIGH_STATENUMBER = @as(c_int, 9330);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_HIGH = @as(c_int, 9331);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_HIGH_STATENUMBER = @as(c_int, 9332);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_LOW = @as(c_int, 9333);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_LOW_STATENUMBER = @as(c_int, 9334);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_LOWLOW = @as(c_int, 9335);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_LOWLOW_STATENUMBER = @as(c_int, 9336);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_LOWLOWTOLOW = @as(c_int, 9337);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_LOWTOLOWLOW = @as(c_int, 9338);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_HIGHHIGHTOHIGH = @as(c_int, 9339);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_HIGHTOHIGHHIGH = @as(c_int, 9340);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE = @as(c_int, 9341);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_EVENTID = @as(c_int, 9342);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_EVENTTYPE = @as(c_int, 9343);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SOURCENODE = @as(c_int, 9344);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SOURCENAME = @as(c_int, 9345);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_TIME = @as(c_int, 9346);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_RECEIVETIME = @as(c_int, 9347);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LOCALTIME = @as(c_int, 9348);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_MESSAGE = @as(c_int, 9349);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SEVERITY = @as(c_int, 9350);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_CONDITIONNAME = @as(c_int, 9351);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_BRANCHID = @as(c_int, 9352);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_RETAIN = @as(c_int, 9353);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ENABLEDSTATE = @as(c_int, 9354);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ENABLEDSTATE_ID = @as(c_int, 9355);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ENABLEDSTATE_NAME = @as(c_int, 9356);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ENABLEDSTATE_NUMBER = @as(c_int, 9357);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9358);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 9359);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9360);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ENABLEDSTATE_TRUESTATE = @as(c_int, 9361);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ENABLEDSTATE_FALSESTATE = @as(c_int, 9362);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_QUALITY = @as(c_int, 9363);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_QUALITY_SOURCETIMESTAMP = @as(c_int, 9364);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LASTSEVERITY = @as(c_int, 9365);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 9366);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_COMMENT = @as(c_int, 9367);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_COMMENT_SOURCETIMESTAMP = @as(c_int, 9368);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_CLIENTUSERID = @as(c_int, 9369);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ENABLE = @as(c_int, 9370);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_DISABLE = @as(c_int, 9371);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ADDCOMMENT = @as(c_int, 9372);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 9373);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_CONDITIONREFRESH = @as(c_int, 9374);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_CONDITIONREFRESH_INPUTARGUMENTS = @as(c_int, 9375);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ACKEDSTATE = @as(c_int, 9376);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ACKEDSTATE_ID = @as(c_int, 9377);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ACKEDSTATE_NAME = @as(c_int, 9378);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ACKEDSTATE_NUMBER = @as(c_int, 9379);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9380);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 9381);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9382);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ACKEDSTATE_TRUESTATE = @as(c_int, 9383);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ACKEDSTATE_FALSESTATE = @as(c_int, 9384);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_CONFIRMEDSTATE = @as(c_int, 9385);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_CONFIRMEDSTATE_ID = @as(c_int, 9386);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_CONFIRMEDSTATE_NAME = @as(c_int, 9387);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_CONFIRMEDSTATE_NUMBER = @as(c_int, 9388);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9389);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 9390);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9391);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 9392);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 9393);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ACKNOWLEDGE = @as(c_int, 9394);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 9395);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_CONFIRM = @as(c_int, 9396);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_CONFIRM_INPUTARGUMENTS = @as(c_int, 9397);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ACTIVESTATE = @as(c_int, 9398);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ACTIVESTATE_ID = @as(c_int, 9399);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ACTIVESTATE_NAME = @as(c_int, 9400);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ACTIVESTATE_NUMBER = @as(c_int, 9401);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9402);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 9403);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9404);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ACTIVESTATE_TRUESTATE = @as(c_int, 9405);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ACTIVESTATE_FALSESTATE = @as(c_int, 9406);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SUPPRESSEDSTATE = @as(c_int, 9407);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SUPPRESSEDSTATE_ID = @as(c_int, 9408);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SUPPRESSEDSTATE_NAME = @as(c_int, 9409);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 9410);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9411);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 9412);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9413);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 9414);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 9415);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SHELVINGSTATE = @as(c_int, 9416);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 9417);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 9418);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 9419);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 9420);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9421);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 9422);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 9423);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 9424);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 9425);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 9426);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 9427);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_UNSHELVE = @as(c_int, 9449);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 9450);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 9451);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 9452);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SUPPRESSEDORSHELVED = @as(c_int, 9453);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_MAXTIMESHELVED = @as(c_int, 9454);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LIMITSTATE = @as(c_int, 9455);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LIMITSTATE_CURRENTSTATE = @as(c_int, 9456);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LIMITSTATE_CURRENTSTATE_ID = @as(c_int, 9457);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LIMITSTATE_CURRENTSTATE_NAME = @as(c_int, 9458);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LIMITSTATE_CURRENTSTATE_NUMBER = @as(c_int, 9459);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LIMITSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9460);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LIMITSTATE_LASTTRANSITION = @as(c_int, 9461);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LIMITSTATE_LASTTRANSITION_ID = @as(c_int, 9462);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LIMITSTATE_LASTTRANSITION_NAME = @as(c_int, 9463);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LIMITSTATE_LASTTRANSITION_NUMBER = @as(c_int, 9464);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LIMITSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 9465);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_HIGHHIGHLIMIT = @as(c_int, 9478);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_HIGHLIMIT = @as(c_int, 9479);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LOWLIMIT = @as(c_int, 9480);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LOWLOWLIMIT = @as(c_int, 9481);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE = @as(c_int, 9482);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_EVENTID = @as(c_int, 9483);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_EVENTTYPE = @as(c_int, 9484);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SOURCENODE = @as(c_int, 9485);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SOURCENAME = @as(c_int, 9486);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_TIME = @as(c_int, 9487);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_RECEIVETIME = @as(c_int, 9488);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LOCALTIME = @as(c_int, 9489);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_MESSAGE = @as(c_int, 9490);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SEVERITY = @as(c_int, 9491);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_CONDITIONNAME = @as(c_int, 9492);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_BRANCHID = @as(c_int, 9493);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_RETAIN = @as(c_int, 9494);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ENABLEDSTATE = @as(c_int, 9495);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ENABLEDSTATE_ID = @as(c_int, 9496);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ENABLEDSTATE_NAME = @as(c_int, 9497);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ENABLEDSTATE_NUMBER = @as(c_int, 9498);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9499);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 9500);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9501);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ENABLEDSTATE_TRUESTATE = @as(c_int, 9502);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ENABLEDSTATE_FALSESTATE = @as(c_int, 9503);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_QUALITY = @as(c_int, 9504);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_QUALITY_SOURCETIMESTAMP = @as(c_int, 9505);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LASTSEVERITY = @as(c_int, 9506);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 9507);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_COMMENT = @as(c_int, 9508);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_COMMENT_SOURCETIMESTAMP = @as(c_int, 9509);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_CLIENTUSERID = @as(c_int, 9510);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ENABLE = @as(c_int, 9511);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_DISABLE = @as(c_int, 9512);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ADDCOMMENT = @as(c_int, 9513);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 9514);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_CONDITIONREFRESH = @as(c_int, 9515);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_CONDITIONREFRESH_INPUTARGUMENTS = @as(c_int, 9516);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ACKEDSTATE = @as(c_int, 9517);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ACKEDSTATE_ID = @as(c_int, 9518);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ACKEDSTATE_NAME = @as(c_int, 9519);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ACKEDSTATE_NUMBER = @as(c_int, 9520);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9521);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 9522);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9523);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ACKEDSTATE_TRUESTATE = @as(c_int, 9524);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ACKEDSTATE_FALSESTATE = @as(c_int, 9525);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_CONFIRMEDSTATE = @as(c_int, 9526);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_CONFIRMEDSTATE_ID = @as(c_int, 9527);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_CONFIRMEDSTATE_NAME = @as(c_int, 9528);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_CONFIRMEDSTATE_NUMBER = @as(c_int, 9529);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9530);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 9531);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9532);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 9533);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 9534);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ACKNOWLEDGE = @as(c_int, 9535);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 9536);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_CONFIRM = @as(c_int, 9537);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_CONFIRM_INPUTARGUMENTS = @as(c_int, 9538);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ACTIVESTATE = @as(c_int, 9539);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ACTIVESTATE_ID = @as(c_int, 9540);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ACTIVESTATE_NAME = @as(c_int, 9541);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ACTIVESTATE_NUMBER = @as(c_int, 9542);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9543);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 9544);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9545);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ACTIVESTATE_TRUESTATE = @as(c_int, 9546);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ACTIVESTATE_FALSESTATE = @as(c_int, 9547);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SUPPRESSEDSTATE = @as(c_int, 9548);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SUPPRESSEDSTATE_ID = @as(c_int, 9549);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SUPPRESSEDSTATE_NAME = @as(c_int, 9550);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 9551);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9552);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 9553);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9554);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 9555);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 9556);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SHELVINGSTATE = @as(c_int, 9557);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 9558);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 9559);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 9560);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 9561);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9562);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 9563);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 9564);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 9565);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 9566);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 9567);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 9568);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_UNSHELVE = @as(c_int, 9590);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 9591);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 9592);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 9593);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SUPPRESSEDORSHELVED = @as(c_int, 9594);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_MAXTIMESHELVED = @as(c_int, 9595);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LIMITSTATE = @as(c_int, 9596);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LIMITSTATE_CURRENTSTATE = @as(c_int, 9597);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LIMITSTATE_CURRENTSTATE_ID = @as(c_int, 9598);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LIMITSTATE_CURRENTSTATE_NAME = @as(c_int, 9599);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LIMITSTATE_CURRENTSTATE_NUMBER = @as(c_int, 9600);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LIMITSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9601);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LIMITSTATE_LASTTRANSITION = @as(c_int, 9602);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LIMITSTATE_LASTTRANSITION_ID = @as(c_int, 9603);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LIMITSTATE_LASTTRANSITION_NAME = @as(c_int, 9604);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LIMITSTATE_LASTTRANSITION_NUMBER = @as(c_int, 9605);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LIMITSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 9606);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_HIGHHIGHLIMIT = @as(c_int, 9619);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_HIGHLIMIT = @as(c_int, 9620);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LOWLIMIT = @as(c_int, 9621);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LOWLOWLIMIT = @as(c_int, 9622);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE = @as(c_int, 9623);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_EVENTID = @as(c_int, 9624);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_EVENTTYPE = @as(c_int, 9625);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SOURCENODE = @as(c_int, 9626);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SOURCENAME = @as(c_int, 9627);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_TIME = @as(c_int, 9628);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_RECEIVETIME = @as(c_int, 9629);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LOCALTIME = @as(c_int, 9630);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_MESSAGE = @as(c_int, 9631);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SEVERITY = @as(c_int, 9632);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_CONDITIONNAME = @as(c_int, 9633);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_BRANCHID = @as(c_int, 9634);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_RETAIN = @as(c_int, 9635);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ENABLEDSTATE = @as(c_int, 9636);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ENABLEDSTATE_ID = @as(c_int, 9637);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ENABLEDSTATE_NAME = @as(c_int, 9638);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ENABLEDSTATE_NUMBER = @as(c_int, 9639);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9640);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 9641);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9642);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ENABLEDSTATE_TRUESTATE = @as(c_int, 9643);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ENABLEDSTATE_FALSESTATE = @as(c_int, 9644);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_QUALITY = @as(c_int, 9645);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_QUALITY_SOURCETIMESTAMP = @as(c_int, 9646);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LASTSEVERITY = @as(c_int, 9647);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 9648);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_COMMENT = @as(c_int, 9649);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_COMMENT_SOURCETIMESTAMP = @as(c_int, 9650);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_CLIENTUSERID = @as(c_int, 9651);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ENABLE = @as(c_int, 9652);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_DISABLE = @as(c_int, 9653);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ADDCOMMENT = @as(c_int, 9654);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 9655);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_CONDITIONREFRESH = @as(c_int, 9656);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_CONDITIONREFRESH_INPUTARGUMENTS = @as(c_int, 9657);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ACKEDSTATE = @as(c_int, 9658);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ACKEDSTATE_ID = @as(c_int, 9659);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ACKEDSTATE_NAME = @as(c_int, 9660);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ACKEDSTATE_NUMBER = @as(c_int, 9661);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9662);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 9663);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9664);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ACKEDSTATE_TRUESTATE = @as(c_int, 9665);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ACKEDSTATE_FALSESTATE = @as(c_int, 9666);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_CONFIRMEDSTATE = @as(c_int, 9667);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_CONFIRMEDSTATE_ID = @as(c_int, 9668);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_CONFIRMEDSTATE_NAME = @as(c_int, 9669);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_CONFIRMEDSTATE_NUMBER = @as(c_int, 9670);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9671);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 9672);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9673);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 9674);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 9675);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ACKNOWLEDGE = @as(c_int, 9676);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 9677);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_CONFIRM = @as(c_int, 9678);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_CONFIRM_INPUTARGUMENTS = @as(c_int, 9679);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ACTIVESTATE = @as(c_int, 9680);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ACTIVESTATE_ID = @as(c_int, 9681);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ACTIVESTATE_NAME = @as(c_int, 9682);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ACTIVESTATE_NUMBER = @as(c_int, 9683);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9684);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 9685);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9686);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ACTIVESTATE_TRUESTATE = @as(c_int, 9687);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ACTIVESTATE_FALSESTATE = @as(c_int, 9688);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SUPPRESSEDSTATE = @as(c_int, 9689);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SUPPRESSEDSTATE_ID = @as(c_int, 9690);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SUPPRESSEDSTATE_NAME = @as(c_int, 9691);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 9692);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9693);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 9694);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9695);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 9696);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 9697);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE = @as(c_int, 9698);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 9699);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 9700);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 9701);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 9702);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9703);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 9704);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 9705);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 9706);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 9707);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 9708);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 9709);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_UNSHELVE = @as(c_int, 9731);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 9732);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 9733);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 9734);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SUPPRESSEDORSHELVED = @as(c_int, 9735);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_MAXTIMESHELVED = @as(c_int, 9736);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LIMITSTATE = @as(c_int, 9737);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LIMITSTATE_CURRENTSTATE = @as(c_int, 9738);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LIMITSTATE_CURRENTSTATE_ID = @as(c_int, 9739);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LIMITSTATE_CURRENTSTATE_NAME = @as(c_int, 9740);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LIMITSTATE_CURRENTSTATE_NUMBER = @as(c_int, 9741);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LIMITSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9742);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LIMITSTATE_LASTTRANSITION = @as(c_int, 9743);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LIMITSTATE_LASTTRANSITION_ID = @as(c_int, 9744);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LIMITSTATE_LASTTRANSITION_NAME = @as(c_int, 9745);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LIMITSTATE_LASTTRANSITION_NUMBER = @as(c_int, 9746);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LIMITSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 9747);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_HIGHHIGHLIMIT = @as(c_int, 9760);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_HIGHLIMIT = @as(c_int, 9761);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LOWLIMIT = @as(c_int, 9762);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LOWLOWLIMIT = @as(c_int, 9763);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE = @as(c_int, 9764);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_EVENTID = @as(c_int, 9765);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_EVENTTYPE = @as(c_int, 9766);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SOURCENODE = @as(c_int, 9767);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SOURCENAME = @as(c_int, 9768);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_TIME = @as(c_int, 9769);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_RECEIVETIME = @as(c_int, 9770);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LOCALTIME = @as(c_int, 9771);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_MESSAGE = @as(c_int, 9772);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SEVERITY = @as(c_int, 9773);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_CONDITIONNAME = @as(c_int, 9774);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_BRANCHID = @as(c_int, 9775);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_RETAIN = @as(c_int, 9776);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ENABLEDSTATE = @as(c_int, 9777);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ENABLEDSTATE_ID = @as(c_int, 9778);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ENABLEDSTATE_NAME = @as(c_int, 9779);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ENABLEDSTATE_NUMBER = @as(c_int, 9780);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9781);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 9782);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9783);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ENABLEDSTATE_TRUESTATE = @as(c_int, 9784);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ENABLEDSTATE_FALSESTATE = @as(c_int, 9785);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_QUALITY = @as(c_int, 9786);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_QUALITY_SOURCETIMESTAMP = @as(c_int, 9787);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LASTSEVERITY = @as(c_int, 9788);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 9789);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_COMMENT = @as(c_int, 9790);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_COMMENT_SOURCETIMESTAMP = @as(c_int, 9791);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_CLIENTUSERID = @as(c_int, 9792);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ENABLE = @as(c_int, 9793);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_DISABLE = @as(c_int, 9794);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ADDCOMMENT = @as(c_int, 9795);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 9796);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_CONDITIONREFRESH = @as(c_int, 9797);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_CONDITIONREFRESH_INPUTARGUMENTS = @as(c_int, 9798);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ACKEDSTATE = @as(c_int, 9799);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ACKEDSTATE_ID = @as(c_int, 9800);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ACKEDSTATE_NAME = @as(c_int, 9801);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ACKEDSTATE_NUMBER = @as(c_int, 9802);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9803);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 9804);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9805);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ACKEDSTATE_TRUESTATE = @as(c_int, 9806);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ACKEDSTATE_FALSESTATE = @as(c_int, 9807);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_CONFIRMEDSTATE = @as(c_int, 9808);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_CONFIRMEDSTATE_ID = @as(c_int, 9809);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_CONFIRMEDSTATE_NAME = @as(c_int, 9810);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_CONFIRMEDSTATE_NUMBER = @as(c_int, 9811);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9812);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 9813);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9814);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 9815);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 9816);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ACKNOWLEDGE = @as(c_int, 9817);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 9818);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_CONFIRM = @as(c_int, 9819);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_CONFIRM_INPUTARGUMENTS = @as(c_int, 9820);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ACTIVESTATE = @as(c_int, 9821);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ACTIVESTATE_ID = @as(c_int, 9822);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ACTIVESTATE_NAME = @as(c_int, 9823);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ACTIVESTATE_NUMBER = @as(c_int, 9824);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9825);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 9826);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9827);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ACTIVESTATE_TRUESTATE = @as(c_int, 9828);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ACTIVESTATE_FALSESTATE = @as(c_int, 9829);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SUPPRESSEDSTATE = @as(c_int, 9830);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SUPPRESSEDSTATE_ID = @as(c_int, 9831);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SUPPRESSEDSTATE_NAME = @as(c_int, 9832);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 9833);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9834);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 9835);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9836);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 9837);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 9838);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE = @as(c_int, 9839);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 9840);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 9841);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 9842);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 9843);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9844);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 9845);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 9846);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 9847);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 9848);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 9849);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 9850);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_UNSHELVE = @as(c_int, 9872);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 9873);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 9874);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 9875);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SUPPRESSEDORSHELVED = @as(c_int, 9876);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_MAXTIMESHELVED = @as(c_int, 9877);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LIMITSTATE = @as(c_int, 9878);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LIMITSTATE_CURRENTSTATE = @as(c_int, 9879);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LIMITSTATE_CURRENTSTATE_ID = @as(c_int, 9880);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LIMITSTATE_CURRENTSTATE_NAME = @as(c_int, 9881);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LIMITSTATE_CURRENTSTATE_NUMBER = @as(c_int, 9882);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LIMITSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9883);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LIMITSTATE_LASTTRANSITION = @as(c_int, 9884);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LIMITSTATE_LASTTRANSITION_ID = @as(c_int, 9885);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LIMITSTATE_LASTTRANSITION_NAME = @as(c_int, 9886);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LIMITSTATE_LASTTRANSITION_NUMBER = @as(c_int, 9887);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LIMITSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 9888);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_HIGHHIGHLIMIT = @as(c_int, 9901);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_HIGHLIMIT = @as(c_int, 9902);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LOWLIMIT = @as(c_int, 9903);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LOWLOWLIMIT = @as(c_int, 9904);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SETPOINTNODE = @as(c_int, 9905);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE = @as(c_int, 9906);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_EVENTID = @as(c_int, 9907);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_EVENTTYPE = @as(c_int, 9908);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SOURCENODE = @as(c_int, 9909);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SOURCENAME = @as(c_int, 9910);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_TIME = @as(c_int, 9911);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_RECEIVETIME = @as(c_int, 9912);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LOCALTIME = @as(c_int, 9913);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_MESSAGE = @as(c_int, 9914);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SEVERITY = @as(c_int, 9915);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_CONDITIONNAME = @as(c_int, 9916);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_BRANCHID = @as(c_int, 9917);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_RETAIN = @as(c_int, 9918);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ENABLEDSTATE = @as(c_int, 9919);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ENABLEDSTATE_ID = @as(c_int, 9920);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ENABLEDSTATE_NAME = @as(c_int, 9921);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ENABLEDSTATE_NUMBER = @as(c_int, 9922);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9923);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 9924);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9925);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ENABLEDSTATE_TRUESTATE = @as(c_int, 9926);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ENABLEDSTATE_FALSESTATE = @as(c_int, 9927);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_QUALITY = @as(c_int, 9928);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_QUALITY_SOURCETIMESTAMP = @as(c_int, 9929);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LASTSEVERITY = @as(c_int, 9930);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 9931);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_COMMENT = @as(c_int, 9932);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_COMMENT_SOURCETIMESTAMP = @as(c_int, 9933);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_CLIENTUSERID = @as(c_int, 9934);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ENABLE = @as(c_int, 9935);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_DISABLE = @as(c_int, 9936);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ADDCOMMENT = @as(c_int, 9937);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 9938);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_CONDITIONREFRESH = @as(c_int, 9939);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_CONDITIONREFRESH_INPUTARGUMENTS = @as(c_int, 9940);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ACKEDSTATE = @as(c_int, 9941);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ACKEDSTATE_ID = @as(c_int, 9942);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ACKEDSTATE_NAME = @as(c_int, 9943);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ACKEDSTATE_NUMBER = @as(c_int, 9944);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9945);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 9946);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9947);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ACKEDSTATE_TRUESTATE = @as(c_int, 9948);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ACKEDSTATE_FALSESTATE = @as(c_int, 9949);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_CONFIRMEDSTATE = @as(c_int, 9950);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_CONFIRMEDSTATE_ID = @as(c_int, 9951);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_CONFIRMEDSTATE_NAME = @as(c_int, 9952);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_CONFIRMEDSTATE_NUMBER = @as(c_int, 9953);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9954);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 9955);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9956);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 9957);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 9958);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ACKNOWLEDGE = @as(c_int, 9959);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 9960);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_CONFIRM = @as(c_int, 9961);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_CONFIRM_INPUTARGUMENTS = @as(c_int, 9962);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ACTIVESTATE = @as(c_int, 9963);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ACTIVESTATE_ID = @as(c_int, 9964);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ACTIVESTATE_NAME = @as(c_int, 9965);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ACTIVESTATE_NUMBER = @as(c_int, 9966);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9967);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 9968);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9969);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ACTIVESTATE_TRUESTATE = @as(c_int, 9970);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ACTIVESTATE_FALSESTATE = @as(c_int, 9971);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SUPPRESSEDSTATE = @as(c_int, 9972);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SUPPRESSEDSTATE_ID = @as(c_int, 9973);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SUPPRESSEDSTATE_NAME = @as(c_int, 9974);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 9975);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9976);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 9977);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 9978);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 9979);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 9980);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SHELVINGSTATE = @as(c_int, 9981);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 9982);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 9983);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 9984);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 9985);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 9986);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 9987);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 9988);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 9989);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 9990);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 9991);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 9992);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_UNSHELVE = @as(c_int, 10014);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 10015);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 10016);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 10017);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SUPPRESSEDORSHELVED = @as(c_int, 10018);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_MAXTIMESHELVED = @as(c_int, 10019);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_HIGHHIGHSTATE = @as(c_int, 10020);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_HIGHHIGHSTATE_ID = @as(c_int, 10021);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_HIGHHIGHSTATE_NAME = @as(c_int, 10022);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_HIGHHIGHSTATE_NUMBER = @as(c_int, 10023);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_HIGHHIGHSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10024);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_HIGHHIGHSTATE_TRANSITIONTIME = @as(c_int, 10025);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_HIGHHIGHSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10026);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_HIGHHIGHSTATE_TRUESTATE = @as(c_int, 10027);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_HIGHHIGHSTATE_FALSESTATE = @as(c_int, 10028);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_HIGHSTATE = @as(c_int, 10029);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_HIGHSTATE_ID = @as(c_int, 10030);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_HIGHSTATE_NAME = @as(c_int, 10031);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_HIGHSTATE_NUMBER = @as(c_int, 10032);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_HIGHSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10033);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_HIGHSTATE_TRANSITIONTIME = @as(c_int, 10034);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_HIGHSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10035);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_HIGHSTATE_TRUESTATE = @as(c_int, 10036);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_HIGHSTATE_FALSESTATE = @as(c_int, 10037);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LOWSTATE = @as(c_int, 10038);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LOWSTATE_ID = @as(c_int, 10039);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LOWSTATE_NAME = @as(c_int, 10040);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LOWSTATE_NUMBER = @as(c_int, 10041);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LOWSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10042);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LOWSTATE_TRANSITIONTIME = @as(c_int, 10043);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LOWSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10044);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LOWSTATE_TRUESTATE = @as(c_int, 10045);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LOWSTATE_FALSESTATE = @as(c_int, 10046);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LOWLOWSTATE = @as(c_int, 10047);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LOWLOWSTATE_ID = @as(c_int, 10048);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LOWLOWSTATE_NAME = @as(c_int, 10049);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LOWLOWSTATE_NUMBER = @as(c_int, 10050);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LOWLOWSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10051);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LOWLOWSTATE_TRANSITIONTIME = @as(c_int, 10052);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LOWLOWSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10053);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LOWLOWSTATE_TRUESTATE = @as(c_int, 10054);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LOWLOWSTATE_FALSESTATE = @as(c_int, 10055);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_HIGHHIGHLIMIT = @as(c_int, 10056);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_HIGHLIMIT = @as(c_int, 10057);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LOWLIMIT = @as(c_int, 10058);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LOWLOWLIMIT = @as(c_int, 10059);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE = @as(c_int, 10060);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_EVENTID = @as(c_int, 10061);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_EVENTTYPE = @as(c_int, 10062);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SOURCENODE = @as(c_int, 10063);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SOURCENAME = @as(c_int, 10064);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_TIME = @as(c_int, 10065);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_RECEIVETIME = @as(c_int, 10066);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LOCALTIME = @as(c_int, 10067);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_MESSAGE = @as(c_int, 10068);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SEVERITY = @as(c_int, 10069);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_CONDITIONNAME = @as(c_int, 10070);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_BRANCHID = @as(c_int, 10071);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_RETAIN = @as(c_int, 10072);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ENABLEDSTATE = @as(c_int, 10073);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ENABLEDSTATE_ID = @as(c_int, 10074);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ENABLEDSTATE_NAME = @as(c_int, 10075);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ENABLEDSTATE_NUMBER = @as(c_int, 10076);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10077);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 10078);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10079);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ENABLEDSTATE_TRUESTATE = @as(c_int, 10080);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ENABLEDSTATE_FALSESTATE = @as(c_int, 10081);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_QUALITY = @as(c_int, 10082);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_QUALITY_SOURCETIMESTAMP = @as(c_int, 10083);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LASTSEVERITY = @as(c_int, 10084);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 10085);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_COMMENT = @as(c_int, 10086);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_COMMENT_SOURCETIMESTAMP = @as(c_int, 10087);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_CLIENTUSERID = @as(c_int, 10088);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ENABLE = @as(c_int, 10089);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_DISABLE = @as(c_int, 10090);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ADDCOMMENT = @as(c_int, 10091);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 10092);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_CONDITIONREFRESH = @as(c_int, 10093);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_CONDITIONREFRESH_INPUTARGUMENTS = @as(c_int, 10094);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ACKEDSTATE = @as(c_int, 10095);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ACKEDSTATE_ID = @as(c_int, 10096);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ACKEDSTATE_NAME = @as(c_int, 10097);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ACKEDSTATE_NUMBER = @as(c_int, 10098);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10099);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 10100);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10101);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ACKEDSTATE_TRUESTATE = @as(c_int, 10102);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ACKEDSTATE_FALSESTATE = @as(c_int, 10103);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_CONFIRMEDSTATE = @as(c_int, 10104);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_CONFIRMEDSTATE_ID = @as(c_int, 10105);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_CONFIRMEDSTATE_NAME = @as(c_int, 10106);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_CONFIRMEDSTATE_NUMBER = @as(c_int, 10107);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10108);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 10109);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10110);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 10111);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 10112);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ACKNOWLEDGE = @as(c_int, 10113);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 10114);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_CONFIRM = @as(c_int, 10115);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_CONFIRM_INPUTARGUMENTS = @as(c_int, 10116);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ACTIVESTATE = @as(c_int, 10117);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ACTIVESTATE_ID = @as(c_int, 10118);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ACTIVESTATE_NAME = @as(c_int, 10119);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ACTIVESTATE_NUMBER = @as(c_int, 10120);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10121);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 10122);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10123);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ACTIVESTATE_TRUESTATE = @as(c_int, 10124);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ACTIVESTATE_FALSESTATE = @as(c_int, 10125);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SUPPRESSEDSTATE = @as(c_int, 10126);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SUPPRESSEDSTATE_ID = @as(c_int, 10127);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SUPPRESSEDSTATE_NAME = @as(c_int, 10128);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 10129);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10130);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 10131);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10132);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 10133);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 10134);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SHELVINGSTATE = @as(c_int, 10135);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 10136);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 10137);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 10138);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 10139);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10140);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 10141);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 10142);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 10143);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 10144);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 10145);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 10146);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_UNSHELVE = @as(c_int, 10168);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 10169);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 10170);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 10171);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SUPPRESSEDORSHELVED = @as(c_int, 10172);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_MAXTIMESHELVED = @as(c_int, 10173);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_HIGHHIGHSTATE = @as(c_int, 10174);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_HIGHHIGHSTATE_ID = @as(c_int, 10175);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_HIGHHIGHSTATE_NAME = @as(c_int, 10176);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_HIGHHIGHSTATE_NUMBER = @as(c_int, 10177);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_HIGHHIGHSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10178);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_HIGHHIGHSTATE_TRANSITIONTIME = @as(c_int, 10179);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_HIGHHIGHSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10180);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_HIGHHIGHSTATE_TRUESTATE = @as(c_int, 10181);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_HIGHHIGHSTATE_FALSESTATE = @as(c_int, 10182);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_HIGHSTATE = @as(c_int, 10183);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_HIGHSTATE_ID = @as(c_int, 10184);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_HIGHSTATE_NAME = @as(c_int, 10185);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_HIGHSTATE_NUMBER = @as(c_int, 10186);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_HIGHSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10187);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_HIGHSTATE_TRANSITIONTIME = @as(c_int, 10188);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_HIGHSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10189);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_HIGHSTATE_TRUESTATE = @as(c_int, 10190);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_HIGHSTATE_FALSESTATE = @as(c_int, 10191);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LOWSTATE = @as(c_int, 10192);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LOWSTATE_ID = @as(c_int, 10193);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LOWSTATE_NAME = @as(c_int, 10194);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LOWSTATE_NUMBER = @as(c_int, 10195);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LOWSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10196);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LOWSTATE_TRANSITIONTIME = @as(c_int, 10197);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LOWSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10198);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LOWSTATE_TRUESTATE = @as(c_int, 10199);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LOWSTATE_FALSESTATE = @as(c_int, 10200);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LOWLOWSTATE = @as(c_int, 10201);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LOWLOWSTATE_ID = @as(c_int, 10202);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LOWLOWSTATE_NAME = @as(c_int, 10203);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LOWLOWSTATE_NUMBER = @as(c_int, 10204);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LOWLOWSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10205);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LOWLOWSTATE_TRANSITIONTIME = @as(c_int, 10206);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LOWLOWSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10207);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LOWLOWSTATE_TRUESTATE = @as(c_int, 10208);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LOWLOWSTATE_FALSESTATE = @as(c_int, 10209);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_HIGHHIGHLIMIT = @as(c_int, 10210);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_HIGHLIMIT = @as(c_int, 10211);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LOWLIMIT = @as(c_int, 10212);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LOWLOWLIMIT = @as(c_int, 10213);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE = @as(c_int, 10214);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_EVENTID = @as(c_int, 10215);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_EVENTTYPE = @as(c_int, 10216);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SOURCENODE = @as(c_int, 10217);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SOURCENAME = @as(c_int, 10218);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_TIME = @as(c_int, 10219);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_RECEIVETIME = @as(c_int, 10220);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LOCALTIME = @as(c_int, 10221);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_MESSAGE = @as(c_int, 10222);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SEVERITY = @as(c_int, 10223);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_CONDITIONNAME = @as(c_int, 10224);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_BRANCHID = @as(c_int, 10225);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_RETAIN = @as(c_int, 10226);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ENABLEDSTATE = @as(c_int, 10227);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ENABLEDSTATE_ID = @as(c_int, 10228);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ENABLEDSTATE_NAME = @as(c_int, 10229);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ENABLEDSTATE_NUMBER = @as(c_int, 10230);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10231);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 10232);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10233);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ENABLEDSTATE_TRUESTATE = @as(c_int, 10234);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ENABLEDSTATE_FALSESTATE = @as(c_int, 10235);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_QUALITY = @as(c_int, 10236);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_QUALITY_SOURCETIMESTAMP = @as(c_int, 10237);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LASTSEVERITY = @as(c_int, 10238);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 10239);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_COMMENT = @as(c_int, 10240);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_COMMENT_SOURCETIMESTAMP = @as(c_int, 10241);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_CLIENTUSERID = @as(c_int, 10242);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ENABLE = @as(c_int, 10243);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_DISABLE = @as(c_int, 10244);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ADDCOMMENT = @as(c_int, 10245);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 10246);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_CONDITIONREFRESH = @as(c_int, 10247);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_CONDITIONREFRESH_INPUTARGUMENTS = @as(c_int, 10248);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ACKEDSTATE = @as(c_int, 10249);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ACKEDSTATE_ID = @as(c_int, 10250);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ACKEDSTATE_NAME = @as(c_int, 10251);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ACKEDSTATE_NUMBER = @as(c_int, 10252);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10253);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 10254);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10255);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ACKEDSTATE_TRUESTATE = @as(c_int, 10256);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ACKEDSTATE_FALSESTATE = @as(c_int, 10257);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_CONFIRMEDSTATE = @as(c_int, 10258);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_CONFIRMEDSTATE_ID = @as(c_int, 10259);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_CONFIRMEDSTATE_NAME = @as(c_int, 10260);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_CONFIRMEDSTATE_NUMBER = @as(c_int, 10261);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10262);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 10263);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10264);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 10265);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 10266);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ACKNOWLEDGE = @as(c_int, 10267);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 10268);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_CONFIRM = @as(c_int, 10269);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_CONFIRM_INPUTARGUMENTS = @as(c_int, 10270);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ACTIVESTATE = @as(c_int, 10271);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ACTIVESTATE_ID = @as(c_int, 10272);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ACTIVESTATE_NAME = @as(c_int, 10273);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ACTIVESTATE_NUMBER = @as(c_int, 10274);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10275);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 10276);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10277);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ACTIVESTATE_TRUESTATE = @as(c_int, 10278);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ACTIVESTATE_FALSESTATE = @as(c_int, 10279);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SUPPRESSEDSTATE = @as(c_int, 10280);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SUPPRESSEDSTATE_ID = @as(c_int, 10281);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SUPPRESSEDSTATE_NAME = @as(c_int, 10282);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 10283);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10284);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 10285);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10286);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 10287);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 10288);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE = @as(c_int, 10289);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 10290);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 10291);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 10292);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 10293);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10294);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 10295);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 10296);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 10297);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 10298);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 10299);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 10300);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_UNSHELVE = @as(c_int, 10322);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 10323);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 10324);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 10325);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SUPPRESSEDORSHELVED = @as(c_int, 10326);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_MAXTIMESHELVED = @as(c_int, 10327);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_HIGHHIGHSTATE = @as(c_int, 10328);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_HIGHHIGHSTATE_ID = @as(c_int, 10329);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_HIGHHIGHSTATE_NAME = @as(c_int, 10330);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_HIGHHIGHSTATE_NUMBER = @as(c_int, 10331);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_HIGHHIGHSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10332);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_HIGHHIGHSTATE_TRANSITIONTIME = @as(c_int, 10333);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_HIGHHIGHSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10334);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_HIGHHIGHSTATE_TRUESTATE = @as(c_int, 10335);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_HIGHHIGHSTATE_FALSESTATE = @as(c_int, 10336);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_HIGHSTATE = @as(c_int, 10337);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_HIGHSTATE_ID = @as(c_int, 10338);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_HIGHSTATE_NAME = @as(c_int, 10339);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_HIGHSTATE_NUMBER = @as(c_int, 10340);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_HIGHSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10341);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_HIGHSTATE_TRANSITIONTIME = @as(c_int, 10342);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_HIGHSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10343);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_HIGHSTATE_TRUESTATE = @as(c_int, 10344);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_HIGHSTATE_FALSESTATE = @as(c_int, 10345);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LOWSTATE = @as(c_int, 10346);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LOWSTATE_ID = @as(c_int, 10347);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LOWSTATE_NAME = @as(c_int, 10348);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LOWSTATE_NUMBER = @as(c_int, 10349);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LOWSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10350);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LOWSTATE_TRANSITIONTIME = @as(c_int, 10351);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LOWSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10352);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LOWSTATE_TRUESTATE = @as(c_int, 10353);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LOWSTATE_FALSESTATE = @as(c_int, 10354);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LOWLOWSTATE = @as(c_int, 10355);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LOWLOWSTATE_ID = @as(c_int, 10356);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LOWLOWSTATE_NAME = @as(c_int, 10357);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LOWLOWSTATE_NUMBER = @as(c_int, 10358);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LOWLOWSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10359);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LOWLOWSTATE_TRANSITIONTIME = @as(c_int, 10360);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LOWLOWSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10361);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LOWLOWSTATE_TRUESTATE = @as(c_int, 10362);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LOWLOWSTATE_FALSESTATE = @as(c_int, 10363);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_HIGHHIGHLIMIT = @as(c_int, 10364);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_HIGHLIMIT = @as(c_int, 10365);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LOWLIMIT = @as(c_int, 10366);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LOWLOWLIMIT = @as(c_int, 10367);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE = @as(c_int, 10368);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_EVENTID = @as(c_int, 10369);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_EVENTTYPE = @as(c_int, 10370);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SOURCENODE = @as(c_int, 10371);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SOURCENAME = @as(c_int, 10372);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_TIME = @as(c_int, 10373);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_RECEIVETIME = @as(c_int, 10374);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LOCALTIME = @as(c_int, 10375);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_MESSAGE = @as(c_int, 10376);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SEVERITY = @as(c_int, 10377);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_CONDITIONNAME = @as(c_int, 10378);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_BRANCHID = @as(c_int, 10379);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_RETAIN = @as(c_int, 10380);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ENABLEDSTATE = @as(c_int, 10381);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ENABLEDSTATE_ID = @as(c_int, 10382);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ENABLEDSTATE_NAME = @as(c_int, 10383);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ENABLEDSTATE_NUMBER = @as(c_int, 10384);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10385);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 10386);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10387);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ENABLEDSTATE_TRUESTATE = @as(c_int, 10388);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ENABLEDSTATE_FALSESTATE = @as(c_int, 10389);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_QUALITY = @as(c_int, 10390);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_QUALITY_SOURCETIMESTAMP = @as(c_int, 10391);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LASTSEVERITY = @as(c_int, 10392);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 10393);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_COMMENT = @as(c_int, 10394);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_COMMENT_SOURCETIMESTAMP = @as(c_int, 10395);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_CLIENTUSERID = @as(c_int, 10396);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ENABLE = @as(c_int, 10397);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_DISABLE = @as(c_int, 10398);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ADDCOMMENT = @as(c_int, 10399);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 10400);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_CONDITIONREFRESH = @as(c_int, 10401);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_CONDITIONREFRESH_INPUTARGUMENTS = @as(c_int, 10402);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ACKEDSTATE = @as(c_int, 10403);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ACKEDSTATE_ID = @as(c_int, 10404);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ACKEDSTATE_NAME = @as(c_int, 10405);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ACKEDSTATE_NUMBER = @as(c_int, 10406);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10407);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 10408);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10409);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ACKEDSTATE_TRUESTATE = @as(c_int, 10410);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ACKEDSTATE_FALSESTATE = @as(c_int, 10411);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_CONFIRMEDSTATE = @as(c_int, 10412);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_CONFIRMEDSTATE_ID = @as(c_int, 10413);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_CONFIRMEDSTATE_NAME = @as(c_int, 10414);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_CONFIRMEDSTATE_NUMBER = @as(c_int, 10415);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10416);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 10417);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10418);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 10419);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 10420);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ACKNOWLEDGE = @as(c_int, 10421);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 10422);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_CONFIRM = @as(c_int, 10423);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_CONFIRM_INPUTARGUMENTS = @as(c_int, 10424);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ACTIVESTATE = @as(c_int, 10425);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ACTIVESTATE_ID = @as(c_int, 10426);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ACTIVESTATE_NAME = @as(c_int, 10427);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ACTIVESTATE_NUMBER = @as(c_int, 10428);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10429);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 10430);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10431);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ACTIVESTATE_TRUESTATE = @as(c_int, 10432);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ACTIVESTATE_FALSESTATE = @as(c_int, 10433);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SUPPRESSEDSTATE = @as(c_int, 10434);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SUPPRESSEDSTATE_ID = @as(c_int, 10435);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SUPPRESSEDSTATE_NAME = @as(c_int, 10436);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 10437);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10438);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 10439);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10440);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 10441);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 10442);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE = @as(c_int, 10443);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 10444);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 10445);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 10446);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 10447);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10448);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 10449);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 10450);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 10451);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 10452);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 10453);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 10454);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_UNSHELVE = @as(c_int, 10476);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 10477);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 10478);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 10479);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SUPPRESSEDORSHELVED = @as(c_int, 10480);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_MAXTIMESHELVED = @as(c_int, 10481);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_HIGHHIGHSTATE = @as(c_int, 10482);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_HIGHHIGHSTATE_ID = @as(c_int, 10483);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_HIGHHIGHSTATE_NAME = @as(c_int, 10484);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_HIGHHIGHSTATE_NUMBER = @as(c_int, 10485);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_HIGHHIGHSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10486);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_HIGHHIGHSTATE_TRANSITIONTIME = @as(c_int, 10487);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_HIGHHIGHSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10488);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_HIGHHIGHSTATE_TRUESTATE = @as(c_int, 10489);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_HIGHHIGHSTATE_FALSESTATE = @as(c_int, 10490);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_HIGHSTATE = @as(c_int, 10491);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_HIGHSTATE_ID = @as(c_int, 10492);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_HIGHSTATE_NAME = @as(c_int, 10493);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_HIGHSTATE_NUMBER = @as(c_int, 10494);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_HIGHSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10495);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_HIGHSTATE_TRANSITIONTIME = @as(c_int, 10496);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_HIGHSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10497);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_HIGHSTATE_TRUESTATE = @as(c_int, 10498);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_HIGHSTATE_FALSESTATE = @as(c_int, 10499);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LOWSTATE = @as(c_int, 10500);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LOWSTATE_ID = @as(c_int, 10501);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LOWSTATE_NAME = @as(c_int, 10502);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LOWSTATE_NUMBER = @as(c_int, 10503);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LOWSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10504);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LOWSTATE_TRANSITIONTIME = @as(c_int, 10505);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LOWSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10506);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LOWSTATE_TRUESTATE = @as(c_int, 10507);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LOWSTATE_FALSESTATE = @as(c_int, 10508);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LOWLOWSTATE = @as(c_int, 10509);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LOWLOWSTATE_ID = @as(c_int, 10510);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LOWLOWSTATE_NAME = @as(c_int, 10511);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LOWLOWSTATE_NUMBER = @as(c_int, 10512);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LOWLOWSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10513);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LOWLOWSTATE_TRANSITIONTIME = @as(c_int, 10514);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LOWLOWSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10515);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LOWLOWSTATE_TRUESTATE = @as(c_int, 10516);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LOWLOWSTATE_FALSESTATE = @as(c_int, 10517);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_HIGHHIGHLIMIT = @as(c_int, 10518);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_HIGHLIMIT = @as(c_int, 10519);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LOWLIMIT = @as(c_int, 10520);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LOWLOWLIMIT = @as(c_int, 10521);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SETPOINTNODE = @as(c_int, 10522);
pub const UA_NS0ID_DISCRETEALARMTYPE = @as(c_int, 10523);
pub const UA_NS0ID_DISCRETEALARMTYPE_EVENTID = @as(c_int, 10524);
pub const UA_NS0ID_DISCRETEALARMTYPE_EVENTTYPE = @as(c_int, 10525);
pub const UA_NS0ID_DISCRETEALARMTYPE_SOURCENODE = @as(c_int, 10526);
pub const UA_NS0ID_DISCRETEALARMTYPE_SOURCENAME = @as(c_int, 10527);
pub const UA_NS0ID_DISCRETEALARMTYPE_TIME = @as(c_int, 10528);
pub const UA_NS0ID_DISCRETEALARMTYPE_RECEIVETIME = @as(c_int, 10529);
pub const UA_NS0ID_DISCRETEALARMTYPE_LOCALTIME = @as(c_int, 10530);
pub const UA_NS0ID_DISCRETEALARMTYPE_MESSAGE = @as(c_int, 10531);
pub const UA_NS0ID_DISCRETEALARMTYPE_SEVERITY = @as(c_int, 10532);
pub const UA_NS0ID_DISCRETEALARMTYPE_CONDITIONNAME = @as(c_int, 10533);
pub const UA_NS0ID_DISCRETEALARMTYPE_BRANCHID = @as(c_int, 10534);
pub const UA_NS0ID_DISCRETEALARMTYPE_RETAIN = @as(c_int, 10535);
pub const UA_NS0ID_DISCRETEALARMTYPE_ENABLEDSTATE = @as(c_int, 10536);
pub const UA_NS0ID_DISCRETEALARMTYPE_ENABLEDSTATE_ID = @as(c_int, 10537);
pub const UA_NS0ID_DISCRETEALARMTYPE_ENABLEDSTATE_NAME = @as(c_int, 10538);
pub const UA_NS0ID_DISCRETEALARMTYPE_ENABLEDSTATE_NUMBER = @as(c_int, 10539);
pub const UA_NS0ID_DISCRETEALARMTYPE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10540);
pub const UA_NS0ID_DISCRETEALARMTYPE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 10541);
pub const UA_NS0ID_DISCRETEALARMTYPE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10542);
pub const UA_NS0ID_DISCRETEALARMTYPE_ENABLEDSTATE_TRUESTATE = @as(c_int, 10543);
pub const UA_NS0ID_DISCRETEALARMTYPE_ENABLEDSTATE_FALSESTATE = @as(c_int, 10544);
pub const UA_NS0ID_DISCRETEALARMTYPE_QUALITY = @as(c_int, 10545);
pub const UA_NS0ID_DISCRETEALARMTYPE_QUALITY_SOURCETIMESTAMP = @as(c_int, 10546);
pub const UA_NS0ID_DISCRETEALARMTYPE_LASTSEVERITY = @as(c_int, 10547);
pub const UA_NS0ID_DISCRETEALARMTYPE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 10548);
pub const UA_NS0ID_DISCRETEALARMTYPE_COMMENT = @as(c_int, 10549);
pub const UA_NS0ID_DISCRETEALARMTYPE_COMMENT_SOURCETIMESTAMP = @as(c_int, 10550);
pub const UA_NS0ID_DISCRETEALARMTYPE_CLIENTUSERID = @as(c_int, 10551);
pub const UA_NS0ID_DISCRETEALARMTYPE_ENABLE = @as(c_int, 10552);
pub const UA_NS0ID_DISCRETEALARMTYPE_DISABLE = @as(c_int, 10553);
pub const UA_NS0ID_DISCRETEALARMTYPE_ADDCOMMENT = @as(c_int, 10554);
pub const UA_NS0ID_DISCRETEALARMTYPE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 10555);
pub const UA_NS0ID_DISCRETEALARMTYPE_CONDITIONREFRESH = @as(c_int, 10556);
pub const UA_NS0ID_DISCRETEALARMTYPE_CONDITIONREFRESH_INPUTARGUMENTS = @as(c_int, 10557);
pub const UA_NS0ID_DISCRETEALARMTYPE_ACKEDSTATE = @as(c_int, 10558);
pub const UA_NS0ID_DISCRETEALARMTYPE_ACKEDSTATE_ID = @as(c_int, 10559);
pub const UA_NS0ID_DISCRETEALARMTYPE_ACKEDSTATE_NAME = @as(c_int, 10560);
pub const UA_NS0ID_DISCRETEALARMTYPE_ACKEDSTATE_NUMBER = @as(c_int, 10561);
pub const UA_NS0ID_DISCRETEALARMTYPE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10562);
pub const UA_NS0ID_DISCRETEALARMTYPE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 10563);
pub const UA_NS0ID_DISCRETEALARMTYPE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10564);
pub const UA_NS0ID_DISCRETEALARMTYPE_ACKEDSTATE_TRUESTATE = @as(c_int, 10565);
pub const UA_NS0ID_DISCRETEALARMTYPE_ACKEDSTATE_FALSESTATE = @as(c_int, 10566);
pub const UA_NS0ID_DISCRETEALARMTYPE_CONFIRMEDSTATE = @as(c_int, 10567);
pub const UA_NS0ID_DISCRETEALARMTYPE_CONFIRMEDSTATE_ID = @as(c_int, 10568);
pub const UA_NS0ID_DISCRETEALARMTYPE_CONFIRMEDSTATE_NAME = @as(c_int, 10569);
pub const UA_NS0ID_DISCRETEALARMTYPE_CONFIRMEDSTATE_NUMBER = @as(c_int, 10570);
pub const UA_NS0ID_DISCRETEALARMTYPE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10571);
pub const UA_NS0ID_DISCRETEALARMTYPE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 10572);
pub const UA_NS0ID_DISCRETEALARMTYPE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10573);
pub const UA_NS0ID_DISCRETEALARMTYPE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 10574);
pub const UA_NS0ID_DISCRETEALARMTYPE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 10575);
pub const UA_NS0ID_DISCRETEALARMTYPE_ACKNOWLEDGE = @as(c_int, 10576);
pub const UA_NS0ID_DISCRETEALARMTYPE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 10577);
pub const UA_NS0ID_DISCRETEALARMTYPE_CONFIRM = @as(c_int, 10578);
pub const UA_NS0ID_DISCRETEALARMTYPE_CONFIRM_INPUTARGUMENTS = @as(c_int, 10579);
pub const UA_NS0ID_DISCRETEALARMTYPE_ACTIVESTATE = @as(c_int, 10580);
pub const UA_NS0ID_DISCRETEALARMTYPE_ACTIVESTATE_ID = @as(c_int, 10581);
pub const UA_NS0ID_DISCRETEALARMTYPE_ACTIVESTATE_NAME = @as(c_int, 10582);
pub const UA_NS0ID_DISCRETEALARMTYPE_ACTIVESTATE_NUMBER = @as(c_int, 10583);
pub const UA_NS0ID_DISCRETEALARMTYPE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10584);
pub const UA_NS0ID_DISCRETEALARMTYPE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 10585);
pub const UA_NS0ID_DISCRETEALARMTYPE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10586);
pub const UA_NS0ID_DISCRETEALARMTYPE_ACTIVESTATE_TRUESTATE = @as(c_int, 10587);
pub const UA_NS0ID_DISCRETEALARMTYPE_ACTIVESTATE_FALSESTATE = @as(c_int, 10588);
pub const UA_NS0ID_DISCRETEALARMTYPE_SUPPRESSEDSTATE = @as(c_int, 10589);
pub const UA_NS0ID_DISCRETEALARMTYPE_SUPPRESSEDSTATE_ID = @as(c_int, 10590);
pub const UA_NS0ID_DISCRETEALARMTYPE_SUPPRESSEDSTATE_NAME = @as(c_int, 10591);
pub const UA_NS0ID_DISCRETEALARMTYPE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 10592);
pub const UA_NS0ID_DISCRETEALARMTYPE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10593);
pub const UA_NS0ID_DISCRETEALARMTYPE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 10594);
pub const UA_NS0ID_DISCRETEALARMTYPE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10595);
pub const UA_NS0ID_DISCRETEALARMTYPE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 10596);
pub const UA_NS0ID_DISCRETEALARMTYPE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 10597);
pub const UA_NS0ID_DISCRETEALARMTYPE_SHELVINGSTATE = @as(c_int, 10598);
pub const UA_NS0ID_DISCRETEALARMTYPE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 10599);
pub const UA_NS0ID_DISCRETEALARMTYPE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 10600);
pub const UA_NS0ID_DISCRETEALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 10601);
pub const UA_NS0ID_DISCRETEALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 10602);
pub const UA_NS0ID_DISCRETEALARMTYPE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10603);
pub const UA_NS0ID_DISCRETEALARMTYPE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 10604);
pub const UA_NS0ID_DISCRETEALARMTYPE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 10605);
pub const UA_NS0ID_DISCRETEALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 10606);
pub const UA_NS0ID_DISCRETEALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 10607);
pub const UA_NS0ID_DISCRETEALARMTYPE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 10608);
pub const UA_NS0ID_DISCRETEALARMTYPE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 10609);
pub const UA_NS0ID_DISCRETEALARMTYPE_SHELVINGSTATE_UNSHELVE = @as(c_int, 10631);
pub const UA_NS0ID_DISCRETEALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 10632);
pub const UA_NS0ID_DISCRETEALARMTYPE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 10633);
pub const UA_NS0ID_DISCRETEALARMTYPE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 10634);
pub const UA_NS0ID_DISCRETEALARMTYPE_SUPPRESSEDORSHELVED = @as(c_int, 10635);
pub const UA_NS0ID_DISCRETEALARMTYPE_MAXTIMESHELVED = @as(c_int, 10636);
pub const UA_NS0ID_OFFNORMALALARMTYPE = @as(c_int, 10637);
pub const UA_NS0ID_OFFNORMALALARMTYPE_EVENTID = @as(c_int, 10638);
pub const UA_NS0ID_OFFNORMALALARMTYPE_EVENTTYPE = @as(c_int, 10639);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SOURCENODE = @as(c_int, 10640);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SOURCENAME = @as(c_int, 10641);
pub const UA_NS0ID_OFFNORMALALARMTYPE_TIME = @as(c_int, 10642);
pub const UA_NS0ID_OFFNORMALALARMTYPE_RECEIVETIME = @as(c_int, 10643);
pub const UA_NS0ID_OFFNORMALALARMTYPE_LOCALTIME = @as(c_int, 10644);
pub const UA_NS0ID_OFFNORMALALARMTYPE_MESSAGE = @as(c_int, 10645);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SEVERITY = @as(c_int, 10646);
pub const UA_NS0ID_OFFNORMALALARMTYPE_CONDITIONNAME = @as(c_int, 10647);
pub const UA_NS0ID_OFFNORMALALARMTYPE_BRANCHID = @as(c_int, 10648);
pub const UA_NS0ID_OFFNORMALALARMTYPE_RETAIN = @as(c_int, 10649);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ENABLEDSTATE = @as(c_int, 10650);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ENABLEDSTATE_ID = @as(c_int, 10651);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ENABLEDSTATE_NAME = @as(c_int, 10652);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ENABLEDSTATE_NUMBER = @as(c_int, 10653);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10654);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 10655);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10656);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ENABLEDSTATE_TRUESTATE = @as(c_int, 10657);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ENABLEDSTATE_FALSESTATE = @as(c_int, 10658);
pub const UA_NS0ID_OFFNORMALALARMTYPE_QUALITY = @as(c_int, 10659);
pub const UA_NS0ID_OFFNORMALALARMTYPE_QUALITY_SOURCETIMESTAMP = @as(c_int, 10660);
pub const UA_NS0ID_OFFNORMALALARMTYPE_LASTSEVERITY = @as(c_int, 10661);
pub const UA_NS0ID_OFFNORMALALARMTYPE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 10662);
pub const UA_NS0ID_OFFNORMALALARMTYPE_COMMENT = @as(c_int, 10663);
pub const UA_NS0ID_OFFNORMALALARMTYPE_COMMENT_SOURCETIMESTAMP = @as(c_int, 10664);
pub const UA_NS0ID_OFFNORMALALARMTYPE_CLIENTUSERID = @as(c_int, 10665);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ENABLE = @as(c_int, 10666);
pub const UA_NS0ID_OFFNORMALALARMTYPE_DISABLE = @as(c_int, 10667);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ADDCOMMENT = @as(c_int, 10668);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 10669);
pub const UA_NS0ID_OFFNORMALALARMTYPE_CONDITIONREFRESH = @as(c_int, 10670);
pub const UA_NS0ID_OFFNORMALALARMTYPE_CONDITIONREFRESH_INPUTARGUMENTS = @as(c_int, 10671);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ACKEDSTATE = @as(c_int, 10672);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ACKEDSTATE_ID = @as(c_int, 10673);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ACKEDSTATE_NAME = @as(c_int, 10674);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ACKEDSTATE_NUMBER = @as(c_int, 10675);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10676);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 10677);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10678);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ACKEDSTATE_TRUESTATE = @as(c_int, 10679);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ACKEDSTATE_FALSESTATE = @as(c_int, 10680);
pub const UA_NS0ID_OFFNORMALALARMTYPE_CONFIRMEDSTATE = @as(c_int, 10681);
pub const UA_NS0ID_OFFNORMALALARMTYPE_CONFIRMEDSTATE_ID = @as(c_int, 10682);
pub const UA_NS0ID_OFFNORMALALARMTYPE_CONFIRMEDSTATE_NAME = @as(c_int, 10683);
pub const UA_NS0ID_OFFNORMALALARMTYPE_CONFIRMEDSTATE_NUMBER = @as(c_int, 10684);
pub const UA_NS0ID_OFFNORMALALARMTYPE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10685);
pub const UA_NS0ID_OFFNORMALALARMTYPE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 10686);
pub const UA_NS0ID_OFFNORMALALARMTYPE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10687);
pub const UA_NS0ID_OFFNORMALALARMTYPE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 10688);
pub const UA_NS0ID_OFFNORMALALARMTYPE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 10689);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ACKNOWLEDGE = @as(c_int, 10690);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 10691);
pub const UA_NS0ID_OFFNORMALALARMTYPE_CONFIRM = @as(c_int, 10692);
pub const UA_NS0ID_OFFNORMALALARMTYPE_CONFIRM_INPUTARGUMENTS = @as(c_int, 10693);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ACTIVESTATE = @as(c_int, 10694);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ACTIVESTATE_ID = @as(c_int, 10695);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ACTIVESTATE_NAME = @as(c_int, 10696);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ACTIVESTATE_NUMBER = @as(c_int, 10697);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10698);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 10699);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10700);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ACTIVESTATE_TRUESTATE = @as(c_int, 10701);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ACTIVESTATE_FALSESTATE = @as(c_int, 10702);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SUPPRESSEDSTATE = @as(c_int, 10703);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SUPPRESSEDSTATE_ID = @as(c_int, 10704);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SUPPRESSEDSTATE_NAME = @as(c_int, 10705);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 10706);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10707);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 10708);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10709);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 10710);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 10711);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SHELVINGSTATE = @as(c_int, 10712);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 10713);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 10714);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 10715);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 10716);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10717);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 10718);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 10719);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 10720);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 10721);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 10722);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 10723);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SHELVINGSTATE_UNSHELVE = @as(c_int, 10745);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 10746);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 10747);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 10748);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SUPPRESSEDORSHELVED = @as(c_int, 10749);
pub const UA_NS0ID_OFFNORMALALARMTYPE_MAXTIMESHELVED = @as(c_int, 10750);
pub const UA_NS0ID_TRIPALARMTYPE = @as(c_int, 10751);
pub const UA_NS0ID_TRIPALARMTYPE_EVENTID = @as(c_int, 10752);
pub const UA_NS0ID_TRIPALARMTYPE_EVENTTYPE = @as(c_int, 10753);
pub const UA_NS0ID_TRIPALARMTYPE_SOURCENODE = @as(c_int, 10754);
pub const UA_NS0ID_TRIPALARMTYPE_SOURCENAME = @as(c_int, 10755);
pub const UA_NS0ID_TRIPALARMTYPE_TIME = @as(c_int, 10756);
pub const UA_NS0ID_TRIPALARMTYPE_RECEIVETIME = @as(c_int, 10757);
pub const UA_NS0ID_TRIPALARMTYPE_LOCALTIME = @as(c_int, 10758);
pub const UA_NS0ID_TRIPALARMTYPE_MESSAGE = @as(c_int, 10759);
pub const UA_NS0ID_TRIPALARMTYPE_SEVERITY = @as(c_int, 10760);
pub const UA_NS0ID_TRIPALARMTYPE_CONDITIONNAME = @as(c_int, 10761);
pub const UA_NS0ID_TRIPALARMTYPE_BRANCHID = @as(c_int, 10762);
pub const UA_NS0ID_TRIPALARMTYPE_RETAIN = @as(c_int, 10763);
pub const UA_NS0ID_TRIPALARMTYPE_ENABLEDSTATE = @as(c_int, 10764);
pub const UA_NS0ID_TRIPALARMTYPE_ENABLEDSTATE_ID = @as(c_int, 10765);
pub const UA_NS0ID_TRIPALARMTYPE_ENABLEDSTATE_NAME = @as(c_int, 10766);
pub const UA_NS0ID_TRIPALARMTYPE_ENABLEDSTATE_NUMBER = @as(c_int, 10767);
pub const UA_NS0ID_TRIPALARMTYPE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10768);
pub const UA_NS0ID_TRIPALARMTYPE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 10769);
pub const UA_NS0ID_TRIPALARMTYPE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10770);
pub const UA_NS0ID_TRIPALARMTYPE_ENABLEDSTATE_TRUESTATE = @as(c_int, 10771);
pub const UA_NS0ID_TRIPALARMTYPE_ENABLEDSTATE_FALSESTATE = @as(c_int, 10772);
pub const UA_NS0ID_TRIPALARMTYPE_QUALITY = @as(c_int, 10773);
pub const UA_NS0ID_TRIPALARMTYPE_QUALITY_SOURCETIMESTAMP = @as(c_int, 10774);
pub const UA_NS0ID_TRIPALARMTYPE_LASTSEVERITY = @as(c_int, 10775);
pub const UA_NS0ID_TRIPALARMTYPE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 10776);
pub const UA_NS0ID_TRIPALARMTYPE_COMMENT = @as(c_int, 10777);
pub const UA_NS0ID_TRIPALARMTYPE_COMMENT_SOURCETIMESTAMP = @as(c_int, 10778);
pub const UA_NS0ID_TRIPALARMTYPE_CLIENTUSERID = @as(c_int, 10779);
pub const UA_NS0ID_TRIPALARMTYPE_ENABLE = @as(c_int, 10780);
pub const UA_NS0ID_TRIPALARMTYPE_DISABLE = @as(c_int, 10781);
pub const UA_NS0ID_TRIPALARMTYPE_ADDCOMMENT = @as(c_int, 10782);
pub const UA_NS0ID_TRIPALARMTYPE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 10783);
pub const UA_NS0ID_TRIPALARMTYPE_CONDITIONREFRESH = @as(c_int, 10784);
pub const UA_NS0ID_TRIPALARMTYPE_CONDITIONREFRESH_INPUTARGUMENTS = @as(c_int, 10785);
pub const UA_NS0ID_TRIPALARMTYPE_ACKEDSTATE = @as(c_int, 10786);
pub const UA_NS0ID_TRIPALARMTYPE_ACKEDSTATE_ID = @as(c_int, 10787);
pub const UA_NS0ID_TRIPALARMTYPE_ACKEDSTATE_NAME = @as(c_int, 10788);
pub const UA_NS0ID_TRIPALARMTYPE_ACKEDSTATE_NUMBER = @as(c_int, 10789);
pub const UA_NS0ID_TRIPALARMTYPE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10790);
pub const UA_NS0ID_TRIPALARMTYPE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 10791);
pub const UA_NS0ID_TRIPALARMTYPE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10792);
pub const UA_NS0ID_TRIPALARMTYPE_ACKEDSTATE_TRUESTATE = @as(c_int, 10793);
pub const UA_NS0ID_TRIPALARMTYPE_ACKEDSTATE_FALSESTATE = @as(c_int, 10794);
pub const UA_NS0ID_TRIPALARMTYPE_CONFIRMEDSTATE = @as(c_int, 10795);
pub const UA_NS0ID_TRIPALARMTYPE_CONFIRMEDSTATE_ID = @as(c_int, 10796);
pub const UA_NS0ID_TRIPALARMTYPE_CONFIRMEDSTATE_NAME = @as(c_int, 10797);
pub const UA_NS0ID_TRIPALARMTYPE_CONFIRMEDSTATE_NUMBER = @as(c_int, 10798);
pub const UA_NS0ID_TRIPALARMTYPE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10799);
pub const UA_NS0ID_TRIPALARMTYPE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 10800);
pub const UA_NS0ID_TRIPALARMTYPE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10801);
pub const UA_NS0ID_TRIPALARMTYPE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 10802);
pub const UA_NS0ID_TRIPALARMTYPE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 10803);
pub const UA_NS0ID_TRIPALARMTYPE_ACKNOWLEDGE = @as(c_int, 10804);
pub const UA_NS0ID_TRIPALARMTYPE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 10805);
pub const UA_NS0ID_TRIPALARMTYPE_CONFIRM = @as(c_int, 10806);
pub const UA_NS0ID_TRIPALARMTYPE_CONFIRM_INPUTARGUMENTS = @as(c_int, 10807);
pub const UA_NS0ID_TRIPALARMTYPE_ACTIVESTATE = @as(c_int, 10808);
pub const UA_NS0ID_TRIPALARMTYPE_ACTIVESTATE_ID = @as(c_int, 10809);
pub const UA_NS0ID_TRIPALARMTYPE_ACTIVESTATE_NAME = @as(c_int, 10810);
pub const UA_NS0ID_TRIPALARMTYPE_ACTIVESTATE_NUMBER = @as(c_int, 10811);
pub const UA_NS0ID_TRIPALARMTYPE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10812);
pub const UA_NS0ID_TRIPALARMTYPE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 10813);
pub const UA_NS0ID_TRIPALARMTYPE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10814);
pub const UA_NS0ID_TRIPALARMTYPE_ACTIVESTATE_TRUESTATE = @as(c_int, 10815);
pub const UA_NS0ID_TRIPALARMTYPE_ACTIVESTATE_FALSESTATE = @as(c_int, 10816);
pub const UA_NS0ID_TRIPALARMTYPE_SUPPRESSEDSTATE = @as(c_int, 10817);
pub const UA_NS0ID_TRIPALARMTYPE_SUPPRESSEDSTATE_ID = @as(c_int, 10818);
pub const UA_NS0ID_TRIPALARMTYPE_SUPPRESSEDSTATE_NAME = @as(c_int, 10819);
pub const UA_NS0ID_TRIPALARMTYPE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 10820);
pub const UA_NS0ID_TRIPALARMTYPE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10821);
pub const UA_NS0ID_TRIPALARMTYPE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 10822);
pub const UA_NS0ID_TRIPALARMTYPE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 10823);
pub const UA_NS0ID_TRIPALARMTYPE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 10824);
pub const UA_NS0ID_TRIPALARMTYPE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 10825);
pub const UA_NS0ID_TRIPALARMTYPE_SHELVINGSTATE = @as(c_int, 10826);
pub const UA_NS0ID_TRIPALARMTYPE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 10827);
pub const UA_NS0ID_TRIPALARMTYPE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 10828);
pub const UA_NS0ID_TRIPALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 10829);
pub const UA_NS0ID_TRIPALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 10830);
pub const UA_NS0ID_TRIPALARMTYPE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 10831);
pub const UA_NS0ID_TRIPALARMTYPE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 10832);
pub const UA_NS0ID_TRIPALARMTYPE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 10833);
pub const UA_NS0ID_TRIPALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 10834);
pub const UA_NS0ID_TRIPALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 10835);
pub const UA_NS0ID_TRIPALARMTYPE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 10836);
pub const UA_NS0ID_TRIPALARMTYPE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 10837);
pub const UA_NS0ID_TRIPALARMTYPE_SHELVINGSTATE_UNSHELVE = @as(c_int, 10859);
pub const UA_NS0ID_TRIPALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 10860);
pub const UA_NS0ID_TRIPALARMTYPE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 10861);
pub const UA_NS0ID_TRIPALARMTYPE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 10862);
pub const UA_NS0ID_TRIPALARMTYPE_SUPPRESSEDORSHELVED = @as(c_int, 10863);
pub const UA_NS0ID_TRIPALARMTYPE_MAXTIMESHELVED = @as(c_int, 10864);
pub const UA_NS0ID_AUDITCONDITIONSHELVINGEVENTTYPE = @as(c_int, 11093);
pub const UA_NS0ID_AUDITCONDITIONSHELVINGEVENTTYPE_EVENTID = @as(c_int, 11094);
pub const UA_NS0ID_AUDITCONDITIONSHELVINGEVENTTYPE_EVENTTYPE = @as(c_int, 11095);
pub const UA_NS0ID_AUDITCONDITIONSHELVINGEVENTTYPE_SOURCENODE = @as(c_int, 11096);
pub const UA_NS0ID_AUDITCONDITIONSHELVINGEVENTTYPE_SOURCENAME = @as(c_int, 11097);
pub const UA_NS0ID_AUDITCONDITIONSHELVINGEVENTTYPE_TIME = @as(c_int, 11098);
pub const UA_NS0ID_AUDITCONDITIONSHELVINGEVENTTYPE_RECEIVETIME = @as(c_int, 11099);
pub const UA_NS0ID_AUDITCONDITIONSHELVINGEVENTTYPE_LOCALTIME = @as(c_int, 11100);
pub const UA_NS0ID_AUDITCONDITIONSHELVINGEVENTTYPE_MESSAGE = @as(c_int, 11101);
pub const UA_NS0ID_AUDITCONDITIONSHELVINGEVENTTYPE_SEVERITY = @as(c_int, 11102);
pub const UA_NS0ID_AUDITCONDITIONSHELVINGEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 11103);
pub const UA_NS0ID_AUDITCONDITIONSHELVINGEVENTTYPE_STATUS = @as(c_int, 11104);
pub const UA_NS0ID_AUDITCONDITIONSHELVINGEVENTTYPE_SERVERID = @as(c_int, 11105);
pub const UA_NS0ID_AUDITCONDITIONSHELVINGEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 11106);
pub const UA_NS0ID_AUDITCONDITIONSHELVINGEVENTTYPE_CLIENTUSERID = @as(c_int, 11107);
pub const UA_NS0ID_AUDITCONDITIONSHELVINGEVENTTYPE_METHODID = @as(c_int, 11108);
pub const UA_NS0ID_AUDITCONDITIONSHELVINGEVENTTYPE_INPUTARGUMENTS = @as(c_int, 11109);
pub const UA_NS0ID_TWOSTATEVARIABLETYPE_TRUESTATE = @as(c_int, 11110);
pub const UA_NS0ID_TWOSTATEVARIABLETYPE_FALSESTATE = @as(c_int, 11111);
pub const UA_NS0ID_CONDITIONTYPE_CONDITIONCLASSID = @as(c_int, 11112);
pub const UA_NS0ID_CONDITIONTYPE_CONDITIONCLASSNAME = @as(c_int, 11113);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_CONDITIONCLASSID = @as(c_int, 11114);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_CONDITIONCLASSNAME = @as(c_int, 11115);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_CONDITIONCLASSID = @as(c_int, 11116);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_CONDITIONCLASSNAME = @as(c_int, 11117);
pub const UA_NS0ID_ALARMCONDITIONTYPE_CONDITIONCLASSID = @as(c_int, 11118);
pub const UA_NS0ID_ALARMCONDITIONTYPE_CONDITIONCLASSNAME = @as(c_int, 11119);
pub const UA_NS0ID_ALARMCONDITIONTYPE_INPUTNODE = @as(c_int, 11120);
pub const UA_NS0ID_LIMITALARMTYPE_CONDITIONCLASSID = @as(c_int, 11121);
pub const UA_NS0ID_LIMITALARMTYPE_CONDITIONCLASSNAME = @as(c_int, 11122);
pub const UA_NS0ID_LIMITALARMTYPE_INPUTNODE = @as(c_int, 11123);
pub const UA_NS0ID_LIMITALARMTYPE_HIGHHIGHLIMIT = @as(c_int, 11124);
pub const UA_NS0ID_LIMITALARMTYPE_HIGHLIMIT = @as(c_int, 11125);
pub const UA_NS0ID_LIMITALARMTYPE_LOWLIMIT = @as(c_int, 11126);
pub const UA_NS0ID_LIMITALARMTYPE_LOWLOWLIMIT = @as(c_int, 11127);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_CONDITIONCLASSID = @as(c_int, 11128);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_CONDITIONCLASSNAME = @as(c_int, 11129);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_INPUTNODE = @as(c_int, 11130);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_CONDITIONCLASSID = @as(c_int, 11131);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_CONDITIONCLASSNAME = @as(c_int, 11132);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_INPUTNODE = @as(c_int, 11133);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_CONDITIONCLASSID = @as(c_int, 11134);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_CONDITIONCLASSNAME = @as(c_int, 11135);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_INPUTNODE = @as(c_int, 11136);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_CONDITIONCLASSID = @as(c_int, 11137);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_CONDITIONCLASSNAME = @as(c_int, 11138);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_INPUTNODE = @as(c_int, 11139);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_CONDITIONCLASSID = @as(c_int, 11140);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_CONDITIONCLASSNAME = @as(c_int, 11141);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_INPUTNODE = @as(c_int, 11142);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_CONDITIONCLASSID = @as(c_int, 11143);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_CONDITIONCLASSNAME = @as(c_int, 11144);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_INPUTNODE = @as(c_int, 11145);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_CONDITIONCLASSID = @as(c_int, 11146);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_CONDITIONCLASSNAME = @as(c_int, 11147);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_INPUTNODE = @as(c_int, 11148);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_CONDITIONCLASSID = @as(c_int, 11149);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_CONDITIONCLASSNAME = @as(c_int, 11150);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_INPUTNODE = @as(c_int, 11151);
pub const UA_NS0ID_DISCRETEALARMTYPE_CONDITIONCLASSID = @as(c_int, 11152);
pub const UA_NS0ID_DISCRETEALARMTYPE_CONDITIONCLASSNAME = @as(c_int, 11153);
pub const UA_NS0ID_DISCRETEALARMTYPE_INPUTNODE = @as(c_int, 11154);
pub const UA_NS0ID_OFFNORMALALARMTYPE_CONDITIONCLASSID = @as(c_int, 11155);
pub const UA_NS0ID_OFFNORMALALARMTYPE_CONDITIONCLASSNAME = @as(c_int, 11156);
pub const UA_NS0ID_OFFNORMALALARMTYPE_INPUTNODE = @as(c_int, 11157);
pub const UA_NS0ID_OFFNORMALALARMTYPE_NORMALSTATE = @as(c_int, 11158);
pub const UA_NS0ID_TRIPALARMTYPE_CONDITIONCLASSID = @as(c_int, 11159);
pub const UA_NS0ID_TRIPALARMTYPE_CONDITIONCLASSNAME = @as(c_int, 11160);
pub const UA_NS0ID_TRIPALARMTYPE_INPUTNODE = @as(c_int, 11161);
pub const UA_NS0ID_TRIPALARMTYPE_NORMALSTATE = @as(c_int, 11162);
pub const UA_NS0ID_BASECONDITIONCLASSTYPE = @as(c_int, 11163);
pub const UA_NS0ID_PROCESSCONDITIONCLASSTYPE = @as(c_int, 11164);
pub const UA_NS0ID_MAINTENANCECONDITIONCLASSTYPE = @as(c_int, 11165);
pub const UA_NS0ID_SYSTEMCONDITIONCLASSTYPE = @as(c_int, 11166);
pub const UA_NS0ID_HISTORICALDATACONFIGURATIONTYPE_AGGREGATECONFIGURATION_TREATUNCERTAINASBAD = @as(c_int, 11168);
pub const UA_NS0ID_HISTORICALDATACONFIGURATIONTYPE_AGGREGATECONFIGURATION_PERCENTDATABAD = @as(c_int, 11169);
pub const UA_NS0ID_HISTORICALDATACONFIGURATIONTYPE_AGGREGATECONFIGURATION_PERCENTDATAGOOD = @as(c_int, 11170);
pub const UA_NS0ID_HISTORICALDATACONFIGURATIONTYPE_AGGREGATECONFIGURATION_USESLOPEDEXTRAPOLATION = @as(c_int, 11171);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIESTYPE_AGGREGATEFUNCTIONS = @as(c_int, 11172);
pub const UA_NS0ID_AGGREGATECONFIGURATIONTYPE = @as(c_int, 11187);
pub const UA_NS0ID_AGGREGATECONFIGURATIONTYPE_TREATUNCERTAINASBAD = @as(c_int, 11188);
pub const UA_NS0ID_AGGREGATECONFIGURATIONTYPE_PERCENTDATABAD = @as(c_int, 11189);
pub const UA_NS0ID_AGGREGATECONFIGURATIONTYPE_PERCENTDATAGOOD = @as(c_int, 11190);
pub const UA_NS0ID_AGGREGATECONFIGURATIONTYPE_USESLOPEDEXTRAPOLATION = @as(c_int, 11191);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIES = @as(c_int, 11192);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIES_ACCESSHISTORYDATACAPABILITY = @as(c_int, 11193);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIES_INSERTDATACAPABILITY = @as(c_int, 11196);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIES_REPLACEDATACAPABILITY = @as(c_int, 11197);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIES_UPDATEDATACAPABILITY = @as(c_int, 11198);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIES_DELETERAWCAPABILITY = @as(c_int, 11199);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIES_DELETEATTIMECAPABILITY = @as(c_int, 11200);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIES_AGGREGATEFUNCTIONS = @as(c_int, 11201);
pub const UA_NS0ID_HACONFIGURATION = @as(c_int, 11202);
pub const UA_NS0ID_HACONFIGURATION_AGGREGATECONFIGURATION = @as(c_int, 11203);
pub const UA_NS0ID_HACONFIGURATION_AGGREGATECONFIGURATION_TREATUNCERTAINASBAD = @as(c_int, 11204);
pub const UA_NS0ID_HACONFIGURATION_AGGREGATECONFIGURATION_PERCENTDATABAD = @as(c_int, 11205);
pub const UA_NS0ID_HACONFIGURATION_AGGREGATECONFIGURATION_PERCENTDATAGOOD = @as(c_int, 11206);
pub const UA_NS0ID_HACONFIGURATION_AGGREGATECONFIGURATION_USESLOPEDEXTRAPOLATION = @as(c_int, 11207);
pub const UA_NS0ID_HACONFIGURATION_STEPPED = @as(c_int, 11208);
pub const UA_NS0ID_HACONFIGURATION_DEFINITION = @as(c_int, 11209);
pub const UA_NS0ID_HACONFIGURATION_MAXTIMEINTERVAL = @as(c_int, 11210);
pub const UA_NS0ID_HACONFIGURATION_MINTIMEINTERVAL = @as(c_int, 11211);
pub const UA_NS0ID_HACONFIGURATION_EXCEPTIONDEVIATION = @as(c_int, 11212);
pub const UA_NS0ID_HACONFIGURATION_EXCEPTIONDEVIATIONFORMAT = @as(c_int, 11213);
pub const UA_NS0ID_ANNOTATIONS = @as(c_int, 11214);
pub const UA_NS0ID_HISTORICALEVENTFILTER = @as(c_int, 11215);
pub const UA_NS0ID_MODIFICATIONINFO = @as(c_int, 11216);
pub const UA_NS0ID_HISTORYMODIFIEDDATA = @as(c_int, 11217);
pub const UA_NS0ID_MODIFICATIONINFO_ENCODING_DEFAULTXML = @as(c_int, 11218);
pub const UA_NS0ID_HISTORYMODIFIEDDATA_ENCODING_DEFAULTXML = @as(c_int, 11219);
pub const UA_NS0ID_MODIFICATIONINFO_ENCODING_DEFAULTBINARY = @as(c_int, 11226);
pub const UA_NS0ID_HISTORYMODIFIEDDATA_ENCODING_DEFAULTBINARY = @as(c_int, 11227);
pub const UA_NS0ID_HISTORYUPDATETYPE = @as(c_int, 11234);
pub const UA_NS0ID_MULTISTATEVALUEDISCRETETYPE = @as(c_int, 11238);
pub const UA_NS0ID_MULTISTATEVALUEDISCRETETYPE_DEFINITION = @as(c_int, 11239);
pub const UA_NS0ID_MULTISTATEVALUEDISCRETETYPE_VALUEPRECISION = @as(c_int, 11240);
pub const UA_NS0ID_MULTISTATEVALUEDISCRETETYPE_ENUMVALUES = @as(c_int, 11241);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIES_ACCESSHISTORYEVENTSCAPABILITY = @as(c_int, 11242);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIESTYPE_MAXRETURNDATAVALUES = @as(c_int, 11268);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIESTYPE_MAXRETURNEVENTVALUES = @as(c_int, 11269);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIESTYPE_INSERTANNOTATIONCAPABILITY = @as(c_int, 11270);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIES_MAXRETURNDATAVALUES = @as(c_int, 11273);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIES_MAXRETURNEVENTVALUES = @as(c_int, 11274);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIES_INSERTANNOTATIONCAPABILITY = @as(c_int, 11275);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIESTYPE_INSERTEVENTCAPABILITY = @as(c_int, 11278);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIESTYPE_REPLACEEVENTCAPABILITY = @as(c_int, 11279);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIESTYPE_UPDATEEVENTCAPABILITY = @as(c_int, 11280);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIES_INSERTEVENTCAPABILITY = @as(c_int, 11281);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIES_REPLACEEVENTCAPABILITY = @as(c_int, 11282);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIES_UPDATEEVENTCAPABILITY = @as(c_int, 11283);
pub const UA_NS0ID_AGGREGATEFUNCTION_TIMEAVERAGE2 = @as(c_int, 11285);
pub const UA_NS0ID_AGGREGATEFUNCTION_MINIMUM2 = @as(c_int, 11286);
pub const UA_NS0ID_AGGREGATEFUNCTION_MAXIMUM2 = @as(c_int, 11287);
pub const UA_NS0ID_AGGREGATEFUNCTION_RANGE2 = @as(c_int, 11288);
pub const UA_NS0ID_AGGREGATEFUNCTION_WORSTQUALITY2 = @as(c_int, 11292);
pub const UA_NS0ID_PERFORMUPDATETYPE = @as(c_int, 11293);
pub const UA_NS0ID_UPDATESTRUCTUREDATADETAILS = @as(c_int, 11295);
pub const UA_NS0ID_UPDATESTRUCTUREDATADETAILS_ENCODING_DEFAULTXML = @as(c_int, 11296);
pub const UA_NS0ID_UPDATESTRUCTUREDATADETAILS_ENCODING_DEFAULTBINARY = @as(c_int, 11300);
pub const UA_NS0ID_AGGREGATEFUNCTION_TOTAL2 = @as(c_int, 11304);
pub const UA_NS0ID_AGGREGATEFUNCTION_MINIMUMACTUALTIME2 = @as(c_int, 11305);
pub const UA_NS0ID_AGGREGATEFUNCTION_MAXIMUMACTUALTIME2 = @as(c_int, 11306);
pub const UA_NS0ID_AGGREGATEFUNCTION_DURATIONINSTATEZERO = @as(c_int, 11307);
pub const UA_NS0ID_AGGREGATEFUNCTION_DURATIONINSTATENONZERO = @as(c_int, 11308);
pub const UA_NS0ID_SERVER_SERVERREDUNDANCY_CURRENTSERVERID = @as(c_int, 11312);
pub const UA_NS0ID_SERVER_SERVERREDUNDANCY_REDUNDANTSERVERARRAY = @as(c_int, 11313);
pub const UA_NS0ID_SERVER_SERVERREDUNDANCY_SERVERURIARRAY = @as(c_int, 11314);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_UNSHELVEDTOTIMEDSHELVED_TRANSITIONNUMBER = @as(c_int, 11322);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_UNSHELVEDTOONESHOTSHELVED_TRANSITIONNUMBER = @as(c_int, 11323);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_TIMEDSHELVEDTOUNSHELVED_TRANSITIONNUMBER = @as(c_int, 11324);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_TIMEDSHELVEDTOONESHOTSHELVED_TRANSITIONNUMBER = @as(c_int, 11325);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_ONESHOTSHELVEDTOUNSHELVED_TRANSITIONNUMBER = @as(c_int, 11326);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_ONESHOTSHELVEDTOTIMEDSHELVED_TRANSITIONNUMBER = @as(c_int, 11327);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_LOWLOWTOLOW_TRANSITIONNUMBER = @as(c_int, 11340);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_LOWTOLOWLOW_TRANSITIONNUMBER = @as(c_int, 11341);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_HIGHHIGHTOHIGH_TRANSITIONNUMBER = @as(c_int, 11342);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_HIGHTOHIGHHIGH_TRANSITIONNUMBER = @as(c_int, 11343);
pub const UA_NS0ID_AGGREGATEFUNCTION_STANDARDDEVIATIONSAMPLE = @as(c_int, 11426);
pub const UA_NS0ID_AGGREGATEFUNCTION_STANDARDDEVIATIONPOPULATION = @as(c_int, 11427);
pub const UA_NS0ID_AGGREGATEFUNCTION_VARIANCESAMPLE = @as(c_int, 11428);
pub const UA_NS0ID_AGGREGATEFUNCTION_VARIANCEPOPULATION = @as(c_int, 11429);
pub const UA_NS0ID_ENUMSTRINGS = @as(c_int, 11432);
pub const UA_NS0ID_VALUEASTEXT = @as(c_int, 11433);
pub const UA_NS0ID_PROGRESSEVENTTYPE = @as(c_int, 11436);
pub const UA_NS0ID_PROGRESSEVENTTYPE_EVENTID = @as(c_int, 11437);
pub const UA_NS0ID_PROGRESSEVENTTYPE_EVENTTYPE = @as(c_int, 11438);
pub const UA_NS0ID_PROGRESSEVENTTYPE_SOURCENODE = @as(c_int, 11439);
pub const UA_NS0ID_PROGRESSEVENTTYPE_SOURCENAME = @as(c_int, 11440);
pub const UA_NS0ID_PROGRESSEVENTTYPE_TIME = @as(c_int, 11441);
pub const UA_NS0ID_PROGRESSEVENTTYPE_RECEIVETIME = @as(c_int, 11442);
pub const UA_NS0ID_PROGRESSEVENTTYPE_LOCALTIME = @as(c_int, 11443);
pub const UA_NS0ID_PROGRESSEVENTTYPE_MESSAGE = @as(c_int, 11444);
pub const UA_NS0ID_PROGRESSEVENTTYPE_SEVERITY = @as(c_int, 11445);
pub const UA_NS0ID_SYSTEMSTATUSCHANGEEVENTTYPE = @as(c_int, 11446);
pub const UA_NS0ID_SYSTEMSTATUSCHANGEEVENTTYPE_EVENTID = @as(c_int, 11447);
pub const UA_NS0ID_SYSTEMSTATUSCHANGEEVENTTYPE_EVENTTYPE = @as(c_int, 11448);
pub const UA_NS0ID_SYSTEMSTATUSCHANGEEVENTTYPE_SOURCENODE = @as(c_int, 11449);
pub const UA_NS0ID_SYSTEMSTATUSCHANGEEVENTTYPE_SOURCENAME = @as(c_int, 11450);
pub const UA_NS0ID_SYSTEMSTATUSCHANGEEVENTTYPE_TIME = @as(c_int, 11451);
pub const UA_NS0ID_SYSTEMSTATUSCHANGEEVENTTYPE_RECEIVETIME = @as(c_int, 11452);
pub const UA_NS0ID_SYSTEMSTATUSCHANGEEVENTTYPE_LOCALTIME = @as(c_int, 11453);
pub const UA_NS0ID_SYSTEMSTATUSCHANGEEVENTTYPE_MESSAGE = @as(c_int, 11454);
pub const UA_NS0ID_SYSTEMSTATUSCHANGEEVENTTYPE_SEVERITY = @as(c_int, 11455);
pub const UA_NS0ID_TRANSITIONVARIABLETYPE_EFFECTIVETRANSITIONTIME = @as(c_int, 11456);
pub const UA_NS0ID_FINITETRANSITIONVARIABLETYPE_EFFECTIVETRANSITIONTIME = @as(c_int, 11457);
pub const UA_NS0ID_STATEMACHINETYPE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 11458);
pub const UA_NS0ID_FINITESTATEMACHINETYPE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 11459);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_TRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 11460);
pub const UA_NS0ID_MULTISTATEVALUEDISCRETETYPE_VALUEASTEXT = @as(c_int, 11461);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_TRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 11462);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_TRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 11463);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 11464);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 11465);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 11466);
pub const UA_NS0ID_LIMITALARMTYPE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 11467);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 11468);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 11469);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LIMITSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 11470);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 11471);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LIMITSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 11472);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 11473);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LIMITSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 11474);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 11475);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LIMITSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 11476);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 11477);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 11478);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 11479);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 11480);
pub const UA_NS0ID_DISCRETEALARMTYPE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 11481);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 11482);
pub const UA_NS0ID_TRIPALARMTYPE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 11483);
pub const UA_NS0ID_AUDITACTIVATESESSIONEVENTTYPE_SECURECHANNELID = @as(c_int, 11485);
pub const UA_NS0ID_OPTIONSETTYPE = @as(c_int, 11487);
pub const UA_NS0ID_OPTIONSETTYPE_OPTIONSETVALUES = @as(c_int, 11488);
pub const UA_NS0ID_SERVERTYPE_GETMONITOREDITEMS = @as(c_int, 11489);
pub const UA_NS0ID_SERVERTYPE_GETMONITOREDITEMS_INPUTARGUMENTS = @as(c_int, 11490);
pub const UA_NS0ID_SERVERTYPE_GETMONITOREDITEMS_OUTPUTARGUMENTS = @as(c_int, 11491);
pub const UA_NS0ID_SERVER_GETMONITOREDITEMS = @as(c_int, 11492);
pub const UA_NS0ID_SERVER_GETMONITOREDITEMS_INPUTARGUMENTS = @as(c_int, 11493);
pub const UA_NS0ID_SERVER_GETMONITOREDITEMS_OUTPUTARGUMENTS = @as(c_int, 11494);
pub const UA_NS0ID_GETMONITOREDITEMSMETHODTYPE = @as(c_int, 11495);
pub const UA_NS0ID_GETMONITOREDITEMSMETHODTYPE_INPUTARGUMENTS = @as(c_int, 11496);
pub const UA_NS0ID_GETMONITOREDITEMSMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 11497);
pub const UA_NS0ID_MAXSTRINGLENGTH = @as(c_int, 11498);
pub const UA_NS0ID_HISTORICALDATACONFIGURATIONTYPE_STARTOFARCHIVE = @as(c_int, 11499);
pub const UA_NS0ID_HISTORICALDATACONFIGURATIONTYPE_STARTOFONLINEARCHIVE = @as(c_int, 11500);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIESTYPE_DELETEEVENTCAPABILITY = @as(c_int, 11501);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIES_DELETEEVENTCAPABILITY = @as(c_int, 11502);
pub const UA_NS0ID_HACONFIGURATION_STARTOFARCHIVE = @as(c_int, 11503);
pub const UA_NS0ID_HACONFIGURATION_STARTOFONLINEARCHIVE = @as(c_int, 11504);
pub const UA_NS0ID_AGGREGATEFUNCTION_STARTBOUND = @as(c_int, 11505);
pub const UA_NS0ID_AGGREGATEFUNCTION_ENDBOUND = @as(c_int, 11506);
pub const UA_NS0ID_AGGREGATEFUNCTION_DELTABOUNDS = @as(c_int, 11507);
pub const UA_NS0ID_MODELLINGRULE_OPTIONALPLACEHOLDER = @as(c_int, 11508);
pub const UA_NS0ID_MODELLINGRULE_MANDATORYPLACEHOLDER = @as(c_int, 11510);
pub const UA_NS0ID_MAXARRAYLENGTH = @as(c_int, 11512);
pub const UA_NS0ID_ENGINEERINGUNITS = @as(c_int, 11513);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_MAXARRAYLENGTH = @as(c_int, 11514);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_MAXSTRINGLENGTH = @as(c_int, 11515);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_OPERATIONLIMITS = @as(c_int, 11516);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_OPERATIONLIMITS_MAXNODESPERREAD = @as(c_int, 11517);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_OPERATIONLIMITS_MAXNODESPERWRITE = @as(c_int, 11519);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_OPERATIONLIMITS_MAXNODESPERMETHODCALL = @as(c_int, 11521);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_OPERATIONLIMITS_MAXNODESPERBROWSE = @as(c_int, 11522);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_OPERATIONLIMITS_MAXNODESPERREGISTERNODES = @as(c_int, 11523);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_OPERATIONLIMITS_MAXNODESPERTRANSLATEBROWSEPATHSTONODEIDS = @as(c_int, 11524);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_OPERATIONLIMITS_MAXNODESPERNODEMANAGEMENT = @as(c_int, 11525);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_OPERATIONLIMITS_MAXMONITOREDITEMSPERCALL = @as(c_int, 11526);
pub const UA_NS0ID_SERVERTYPE_NAMESPACES = @as(c_int, 11527);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_MAXARRAYLENGTH = @as(c_int, 11549);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_MAXSTRINGLENGTH = @as(c_int, 11550);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_OPERATIONLIMITS = @as(c_int, 11551);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_OPERATIONLIMITS_MAXNODESPERREAD = @as(c_int, 11552);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_OPERATIONLIMITS_MAXNODESPERWRITE = @as(c_int, 11554);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_OPERATIONLIMITS_MAXNODESPERMETHODCALL = @as(c_int, 11556);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_OPERATIONLIMITS_MAXNODESPERBROWSE = @as(c_int, 11557);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_OPERATIONLIMITS_MAXNODESPERREGISTERNODES = @as(c_int, 11558);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_OPERATIONLIMITS_MAXNODESPERTRANSLATEBROWSEPATHSTONODEIDS = @as(c_int, 11559);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_OPERATIONLIMITS_MAXNODESPERNODEMANAGEMENT = @as(c_int, 11560);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_OPERATIONLIMITS_MAXMONITOREDITEMSPERCALL = @as(c_int, 11561);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_VENDORCAPABILITY_PLACEHOLDER = @as(c_int, 11562);
pub const UA_NS0ID_OPERATIONLIMITSTYPE = @as(c_int, 11564);
pub const UA_NS0ID_OPERATIONLIMITSTYPE_MAXNODESPERREAD = @as(c_int, 11565);
pub const UA_NS0ID_OPERATIONLIMITSTYPE_MAXNODESPERWRITE = @as(c_int, 11567);
pub const UA_NS0ID_OPERATIONLIMITSTYPE_MAXNODESPERMETHODCALL = @as(c_int, 11569);
pub const UA_NS0ID_OPERATIONLIMITSTYPE_MAXNODESPERBROWSE = @as(c_int, 11570);
pub const UA_NS0ID_OPERATIONLIMITSTYPE_MAXNODESPERREGISTERNODES = @as(c_int, 11571);
pub const UA_NS0ID_OPERATIONLIMITSTYPE_MAXNODESPERTRANSLATEBROWSEPATHSTONODEIDS = @as(c_int, 11572);
pub const UA_NS0ID_OPERATIONLIMITSTYPE_MAXNODESPERNODEMANAGEMENT = @as(c_int, 11573);
pub const UA_NS0ID_OPERATIONLIMITSTYPE_MAXMONITOREDITEMSPERCALL = @as(c_int, 11574);
pub const UA_NS0ID_FILETYPE = @as(c_int, 11575);
pub const UA_NS0ID_FILETYPE_SIZE = @as(c_int, 11576);
pub const UA_NS0ID_FILETYPE_OPENCOUNT = @as(c_int, 11579);
pub const UA_NS0ID_FILETYPE_OPEN = @as(c_int, 11580);
pub const UA_NS0ID_FILETYPE_OPEN_INPUTARGUMENTS = @as(c_int, 11581);
pub const UA_NS0ID_FILETYPE_OPEN_OUTPUTARGUMENTS = @as(c_int, 11582);
pub const UA_NS0ID_FILETYPE_CLOSE = @as(c_int, 11583);
pub const UA_NS0ID_FILETYPE_CLOSE_INPUTARGUMENTS = @as(c_int, 11584);
pub const UA_NS0ID_FILETYPE_READ = @as(c_int, 11585);
pub const UA_NS0ID_FILETYPE_READ_INPUTARGUMENTS = @as(c_int, 11586);
pub const UA_NS0ID_FILETYPE_READ_OUTPUTARGUMENTS = @as(c_int, 11587);
pub const UA_NS0ID_FILETYPE_WRITE = @as(c_int, 11588);
pub const UA_NS0ID_FILETYPE_WRITE_INPUTARGUMENTS = @as(c_int, 11589);
pub const UA_NS0ID_FILETYPE_GETPOSITION = @as(c_int, 11590);
pub const UA_NS0ID_FILETYPE_GETPOSITION_INPUTARGUMENTS = @as(c_int, 11591);
pub const UA_NS0ID_FILETYPE_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 11592);
pub const UA_NS0ID_FILETYPE_SETPOSITION = @as(c_int, 11593);
pub const UA_NS0ID_FILETYPE_SETPOSITION_INPUTARGUMENTS = @as(c_int, 11594);
pub const UA_NS0ID_ADDRESSSPACEFILETYPE = @as(c_int, 11595);
pub const UA_NS0ID_ADDRESSSPACEFILETYPE_SIZE = @as(c_int, 11596);
pub const UA_NS0ID_ADDRESSSPACEFILETYPE_OPENCOUNT = @as(c_int, 11599);
pub const UA_NS0ID_ADDRESSSPACEFILETYPE_OPEN = @as(c_int, 11600);
pub const UA_NS0ID_ADDRESSSPACEFILETYPE_OPEN_INPUTARGUMENTS = @as(c_int, 11601);
pub const UA_NS0ID_ADDRESSSPACEFILETYPE_OPEN_OUTPUTARGUMENTS = @as(c_int, 11602);
pub const UA_NS0ID_ADDRESSSPACEFILETYPE_CLOSE = @as(c_int, 11603);
pub const UA_NS0ID_ADDRESSSPACEFILETYPE_CLOSE_INPUTARGUMENTS = @as(c_int, 11604);
pub const UA_NS0ID_ADDRESSSPACEFILETYPE_READ = @as(c_int, 11605);
pub const UA_NS0ID_ADDRESSSPACEFILETYPE_READ_INPUTARGUMENTS = @as(c_int, 11606);
pub const UA_NS0ID_ADDRESSSPACEFILETYPE_READ_OUTPUTARGUMENTS = @as(c_int, 11607);
pub const UA_NS0ID_ADDRESSSPACEFILETYPE_WRITE = @as(c_int, 11608);
pub const UA_NS0ID_ADDRESSSPACEFILETYPE_WRITE_INPUTARGUMENTS = @as(c_int, 11609);
pub const UA_NS0ID_ADDRESSSPACEFILETYPE_GETPOSITION = @as(c_int, 11610);
pub const UA_NS0ID_ADDRESSSPACEFILETYPE_GETPOSITION_INPUTARGUMENTS = @as(c_int, 11611);
pub const UA_NS0ID_ADDRESSSPACEFILETYPE_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 11612);
pub const UA_NS0ID_ADDRESSSPACEFILETYPE_SETPOSITION = @as(c_int, 11613);
pub const UA_NS0ID_ADDRESSSPACEFILETYPE_SETPOSITION_INPUTARGUMENTS = @as(c_int, 11614);
pub const UA_NS0ID_ADDRESSSPACEFILETYPE_EXPORTNAMESPACE = @as(c_int, 11615);
pub const UA_NS0ID_NAMESPACEMETADATATYPE = @as(c_int, 11616);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEURI = @as(c_int, 11617);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEVERSION = @as(c_int, 11618);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEPUBLICATIONDATE = @as(c_int, 11619);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_ISNAMESPACESUBSET = @as(c_int, 11620);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_STATICNODEIDTYPES = @as(c_int, 11621);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_STATICNUMERICNODEIDRANGE = @as(c_int, 11622);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_STATICSTRINGNODEIDPATTERN = @as(c_int, 11623);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEFILE = @as(c_int, 11624);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEFILE_SIZE = @as(c_int, 11625);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEFILE_OPENCOUNT = @as(c_int, 11628);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEFILE_OPEN = @as(c_int, 11629);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEFILE_OPEN_INPUTARGUMENTS = @as(c_int, 11630);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEFILE_OPEN_OUTPUTARGUMENTS = @as(c_int, 11631);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEFILE_CLOSE = @as(c_int, 11632);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEFILE_CLOSE_INPUTARGUMENTS = @as(c_int, 11633);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEFILE_READ = @as(c_int, 11634);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEFILE_READ_INPUTARGUMENTS = @as(c_int, 11635);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEFILE_READ_OUTPUTARGUMENTS = @as(c_int, 11636);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEFILE_WRITE = @as(c_int, 11637);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEFILE_WRITE_INPUTARGUMENTS = @as(c_int, 11638);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEFILE_GETPOSITION = @as(c_int, 11639);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEFILE_GETPOSITION_INPUTARGUMENTS = @as(c_int, 11640);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEFILE_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 11641);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEFILE_SETPOSITION = @as(c_int, 11642);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEFILE_SETPOSITION_INPUTARGUMENTS = @as(c_int, 11643);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEFILE_EXPORTNAMESPACE = @as(c_int, 11644);
pub const UA_NS0ID_NAMESPACESTYPE = @as(c_int, 11645);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER = @as(c_int, 11646);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEURI = @as(c_int, 11647);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEVERSION = @as(c_int, 11648);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEPUBLICATIONDATE = @as(c_int, 11649);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_ISNAMESPACESUBSET = @as(c_int, 11650);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_STATICNODEIDTYPES = @as(c_int, 11651);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_STATICNUMERICNODEIDRANGE = @as(c_int, 11652);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_STATICSTRINGNODEIDPATTERN = @as(c_int, 11653);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEFILE = @as(c_int, 11654);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEFILE_SIZE = @as(c_int, 11655);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEFILE_OPENCOUNT = @as(c_int, 11658);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEFILE_OPEN = @as(c_int, 11659);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEFILE_OPEN_INPUTARGUMENTS = @as(c_int, 11660);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEFILE_OPEN_OUTPUTARGUMENTS = @as(c_int, 11661);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEFILE_CLOSE = @as(c_int, 11662);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEFILE_CLOSE_INPUTARGUMENTS = @as(c_int, 11663);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEFILE_READ = @as(c_int, 11664);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEFILE_READ_INPUTARGUMENTS = @as(c_int, 11665);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEFILE_READ_OUTPUTARGUMENTS = @as(c_int, 11666);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEFILE_WRITE = @as(c_int, 11667);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEFILE_WRITE_INPUTARGUMENTS = @as(c_int, 11668);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEFILE_GETPOSITION = @as(c_int, 11669);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEFILE_GETPOSITION_INPUTARGUMENTS = @as(c_int, 11670);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEFILE_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 11671);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEFILE_SETPOSITION = @as(c_int, 11672);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEFILE_SETPOSITION_INPUTARGUMENTS = @as(c_int, 11673);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEFILE_EXPORTNAMESPACE = @as(c_int, 11674);
pub const UA_NS0ID_SYSTEMSTATUSCHANGEEVENTTYPE_SYSTEMSTATE = @as(c_int, 11696);
pub const UA_NS0ID_SAMPLINGINTERVALDIAGNOSTICSTYPE_SAMPLEDMONITOREDITEMSCOUNT = @as(c_int, 11697);
pub const UA_NS0ID_SAMPLINGINTERVALDIAGNOSTICSTYPE_MAXSAMPLEDMONITOREDITEMSCOUNT = @as(c_int, 11698);
pub const UA_NS0ID_SAMPLINGINTERVALDIAGNOSTICSTYPE_DISABLEDMONITOREDITEMSSAMPLINGCOUNT = @as(c_int, 11699);
pub const UA_NS0ID_OPTIONSETTYPE_BITMASK = @as(c_int, 11701);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_MAXARRAYLENGTH = @as(c_int, 11702);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_MAXSTRINGLENGTH = @as(c_int, 11703);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_OPERATIONLIMITS = @as(c_int, 11704);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_OPERATIONLIMITS_MAXNODESPERREAD = @as(c_int, 11705);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_OPERATIONLIMITS_MAXNODESPERWRITE = @as(c_int, 11707);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_OPERATIONLIMITS_MAXNODESPERMETHODCALL = @as(c_int, 11709);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_OPERATIONLIMITS_MAXNODESPERBROWSE = @as(c_int, 11710);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_OPERATIONLIMITS_MAXNODESPERREGISTERNODES = @as(c_int, 11711);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_OPERATIONLIMITS_MAXNODESPERTRANSLATEBROWSEPATHSTONODEIDS = @as(c_int, 11712);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_OPERATIONLIMITS_MAXNODESPERNODEMANAGEMENT = @as(c_int, 11713);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_OPERATIONLIMITS_MAXMONITOREDITEMSPERCALL = @as(c_int, 11714);
pub const UA_NS0ID_SERVER_NAMESPACES = @as(c_int, 11715);
pub const UA_NS0ID_BITFIELDMASKDATATYPE = @as(c_int, 11737);
pub const UA_NS0ID_OPENMETHODTYPE = @as(c_int, 11738);
pub const UA_NS0ID_OPENMETHODTYPE_INPUTARGUMENTS = @as(c_int, 11739);
pub const UA_NS0ID_OPENMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 11740);
pub const UA_NS0ID_CLOSEMETHODTYPE = @as(c_int, 11741);
pub const UA_NS0ID_CLOSEMETHODTYPE_INPUTARGUMENTS = @as(c_int, 11742);
pub const UA_NS0ID_READMETHODTYPE = @as(c_int, 11743);
pub const UA_NS0ID_READMETHODTYPE_INPUTARGUMENTS = @as(c_int, 11744);
pub const UA_NS0ID_READMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 11745);
pub const UA_NS0ID_WRITEMETHODTYPE = @as(c_int, 11746);
pub const UA_NS0ID_WRITEMETHODTYPE_INPUTARGUMENTS = @as(c_int, 11747);
pub const UA_NS0ID_GETPOSITIONMETHODTYPE = @as(c_int, 11748);
pub const UA_NS0ID_GETPOSITIONMETHODTYPE_INPUTARGUMENTS = @as(c_int, 11749);
pub const UA_NS0ID_GETPOSITIONMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 11750);
pub const UA_NS0ID_SETPOSITIONMETHODTYPE = @as(c_int, 11751);
pub const UA_NS0ID_SETPOSITIONMETHODTYPE_INPUTARGUMENTS = @as(c_int, 11752);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE = @as(c_int, 11753);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_EVENTID = @as(c_int, 11754);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_EVENTTYPE = @as(c_int, 11755);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SOURCENODE = @as(c_int, 11756);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SOURCENAME = @as(c_int, 11757);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_TIME = @as(c_int, 11758);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_RECEIVETIME = @as(c_int, 11759);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_LOCALTIME = @as(c_int, 11760);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_MESSAGE = @as(c_int, 11761);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SEVERITY = @as(c_int, 11762);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_CONDITIONCLASSID = @as(c_int, 11763);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_CONDITIONCLASSNAME = @as(c_int, 11764);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_CONDITIONNAME = @as(c_int, 11765);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_BRANCHID = @as(c_int, 11766);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_RETAIN = @as(c_int, 11767);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ENABLEDSTATE = @as(c_int, 11768);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ENABLEDSTATE_ID = @as(c_int, 11769);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ENABLEDSTATE_NAME = @as(c_int, 11770);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ENABLEDSTATE_NUMBER = @as(c_int, 11771);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 11772);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 11773);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 11774);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ENABLEDSTATE_TRUESTATE = @as(c_int, 11775);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ENABLEDSTATE_FALSESTATE = @as(c_int, 11776);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_QUALITY = @as(c_int, 11777);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_QUALITY_SOURCETIMESTAMP = @as(c_int, 11778);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_LASTSEVERITY = @as(c_int, 11779);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 11780);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_COMMENT = @as(c_int, 11781);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_COMMENT_SOURCETIMESTAMP = @as(c_int, 11782);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_CLIENTUSERID = @as(c_int, 11783);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_DISABLE = @as(c_int, 11784);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ENABLE = @as(c_int, 11785);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ADDCOMMENT = @as(c_int, 11786);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 11787);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_CONDITIONREFRESH = @as(c_int, 11788);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_CONDITIONREFRESH_INPUTARGUMENTS = @as(c_int, 11789);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ACKEDSTATE = @as(c_int, 11790);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ACKEDSTATE_ID = @as(c_int, 11791);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ACKEDSTATE_NAME = @as(c_int, 11792);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ACKEDSTATE_NUMBER = @as(c_int, 11793);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 11794);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 11795);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 11796);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ACKEDSTATE_TRUESTATE = @as(c_int, 11797);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ACKEDSTATE_FALSESTATE = @as(c_int, 11798);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_CONFIRMEDSTATE = @as(c_int, 11799);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_CONFIRMEDSTATE_ID = @as(c_int, 11800);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_CONFIRMEDSTATE_NAME = @as(c_int, 11801);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_CONFIRMEDSTATE_NUMBER = @as(c_int, 11802);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 11803);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 11804);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 11805);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 11806);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 11807);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ACKNOWLEDGE = @as(c_int, 11808);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 11809);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_CONFIRM = @as(c_int, 11810);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_CONFIRM_INPUTARGUMENTS = @as(c_int, 11811);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ACTIVESTATE = @as(c_int, 11812);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ACTIVESTATE_ID = @as(c_int, 11813);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ACTIVESTATE_NAME = @as(c_int, 11814);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ACTIVESTATE_NUMBER = @as(c_int, 11815);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 11816);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 11817);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 11818);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ACTIVESTATE_TRUESTATE = @as(c_int, 11819);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ACTIVESTATE_FALSESTATE = @as(c_int, 11820);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_INPUTNODE = @as(c_int, 11821);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SUPPRESSEDSTATE = @as(c_int, 11822);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SUPPRESSEDSTATE_ID = @as(c_int, 11823);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SUPPRESSEDSTATE_NAME = @as(c_int, 11824);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 11825);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 11826);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 11827);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 11828);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 11829);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 11830);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SHELVINGSTATE = @as(c_int, 11831);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 11832);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 11833);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 11834);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 11835);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 11836);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 11837);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 11838);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 11839);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 11840);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 11841);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 11842);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 11843);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SHELVINGSTATE_UNSHELVE = @as(c_int, 11844);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 11845);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 11846);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 11847);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SUPPRESSEDORSHELVED = @as(c_int, 11848);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_MAXTIMESHELVED = @as(c_int, 11849);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_NORMALSTATE = @as(c_int, 11850);
pub const UA_NS0ID_AUDITCONDITIONCOMMENTEVENTTYPE_COMMENT = @as(c_int, 11851);
pub const UA_NS0ID_AUDITCONDITIONRESPONDEVENTTYPE_SELECTEDRESPONSE = @as(c_int, 11852);
pub const UA_NS0ID_AUDITCONDITIONACKNOWLEDGEEVENTTYPE_COMMENT = @as(c_int, 11853);
pub const UA_NS0ID_AUDITCONDITIONCONFIRMEVENTTYPE_COMMENT = @as(c_int, 11854);
pub const UA_NS0ID_AUDITCONDITIONSHELVINGEVENTTYPE_SHELVINGTIME = @as(c_int, 11855);
pub const UA_NS0ID_AUDITPROGRAMTRANSITIONEVENTTYPE = @as(c_int, 11856);
pub const UA_NS0ID_AUDITPROGRAMTRANSITIONEVENTTYPE_EVENTID = @as(c_int, 11857);
pub const UA_NS0ID_AUDITPROGRAMTRANSITIONEVENTTYPE_EVENTTYPE = @as(c_int, 11858);
pub const UA_NS0ID_AUDITPROGRAMTRANSITIONEVENTTYPE_SOURCENODE = @as(c_int, 11859);
pub const UA_NS0ID_AUDITPROGRAMTRANSITIONEVENTTYPE_SOURCENAME = @as(c_int, 11860);
pub const UA_NS0ID_AUDITPROGRAMTRANSITIONEVENTTYPE_TIME = @as(c_int, 11861);
pub const UA_NS0ID_AUDITPROGRAMTRANSITIONEVENTTYPE_RECEIVETIME = @as(c_int, 11862);
pub const UA_NS0ID_AUDITPROGRAMTRANSITIONEVENTTYPE_LOCALTIME = @as(c_int, 11863);
pub const UA_NS0ID_AUDITPROGRAMTRANSITIONEVENTTYPE_MESSAGE = @as(c_int, 11864);
pub const UA_NS0ID_AUDITPROGRAMTRANSITIONEVENTTYPE_SEVERITY = @as(c_int, 11865);
pub const UA_NS0ID_AUDITPROGRAMTRANSITIONEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 11866);
pub const UA_NS0ID_AUDITPROGRAMTRANSITIONEVENTTYPE_STATUS = @as(c_int, 11867);
pub const UA_NS0ID_AUDITPROGRAMTRANSITIONEVENTTYPE_SERVERID = @as(c_int, 11868);
pub const UA_NS0ID_AUDITPROGRAMTRANSITIONEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 11869);
pub const UA_NS0ID_AUDITPROGRAMTRANSITIONEVENTTYPE_CLIENTUSERID = @as(c_int, 11870);
pub const UA_NS0ID_AUDITPROGRAMTRANSITIONEVENTTYPE_METHODID = @as(c_int, 11871);
pub const UA_NS0ID_AUDITPROGRAMTRANSITIONEVENTTYPE_INPUTARGUMENTS = @as(c_int, 11872);
pub const UA_NS0ID_AUDITPROGRAMTRANSITIONEVENTTYPE_OLDSTATEID = @as(c_int, 11873);
pub const UA_NS0ID_AUDITPROGRAMTRANSITIONEVENTTYPE_NEWSTATEID = @as(c_int, 11874);
pub const UA_NS0ID_AUDITPROGRAMTRANSITIONEVENTTYPE_TRANSITIONNUMBER = @as(c_int, 11875);
pub const UA_NS0ID_HISTORICALDATACONFIGURATIONTYPE_AGGREGATEFUNCTIONS = @as(c_int, 11876);
pub const UA_NS0ID_HACONFIGURATION_AGGREGATEFUNCTIONS = @as(c_int, 11877);
pub const UA_NS0ID_NODECLASS_ENUMVALUES = @as(c_int, 11878);
pub const UA_NS0ID_INSTANCENODE = @as(c_int, 11879);
pub const UA_NS0ID_TYPENODE = @as(c_int, 11880);
pub const UA_NS0ID_NODEATTRIBUTESMASK_ENUMVALUES = @as(c_int, 11881);
pub const UA_NS0ID_BROWSERESULTMASK_ENUMVALUES = @as(c_int, 11883);
pub const UA_NS0ID_HISTORYUPDATETYPE_ENUMVALUES = @as(c_int, 11884);
pub const UA_NS0ID_PERFORMUPDATETYPE_ENUMVALUES = @as(c_int, 11885);
pub const UA_NS0ID_INSTANCENODE_ENCODING_DEFAULTXML = @as(c_int, 11887);
pub const UA_NS0ID_TYPENODE_ENCODING_DEFAULTXML = @as(c_int, 11888);
pub const UA_NS0ID_INSTANCENODE_ENCODING_DEFAULTBINARY = @as(c_int, 11889);
pub const UA_NS0ID_TYPENODE_ENCODING_DEFAULTBINARY = @as(c_int, 11890);
pub const UA_NS0ID_SESSIONDIAGNOSTICSOBJECTTYPE_SESSIONDIAGNOSTICS_UNAUTHORIZEDREQUESTCOUNT = @as(c_int, 11891);
pub const UA_NS0ID_SESSIONDIAGNOSTICSVARIABLETYPE_UNAUTHORIZEDREQUESTCOUNT = @as(c_int, 11892);
pub const UA_NS0ID_OPENFILEMODE = @as(c_int, 11939);
pub const UA_NS0ID_OPENFILEMODE_ENUMVALUES = @as(c_int, 11940);
pub const UA_NS0ID_MODELCHANGESTRUCTUREVERBMASK = @as(c_int, 11941);
pub const UA_NS0ID_MODELCHANGESTRUCTUREVERBMASK_ENUMVALUES = @as(c_int, 11942);
pub const UA_NS0ID_ENDPOINTURLLISTDATATYPE = @as(c_int, 11943);
pub const UA_NS0ID_NETWORKGROUPDATATYPE = @as(c_int, 11944);
pub const UA_NS0ID_NONTRANSPARENTNETWORKREDUNDANCYTYPE = @as(c_int, 11945);
pub const UA_NS0ID_NONTRANSPARENTNETWORKREDUNDANCYTYPE_REDUNDANCYSUPPORT = @as(c_int, 11946);
pub const UA_NS0ID_NONTRANSPARENTNETWORKREDUNDANCYTYPE_SERVERURIARRAY = @as(c_int, 11947);
pub const UA_NS0ID_NONTRANSPARENTNETWORKREDUNDANCYTYPE_SERVERNETWORKGROUPS = @as(c_int, 11948);
pub const UA_NS0ID_ENDPOINTURLLISTDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 11949);
pub const UA_NS0ID_NETWORKGROUPDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 11950);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ENDPOINTURLLISTDATATYPE = @as(c_int, 11951);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ENDPOINTURLLISTDATATYPE_DATATYPEVERSION = @as(c_int, 11952);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ENDPOINTURLLISTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 11953);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_NETWORKGROUPDATATYPE = @as(c_int, 11954);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_NETWORKGROUPDATATYPE_DATATYPEVERSION = @as(c_int, 11955);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_NETWORKGROUPDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 11956);
pub const UA_NS0ID_ENDPOINTURLLISTDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 11957);
pub const UA_NS0ID_NETWORKGROUPDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 11958);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ENDPOINTURLLISTDATATYPE = @as(c_int, 11959);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ENDPOINTURLLISTDATATYPE_DATATYPEVERSION = @as(c_int, 11960);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ENDPOINTURLLISTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 11961);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_NETWORKGROUPDATATYPE = @as(c_int, 11962);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_NETWORKGROUPDATATYPE_DATATYPEVERSION = @as(c_int, 11963);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_NETWORKGROUPDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 11964);
pub const UA_NS0ID_ARRAYITEMTYPE = @as(c_int, 12021);
pub const UA_NS0ID_ARRAYITEMTYPE_DEFINITION = @as(c_int, 12022);
pub const UA_NS0ID_ARRAYITEMTYPE_VALUEPRECISION = @as(c_int, 12023);
pub const UA_NS0ID_ARRAYITEMTYPE_INSTRUMENTRANGE = @as(c_int, 12024);
pub const UA_NS0ID_ARRAYITEMTYPE_EURANGE = @as(c_int, 12025);
pub const UA_NS0ID_ARRAYITEMTYPE_ENGINEERINGUNITS = @as(c_int, 12026);
pub const UA_NS0ID_ARRAYITEMTYPE_TITLE = @as(c_int, 12027);
pub const UA_NS0ID_ARRAYITEMTYPE_AXISSCALETYPE = @as(c_int, 12028);
pub const UA_NS0ID_YARRAYITEMTYPE = @as(c_int, 12029);
pub const UA_NS0ID_YARRAYITEMTYPE_DEFINITION = @as(c_int, 12030);
pub const UA_NS0ID_YARRAYITEMTYPE_VALUEPRECISION = @as(c_int, 12031);
pub const UA_NS0ID_YARRAYITEMTYPE_INSTRUMENTRANGE = @as(c_int, 12032);
pub const UA_NS0ID_YARRAYITEMTYPE_EURANGE = @as(c_int, 12033);
pub const UA_NS0ID_YARRAYITEMTYPE_ENGINEERINGUNITS = @as(c_int, 12034);
pub const UA_NS0ID_YARRAYITEMTYPE_TITLE = @as(c_int, 12035);
pub const UA_NS0ID_YARRAYITEMTYPE_AXISSCALETYPE = @as(c_int, 12036);
pub const UA_NS0ID_YARRAYITEMTYPE_XAXISDEFINITION = @as(c_int, 12037);
pub const UA_NS0ID_XYARRAYITEMTYPE = @as(c_int, 12038);
pub const UA_NS0ID_XYARRAYITEMTYPE_DEFINITION = @as(c_int, 12039);
pub const UA_NS0ID_XYARRAYITEMTYPE_VALUEPRECISION = @as(c_int, 12040);
pub const UA_NS0ID_XYARRAYITEMTYPE_INSTRUMENTRANGE = @as(c_int, 12041);
pub const UA_NS0ID_XYARRAYITEMTYPE_EURANGE = @as(c_int, 12042);
pub const UA_NS0ID_XYARRAYITEMTYPE_ENGINEERINGUNITS = @as(c_int, 12043);
pub const UA_NS0ID_XYARRAYITEMTYPE_TITLE = @as(c_int, 12044);
pub const UA_NS0ID_XYARRAYITEMTYPE_AXISSCALETYPE = @as(c_int, 12045);
pub const UA_NS0ID_XYARRAYITEMTYPE_XAXISDEFINITION = @as(c_int, 12046);
pub const UA_NS0ID_IMAGEITEMTYPE = @as(c_int, 12047);
pub const UA_NS0ID_IMAGEITEMTYPE_DEFINITION = @as(c_int, 12048);
pub const UA_NS0ID_IMAGEITEMTYPE_VALUEPRECISION = @as(c_int, 12049);
pub const UA_NS0ID_IMAGEITEMTYPE_INSTRUMENTRANGE = @as(c_int, 12050);
pub const UA_NS0ID_IMAGEITEMTYPE_EURANGE = @as(c_int, 12051);
pub const UA_NS0ID_IMAGEITEMTYPE_ENGINEERINGUNITS = @as(c_int, 12052);
pub const UA_NS0ID_IMAGEITEMTYPE_TITLE = @as(c_int, 12053);
pub const UA_NS0ID_IMAGEITEMTYPE_AXISSCALETYPE = @as(c_int, 12054);
pub const UA_NS0ID_IMAGEITEMTYPE_XAXISDEFINITION = @as(c_int, 12055);
pub const UA_NS0ID_IMAGEITEMTYPE_YAXISDEFINITION = @as(c_int, 12056);
pub const UA_NS0ID_CUBEITEMTYPE = @as(c_int, 12057);
pub const UA_NS0ID_CUBEITEMTYPE_DEFINITION = @as(c_int, 12058);
pub const UA_NS0ID_CUBEITEMTYPE_VALUEPRECISION = @as(c_int, 12059);
pub const UA_NS0ID_CUBEITEMTYPE_INSTRUMENTRANGE = @as(c_int, 12060);
pub const UA_NS0ID_CUBEITEMTYPE_EURANGE = @as(c_int, 12061);
pub const UA_NS0ID_CUBEITEMTYPE_ENGINEERINGUNITS = @as(c_int, 12062);
pub const UA_NS0ID_CUBEITEMTYPE_TITLE = @as(c_int, 12063);
pub const UA_NS0ID_CUBEITEMTYPE_AXISSCALETYPE = @as(c_int, 12064);
pub const UA_NS0ID_CUBEITEMTYPE_XAXISDEFINITION = @as(c_int, 12065);
pub const UA_NS0ID_CUBEITEMTYPE_YAXISDEFINITION = @as(c_int, 12066);
pub const UA_NS0ID_CUBEITEMTYPE_ZAXISDEFINITION = @as(c_int, 12067);
pub const UA_NS0ID_NDIMENSIONARRAYITEMTYPE = @as(c_int, 12068);
pub const UA_NS0ID_NDIMENSIONARRAYITEMTYPE_DEFINITION = @as(c_int, 12069);
pub const UA_NS0ID_NDIMENSIONARRAYITEMTYPE_VALUEPRECISION = @as(c_int, 12070);
pub const UA_NS0ID_NDIMENSIONARRAYITEMTYPE_INSTRUMENTRANGE = @as(c_int, 12071);
pub const UA_NS0ID_NDIMENSIONARRAYITEMTYPE_EURANGE = @as(c_int, 12072);
pub const UA_NS0ID_NDIMENSIONARRAYITEMTYPE_ENGINEERINGUNITS = @as(c_int, 12073);
pub const UA_NS0ID_NDIMENSIONARRAYITEMTYPE_TITLE = @as(c_int, 12074);
pub const UA_NS0ID_NDIMENSIONARRAYITEMTYPE_AXISSCALETYPE = @as(c_int, 12075);
pub const UA_NS0ID_NDIMENSIONARRAYITEMTYPE_AXISDEFINITION = @as(c_int, 12076);
pub const UA_NS0ID_AXISSCALEENUMERATION = @as(c_int, 12077);
pub const UA_NS0ID_AXISSCALEENUMERATION_ENUMSTRINGS = @as(c_int, 12078);
pub const UA_NS0ID_AXISINFORMATION = @as(c_int, 12079);
pub const UA_NS0ID_XVTYPE = @as(c_int, 12080);
pub const UA_NS0ID_AXISINFORMATION_ENCODING_DEFAULTXML = @as(c_int, 12081);
pub const UA_NS0ID_XVTYPE_ENCODING_DEFAULTXML = @as(c_int, 12082);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_AXISINFORMATION = @as(c_int, 12083);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_AXISINFORMATION_DATATYPEVERSION = @as(c_int, 12084);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_AXISINFORMATION_DICTIONARYFRAGMENT = @as(c_int, 12085);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_XVTYPE = @as(c_int, 12086);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_XVTYPE_DATATYPEVERSION = @as(c_int, 12087);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_XVTYPE_DICTIONARYFRAGMENT = @as(c_int, 12088);
pub const UA_NS0ID_AXISINFORMATION_ENCODING_DEFAULTBINARY = @as(c_int, 12089);
pub const UA_NS0ID_XVTYPE_ENCODING_DEFAULTBINARY = @as(c_int, 12090);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_AXISINFORMATION = @as(c_int, 12091);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_AXISINFORMATION_DATATYPEVERSION = @as(c_int, 12092);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_AXISINFORMATION_DICTIONARYFRAGMENT = @as(c_int, 12093);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_XVTYPE = @as(c_int, 12094);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_XVTYPE_DATATYPEVERSION = @as(c_int, 12095);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_XVTYPE_DICTIONARYFRAGMENT = @as(c_int, 12096);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER = @as(c_int, 12097);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS = @as(c_int, 12098);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_SESSIONID = @as(c_int, 12099);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_SESSIONNAME = @as(c_int, 12100);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_CLIENTDESCRIPTION = @as(c_int, 12101);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_SERVERURI = @as(c_int, 12102);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_ENDPOINTURL = @as(c_int, 12103);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_LOCALEIDS = @as(c_int, 12104);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_ACTUALSESSIONTIMEOUT = @as(c_int, 12105);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_MAXRESPONSEMESSAGESIZE = @as(c_int, 12106);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_CLIENTCONNECTIONTIME = @as(c_int, 12107);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_CLIENTLASTCONTACTTIME = @as(c_int, 12108);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_CURRENTSUBSCRIPTIONSCOUNT = @as(c_int, 12109);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_CURRENTMONITOREDITEMSCOUNT = @as(c_int, 12110);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_CURRENTPUBLISHREQUESTSINQUEUE = @as(c_int, 12111);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_TOTALREQUESTCOUNT = @as(c_int, 12112);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_UNAUTHORIZEDREQUESTCOUNT = @as(c_int, 12113);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_READCOUNT = @as(c_int, 12114);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_HISTORYREADCOUNT = @as(c_int, 12115);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_WRITECOUNT = @as(c_int, 12116);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_HISTORYUPDATECOUNT = @as(c_int, 12117);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_CALLCOUNT = @as(c_int, 12118);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_CREATEMONITOREDITEMSCOUNT = @as(c_int, 12119);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_MODIFYMONITOREDITEMSCOUNT = @as(c_int, 12120);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_SETMONITORINGMODECOUNT = @as(c_int, 12121);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_SETTRIGGERINGCOUNT = @as(c_int, 12122);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_DELETEMONITOREDITEMSCOUNT = @as(c_int, 12123);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_CREATESUBSCRIPTIONCOUNT = @as(c_int, 12124);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_MODIFYSUBSCRIPTIONCOUNT = @as(c_int, 12125);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_SETPUBLISHINGMODECOUNT = @as(c_int, 12126);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_PUBLISHCOUNT = @as(c_int, 12127);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_REPUBLISHCOUNT = @as(c_int, 12128);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_TRANSFERSUBSCRIPTIONSCOUNT = @as(c_int, 12129);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_DELETESUBSCRIPTIONSCOUNT = @as(c_int, 12130);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_ADDNODESCOUNT = @as(c_int, 12131);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_ADDREFERENCESCOUNT = @as(c_int, 12132);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_DELETENODESCOUNT = @as(c_int, 12133);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_DELETEREFERENCESCOUNT = @as(c_int, 12134);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_BROWSECOUNT = @as(c_int, 12135);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_BROWSENEXTCOUNT = @as(c_int, 12136);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_TRANSLATEBROWSEPATHSTONODEIDSCOUNT = @as(c_int, 12137);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_QUERYFIRSTCOUNT = @as(c_int, 12138);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_QUERYNEXTCOUNT = @as(c_int, 12139);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_REGISTERNODESCOUNT = @as(c_int, 12140);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONDIAGNOSTICS_UNREGISTERNODESCOUNT = @as(c_int, 12141);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONSECURITYDIAGNOSTICS = @as(c_int, 12142);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONSECURITYDIAGNOSTICS_SESSIONID = @as(c_int, 12143);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONSECURITYDIAGNOSTICS_CLIENTUSERIDOFSESSION = @as(c_int, 12144);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONSECURITYDIAGNOSTICS_CLIENTUSERIDHISTORY = @as(c_int, 12145);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONSECURITYDIAGNOSTICS_AUTHENTICATIONMECHANISM = @as(c_int, 12146);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONSECURITYDIAGNOSTICS_ENCODING = @as(c_int, 12147);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONSECURITYDIAGNOSTICS_TRANSPORTPROTOCOL = @as(c_int, 12148);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONSECURITYDIAGNOSTICS_SECURITYMODE = @as(c_int, 12149);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONSECURITYDIAGNOSTICS_SECURITYPOLICYURI = @as(c_int, 12150);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SESSIONSECURITYDIAGNOSTICS_CLIENTCERTIFICATE = @as(c_int, 12151);
pub const UA_NS0ID_SESSIONSDIAGNOSTICSSUMMARYTYPE_CLIENTNAME_PLACEHOLDER_SUBSCRIPTIONDIAGNOSTICSARRAY = @as(c_int, 12152);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_OPERATIONLIMITS_MAXNODESPERHISTORYREADDATA = @as(c_int, 12153);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_OPERATIONLIMITS_MAXNODESPERHISTORYREADEVENTS = @as(c_int, 12154);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_OPERATIONLIMITS_MAXNODESPERHISTORYUPDATEDATA = @as(c_int, 12155);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_OPERATIONLIMITS_MAXNODESPERHISTORYUPDATEEVENTS = @as(c_int, 12156);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_OPERATIONLIMITS_MAXNODESPERHISTORYREADDATA = @as(c_int, 12157);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_OPERATIONLIMITS_MAXNODESPERHISTORYREADEVENTS = @as(c_int, 12158);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_OPERATIONLIMITS_MAXNODESPERHISTORYUPDATEDATA = @as(c_int, 12159);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_OPERATIONLIMITS_MAXNODESPERHISTORYUPDATEEVENTS = @as(c_int, 12160);
pub const UA_NS0ID_OPERATIONLIMITSTYPE_MAXNODESPERHISTORYREADDATA = @as(c_int, 12161);
pub const UA_NS0ID_OPERATIONLIMITSTYPE_MAXNODESPERHISTORYREADEVENTS = @as(c_int, 12162);
pub const UA_NS0ID_OPERATIONLIMITSTYPE_MAXNODESPERHISTORYUPDATEDATA = @as(c_int, 12163);
pub const UA_NS0ID_OPERATIONLIMITSTYPE_MAXNODESPERHISTORYUPDATEEVENTS = @as(c_int, 12164);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_OPERATIONLIMITS_MAXNODESPERHISTORYREADDATA = @as(c_int, 12165);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_OPERATIONLIMITS_MAXNODESPERHISTORYREADEVENTS = @as(c_int, 12166);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_OPERATIONLIMITS_MAXNODESPERHISTORYUPDATEDATA = @as(c_int, 12167);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_OPERATIONLIMITS_MAXNODESPERHISTORYUPDATEEVENTS = @as(c_int, 12168);
pub const UA_NS0ID_NAMINGRULETYPE_ENUMVALUES = @as(c_int, 12169);
pub const UA_NS0ID_VIEWVERSION = @as(c_int, 12170);
pub const UA_NS0ID_COMPLEXNUMBERTYPE = @as(c_int, 12171);
pub const UA_NS0ID_DOUBLECOMPLEXNUMBERTYPE = @as(c_int, 12172);
pub const UA_NS0ID_COMPLEXNUMBERTYPE_ENCODING_DEFAULTXML = @as(c_int, 12173);
pub const UA_NS0ID_DOUBLECOMPLEXNUMBERTYPE_ENCODING_DEFAULTXML = @as(c_int, 12174);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_COMPLEXNUMBERTYPE = @as(c_int, 12175);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_COMPLEXNUMBERTYPE_DATATYPEVERSION = @as(c_int, 12176);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_COMPLEXNUMBERTYPE_DICTIONARYFRAGMENT = @as(c_int, 12177);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DOUBLECOMPLEXNUMBERTYPE = @as(c_int, 12178);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DOUBLECOMPLEXNUMBERTYPE_DATATYPEVERSION = @as(c_int, 12179);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DOUBLECOMPLEXNUMBERTYPE_DICTIONARYFRAGMENT = @as(c_int, 12180);
pub const UA_NS0ID_COMPLEXNUMBERTYPE_ENCODING_DEFAULTBINARY = @as(c_int, 12181);
pub const UA_NS0ID_DOUBLECOMPLEXNUMBERTYPE_ENCODING_DEFAULTBINARY = @as(c_int, 12182);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_COMPLEXNUMBERTYPE = @as(c_int, 12183);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_COMPLEXNUMBERTYPE_DATATYPEVERSION = @as(c_int, 12184);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_COMPLEXNUMBERTYPE_DICTIONARYFRAGMENT = @as(c_int, 12185);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DOUBLECOMPLEXNUMBERTYPE = @as(c_int, 12186);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DOUBLECOMPLEXNUMBERTYPE_DATATYPEVERSION = @as(c_int, 12187);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DOUBLECOMPLEXNUMBERTYPE_DICTIONARYFRAGMENT = @as(c_int, 12188);
pub const UA_NS0ID_SERVERONNETWORK = @as(c_int, 12189);
pub const UA_NS0ID_FINDSERVERSONNETWORKREQUEST = @as(c_int, 12190);
pub const UA_NS0ID_FINDSERVERSONNETWORKRESPONSE = @as(c_int, 12191);
pub const UA_NS0ID_REGISTERSERVER2REQUEST = @as(c_int, 12193);
pub const UA_NS0ID_REGISTERSERVER2RESPONSE = @as(c_int, 12194);
pub const UA_NS0ID_SERVERONNETWORK_ENCODING_DEFAULTXML = @as(c_int, 12195);
pub const UA_NS0ID_FINDSERVERSONNETWORKREQUEST_ENCODING_DEFAULTXML = @as(c_int, 12196);
pub const UA_NS0ID_FINDSERVERSONNETWORKRESPONSE_ENCODING_DEFAULTXML = @as(c_int, 12197);
pub const UA_NS0ID_REGISTERSERVER2REQUEST_ENCODING_DEFAULTXML = @as(c_int, 12199);
pub const UA_NS0ID_REGISTERSERVER2RESPONSE_ENCODING_DEFAULTXML = @as(c_int, 12200);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SERVERONNETWORK = @as(c_int, 12201);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SERVERONNETWORK_DATATYPEVERSION = @as(c_int, 12202);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SERVERONNETWORK_DICTIONARYFRAGMENT = @as(c_int, 12203);
pub const UA_NS0ID_SERVERONNETWORK_ENCODING_DEFAULTBINARY = @as(c_int, 12207);
pub const UA_NS0ID_FINDSERVERSONNETWORKREQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 12208);
pub const UA_NS0ID_FINDSERVERSONNETWORKRESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 12209);
pub const UA_NS0ID_REGISTERSERVER2REQUEST_ENCODING_DEFAULTBINARY = @as(c_int, 12211);
pub const UA_NS0ID_REGISTERSERVER2RESPONSE_ENCODING_DEFAULTBINARY = @as(c_int, 12212);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SERVERONNETWORK = @as(c_int, 12213);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SERVERONNETWORK_DATATYPEVERSION = @as(c_int, 12214);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SERVERONNETWORK_DICTIONARYFRAGMENT = @as(c_int, 12215);
pub const UA_NS0ID_PROGRESSEVENTTYPE_CONTEXT = @as(c_int, 12502);
pub const UA_NS0ID_PROGRESSEVENTTYPE_PROGRESS = @as(c_int, 12503);
pub const UA_NS0ID_OPENWITHMASKSMETHODTYPE = @as(c_int, 12513);
pub const UA_NS0ID_OPENWITHMASKSMETHODTYPE_INPUTARGUMENTS = @as(c_int, 12514);
pub const UA_NS0ID_OPENWITHMASKSMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 12515);
pub const UA_NS0ID_CLOSEANDUPDATEMETHODTYPE = @as(c_int, 12516);
pub const UA_NS0ID_CLOSEANDUPDATEMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 12517);
pub const UA_NS0ID_ADDCERTIFICATEMETHODTYPE = @as(c_int, 12518);
pub const UA_NS0ID_ADDCERTIFICATEMETHODTYPE_INPUTARGUMENTS = @as(c_int, 12519);
pub const UA_NS0ID_REMOVECERTIFICATEMETHODTYPE = @as(c_int, 12520);
pub const UA_NS0ID_REMOVECERTIFICATEMETHODTYPE_INPUTARGUMENTS = @as(c_int, 12521);
pub const UA_NS0ID_TRUSTLISTTYPE = @as(c_int, 12522);
pub const UA_NS0ID_TRUSTLISTTYPE_SIZE = @as(c_int, 12523);
pub const UA_NS0ID_TRUSTLISTTYPE_OPENCOUNT = @as(c_int, 12526);
pub const UA_NS0ID_TRUSTLISTTYPE_OPEN = @as(c_int, 12527);
pub const UA_NS0ID_TRUSTLISTTYPE_OPEN_INPUTARGUMENTS = @as(c_int, 12528);
pub const UA_NS0ID_TRUSTLISTTYPE_OPEN_OUTPUTARGUMENTS = @as(c_int, 12529);
pub const UA_NS0ID_TRUSTLISTTYPE_CLOSE = @as(c_int, 12530);
pub const UA_NS0ID_TRUSTLISTTYPE_CLOSE_INPUTARGUMENTS = @as(c_int, 12531);
pub const UA_NS0ID_TRUSTLISTTYPE_READ = @as(c_int, 12532);
pub const UA_NS0ID_TRUSTLISTTYPE_READ_INPUTARGUMENTS = @as(c_int, 12533);
pub const UA_NS0ID_TRUSTLISTTYPE_READ_OUTPUTARGUMENTS = @as(c_int, 12534);
pub const UA_NS0ID_TRUSTLISTTYPE_WRITE = @as(c_int, 12535);
pub const UA_NS0ID_TRUSTLISTTYPE_WRITE_INPUTARGUMENTS = @as(c_int, 12536);
pub const UA_NS0ID_TRUSTLISTTYPE_GETPOSITION = @as(c_int, 12537);
pub const UA_NS0ID_TRUSTLISTTYPE_GETPOSITION_INPUTARGUMENTS = @as(c_int, 12538);
pub const UA_NS0ID_TRUSTLISTTYPE_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 12539);
pub const UA_NS0ID_TRUSTLISTTYPE_SETPOSITION = @as(c_int, 12540);
pub const UA_NS0ID_TRUSTLISTTYPE_SETPOSITION_INPUTARGUMENTS = @as(c_int, 12541);
pub const UA_NS0ID_TRUSTLISTTYPE_LASTUPDATETIME = @as(c_int, 12542);
pub const UA_NS0ID_TRUSTLISTTYPE_OPENWITHMASKS = @as(c_int, 12543);
pub const UA_NS0ID_TRUSTLISTTYPE_OPENWITHMASKS_INPUTARGUMENTS = @as(c_int, 12544);
pub const UA_NS0ID_TRUSTLISTTYPE_OPENWITHMASKS_OUTPUTARGUMENTS = @as(c_int, 12545);
pub const UA_NS0ID_TRUSTLISTTYPE_CLOSEANDUPDATE = @as(c_int, 12546);
pub const UA_NS0ID_TRUSTLISTTYPE_CLOSEANDUPDATE_OUTPUTARGUMENTS = @as(c_int, 12547);
pub const UA_NS0ID_TRUSTLISTTYPE_ADDCERTIFICATE = @as(c_int, 12548);
pub const UA_NS0ID_TRUSTLISTTYPE_ADDCERTIFICATE_INPUTARGUMENTS = @as(c_int, 12549);
pub const UA_NS0ID_TRUSTLISTTYPE_REMOVECERTIFICATE = @as(c_int, 12550);
pub const UA_NS0ID_TRUSTLISTTYPE_REMOVECERTIFICATE_INPUTARGUMENTS = @as(c_int, 12551);
pub const UA_NS0ID_TRUSTLISTMASKS = @as(c_int, 12552);
pub const UA_NS0ID_TRUSTLISTMASKS_ENUMVALUES = @as(c_int, 12553);
pub const UA_NS0ID_TRUSTLISTDATATYPE = @as(c_int, 12554);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE = @as(c_int, 12555);
pub const UA_NS0ID_CERTIFICATETYPE = @as(c_int, 12556);
pub const UA_NS0ID_APPLICATIONCERTIFICATETYPE = @as(c_int, 12557);
pub const UA_NS0ID_HTTPSCERTIFICATETYPE = @as(c_int, 12558);
pub const UA_NS0ID_RSAMINAPPLICATIONCERTIFICATETYPE = @as(c_int, 12559);
pub const UA_NS0ID_RSASHA256APPLICATIONCERTIFICATETYPE = @as(c_int, 12560);
pub const UA_NS0ID_TRUSTLISTUPDATEDAUDITEVENTTYPE = @as(c_int, 12561);
pub const UA_NS0ID_TRUSTLISTUPDATEDAUDITEVENTTYPE_EVENTID = @as(c_int, 12562);
pub const UA_NS0ID_TRUSTLISTUPDATEDAUDITEVENTTYPE_EVENTTYPE = @as(c_int, 12563);
pub const UA_NS0ID_TRUSTLISTUPDATEDAUDITEVENTTYPE_SOURCENODE = @as(c_int, 12564);
pub const UA_NS0ID_TRUSTLISTUPDATEDAUDITEVENTTYPE_SOURCENAME = @as(c_int, 12565);
pub const UA_NS0ID_TRUSTLISTUPDATEDAUDITEVENTTYPE_TIME = @as(c_int, 12566);
pub const UA_NS0ID_TRUSTLISTUPDATEDAUDITEVENTTYPE_RECEIVETIME = @as(c_int, 12567);
pub const UA_NS0ID_TRUSTLISTUPDATEDAUDITEVENTTYPE_LOCALTIME = @as(c_int, 12568);
pub const UA_NS0ID_TRUSTLISTUPDATEDAUDITEVENTTYPE_MESSAGE = @as(c_int, 12569);
pub const UA_NS0ID_TRUSTLISTUPDATEDAUDITEVENTTYPE_SEVERITY = @as(c_int, 12570);
pub const UA_NS0ID_TRUSTLISTUPDATEDAUDITEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 12571);
pub const UA_NS0ID_TRUSTLISTUPDATEDAUDITEVENTTYPE_STATUS = @as(c_int, 12572);
pub const UA_NS0ID_TRUSTLISTUPDATEDAUDITEVENTTYPE_SERVERID = @as(c_int, 12573);
pub const UA_NS0ID_TRUSTLISTUPDATEDAUDITEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 12574);
pub const UA_NS0ID_TRUSTLISTUPDATEDAUDITEVENTTYPE_CLIENTUSERID = @as(c_int, 12575);
pub const UA_NS0ID_UPDATECERTIFICATEMETHODTYPE = @as(c_int, 12578);
pub const UA_NS0ID_UPDATECERTIFICATEMETHODTYPE_INPUTARGUMENTS = @as(c_int, 12579);
pub const UA_NS0ID_UPDATECERTIFICATEMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 12580);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE = @as(c_int, 12581);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_SUPPORTEDPRIVATEKEYFORMATS = @as(c_int, 12583);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_MAXTRUSTLISTSIZE = @as(c_int, 12584);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_MULTICASTDNSENABLED = @as(c_int, 12585);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_UPDATECERTIFICATE = @as(c_int, 12616);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_UPDATECERTIFICATE_INPUTARGUMENTS = @as(c_int, 12617);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_UPDATECERTIFICATE_OUTPUTARGUMENTS = @as(c_int, 12618);
pub const UA_NS0ID_CERTIFICATEUPDATEDAUDITEVENTTYPE = @as(c_int, 12620);
pub const UA_NS0ID_CERTIFICATEUPDATEDAUDITEVENTTYPE_EVENTID = @as(c_int, 12621);
pub const UA_NS0ID_CERTIFICATEUPDATEDAUDITEVENTTYPE_EVENTTYPE = @as(c_int, 12622);
pub const UA_NS0ID_CERTIFICATEUPDATEDAUDITEVENTTYPE_SOURCENODE = @as(c_int, 12623);
pub const UA_NS0ID_CERTIFICATEUPDATEDAUDITEVENTTYPE_SOURCENAME = @as(c_int, 12624);
pub const UA_NS0ID_CERTIFICATEUPDATEDAUDITEVENTTYPE_TIME = @as(c_int, 12625);
pub const UA_NS0ID_CERTIFICATEUPDATEDAUDITEVENTTYPE_RECEIVETIME = @as(c_int, 12626);
pub const UA_NS0ID_CERTIFICATEUPDATEDAUDITEVENTTYPE_LOCALTIME = @as(c_int, 12627);
pub const UA_NS0ID_CERTIFICATEUPDATEDAUDITEVENTTYPE_MESSAGE = @as(c_int, 12628);
pub const UA_NS0ID_CERTIFICATEUPDATEDAUDITEVENTTYPE_SEVERITY = @as(c_int, 12629);
pub const UA_NS0ID_CERTIFICATEUPDATEDAUDITEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 12630);
pub const UA_NS0ID_CERTIFICATEUPDATEDAUDITEVENTTYPE_STATUS = @as(c_int, 12631);
pub const UA_NS0ID_CERTIFICATEUPDATEDAUDITEVENTTYPE_SERVERID = @as(c_int, 12632);
pub const UA_NS0ID_CERTIFICATEUPDATEDAUDITEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 12633);
pub const UA_NS0ID_CERTIFICATEUPDATEDAUDITEVENTTYPE_CLIENTUSERID = @as(c_int, 12634);
pub const UA_NS0ID_SERVERCONFIGURATION = @as(c_int, 12637);
pub const UA_NS0ID_SERVERCONFIGURATION_SUPPORTEDPRIVATEKEYFORMATS = @as(c_int, 12639);
pub const UA_NS0ID_SERVERCONFIGURATION_MAXTRUSTLISTSIZE = @as(c_int, 12640);
pub const UA_NS0ID_SERVERCONFIGURATION_MULTICASTDNSENABLED = @as(c_int, 12641);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST = @as(c_int, 12642);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_SIZE = @as(c_int, 12643);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPENCOUNT = @as(c_int, 12646);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPEN = @as(c_int, 12647);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPEN_INPUTARGUMENTS = @as(c_int, 12648);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPEN_OUTPUTARGUMENTS = @as(c_int, 12649);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSE = @as(c_int, 12650);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSE_INPUTARGUMENTS = @as(c_int, 12651);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_READ = @as(c_int, 12652);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_READ_INPUTARGUMENTS = @as(c_int, 12653);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_READ_OUTPUTARGUMENTS = @as(c_int, 12654);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_WRITE = @as(c_int, 12655);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_WRITE_INPUTARGUMENTS = @as(c_int, 12656);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_GETPOSITION = @as(c_int, 12657);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_GETPOSITION_INPUTARGUMENTS = @as(c_int, 12658);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 12659);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_SETPOSITION = @as(c_int, 12660);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_SETPOSITION_INPUTARGUMENTS = @as(c_int, 12661);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_LASTUPDATETIME = @as(c_int, 12662);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPENWITHMASKS = @as(c_int, 12663);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPENWITHMASKS_INPUTARGUMENTS = @as(c_int, 12664);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPENWITHMASKS_OUTPUTARGUMENTS = @as(c_int, 12665);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSEANDUPDATE = @as(c_int, 12666);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSEANDUPDATE_OUTPUTARGUMENTS = @as(c_int, 12667);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_ADDCERTIFICATE = @as(c_int, 12668);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_ADDCERTIFICATE_INPUTARGUMENTS = @as(c_int, 12669);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_REMOVECERTIFICATE = @as(c_int, 12670);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_REMOVECERTIFICATE_INPUTARGUMENTS = @as(c_int, 12671);
pub const UA_NS0ID_TRUSTLISTDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 12676);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_TRUSTLISTDATATYPE = @as(c_int, 12677);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_TRUSTLISTDATATYPE_DATATYPEVERSION = @as(c_int, 12678);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_TRUSTLISTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 12679);
pub const UA_NS0ID_TRUSTLISTDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 12680);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_TRUSTLISTDATATYPE = @as(c_int, 12681);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_TRUSTLISTDATATYPE_DATATYPEVERSION = @as(c_int, 12682);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_TRUSTLISTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 12683);
pub const UA_NS0ID_FILETYPE_WRITABLE = @as(c_int, 12686);
pub const UA_NS0ID_FILETYPE_USERWRITABLE = @as(c_int, 12687);
pub const UA_NS0ID_ADDRESSSPACEFILETYPE_WRITABLE = @as(c_int, 12688);
pub const UA_NS0ID_ADDRESSSPACEFILETYPE_USERWRITABLE = @as(c_int, 12689);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEFILE_WRITABLE = @as(c_int, 12690);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEFILE_USERWRITABLE = @as(c_int, 12691);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEFILE_WRITABLE = @as(c_int, 12692);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEFILE_USERWRITABLE = @as(c_int, 12693);
pub const UA_NS0ID_TRUSTLISTTYPE_WRITABLE = @as(c_int, 12698);
pub const UA_NS0ID_TRUSTLISTTYPE_USERWRITABLE = @as(c_int, 12699);
pub const UA_NS0ID_CLOSEANDUPDATEMETHODTYPE_INPUTARGUMENTS = @as(c_int, 12704);
pub const UA_NS0ID_TRUSTLISTTYPE_CLOSEANDUPDATE_INPUTARGUMENTS = @as(c_int, 12705);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_SERVERCAPABILITIES = @as(c_int, 12708);
pub const UA_NS0ID_SERVERCONFIGURATION_SERVERCAPABILITIES = @as(c_int, 12710);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_RELATIVEPATHELEMENT = @as(c_int, 12712);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_RELATIVEPATHELEMENT_DATATYPEVERSION = @as(c_int, 12713);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_RELATIVEPATHELEMENT_DICTIONARYFRAGMENT = @as(c_int, 12714);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_RELATIVEPATH = @as(c_int, 12715);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_RELATIVEPATH_DATATYPEVERSION = @as(c_int, 12716);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_RELATIVEPATH_DICTIONARYFRAGMENT = @as(c_int, 12717);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_RELATIVEPATHELEMENT = @as(c_int, 12718);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_RELATIVEPATHELEMENT_DATATYPEVERSION = @as(c_int, 12719);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_RELATIVEPATHELEMENT_DICTIONARYFRAGMENT = @as(c_int, 12720);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_RELATIVEPATH = @as(c_int, 12721);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_RELATIVEPATH_DATATYPEVERSION = @as(c_int, 12722);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_RELATIVEPATH_DICTIONARYFRAGMENT = @as(c_int, 12723);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CREATESIGNINGREQUEST = @as(c_int, 12731);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CREATESIGNINGREQUEST_INPUTARGUMENTS = @as(c_int, 12732);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CREATESIGNINGREQUEST_OUTPUTARGUMENTS = @as(c_int, 12733);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_APPLYCHANGES = @as(c_int, 12734);
pub const UA_NS0ID_SERVERCONFIGURATION_CREATESIGNINGREQUEST = @as(c_int, 12737);
pub const UA_NS0ID_SERVERCONFIGURATION_CREATESIGNINGREQUEST_INPUTARGUMENTS = @as(c_int, 12738);
pub const UA_NS0ID_SERVERCONFIGURATION_CREATESIGNINGREQUEST_OUTPUTARGUMENTS = @as(c_int, 12739);
pub const UA_NS0ID_SERVERCONFIGURATION_APPLYCHANGES = @as(c_int, 12740);
pub const UA_NS0ID_CREATESIGNINGREQUESTMETHODTYPE = @as(c_int, 12741);
pub const UA_NS0ID_CREATESIGNINGREQUESTMETHODTYPE_INPUTARGUMENTS = @as(c_int, 12742);
pub const UA_NS0ID_CREATESIGNINGREQUESTMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 12743);
pub const UA_NS0ID_OPTIONSETVALUES = @as(c_int, 12745);
pub const UA_NS0ID_SERVERTYPE_SETSUBSCRIPTIONDURABLE = @as(c_int, 12746);
pub const UA_NS0ID_SERVERTYPE_SETSUBSCRIPTIONDURABLE_INPUTARGUMENTS = @as(c_int, 12747);
pub const UA_NS0ID_SERVERTYPE_SETSUBSCRIPTIONDURABLE_OUTPUTARGUMENTS = @as(c_int, 12748);
pub const UA_NS0ID_SERVER_SETSUBSCRIPTIONDURABLE = @as(c_int, 12749);
pub const UA_NS0ID_SERVER_SETSUBSCRIPTIONDURABLE_INPUTARGUMENTS = @as(c_int, 12750);
pub const UA_NS0ID_SERVER_SETSUBSCRIPTIONDURABLE_OUTPUTARGUMENTS = @as(c_int, 12751);
pub const UA_NS0ID_SETSUBSCRIPTIONDURABLEMETHODTYPE = @as(c_int, 12752);
pub const UA_NS0ID_SETSUBSCRIPTIONDURABLEMETHODTYPE_INPUTARGUMENTS = @as(c_int, 12753);
pub const UA_NS0ID_SETSUBSCRIPTIONDURABLEMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 12754);
pub const UA_NS0ID_OPTIONSET = @as(c_int, 12755);
pub const UA_NS0ID_UNION = @as(c_int, 12756);
pub const UA_NS0ID_OPTIONSET_ENCODING_DEFAULTXML = @as(c_int, 12757);
pub const UA_NS0ID_UNION_ENCODING_DEFAULTXML = @as(c_int, 12758);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_OPTIONSET = @as(c_int, 12759);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_OPTIONSET_DATATYPEVERSION = @as(c_int, 12760);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_OPTIONSET_DICTIONARYFRAGMENT = @as(c_int, 12761);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_UNION = @as(c_int, 12762);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_UNION_DATATYPEVERSION = @as(c_int, 12763);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_UNION_DICTIONARYFRAGMENT = @as(c_int, 12764);
pub const UA_NS0ID_OPTIONSET_ENCODING_DEFAULTBINARY = @as(c_int, 12765);
pub const UA_NS0ID_UNION_ENCODING_DEFAULTBINARY = @as(c_int, 12766);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_OPTIONSET = @as(c_int, 12767);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_OPTIONSET_DATATYPEVERSION = @as(c_int, 12768);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_OPTIONSET_DICTIONARYFRAGMENT = @as(c_int, 12769);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_UNION = @as(c_int, 12770);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_UNION_DATATYPEVERSION = @as(c_int, 12771);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_UNION_DICTIONARYFRAGMENT = @as(c_int, 12772);
pub const UA_NS0ID_GETREJECTEDLISTMETHODTYPE = @as(c_int, 12773);
pub const UA_NS0ID_GETREJECTEDLISTMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 12774);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_GETREJECTEDLIST = @as(c_int, 12775);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_GETREJECTEDLIST_OUTPUTARGUMENTS = @as(c_int, 12776);
pub const UA_NS0ID_SERVERCONFIGURATION_GETREJECTEDLIST = @as(c_int, 12777);
pub const UA_NS0ID_SERVERCONFIGURATION_GETREJECTEDLIST_OUTPUTARGUMENTS = @as(c_int, 12778);
pub const UA_NS0ID_SAMPLINGINTERVALDIAGNOSTICSARRAYTYPE_SAMPLINGINTERVALDIAGNOSTICS = @as(c_int, 12779);
pub const UA_NS0ID_SAMPLINGINTERVALDIAGNOSTICSARRAYTYPE_SAMPLINGINTERVALDIAGNOSTICS_SAMPLINGINTERVAL = @as(c_int, 12780);
pub const UA_NS0ID_SAMPLINGINTERVALDIAGNOSTICSARRAYTYPE_SAMPLINGINTERVALDIAGNOSTICS_SAMPLEDMONITOREDITEMSCOUNT = @as(c_int, 12781);
pub const UA_NS0ID_SAMPLINGINTERVALDIAGNOSTICSARRAYTYPE_SAMPLINGINTERVALDIAGNOSTICS_MAXSAMPLEDMONITOREDITEMSCOUNT = @as(c_int, 12782);
pub const UA_NS0ID_SAMPLINGINTERVALDIAGNOSTICSARRAYTYPE_SAMPLINGINTERVALDIAGNOSTICS_DISABLEDMONITOREDITEMSSAMPLINGCOUNT = @as(c_int, 12783);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS = @as(c_int, 12784);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_SESSIONID = @as(c_int, 12785);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_SUBSCRIPTIONID = @as(c_int, 12786);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_PRIORITY = @as(c_int, 12787);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_PUBLISHINGINTERVAL = @as(c_int, 12788);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_MAXKEEPALIVECOUNT = @as(c_int, 12789);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_MAXLIFETIMECOUNT = @as(c_int, 12790);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_MAXNOTIFICATIONSPERPUBLISH = @as(c_int, 12791);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_PUBLISHINGENABLED = @as(c_int, 12792);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_MODIFYCOUNT = @as(c_int, 12793);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_ENABLECOUNT = @as(c_int, 12794);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_DISABLECOUNT = @as(c_int, 12795);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_REPUBLISHREQUESTCOUNT = @as(c_int, 12796);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_REPUBLISHMESSAGEREQUESTCOUNT = @as(c_int, 12797);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_REPUBLISHMESSAGECOUNT = @as(c_int, 12798);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_TRANSFERREQUESTCOUNT = @as(c_int, 12799);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_TRANSFERREDTOALTCLIENTCOUNT = @as(c_int, 12800);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_TRANSFERREDTOSAMECLIENTCOUNT = @as(c_int, 12801);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_PUBLISHREQUESTCOUNT = @as(c_int, 12802);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_DATACHANGENOTIFICATIONSCOUNT = @as(c_int, 12803);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_EVENTNOTIFICATIONSCOUNT = @as(c_int, 12804);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_NOTIFICATIONSCOUNT = @as(c_int, 12805);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_LATEPUBLISHREQUESTCOUNT = @as(c_int, 12806);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_CURRENTKEEPALIVECOUNT = @as(c_int, 12807);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_CURRENTLIFETIMECOUNT = @as(c_int, 12808);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_UNACKNOWLEDGEDMESSAGECOUNT = @as(c_int, 12809);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_DISCARDEDMESSAGECOUNT = @as(c_int, 12810);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_MONITOREDITEMCOUNT = @as(c_int, 12811);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_DISABLEDMONITOREDITEMCOUNT = @as(c_int, 12812);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_MONITORINGQUEUEOVERFLOWCOUNT = @as(c_int, 12813);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_NEXTSEQUENCENUMBER = @as(c_int, 12814);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSARRAYTYPE_SUBSCRIPTIONDIAGNOSTICS_EVENTQUEUEOVERFLOWCOUNT = @as(c_int, 12815);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS = @as(c_int, 12816);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_SESSIONID = @as(c_int, 12817);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_SESSIONNAME = @as(c_int, 12818);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_CLIENTDESCRIPTION = @as(c_int, 12819);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_SERVERURI = @as(c_int, 12820);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_ENDPOINTURL = @as(c_int, 12821);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_LOCALEIDS = @as(c_int, 12822);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_ACTUALSESSIONTIMEOUT = @as(c_int, 12823);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_MAXRESPONSEMESSAGESIZE = @as(c_int, 12824);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_CLIENTCONNECTIONTIME = @as(c_int, 12825);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_CLIENTLASTCONTACTTIME = @as(c_int, 12826);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_CURRENTSUBSCRIPTIONSCOUNT = @as(c_int, 12827);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_CURRENTMONITOREDITEMSCOUNT = @as(c_int, 12828);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_CURRENTPUBLISHREQUESTSINQUEUE = @as(c_int, 12829);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_TOTALREQUESTCOUNT = @as(c_int, 12830);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_UNAUTHORIZEDREQUESTCOUNT = @as(c_int, 12831);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_READCOUNT = @as(c_int, 12832);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_HISTORYREADCOUNT = @as(c_int, 12833);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_WRITECOUNT = @as(c_int, 12834);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_HISTORYUPDATECOUNT = @as(c_int, 12835);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_CALLCOUNT = @as(c_int, 12836);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_CREATEMONITOREDITEMSCOUNT = @as(c_int, 12837);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_MODIFYMONITOREDITEMSCOUNT = @as(c_int, 12838);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_SETMONITORINGMODECOUNT = @as(c_int, 12839);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_SETTRIGGERINGCOUNT = @as(c_int, 12840);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_DELETEMONITOREDITEMSCOUNT = @as(c_int, 12841);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_CREATESUBSCRIPTIONCOUNT = @as(c_int, 12842);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_MODIFYSUBSCRIPTIONCOUNT = @as(c_int, 12843);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_SETPUBLISHINGMODECOUNT = @as(c_int, 12844);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_PUBLISHCOUNT = @as(c_int, 12845);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_REPUBLISHCOUNT = @as(c_int, 12846);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_TRANSFERSUBSCRIPTIONSCOUNT = @as(c_int, 12847);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_DELETESUBSCRIPTIONSCOUNT = @as(c_int, 12848);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_ADDNODESCOUNT = @as(c_int, 12849);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_ADDREFERENCESCOUNT = @as(c_int, 12850);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_DELETENODESCOUNT = @as(c_int, 12851);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_DELETEREFERENCESCOUNT = @as(c_int, 12852);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_BROWSECOUNT = @as(c_int, 12853);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_BROWSENEXTCOUNT = @as(c_int, 12854);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_TRANSLATEBROWSEPATHSTONODEIDSCOUNT = @as(c_int, 12855);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_QUERYFIRSTCOUNT = @as(c_int, 12856);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_QUERYNEXTCOUNT = @as(c_int, 12857);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_REGISTERNODESCOUNT = @as(c_int, 12858);
pub const UA_NS0ID_SESSIONDIAGNOSTICSARRAYTYPE_SESSIONDIAGNOSTICS_UNREGISTERNODESCOUNT = @as(c_int, 12859);
pub const UA_NS0ID_SESSIONSECURITYDIAGNOSTICSARRAYTYPE_SESSIONSECURITYDIAGNOSTICS = @as(c_int, 12860);
pub const UA_NS0ID_SESSIONSECURITYDIAGNOSTICSARRAYTYPE_SESSIONSECURITYDIAGNOSTICS_SESSIONID = @as(c_int, 12861);
pub const UA_NS0ID_SESSIONSECURITYDIAGNOSTICSARRAYTYPE_SESSIONSECURITYDIAGNOSTICS_CLIENTUSERIDOFSESSION = @as(c_int, 12862);
pub const UA_NS0ID_SESSIONSECURITYDIAGNOSTICSARRAYTYPE_SESSIONSECURITYDIAGNOSTICS_CLIENTUSERIDHISTORY = @as(c_int, 12863);
pub const UA_NS0ID_SESSIONSECURITYDIAGNOSTICSARRAYTYPE_SESSIONSECURITYDIAGNOSTICS_AUTHENTICATIONMECHANISM = @as(c_int, 12864);
pub const UA_NS0ID_SESSIONSECURITYDIAGNOSTICSARRAYTYPE_SESSIONSECURITYDIAGNOSTICS_ENCODING = @as(c_int, 12865);
pub const UA_NS0ID_SESSIONSECURITYDIAGNOSTICSARRAYTYPE_SESSIONSECURITYDIAGNOSTICS_TRANSPORTPROTOCOL = @as(c_int, 12866);
pub const UA_NS0ID_SESSIONSECURITYDIAGNOSTICSARRAYTYPE_SESSIONSECURITYDIAGNOSTICS_SECURITYMODE = @as(c_int, 12867);
pub const UA_NS0ID_SESSIONSECURITYDIAGNOSTICSARRAYTYPE_SESSIONSECURITYDIAGNOSTICS_SECURITYPOLICYURI = @as(c_int, 12868);
pub const UA_NS0ID_SESSIONSECURITYDIAGNOSTICSARRAYTYPE_SESSIONSECURITYDIAGNOSTICS_CLIENTCERTIFICATE = @as(c_int, 12869);
pub const UA_NS0ID_SERVERTYPE_RESENDDATA = @as(c_int, 12871);
pub const UA_NS0ID_SERVERTYPE_RESENDDATA_INPUTARGUMENTS = @as(c_int, 12872);
pub const UA_NS0ID_SERVER_RESENDDATA = @as(c_int, 12873);
pub const UA_NS0ID_SERVER_RESENDDATA_INPUTARGUMENTS = @as(c_int, 12874);
pub const UA_NS0ID_RESENDDATAMETHODTYPE = @as(c_int, 12875);
pub const UA_NS0ID_RESENDDATAMETHODTYPE_INPUTARGUMENTS = @as(c_int, 12876);
pub const UA_NS0ID_NORMALIZEDSTRING = @as(c_int, 12877);
pub const UA_NS0ID_DECIMALSTRING = @as(c_int, 12878);
pub const UA_NS0ID_DURATIONSTRING = @as(c_int, 12879);
pub const UA_NS0ID_TIMESTRING = @as(c_int, 12880);
pub const UA_NS0ID_DATESTRING = @as(c_int, 12881);
pub const UA_NS0ID_SERVERTYPE_ESTIMATEDRETURNTIME = @as(c_int, 12882);
pub const UA_NS0ID_SERVERTYPE_REQUESTSERVERSTATECHANGE = @as(c_int, 12883);
pub const UA_NS0ID_SERVERTYPE_REQUESTSERVERSTATECHANGE_INPUTARGUMENTS = @as(c_int, 12884);
pub const UA_NS0ID_SERVER_ESTIMATEDRETURNTIME = @as(c_int, 12885);
pub const UA_NS0ID_SERVER_REQUESTSERVERSTATECHANGE = @as(c_int, 12886);
pub const UA_NS0ID_SERVER_REQUESTSERVERSTATECHANGE_INPUTARGUMENTS = @as(c_int, 12887);
pub const UA_NS0ID_REQUESTSERVERSTATECHANGEMETHODTYPE = @as(c_int, 12888);
pub const UA_NS0ID_REQUESTSERVERSTATECHANGEMETHODTYPE_INPUTARGUMENTS = @as(c_int, 12889);
pub const UA_NS0ID_DISCOVERYCONFIGURATION = @as(c_int, 12890);
pub const UA_NS0ID_MDNSDISCOVERYCONFIGURATION = @as(c_int, 12891);
pub const UA_NS0ID_DISCOVERYCONFIGURATION_ENCODING_DEFAULTXML = @as(c_int, 12892);
pub const UA_NS0ID_MDNSDISCOVERYCONFIGURATION_ENCODING_DEFAULTXML = @as(c_int, 12893);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DISCOVERYCONFIGURATION = @as(c_int, 12894);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DISCOVERYCONFIGURATION_DATATYPEVERSION = @as(c_int, 12895);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DISCOVERYCONFIGURATION_DICTIONARYFRAGMENT = @as(c_int, 12896);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_MDNSDISCOVERYCONFIGURATION = @as(c_int, 12897);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_MDNSDISCOVERYCONFIGURATION_DATATYPEVERSION = @as(c_int, 12898);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_MDNSDISCOVERYCONFIGURATION_DICTIONARYFRAGMENT = @as(c_int, 12899);
pub const UA_NS0ID_DISCOVERYCONFIGURATION_ENCODING_DEFAULTBINARY = @as(c_int, 12900);
pub const UA_NS0ID_MDNSDISCOVERYCONFIGURATION_ENCODING_DEFAULTBINARY = @as(c_int, 12901);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DISCOVERYCONFIGURATION = @as(c_int, 12902);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DISCOVERYCONFIGURATION_DATATYPEVERSION = @as(c_int, 12903);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DISCOVERYCONFIGURATION_DICTIONARYFRAGMENT = @as(c_int, 12904);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_MDNSDISCOVERYCONFIGURATION = @as(c_int, 12905);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_MDNSDISCOVERYCONFIGURATION_DATATYPEVERSION = @as(c_int, 12906);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_MDNSDISCOVERYCONFIGURATION_DICTIONARYFRAGMENT = @as(c_int, 12907);
pub const UA_NS0ID_MAXBYTESTRINGLENGTH = @as(c_int, 12908);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_MAXBYTESTRINGLENGTH = @as(c_int, 12909);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_MAXBYTESTRINGLENGTH = @as(c_int, 12910);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_MAXBYTESTRINGLENGTH = @as(c_int, 12911);
pub const UA_NS0ID_CONDITIONTYPE_CONDITIONREFRESH2 = @as(c_int, 12912);
pub const UA_NS0ID_CONDITIONTYPE_CONDITIONREFRESH2_INPUTARGUMENTS = @as(c_int, 12913);
pub const UA_NS0ID_CONDITIONREFRESH2METHODTYPE = @as(c_int, 12914);
pub const UA_NS0ID_CONDITIONREFRESH2METHODTYPE_INPUTARGUMENTS = @as(c_int, 12915);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_CONDITIONREFRESH2 = @as(c_int, 12916);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_CONDITIONREFRESH2_INPUTARGUMENTS = @as(c_int, 12917);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_CONDITIONREFRESH2 = @as(c_int, 12918);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_CONDITIONREFRESH2_INPUTARGUMENTS = @as(c_int, 12919);
pub const UA_NS0ID_ALARMCONDITIONTYPE_CONDITIONREFRESH2 = @as(c_int, 12984);
pub const UA_NS0ID_ALARMCONDITIONTYPE_CONDITIONREFRESH2_INPUTARGUMENTS = @as(c_int, 12985);
pub const UA_NS0ID_LIMITALARMTYPE_CONDITIONREFRESH2 = @as(c_int, 12986);
pub const UA_NS0ID_LIMITALARMTYPE_CONDITIONREFRESH2_INPUTARGUMENTS = @as(c_int, 12987);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_CONDITIONREFRESH2 = @as(c_int, 12988);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_CONDITIONREFRESH2_INPUTARGUMENTS = @as(c_int, 12989);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_CONDITIONREFRESH2 = @as(c_int, 12990);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_CONDITIONREFRESH2_INPUTARGUMENTS = @as(c_int, 12991);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_CONDITIONREFRESH2 = @as(c_int, 12992);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_CONDITIONREFRESH2_INPUTARGUMENTS = @as(c_int, 12993);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_CONDITIONREFRESH2 = @as(c_int, 12994);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_CONDITIONREFRESH2_INPUTARGUMENTS = @as(c_int, 12995);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_CONDITIONREFRESH2 = @as(c_int, 12996);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_CONDITIONREFRESH2_INPUTARGUMENTS = @as(c_int, 12997);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_CONDITIONREFRESH2 = @as(c_int, 12998);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_CONDITIONREFRESH2_INPUTARGUMENTS = @as(c_int, 12999);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_CONDITIONREFRESH2 = @as(c_int, 13000);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_CONDITIONREFRESH2_INPUTARGUMENTS = @as(c_int, 13001);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_CONDITIONREFRESH2 = @as(c_int, 13002);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_CONDITIONREFRESH2_INPUTARGUMENTS = @as(c_int, 13003);
pub const UA_NS0ID_DISCRETEALARMTYPE_CONDITIONREFRESH2 = @as(c_int, 13004);
pub const UA_NS0ID_DISCRETEALARMTYPE_CONDITIONREFRESH2_INPUTARGUMENTS = @as(c_int, 13005);
pub const UA_NS0ID_OFFNORMALALARMTYPE_CONDITIONREFRESH2 = @as(c_int, 13006);
pub const UA_NS0ID_OFFNORMALALARMTYPE_CONDITIONREFRESH2_INPUTARGUMENTS = @as(c_int, 13007);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_CONDITIONREFRESH2 = @as(c_int, 13008);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_CONDITIONREFRESH2_INPUTARGUMENTS = @as(c_int, 13009);
pub const UA_NS0ID_TRIPALARMTYPE_CONDITIONREFRESH2 = @as(c_int, 13010);
pub const UA_NS0ID_TRIPALARMTYPE_CONDITIONREFRESH2_INPUTARGUMENTS = @as(c_int, 13011);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE = @as(c_int, 13225);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_EVENTID = @as(c_int, 13226);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_EVENTTYPE = @as(c_int, 13227);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SOURCENODE = @as(c_int, 13228);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SOURCENAME = @as(c_int, 13229);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_TIME = @as(c_int, 13230);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_RECEIVETIME = @as(c_int, 13231);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_LOCALTIME = @as(c_int, 13232);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_MESSAGE = @as(c_int, 13233);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SEVERITY = @as(c_int, 13234);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_CONDITIONCLASSID = @as(c_int, 13235);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_CONDITIONCLASSNAME = @as(c_int, 13236);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_CONDITIONNAME = @as(c_int, 13237);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_BRANCHID = @as(c_int, 13238);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_RETAIN = @as(c_int, 13239);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ENABLEDSTATE = @as(c_int, 13240);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ENABLEDSTATE_ID = @as(c_int, 13241);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ENABLEDSTATE_NAME = @as(c_int, 13242);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ENABLEDSTATE_NUMBER = @as(c_int, 13243);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 13244);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 13245);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 13246);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ENABLEDSTATE_TRUESTATE = @as(c_int, 13247);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ENABLEDSTATE_FALSESTATE = @as(c_int, 13248);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_QUALITY = @as(c_int, 13249);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_QUALITY_SOURCETIMESTAMP = @as(c_int, 13250);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_LASTSEVERITY = @as(c_int, 13251);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 13252);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_COMMENT = @as(c_int, 13253);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_COMMENT_SOURCETIMESTAMP = @as(c_int, 13254);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_CLIENTUSERID = @as(c_int, 13255);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_DISABLE = @as(c_int, 13256);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ENABLE = @as(c_int, 13257);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ADDCOMMENT = @as(c_int, 13258);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 13259);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_CONDITIONREFRESH = @as(c_int, 13260);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_CONDITIONREFRESH_INPUTARGUMENTS = @as(c_int, 13261);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_CONDITIONREFRESH2 = @as(c_int, 13262);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_CONDITIONREFRESH2_INPUTARGUMENTS = @as(c_int, 13263);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ACKEDSTATE = @as(c_int, 13264);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ACKEDSTATE_ID = @as(c_int, 13265);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ACKEDSTATE_NAME = @as(c_int, 13266);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ACKEDSTATE_NUMBER = @as(c_int, 13267);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 13268);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 13269);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 13270);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ACKEDSTATE_TRUESTATE = @as(c_int, 13271);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ACKEDSTATE_FALSESTATE = @as(c_int, 13272);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_CONFIRMEDSTATE = @as(c_int, 13273);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_CONFIRMEDSTATE_ID = @as(c_int, 13274);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_CONFIRMEDSTATE_NAME = @as(c_int, 13275);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_CONFIRMEDSTATE_NUMBER = @as(c_int, 13276);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 13277);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 13278);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 13279);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 13280);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 13281);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ACKNOWLEDGE = @as(c_int, 13282);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 13283);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_CONFIRM = @as(c_int, 13284);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_CONFIRM_INPUTARGUMENTS = @as(c_int, 13285);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ACTIVESTATE = @as(c_int, 13286);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ACTIVESTATE_ID = @as(c_int, 13287);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ACTIVESTATE_NAME = @as(c_int, 13288);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ACTIVESTATE_NUMBER = @as(c_int, 13289);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 13290);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 13291);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 13292);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ACTIVESTATE_TRUESTATE = @as(c_int, 13293);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ACTIVESTATE_FALSESTATE = @as(c_int, 13294);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_INPUTNODE = @as(c_int, 13295);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SUPPRESSEDSTATE = @as(c_int, 13296);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SUPPRESSEDSTATE_ID = @as(c_int, 13297);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SUPPRESSEDSTATE_NAME = @as(c_int, 13298);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 13299);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 13300);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 13301);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 13302);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 13303);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 13304);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SHELVINGSTATE = @as(c_int, 13305);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 13306);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 13307);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 13308);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 13309);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 13310);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 13311);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 13312);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 13313);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 13314);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 13315);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 13316);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 13317);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SHELVINGSTATE_UNSHELVE = @as(c_int, 13318);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 13319);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 13320);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 13321);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SUPPRESSEDORSHELVED = @as(c_int, 13322);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_MAXTIMESHELVED = @as(c_int, 13323);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_NORMALSTATE = @as(c_int, 13324);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_EXPIRATIONDATE = @as(c_int, 13325);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_CERTIFICATETYPE = @as(c_int, 13326);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_CERTIFICATE = @as(c_int, 13327);
pub const UA_NS0ID_FILETYPE_MIMETYPE = @as(c_int, 13341);
pub const UA_NS0ID_CREATEDIRECTORYMETHODTYPE = @as(c_int, 13342);
pub const UA_NS0ID_CREATEDIRECTORYMETHODTYPE_INPUTARGUMENTS = @as(c_int, 13343);
pub const UA_NS0ID_CREATEDIRECTORYMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 13344);
pub const UA_NS0ID_CREATEFILEMETHODTYPE = @as(c_int, 13345);
pub const UA_NS0ID_CREATEFILEMETHODTYPE_INPUTARGUMENTS = @as(c_int, 13346);
pub const UA_NS0ID_CREATEFILEMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 13347);
pub const UA_NS0ID_DELETEFILEMETHODTYPE = @as(c_int, 13348);
pub const UA_NS0ID_DELETEFILEMETHODTYPE_INPUTARGUMENTS = @as(c_int, 13349);
pub const UA_NS0ID_MOVEORCOPYMETHODTYPE = @as(c_int, 13350);
pub const UA_NS0ID_MOVEORCOPYMETHODTYPE_INPUTARGUMENTS = @as(c_int, 13351);
pub const UA_NS0ID_MOVEORCOPYMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 13352);
pub const UA_NS0ID_FILEDIRECTORYTYPE = @as(c_int, 13353);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILEDIRECTORYNAME_PLACEHOLDER = @as(c_int, 13354);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILEDIRECTORYNAME_PLACEHOLDER_CREATEDIRECTORY = @as(c_int, 13355);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILEDIRECTORYNAME_PLACEHOLDER_CREATEDIRECTORY_INPUTARGUMENTS = @as(c_int, 13356);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILEDIRECTORYNAME_PLACEHOLDER_CREATEDIRECTORY_OUTPUTARGUMENTS = @as(c_int, 13357);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILEDIRECTORYNAME_PLACEHOLDER_CREATEFILE = @as(c_int, 13358);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILEDIRECTORYNAME_PLACEHOLDER_CREATEFILE_INPUTARGUMENTS = @as(c_int, 13359);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILEDIRECTORYNAME_PLACEHOLDER_CREATEFILE_OUTPUTARGUMENTS = @as(c_int, 13360);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILEDIRECTORYNAME_PLACEHOLDER_MOVEORCOPY = @as(c_int, 13363);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILEDIRECTORYNAME_PLACEHOLDER_MOVEORCOPY_INPUTARGUMENTS = @as(c_int, 13364);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILEDIRECTORYNAME_PLACEHOLDER_MOVEORCOPY_OUTPUTARGUMENTS = @as(c_int, 13365);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILENAME_PLACEHOLDER = @as(c_int, 13366);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILENAME_PLACEHOLDER_SIZE = @as(c_int, 13367);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILENAME_PLACEHOLDER_WRITABLE = @as(c_int, 13368);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILENAME_PLACEHOLDER_USERWRITABLE = @as(c_int, 13369);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILENAME_PLACEHOLDER_OPENCOUNT = @as(c_int, 13370);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILENAME_PLACEHOLDER_MIMETYPE = @as(c_int, 13371);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILENAME_PLACEHOLDER_OPEN = @as(c_int, 13372);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILENAME_PLACEHOLDER_OPEN_INPUTARGUMENTS = @as(c_int, 13373);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILENAME_PLACEHOLDER_OPEN_OUTPUTARGUMENTS = @as(c_int, 13374);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILENAME_PLACEHOLDER_CLOSE = @as(c_int, 13375);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILENAME_PLACEHOLDER_CLOSE_INPUTARGUMENTS = @as(c_int, 13376);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILENAME_PLACEHOLDER_READ = @as(c_int, 13377);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILENAME_PLACEHOLDER_READ_INPUTARGUMENTS = @as(c_int, 13378);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILENAME_PLACEHOLDER_READ_OUTPUTARGUMENTS = @as(c_int, 13379);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILENAME_PLACEHOLDER_WRITE = @as(c_int, 13380);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILENAME_PLACEHOLDER_WRITE_INPUTARGUMENTS = @as(c_int, 13381);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILENAME_PLACEHOLDER_GETPOSITION = @as(c_int, 13382);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILENAME_PLACEHOLDER_GETPOSITION_INPUTARGUMENTS = @as(c_int, 13383);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILENAME_PLACEHOLDER_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 13384);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILENAME_PLACEHOLDER_SETPOSITION = @as(c_int, 13385);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILENAME_PLACEHOLDER_SETPOSITION_INPUTARGUMENTS = @as(c_int, 13386);
pub const UA_NS0ID_FILEDIRECTORYTYPE_CREATEDIRECTORY = @as(c_int, 13387);
pub const UA_NS0ID_FILEDIRECTORYTYPE_CREATEDIRECTORY_INPUTARGUMENTS = @as(c_int, 13388);
pub const UA_NS0ID_FILEDIRECTORYTYPE_CREATEDIRECTORY_OUTPUTARGUMENTS = @as(c_int, 13389);
pub const UA_NS0ID_FILEDIRECTORYTYPE_CREATEFILE = @as(c_int, 13390);
pub const UA_NS0ID_FILEDIRECTORYTYPE_CREATEFILE_INPUTARGUMENTS = @as(c_int, 13391);
pub const UA_NS0ID_FILEDIRECTORYTYPE_CREATEFILE_OUTPUTARGUMENTS = @as(c_int, 13392);
pub const UA_NS0ID_FILEDIRECTORYTYPE_DELETEFILESYSTEMOBJECT = @as(c_int, 13393);
pub const UA_NS0ID_FILEDIRECTORYTYPE_DELETEFILESYSTEMOBJECT_INPUTARGUMENTS = @as(c_int, 13394);
pub const UA_NS0ID_FILEDIRECTORYTYPE_MOVEORCOPY = @as(c_int, 13395);
pub const UA_NS0ID_FILEDIRECTORYTYPE_MOVEORCOPY_INPUTARGUMENTS = @as(c_int, 13396);
pub const UA_NS0ID_FILEDIRECTORYTYPE_MOVEORCOPY_OUTPUTARGUMENTS = @as(c_int, 13397);
pub const UA_NS0ID_ADDRESSSPACEFILETYPE_MIMETYPE = @as(c_int, 13398);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEFILE_MIMETYPE = @as(c_int, 13399);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEFILE_MIMETYPE = @as(c_int, 13400);
pub const UA_NS0ID_TRUSTLISTTYPE_MIMETYPE = @as(c_int, 13403);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST = @as(c_int, 13599);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_SIZE = @as(c_int, 13600);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_WRITABLE = @as(c_int, 13601);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_USERWRITABLE = @as(c_int, 13602);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_OPENCOUNT = @as(c_int, 13603);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_MIMETYPE = @as(c_int, 13604);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_OPEN = @as(c_int, 13605);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_OPEN_INPUTARGUMENTS = @as(c_int, 13606);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_OPEN_OUTPUTARGUMENTS = @as(c_int, 13607);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_CLOSE = @as(c_int, 13608);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_CLOSE_INPUTARGUMENTS = @as(c_int, 13609);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_READ = @as(c_int, 13610);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_READ_INPUTARGUMENTS = @as(c_int, 13611);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_READ_OUTPUTARGUMENTS = @as(c_int, 13612);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_WRITE = @as(c_int, 13613);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_WRITE_INPUTARGUMENTS = @as(c_int, 13614);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_GETPOSITION = @as(c_int, 13615);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_GETPOSITION_INPUTARGUMENTS = @as(c_int, 13616);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 13617);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_SETPOSITION = @as(c_int, 13618);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_SETPOSITION_INPUTARGUMENTS = @as(c_int, 13619);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_LASTUPDATETIME = @as(c_int, 13620);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_OPENWITHMASKS = @as(c_int, 13621);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_OPENWITHMASKS_INPUTARGUMENTS = @as(c_int, 13622);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_OPENWITHMASKS_OUTPUTARGUMENTS = @as(c_int, 13623);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_CLOSEANDUPDATE = @as(c_int, 13624);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_CLOSEANDUPDATE_INPUTARGUMENTS = @as(c_int, 13625);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_CLOSEANDUPDATE_OUTPUTARGUMENTS = @as(c_int, 13626);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_ADDCERTIFICATE = @as(c_int, 13627);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_ADDCERTIFICATE_INPUTARGUMENTS = @as(c_int, 13628);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_REMOVECERTIFICATE = @as(c_int, 13629);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_REMOVECERTIFICATE_INPUTARGUMENTS = @as(c_int, 13630);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATETYPES = @as(c_int, 13631);
pub const UA_NS0ID_CERTIFICATEUPDATEDAUDITEVENTTYPE_CERTIFICATEGROUP = @as(c_int, 13735);
pub const UA_NS0ID_CERTIFICATEUPDATEDAUDITEVENTTYPE_CERTIFICATETYPE = @as(c_int, 13736);
pub const UA_NS0ID_SERVERCONFIGURATION_UPDATECERTIFICATE = @as(c_int, 13737);
pub const UA_NS0ID_SERVERCONFIGURATION_UPDATECERTIFICATE_INPUTARGUMENTS = @as(c_int, 13738);
pub const UA_NS0ID_SERVERCONFIGURATION_UPDATECERTIFICATE_OUTPUTARGUMENTS = @as(c_int, 13739);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE = @as(c_int, 13813);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP = @as(c_int, 13814);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST = @as(c_int, 13815);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_SIZE = @as(c_int, 13816);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_WRITABLE = @as(c_int, 13817);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_USERWRITABLE = @as(c_int, 13818);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPENCOUNT = @as(c_int, 13819);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_MIMETYPE = @as(c_int, 13820);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPEN = @as(c_int, 13821);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPEN_INPUTARGUMENTS = @as(c_int, 13822);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPEN_OUTPUTARGUMENTS = @as(c_int, 13823);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSE = @as(c_int, 13824);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSE_INPUTARGUMENTS = @as(c_int, 13825);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_READ = @as(c_int, 13826);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_READ_INPUTARGUMENTS = @as(c_int, 13827);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_READ_OUTPUTARGUMENTS = @as(c_int, 13828);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_WRITE = @as(c_int, 13829);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_WRITE_INPUTARGUMENTS = @as(c_int, 13830);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_GETPOSITION = @as(c_int, 13831);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_GETPOSITION_INPUTARGUMENTS = @as(c_int, 13832);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 13833);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_SETPOSITION = @as(c_int, 13834);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_SETPOSITION_INPUTARGUMENTS = @as(c_int, 13835);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_LASTUPDATETIME = @as(c_int, 13836);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPENWITHMASKS = @as(c_int, 13837);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPENWITHMASKS_INPUTARGUMENTS = @as(c_int, 13838);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPENWITHMASKS_OUTPUTARGUMENTS = @as(c_int, 13839);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSEANDUPDATE = @as(c_int, 13840);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSEANDUPDATE_INPUTARGUMENTS = @as(c_int, 13841);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSEANDUPDATE_OUTPUTARGUMENTS = @as(c_int, 13842);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_ADDCERTIFICATE = @as(c_int, 13843);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_ADDCERTIFICATE_INPUTARGUMENTS = @as(c_int, 13844);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_REMOVECERTIFICATE = @as(c_int, 13845);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_REMOVECERTIFICATE_INPUTARGUMENTS = @as(c_int, 13846);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATETYPES = @as(c_int, 13847);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP = @as(c_int, 13848);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST = @as(c_int, 13849);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_SIZE = @as(c_int, 13850);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_WRITABLE = @as(c_int, 13851);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_USERWRITABLE = @as(c_int, 13852);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_OPENCOUNT = @as(c_int, 13853);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_MIMETYPE = @as(c_int, 13854);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_OPEN = @as(c_int, 13855);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_OPEN_INPUTARGUMENTS = @as(c_int, 13856);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_OPEN_OUTPUTARGUMENTS = @as(c_int, 13857);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSE = @as(c_int, 13858);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSE_INPUTARGUMENTS = @as(c_int, 13859);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_READ = @as(c_int, 13860);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_READ_INPUTARGUMENTS = @as(c_int, 13861);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_READ_OUTPUTARGUMENTS = @as(c_int, 13862);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_WRITE = @as(c_int, 13863);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_WRITE_INPUTARGUMENTS = @as(c_int, 13864);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_GETPOSITION = @as(c_int, 13865);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_GETPOSITION_INPUTARGUMENTS = @as(c_int, 13866);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 13867);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_SETPOSITION = @as(c_int, 13868);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_SETPOSITION_INPUTARGUMENTS = @as(c_int, 13869);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_LASTUPDATETIME = @as(c_int, 13870);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_OPENWITHMASKS = @as(c_int, 13871);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_OPENWITHMASKS_INPUTARGUMENTS = @as(c_int, 13872);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_OPENWITHMASKS_OUTPUTARGUMENTS = @as(c_int, 13873);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSEANDUPDATE = @as(c_int, 13874);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSEANDUPDATE_INPUTARGUMENTS = @as(c_int, 13875);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSEANDUPDATE_OUTPUTARGUMENTS = @as(c_int, 13876);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_ADDCERTIFICATE = @as(c_int, 13877);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_ADDCERTIFICATE_INPUTARGUMENTS = @as(c_int, 13878);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_REMOVECERTIFICATE = @as(c_int, 13879);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_REMOVECERTIFICATE_INPUTARGUMENTS = @as(c_int, 13880);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATETYPES = @as(c_int, 13881);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP = @as(c_int, 13882);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST = @as(c_int, 13883);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_SIZE = @as(c_int, 13884);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_WRITABLE = @as(c_int, 13885);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_USERWRITABLE = @as(c_int, 13886);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPENCOUNT = @as(c_int, 13887);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_MIMETYPE = @as(c_int, 13888);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPEN = @as(c_int, 13889);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPEN_INPUTARGUMENTS = @as(c_int, 13890);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPEN_OUTPUTARGUMENTS = @as(c_int, 13891);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSE = @as(c_int, 13892);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSE_INPUTARGUMENTS = @as(c_int, 13893);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_READ = @as(c_int, 13894);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_READ_INPUTARGUMENTS = @as(c_int, 13895);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_READ_OUTPUTARGUMENTS = @as(c_int, 13896);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_WRITE = @as(c_int, 13897);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_WRITE_INPUTARGUMENTS = @as(c_int, 13898);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_GETPOSITION = @as(c_int, 13899);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_GETPOSITION_INPUTARGUMENTS = @as(c_int, 13900);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 13901);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_SETPOSITION = @as(c_int, 13902);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_SETPOSITION_INPUTARGUMENTS = @as(c_int, 13903);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_LASTUPDATETIME = @as(c_int, 13904);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPENWITHMASKS = @as(c_int, 13905);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPENWITHMASKS_INPUTARGUMENTS = @as(c_int, 13906);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPENWITHMASKS_OUTPUTARGUMENTS = @as(c_int, 13907);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSEANDUPDATE = @as(c_int, 13908);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSEANDUPDATE_INPUTARGUMENTS = @as(c_int, 13909);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSEANDUPDATE_OUTPUTARGUMENTS = @as(c_int, 13910);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_ADDCERTIFICATE = @as(c_int, 13911);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_ADDCERTIFICATE_INPUTARGUMENTS = @as(c_int, 13912);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_REMOVECERTIFICATE = @as(c_int, 13913);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_REMOVECERTIFICATE_INPUTARGUMENTS = @as(c_int, 13914);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATETYPES = @as(c_int, 13915);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER = @as(c_int, 13916);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST = @as(c_int, 13917);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_SIZE = @as(c_int, 13918);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_WRITABLE = @as(c_int, 13919);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_USERWRITABLE = @as(c_int, 13920);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_OPENCOUNT = @as(c_int, 13921);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_MIMETYPE = @as(c_int, 13922);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_OPEN = @as(c_int, 13923);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_OPEN_INPUTARGUMENTS = @as(c_int, 13924);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_OPEN_OUTPUTARGUMENTS = @as(c_int, 13925);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_CLOSE = @as(c_int, 13926);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_CLOSE_INPUTARGUMENTS = @as(c_int, 13927);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_READ = @as(c_int, 13928);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_READ_INPUTARGUMENTS = @as(c_int, 13929);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_READ_OUTPUTARGUMENTS = @as(c_int, 13930);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_WRITE = @as(c_int, 13931);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_WRITE_INPUTARGUMENTS = @as(c_int, 13932);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_GETPOSITION = @as(c_int, 13933);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_GETPOSITION_INPUTARGUMENTS = @as(c_int, 13934);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 13935);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_SETPOSITION = @as(c_int, 13936);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_SETPOSITION_INPUTARGUMENTS = @as(c_int, 13937);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_LASTUPDATETIME = @as(c_int, 13938);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_OPENWITHMASKS = @as(c_int, 13939);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_OPENWITHMASKS_INPUTARGUMENTS = @as(c_int, 13940);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_OPENWITHMASKS_OUTPUTARGUMENTS = @as(c_int, 13941);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_CLOSEANDUPDATE = @as(c_int, 13942);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_CLOSEANDUPDATE_INPUTARGUMENTS = @as(c_int, 13943);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_CLOSEANDUPDATE_OUTPUTARGUMENTS = @as(c_int, 13944);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_ADDCERTIFICATE = @as(c_int, 13945);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_ADDCERTIFICATE_INPUTARGUMENTS = @as(c_int, 13946);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_REMOVECERTIFICATE = @as(c_int, 13947);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_REMOVECERTIFICATE_INPUTARGUMENTS = @as(c_int, 13948);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATETYPES = @as(c_int, 13949);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS = @as(c_int, 13950);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP = @as(c_int, 13951);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST = @as(c_int, 13952);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_SIZE = @as(c_int, 13953);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_WRITABLE = @as(c_int, 13954);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_USERWRITABLE = @as(c_int, 13955);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPENCOUNT = @as(c_int, 13956);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_MIMETYPE = @as(c_int, 13957);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPEN = @as(c_int, 13958);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPEN_INPUTARGUMENTS = @as(c_int, 13959);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPEN_OUTPUTARGUMENTS = @as(c_int, 13960);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSE = @as(c_int, 13961);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSE_INPUTARGUMENTS = @as(c_int, 13962);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_READ = @as(c_int, 13963);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_READ_INPUTARGUMENTS = @as(c_int, 13964);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_READ_OUTPUTARGUMENTS = @as(c_int, 13965);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_WRITE = @as(c_int, 13966);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_WRITE_INPUTARGUMENTS = @as(c_int, 13967);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_GETPOSITION = @as(c_int, 13968);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_GETPOSITION_INPUTARGUMENTS = @as(c_int, 13969);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 13970);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_SETPOSITION = @as(c_int, 13971);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_SETPOSITION_INPUTARGUMENTS = @as(c_int, 13972);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_LASTUPDATETIME = @as(c_int, 13973);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPENWITHMASKS = @as(c_int, 13974);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPENWITHMASKS_INPUTARGUMENTS = @as(c_int, 13975);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPENWITHMASKS_OUTPUTARGUMENTS = @as(c_int, 13976);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSEANDUPDATE = @as(c_int, 13977);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSEANDUPDATE_INPUTARGUMENTS = @as(c_int, 13978);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSEANDUPDATE_OUTPUTARGUMENTS = @as(c_int, 13979);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_ADDCERTIFICATE = @as(c_int, 13980);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_ADDCERTIFICATE_INPUTARGUMENTS = @as(c_int, 13981);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_REMOVECERTIFICATE = @as(c_int, 13982);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_REMOVECERTIFICATE_INPUTARGUMENTS = @as(c_int, 13983);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATETYPES = @as(c_int, 13984);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP = @as(c_int, 13985);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST = @as(c_int, 13986);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_SIZE = @as(c_int, 13987);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_WRITABLE = @as(c_int, 13988);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_USERWRITABLE = @as(c_int, 13989);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPENCOUNT = @as(c_int, 13990);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_MIMETYPE = @as(c_int, 13991);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPEN = @as(c_int, 13992);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPEN_INPUTARGUMENTS = @as(c_int, 13993);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPEN_OUTPUTARGUMENTS = @as(c_int, 13994);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSE = @as(c_int, 13995);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSE_INPUTARGUMENTS = @as(c_int, 13996);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_READ = @as(c_int, 13997);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_READ_INPUTARGUMENTS = @as(c_int, 13998);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_READ_OUTPUTARGUMENTS = @as(c_int, 13999);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_WRITE = @as(c_int, 14000);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_WRITE_INPUTARGUMENTS = @as(c_int, 14001);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_GETPOSITION = @as(c_int, 14002);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_GETPOSITION_INPUTARGUMENTS = @as(c_int, 14003);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 14004);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_SETPOSITION = @as(c_int, 14005);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_SETPOSITION_INPUTARGUMENTS = @as(c_int, 14006);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_LASTUPDATETIME = @as(c_int, 14007);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPENWITHMASKS = @as(c_int, 14008);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPENWITHMASKS_INPUTARGUMENTS = @as(c_int, 14009);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPENWITHMASKS_OUTPUTARGUMENTS = @as(c_int, 14010);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSEANDUPDATE = @as(c_int, 14011);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSEANDUPDATE_INPUTARGUMENTS = @as(c_int, 14012);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSEANDUPDATE_OUTPUTARGUMENTS = @as(c_int, 14013);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_ADDCERTIFICATE = @as(c_int, 14014);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_ADDCERTIFICATE_INPUTARGUMENTS = @as(c_int, 14015);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_REMOVECERTIFICATE = @as(c_int, 14016);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_REMOVECERTIFICATE_INPUTARGUMENTS = @as(c_int, 14017);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATETYPES = @as(c_int, 14018);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP = @as(c_int, 14019);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST = @as(c_int, 14020);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_SIZE = @as(c_int, 14021);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_WRITABLE = @as(c_int, 14022);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_USERWRITABLE = @as(c_int, 14023);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPENCOUNT = @as(c_int, 14024);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_MIMETYPE = @as(c_int, 14025);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPEN = @as(c_int, 14026);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPEN_INPUTARGUMENTS = @as(c_int, 14027);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPEN_OUTPUTARGUMENTS = @as(c_int, 14028);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSE = @as(c_int, 14029);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSE_INPUTARGUMENTS = @as(c_int, 14030);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_READ = @as(c_int, 14031);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_READ_INPUTARGUMENTS = @as(c_int, 14032);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_READ_OUTPUTARGUMENTS = @as(c_int, 14033);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_WRITE = @as(c_int, 14034);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_WRITE_INPUTARGUMENTS = @as(c_int, 14035);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_GETPOSITION = @as(c_int, 14036);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_GETPOSITION_INPUTARGUMENTS = @as(c_int, 14037);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 14038);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_SETPOSITION = @as(c_int, 14039);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_SETPOSITION_INPUTARGUMENTS = @as(c_int, 14040);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_LASTUPDATETIME = @as(c_int, 14041);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPENWITHMASKS = @as(c_int, 14042);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPENWITHMASKS_INPUTARGUMENTS = @as(c_int, 14043);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPENWITHMASKS_OUTPUTARGUMENTS = @as(c_int, 14044);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSEANDUPDATE = @as(c_int, 14045);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSEANDUPDATE_INPUTARGUMENTS = @as(c_int, 14046);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSEANDUPDATE_OUTPUTARGUMENTS = @as(c_int, 14047);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_ADDCERTIFICATE = @as(c_int, 14048);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_ADDCERTIFICATE_INPUTARGUMENTS = @as(c_int, 14049);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_REMOVECERTIFICATE = @as(c_int, 14050);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_REMOVECERTIFICATE_INPUTARGUMENTS = @as(c_int, 14051);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATETYPES = @as(c_int, 14052);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS = @as(c_int, 14053);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP = @as(c_int, 14088);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST = @as(c_int, 14089);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_SIZE = @as(c_int, 14090);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_WRITABLE = @as(c_int, 14091);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_USERWRITABLE = @as(c_int, 14092);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPENCOUNT = @as(c_int, 14093);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_MIMETYPE = @as(c_int, 14094);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPEN = @as(c_int, 14095);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPEN_INPUTARGUMENTS = @as(c_int, 14096);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPEN_OUTPUTARGUMENTS = @as(c_int, 14097);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSE = @as(c_int, 14098);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSE_INPUTARGUMENTS = @as(c_int, 14099);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_READ = @as(c_int, 14100);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_READ_INPUTARGUMENTS = @as(c_int, 14101);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_READ_OUTPUTARGUMENTS = @as(c_int, 14102);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_WRITE = @as(c_int, 14103);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_WRITE_INPUTARGUMENTS = @as(c_int, 14104);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_GETPOSITION = @as(c_int, 14105);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_GETPOSITION_INPUTARGUMENTS = @as(c_int, 14106);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 14107);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_SETPOSITION = @as(c_int, 14108);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_SETPOSITION_INPUTARGUMENTS = @as(c_int, 14109);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_LASTUPDATETIME = @as(c_int, 14110);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPENWITHMASKS = @as(c_int, 14111);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPENWITHMASKS_INPUTARGUMENTS = @as(c_int, 14112);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPENWITHMASKS_OUTPUTARGUMENTS = @as(c_int, 14113);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSEANDUPDATE = @as(c_int, 14114);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSEANDUPDATE_INPUTARGUMENTS = @as(c_int, 14115);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSEANDUPDATE_OUTPUTARGUMENTS = @as(c_int, 14116);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_ADDCERTIFICATE = @as(c_int, 14117);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_ADDCERTIFICATE_INPUTARGUMENTS = @as(c_int, 14118);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_REMOVECERTIFICATE = @as(c_int, 14119);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_REMOVECERTIFICATE_INPUTARGUMENTS = @as(c_int, 14120);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATETYPES = @as(c_int, 14121);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP = @as(c_int, 14122);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST = @as(c_int, 14123);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_SIZE = @as(c_int, 14124);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_WRITABLE = @as(c_int, 14125);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_USERWRITABLE = @as(c_int, 14126);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPENCOUNT = @as(c_int, 14127);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_MIMETYPE = @as(c_int, 14128);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPEN = @as(c_int, 14129);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPEN_INPUTARGUMENTS = @as(c_int, 14130);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPEN_OUTPUTARGUMENTS = @as(c_int, 14131);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSE = @as(c_int, 14132);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSE_INPUTARGUMENTS = @as(c_int, 14133);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_READ = @as(c_int, 14134);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_READ_INPUTARGUMENTS = @as(c_int, 14135);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_READ_OUTPUTARGUMENTS = @as(c_int, 14136);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_WRITE = @as(c_int, 14137);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_WRITE_INPUTARGUMENTS = @as(c_int, 14138);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_GETPOSITION = @as(c_int, 14139);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_GETPOSITION_INPUTARGUMENTS = @as(c_int, 14140);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 14141);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_SETPOSITION = @as(c_int, 14142);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_SETPOSITION_INPUTARGUMENTS = @as(c_int, 14143);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_LASTUPDATETIME = @as(c_int, 14144);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPENWITHMASKS = @as(c_int, 14145);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPENWITHMASKS_INPUTARGUMENTS = @as(c_int, 14146);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPENWITHMASKS_OUTPUTARGUMENTS = @as(c_int, 14147);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSEANDUPDATE = @as(c_int, 14148);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSEANDUPDATE_INPUTARGUMENTS = @as(c_int, 14149);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSEANDUPDATE_OUTPUTARGUMENTS = @as(c_int, 14150);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_ADDCERTIFICATE = @as(c_int, 14151);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_ADDCERTIFICATE_INPUTARGUMENTS = @as(c_int, 14152);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_REMOVECERTIFICATE = @as(c_int, 14153);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_REMOVECERTIFICATE_INPUTARGUMENTS = @as(c_int, 14154);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATETYPES = @as(c_int, 14155);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP = @as(c_int, 14156);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_WRITABLE = @as(c_int, 14157);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_USERWRITABLE = @as(c_int, 14158);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_MIMETYPE = @as(c_int, 14159);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSEANDUPDATE_INPUTARGUMENTS = @as(c_int, 14160);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATETYPES = @as(c_int, 14161);
pub const UA_NS0ID_REMOVECONNECTIONMETHODTYPE = @as(c_int, 14183);
pub const UA_NS0ID_REMOVECONNECTIONMETHODTYPE_INPUTARGUMENTS = @as(c_int, 14184);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE = @as(c_int, 14209);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_ADDRESS = @as(c_int, 14221);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_REMOVEGROUP = @as(c_int, 14225);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_REMOVEGROUP_INPUTARGUMENTS = @as(c_int, 14226);
pub const UA_NS0ID_PUBSUBGROUPTYPE = @as(c_int, 14232);
pub const UA_NS0ID_PUBLISHEDVARIABLEDATATYPE = @as(c_int, 14273);
pub const UA_NS0ID_PUBLISHEDVARIABLEDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 14319);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBLISHEDVARIABLEDATATYPE = @as(c_int, 14320);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBLISHEDVARIABLEDATATYPE_DATATYPEVERSION = @as(c_int, 14321);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBLISHEDVARIABLEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 14322);
pub const UA_NS0ID_PUBLISHEDVARIABLEDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 14323);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBLISHEDVARIABLEDATATYPE = @as(c_int, 14324);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBLISHEDVARIABLEDATATYPE_DATATYPEVERSION = @as(c_int, 14325);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBLISHEDVARIABLEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 14326);
pub const UA_NS0ID_AUDITCREATESESSIONEVENTTYPE_SESSIONID = @as(c_int, 14413);
pub const UA_NS0ID_AUDITURLMISMATCHEVENTTYPE_SESSIONID = @as(c_int, 14414);
pub const UA_NS0ID_SERVER_SERVERREDUNDANCY_SERVERNETWORKGROUPS = @as(c_int, 14415);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE = @as(c_int, 14416);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER = @as(c_int, 14417);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_PUBLISHERID = @as(c_int, 14418);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_STATUS = @as(c_int, 14419);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_STATUS_STATE = @as(c_int, 14420);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_STATUS_ENABLE = @as(c_int, 14421);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_STATUS_DISABLE = @as(c_int, 14422);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_ADDRESS = @as(c_int, 14423);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_REMOVEGROUP = @as(c_int, 14424);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_REMOVEGROUP_INPUTARGUMENTS = @as(c_int, 14425);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_REMOVECONNECTION = @as(c_int, 14432);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_REMOVECONNECTION_INPUTARGUMENTS = @as(c_int, 14433);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBLISHEDDATASETS = @as(c_int, 14434);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBLISHEDDATASETS_ADDPUBLISHEDDATAITEMS = @as(c_int, 14435);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBLISHEDDATASETS_ADDPUBLISHEDDATAITEMS_INPUTARGUMENTS = @as(c_int, 14436);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBLISHEDDATASETS_ADDPUBLISHEDDATAITEMS_OUTPUTARGUMENTS = @as(c_int, 14437);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBLISHEDDATASETS_ADDPUBLISHEDEVENTS = @as(c_int, 14438);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBLISHEDDATASETS_ADDPUBLISHEDEVENTS_INPUTARGUMENTS = @as(c_int, 14439);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBLISHEDDATASETS_ADDPUBLISHEDEVENTS_OUTPUTARGUMENTS = @as(c_int, 14440);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBLISHEDDATASETS_REMOVEPUBLISHEDDATASET = @as(c_int, 14441);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBLISHEDDATASETS_REMOVEPUBLISHEDDATASET_INPUTARGUMENTS = @as(c_int, 14442);
pub const UA_NS0ID_PUBLISHSUBSCRIBE = @as(c_int, 14443);
pub const UA_NS0ID_HASPUBSUBCONNECTION = @as(c_int, 14476);
pub const UA_NS0ID_DATASETFOLDERTYPE = @as(c_int, 14477);
pub const UA_NS0ID_DATASETFOLDERTYPE_DATASETFOLDERNAME_PLACEHOLDER = @as(c_int, 14478);
pub const UA_NS0ID_DATASETFOLDERTYPE_DATASETFOLDERNAME_PLACEHOLDER_ADDPUBLISHEDDATAITEMS = @as(c_int, 14479);
pub const UA_NS0ID_DATASETFOLDERTYPE_DATASETFOLDERNAME_PLACEHOLDER_ADDPUBLISHEDDATAITEMS_INPUTARGUMENTS = @as(c_int, 14480);
pub const UA_NS0ID_DATASETFOLDERTYPE_DATASETFOLDERNAME_PLACEHOLDER_ADDPUBLISHEDDATAITEMS_OUTPUTARGUMENTS = @as(c_int, 14481);
pub const UA_NS0ID_DATASETFOLDERTYPE_DATASETFOLDERNAME_PLACEHOLDER_ADDPUBLISHEDEVENTS = @as(c_int, 14482);
pub const UA_NS0ID_DATASETFOLDERTYPE_DATASETFOLDERNAME_PLACEHOLDER_ADDPUBLISHEDEVENTS_INPUTARGUMENTS = @as(c_int, 14483);
pub const UA_NS0ID_DATASETFOLDERTYPE_DATASETFOLDERNAME_PLACEHOLDER_ADDPUBLISHEDEVENTS_OUTPUTARGUMENTS = @as(c_int, 14484);
pub const UA_NS0ID_DATASETFOLDERTYPE_DATASETFOLDERNAME_PLACEHOLDER_REMOVEPUBLISHEDDATASET = @as(c_int, 14485);
pub const UA_NS0ID_DATASETFOLDERTYPE_DATASETFOLDERNAME_PLACEHOLDER_REMOVEPUBLISHEDDATASET_INPUTARGUMENTS = @as(c_int, 14486);
pub const UA_NS0ID_DATASETFOLDERTYPE_PUBLISHEDDATASETNAME_PLACEHOLDER = @as(c_int, 14487);
pub const UA_NS0ID_DATASETFOLDERTYPE_PUBLISHEDDATASETNAME_PLACEHOLDER_CONFIGURATIONVERSION = @as(c_int, 14489);
pub const UA_NS0ID_DATASETFOLDERTYPE_ADDPUBLISHEDDATAITEMS = @as(c_int, 14493);
pub const UA_NS0ID_DATASETFOLDERTYPE_ADDPUBLISHEDDATAITEMS_INPUTARGUMENTS = @as(c_int, 14494);
pub const UA_NS0ID_DATASETFOLDERTYPE_ADDPUBLISHEDDATAITEMS_OUTPUTARGUMENTS = @as(c_int, 14495);
pub const UA_NS0ID_DATASETFOLDERTYPE_ADDPUBLISHEDEVENTS = @as(c_int, 14496);
pub const UA_NS0ID_DATASETFOLDERTYPE_ADDPUBLISHEDEVENTS_INPUTARGUMENTS = @as(c_int, 14497);
pub const UA_NS0ID_DATASETFOLDERTYPE_ADDPUBLISHEDEVENTS_OUTPUTARGUMENTS = @as(c_int, 14498);
pub const UA_NS0ID_DATASETFOLDERTYPE_REMOVEPUBLISHEDDATASET = @as(c_int, 14499);
pub const UA_NS0ID_DATASETFOLDERTYPE_REMOVEPUBLISHEDDATASET_INPUTARGUMENTS = @as(c_int, 14500);
pub const UA_NS0ID_ADDPUBLISHEDDATAITEMSMETHODTYPE = @as(c_int, 14501);
pub const UA_NS0ID_ADDPUBLISHEDDATAITEMSMETHODTYPE_INPUTARGUMENTS = @as(c_int, 14502);
pub const UA_NS0ID_ADDPUBLISHEDDATAITEMSMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 14503);
pub const UA_NS0ID_ADDPUBLISHEDEVENTSMETHODTYPE = @as(c_int, 14504);
pub const UA_NS0ID_ADDPUBLISHEDEVENTSMETHODTYPE_INPUTARGUMENTS = @as(c_int, 14505);
pub const UA_NS0ID_ADDPUBLISHEDEVENTSMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 14506);
pub const UA_NS0ID_REMOVEPUBLISHEDDATASETMETHODTYPE = @as(c_int, 14507);
pub const UA_NS0ID_REMOVEPUBLISHEDDATASETMETHODTYPE_INPUTARGUMENTS = @as(c_int, 14508);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE = @as(c_int, 14509);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_CONFIGURATIONVERSION = @as(c_int, 14519);
pub const UA_NS0ID_DATASETMETADATATYPE = @as(c_int, 14523);
pub const UA_NS0ID_FIELDMETADATA = @as(c_int, 14524);
pub const UA_NS0ID_DATATYPEDESCRIPTION = @as(c_int, 14525);
pub const UA_NS0ID_STRUCTURETYPE_ENUMSTRINGS = @as(c_int, 14528);
pub const UA_NS0ID_KEYVALUEPAIR = @as(c_int, 14533);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE = @as(c_int, 14534);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_CONFIGURATIONVERSION = @as(c_int, 14544);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_PUBLISHEDDATA = @as(c_int, 14548);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_ADDVARIABLES = @as(c_int, 14555);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_ADDVARIABLES_INPUTARGUMENTS = @as(c_int, 14556);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_ADDVARIABLES_OUTPUTARGUMENTS = @as(c_int, 14557);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_REMOVEVARIABLES = @as(c_int, 14558);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_REMOVEVARIABLES_INPUTARGUMENTS = @as(c_int, 14559);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_REMOVEVARIABLES_OUTPUTARGUMENTS = @as(c_int, 14560);
pub const UA_NS0ID_PUBLISHEDDATAITEMSADDVARIABLESMETHODTYPE = @as(c_int, 14564);
pub const UA_NS0ID_PUBLISHEDDATAITEMSADDVARIABLESMETHODTYPE_INPUTARGUMENTS = @as(c_int, 14565);
pub const UA_NS0ID_PUBLISHEDDATAITEMSADDVARIABLESMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 14566);
pub const UA_NS0ID_PUBLISHEDDATAITEMSREMOVEVARIABLESMETHODTYPE = @as(c_int, 14567);
pub const UA_NS0ID_PUBLISHEDDATAITEMSREMOVEVARIABLESMETHODTYPE_INPUTARGUMENTS = @as(c_int, 14568);
pub const UA_NS0ID_PUBLISHEDDATAITEMSREMOVEVARIABLESMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 14569);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE = @as(c_int, 14572);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_CONFIGURATIONVERSION = @as(c_int, 14582);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_PUBSUBEVENTNOTIFIER = @as(c_int, 14586);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_SELECTEDFIELDS = @as(c_int, 14587);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_FILTER = @as(c_int, 14588);
pub const UA_NS0ID_CONFIGURATIONVERSIONDATATYPE = @as(c_int, 14593);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_PUBLISHERID = @as(c_int, 14595);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_STATUS = @as(c_int, 14600);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_STATUS_STATE = @as(c_int, 14601);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_STATUS_ENABLE = @as(c_int, 14602);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_STATUS_DISABLE = @as(c_int, 14603);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPEREMOVEGROUPMETHODTYPE = @as(c_int, 14604);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPEREMOVEGROUPMETHODTYPE_INPUTARGUMENTS = @as(c_int, 14605);
pub const UA_NS0ID_PUBSUBGROUPTYPEREMOVEWRITERMETHODTYPE = @as(c_int, 14623);
pub const UA_NS0ID_PUBSUBGROUPTYPEREMOVEWRITERMETHODTYPE_INPUTARGUMENTS = @as(c_int, 14624);
pub const UA_NS0ID_PUBSUBGROUPTYPEREMOVEREADERMETHODTYPE = @as(c_int, 14625);
pub const UA_NS0ID_PUBSUBGROUPTYPEREMOVEREADERMETHODTYPE_INPUTARGUMENTS = @as(c_int, 14626);
pub const UA_NS0ID_PUBSUBSTATUSTYPE = @as(c_int, 14643);
pub const UA_NS0ID_PUBSUBSTATUSTYPE_STATE = @as(c_int, 14644);
pub const UA_NS0ID_PUBSUBSTATUSTYPE_ENABLE = @as(c_int, 14645);
pub const UA_NS0ID_PUBSUBSTATUSTYPE_DISABLE = @as(c_int, 14646);
pub const UA_NS0ID_PUBSUBSTATE = @as(c_int, 14647);
pub const UA_NS0ID_PUBSUBSTATE_ENUMSTRINGS = @as(c_int, 14648);
pub const UA_NS0ID_FIELDTARGETDATATYPE = @as(c_int, 14744);
pub const UA_NS0ID_DATASETMETADATATYPE_ENCODING_DEFAULTXML = @as(c_int, 14794);
pub const UA_NS0ID_FIELDMETADATA_ENCODING_DEFAULTXML = @as(c_int, 14795);
pub const UA_NS0ID_DATATYPEDESCRIPTION_ENCODING_DEFAULTXML = @as(c_int, 14796);
pub const UA_NS0ID_DATATYPEDEFINITION_ENCODING_DEFAULTXML = @as(c_int, 14797);
pub const UA_NS0ID_STRUCTUREDEFINITION_ENCODING_DEFAULTXML = @as(c_int, 14798);
pub const UA_NS0ID_ENUMDEFINITION_ENCODING_DEFAULTXML = @as(c_int, 14799);
pub const UA_NS0ID_STRUCTUREFIELD_ENCODING_DEFAULTXML = @as(c_int, 14800);
pub const UA_NS0ID_ENUMFIELD_ENCODING_DEFAULTXML = @as(c_int, 14801);
pub const UA_NS0ID_KEYVALUEPAIR_ENCODING_DEFAULTXML = @as(c_int, 14802);
pub const UA_NS0ID_CONFIGURATIONVERSIONDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 14803);
pub const UA_NS0ID_FIELDTARGETDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 14804);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATASETMETADATATYPE = @as(c_int, 14805);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATASETMETADATATYPE_DATATYPEVERSION = @as(c_int, 14806);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATASETMETADATATYPE_DICTIONARYFRAGMENT = @as(c_int, 14807);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_FIELDMETADATA = @as(c_int, 14808);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_FIELDMETADATA_DATATYPEVERSION = @as(c_int, 14809);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_FIELDMETADATA_DICTIONARYFRAGMENT = @as(c_int, 14810);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATATYPEDESCRIPTION = @as(c_int, 14811);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATATYPEDESCRIPTION_DATATYPEVERSION = @as(c_int, 14812);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATATYPEDESCRIPTION_DICTIONARYFRAGMENT = @as(c_int, 14813);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ENUMFIELD = @as(c_int, 14826);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ENUMFIELD_DATATYPEVERSION = @as(c_int, 14827);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ENUMFIELD_DICTIONARYFRAGMENT = @as(c_int, 14828);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_KEYVALUEPAIR = @as(c_int, 14829);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_KEYVALUEPAIR_DATATYPEVERSION = @as(c_int, 14830);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_KEYVALUEPAIR_DICTIONARYFRAGMENT = @as(c_int, 14831);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_CONFIGURATIONVERSIONDATATYPE = @as(c_int, 14832);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_CONFIGURATIONVERSIONDATATYPE_DATATYPEVERSION = @as(c_int, 14833);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_CONFIGURATIONVERSIONDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 14834);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_FIELDTARGETDATATYPE = @as(c_int, 14835);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_FIELDTARGETDATATYPE_DATATYPEVERSION = @as(c_int, 14836);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_FIELDTARGETDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 14837);
pub const UA_NS0ID_FIELDMETADATA_ENCODING_DEFAULTBINARY = @as(c_int, 14839);
pub const UA_NS0ID_STRUCTUREFIELD_ENCODING_DEFAULTBINARY = @as(c_int, 14844);
pub const UA_NS0ID_ENUMFIELD_ENCODING_DEFAULTBINARY = @as(c_int, 14845);
pub const UA_NS0ID_KEYVALUEPAIR_ENCODING_DEFAULTBINARY = @as(c_int, 14846);
pub const UA_NS0ID_CONFIGURATIONVERSIONDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 14847);
pub const UA_NS0ID_FIELDTARGETDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 14848);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATASETMETADATATYPE = @as(c_int, 14849);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATASETMETADATATYPE_DATATYPEVERSION = @as(c_int, 14850);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATASETMETADATATYPE_DICTIONARYFRAGMENT = @as(c_int, 14851);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_FIELDMETADATA = @as(c_int, 14852);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_FIELDMETADATA_DATATYPEVERSION = @as(c_int, 14853);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_FIELDMETADATA_DICTIONARYFRAGMENT = @as(c_int, 14854);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATATYPEDESCRIPTION = @as(c_int, 14855);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATATYPEDESCRIPTION_DATATYPEVERSION = @as(c_int, 14856);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATATYPEDESCRIPTION_DICTIONARYFRAGMENT = @as(c_int, 14857);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ENUMFIELD = @as(c_int, 14870);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ENUMFIELD_DATATYPEVERSION = @as(c_int, 14871);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ENUMFIELD_DICTIONARYFRAGMENT = @as(c_int, 14872);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_KEYVALUEPAIR = @as(c_int, 14873);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_KEYVALUEPAIR_DATATYPEVERSION = @as(c_int, 14874);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_KEYVALUEPAIR_DICTIONARYFRAGMENT = @as(c_int, 14875);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_CONFIGURATIONVERSIONDATATYPE = @as(c_int, 14876);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_CONFIGURATIONVERSIONDATATYPE_DATATYPEVERSION = @as(c_int, 14877);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_CONFIGURATIONVERSIONDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 14878);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_FIELDTARGETDATATYPE_DATATYPEVERSION = @as(c_int, 14880);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_FIELDTARGETDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 14881);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_EXPIRATIONLIMIT = @as(c_int, 14900);
pub const UA_NS0ID_DATASETTOWRITER = @as(c_int, 14936);
pub const UA_NS0ID_DATATYPEDICTIONARYTYPE_DEPRECATED = @as(c_int, 15001);
pub const UA_NS0ID_MAXCHARACTERS = @as(c_int, 15002);
pub const UA_NS0ID_SERVERTYPE_URISVERSION = @as(c_int, 15003);
pub const UA_NS0ID_SERVER_URISVERSION = @as(c_int, 15004);
pub const UA_NS0ID_SIMPLETYPEDESCRIPTION = @as(c_int, 15005);
pub const UA_NS0ID_UABINARYFILEDATATYPE = @as(c_int, 15006);
pub const UA_NS0ID_BROKERCONNECTIONTRANSPORTDATATYPE = @as(c_int, 15007);
pub const UA_NS0ID_BROKERTRANSPORTQUALITYOFSERVICE = @as(c_int, 15008);
pub const UA_NS0ID_BROKERTRANSPORTQUALITYOFSERVICE_ENUMSTRINGS = @as(c_int, 15009);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_SECURITYGROUPNAME_PLACEHOLDER_KEYLIFETIME = @as(c_int, 15010);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_SECURITYGROUPNAME_PLACEHOLDER_SECURITYPOLICYURI = @as(c_int, 15011);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_SECURITYGROUPNAME_PLACEHOLDER_MAXFUTUREKEYCOUNT = @as(c_int, 15012);
pub const UA_NS0ID_AUDITCONDITIONRESETEVENTTYPE = @as(c_int, 15013);
pub const UA_NS0ID_AUDITCONDITIONRESETEVENTTYPE_EVENTID = @as(c_int, 15014);
pub const UA_NS0ID_AUDITCONDITIONRESETEVENTTYPE_EVENTTYPE = @as(c_int, 15015);
pub const UA_NS0ID_AUDITCONDITIONRESETEVENTTYPE_SOURCENODE = @as(c_int, 15016);
pub const UA_NS0ID_AUDITCONDITIONRESETEVENTTYPE_SOURCENAME = @as(c_int, 15017);
pub const UA_NS0ID_AUDITCONDITIONRESETEVENTTYPE_TIME = @as(c_int, 15018);
pub const UA_NS0ID_AUDITCONDITIONRESETEVENTTYPE_RECEIVETIME = @as(c_int, 15019);
pub const UA_NS0ID_AUDITCONDITIONRESETEVENTTYPE_LOCALTIME = @as(c_int, 15020);
pub const UA_NS0ID_AUDITCONDITIONRESETEVENTTYPE_MESSAGE = @as(c_int, 15021);
pub const UA_NS0ID_AUDITCONDITIONRESETEVENTTYPE_SEVERITY = @as(c_int, 15022);
pub const UA_NS0ID_AUDITCONDITIONRESETEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 15023);
pub const UA_NS0ID_AUDITCONDITIONRESETEVENTTYPE_STATUS = @as(c_int, 15024);
pub const UA_NS0ID_AUDITCONDITIONRESETEVENTTYPE_SERVERID = @as(c_int, 15025);
pub const UA_NS0ID_AUDITCONDITIONRESETEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 15026);
pub const UA_NS0ID_AUDITCONDITIONRESETEVENTTYPE_CLIENTUSERID = @as(c_int, 15027);
pub const UA_NS0ID_AUDITCONDITIONRESETEVENTTYPE_METHODID = @as(c_int, 15028);
pub const UA_NS0ID_AUDITCONDITIONRESETEVENTTYPE_INPUTARGUMENTS = @as(c_int, 15029);
pub const UA_NS0ID_PERMISSIONTYPE_OPTIONSETVALUES = @as(c_int, 15030);
pub const UA_NS0ID_ACCESSLEVELTYPE = @as(c_int, 15031);
pub const UA_NS0ID_ACCESSLEVELTYPE_OPTIONSETVALUES = @as(c_int, 15032);
pub const UA_NS0ID_EVENTNOTIFIERTYPE = @as(c_int, 15033);
pub const UA_NS0ID_EVENTNOTIFIERTYPE_OPTIONSETVALUES = @as(c_int, 15034);
pub const UA_NS0ID_ACCESSRESTRICTIONTYPE_OPTIONSETVALUES = @as(c_int, 15035);
pub const UA_NS0ID_ATTRIBUTEWRITEMASK_OPTIONSETVALUES = @as(c_int, 15036);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DEPRECATED = @as(c_int, 15037);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_PROGRAMDIAGNOSTIC_LASTMETHODINPUTVALUES = @as(c_int, 15038);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DEPRECATED = @as(c_int, 15039);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_PROGRAMDIAGNOSTIC_LASTMETHODOUTPUTVALUES = @as(c_int, 15040);
pub const UA_NS0ID_KEYVALUEPAIR_ENCODING_DEFAULTJSON = @as(c_int, 15041);
pub const UA_NS0ID_IDENTITYMAPPINGRULETYPE_ENCODING_DEFAULTJSON = @as(c_int, 15042);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_SECURITYGROUPNAME_PLACEHOLDER_MAXPASTKEYCOUNT = @as(c_int, 15043);
pub const UA_NS0ID_TRUSTLISTDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 15044);
pub const UA_NS0ID_DECIMALDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 15045);
pub const UA_NS0ID_SECURITYGROUPTYPE_KEYLIFETIME = @as(c_int, 15046);
pub const UA_NS0ID_SECURITYGROUPTYPE_SECURITYPOLICYURI = @as(c_int, 15047);
pub const UA_NS0ID_SECURITYGROUPTYPE_MAXFUTUREKEYCOUNT = @as(c_int, 15048);
pub const UA_NS0ID_CONFIGURATIONVERSIONDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 15049);
pub const UA_NS0ID_DATASETMETADATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 15050);
pub const UA_NS0ID_FIELDMETADATA_ENCODING_DEFAULTJSON = @as(c_int, 15051);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_MODIFYFIELDSELECTION = @as(c_int, 15052);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_MODIFYFIELDSELECTION_INPUTARGUMENTS = @as(c_int, 15053);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPEMODIFYFIELDSELECTIONMETHODTYPE = @as(c_int, 15054);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPEMODIFYFIELDSELECTIONMETHODTYPE_INPUTARGUMENTS = @as(c_int, 15055);
pub const UA_NS0ID_SECURITYGROUPTYPE_MAXPASTKEYCOUNT = @as(c_int, 15056);
pub const UA_NS0ID_DATATYPEDESCRIPTION_ENCODING_DEFAULTJSON = @as(c_int, 15057);
pub const UA_NS0ID_STRUCTUREDESCRIPTION_ENCODING_DEFAULTJSON = @as(c_int, 15058);
pub const UA_NS0ID_ENUMDESCRIPTION_ENCODING_DEFAULTJSON = @as(c_int, 15059);
pub const UA_NS0ID_PUBLISHEDVARIABLEDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 15060);
pub const UA_NS0ID_FIELDTARGETDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 15061);
pub const UA_NS0ID_ROLEPERMISSIONTYPE_ENCODING_DEFAULTJSON = @as(c_int, 15062);
pub const UA_NS0ID_DATATYPEDEFINITION_ENCODING_DEFAULTJSON = @as(c_int, 15063);
pub const UA_NS0ID_DATAGRAMCONNECTIONTRANSPORTTYPE = @as(c_int, 15064);
pub const UA_NS0ID_STRUCTUREFIELD_ENCODING_DEFAULTJSON = @as(c_int, 15065);
pub const UA_NS0ID_STRUCTUREDEFINITION_ENCODING_DEFAULTJSON = @as(c_int, 15066);
pub const UA_NS0ID_ENUMDEFINITION_ENCODING_DEFAULTJSON = @as(c_int, 15067);
pub const UA_NS0ID_NODE_ENCODING_DEFAULTJSON = @as(c_int, 15068);
pub const UA_NS0ID_INSTANCENODE_ENCODING_DEFAULTJSON = @as(c_int, 15069);
pub const UA_NS0ID_TYPENODE_ENCODING_DEFAULTJSON = @as(c_int, 15070);
pub const UA_NS0ID_OBJECTNODE_ENCODING_DEFAULTJSON = @as(c_int, 15071);
pub const UA_NS0ID_DATAGRAMCONNECTIONTRANSPORTTYPE_DISCOVERYADDRESS = @as(c_int, 15072);
pub const UA_NS0ID_OBJECTTYPENODE_ENCODING_DEFAULTJSON = @as(c_int, 15073);
pub const UA_NS0ID_VARIABLENODE_ENCODING_DEFAULTJSON = @as(c_int, 15074);
pub const UA_NS0ID_VARIABLETYPENODE_ENCODING_DEFAULTJSON = @as(c_int, 15075);
pub const UA_NS0ID_REFERENCETYPENODE_ENCODING_DEFAULTJSON = @as(c_int, 15076);
pub const UA_NS0ID_METHODNODE_ENCODING_DEFAULTJSON = @as(c_int, 15077);
pub const UA_NS0ID_VIEWNODE_ENCODING_DEFAULTJSON = @as(c_int, 15078);
pub const UA_NS0ID_DATATYPENODE_ENCODING_DEFAULTJSON = @as(c_int, 15079);
pub const UA_NS0ID_REFERENCENODE_ENCODING_DEFAULTJSON = @as(c_int, 15080);
pub const UA_NS0ID_ARGUMENT_ENCODING_DEFAULTJSON = @as(c_int, 15081);
pub const UA_NS0ID_ENUMVALUETYPE_ENCODING_DEFAULTJSON = @as(c_int, 15082);
pub const UA_NS0ID_ENUMFIELD_ENCODING_DEFAULTJSON = @as(c_int, 15083);
pub const UA_NS0ID_OPTIONSET_ENCODING_DEFAULTJSON = @as(c_int, 15084);
pub const UA_NS0ID_UNION_ENCODING_DEFAULTJSON = @as(c_int, 15085);
pub const UA_NS0ID_TIMEZONEDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 15086);
pub const UA_NS0ID_APPLICATIONDESCRIPTION_ENCODING_DEFAULTJSON = @as(c_int, 15087);
pub const UA_NS0ID_REQUESTHEADER_ENCODING_DEFAULTJSON = @as(c_int, 15088);
pub const UA_NS0ID_RESPONSEHEADER_ENCODING_DEFAULTJSON = @as(c_int, 15089);
pub const UA_NS0ID_SERVICEFAULT_ENCODING_DEFAULTJSON = @as(c_int, 15090);
pub const UA_NS0ID_SESSIONLESSINVOKEREQUESTTYPE_ENCODING_DEFAULTJSON = @as(c_int, 15091);
pub const UA_NS0ID_SESSIONLESSINVOKERESPONSETYPE_ENCODING_DEFAULTJSON = @as(c_int, 15092);
pub const UA_NS0ID_FINDSERVERSREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15093);
pub const UA_NS0ID_FINDSERVERSRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15094);
pub const UA_NS0ID_SERVERONNETWORK_ENCODING_DEFAULTJSON = @as(c_int, 15095);
pub const UA_NS0ID_FINDSERVERSONNETWORKREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15096);
pub const UA_NS0ID_FINDSERVERSONNETWORKRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15097);
pub const UA_NS0ID_USERTOKENPOLICY_ENCODING_DEFAULTJSON = @as(c_int, 15098);
pub const UA_NS0ID_ENDPOINTDESCRIPTION_ENCODING_DEFAULTJSON = @as(c_int, 15099);
pub const UA_NS0ID_GETENDPOINTSREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15100);
pub const UA_NS0ID_GETENDPOINTSRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15101);
pub const UA_NS0ID_REGISTEREDSERVER_ENCODING_DEFAULTJSON = @as(c_int, 15102);
pub const UA_NS0ID_REGISTERSERVERREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15103);
pub const UA_NS0ID_REGISTERSERVERRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15104);
pub const UA_NS0ID_DISCOVERYCONFIGURATION_ENCODING_DEFAULTJSON = @as(c_int, 15105);
pub const UA_NS0ID_MDNSDISCOVERYCONFIGURATION_ENCODING_DEFAULTJSON = @as(c_int, 15106);
pub const UA_NS0ID_REGISTERSERVER2REQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15107);
pub const UA_NS0ID_SUBSCRIBEDDATASETTYPE = @as(c_int, 15108);
pub const UA_NS0ID_CHOICESTATETYPE = @as(c_int, 15109);
pub const UA_NS0ID_CHOICESTATETYPE_STATENUMBER = @as(c_int, 15110);
pub const UA_NS0ID_TARGETVARIABLESTYPE = @as(c_int, 15111);
pub const UA_NS0ID_HASGUARD = @as(c_int, 15112);
pub const UA_NS0ID_GUARDVARIABLETYPE = @as(c_int, 15113);
pub const UA_NS0ID_TARGETVARIABLESTYPE_TARGETVARIABLES = @as(c_int, 15114);
pub const UA_NS0ID_TARGETVARIABLESTYPE_ADDTARGETVARIABLES = @as(c_int, 15115);
pub const UA_NS0ID_TARGETVARIABLESTYPE_ADDTARGETVARIABLES_INPUTARGUMENTS = @as(c_int, 15116);
pub const UA_NS0ID_TARGETVARIABLESTYPE_ADDTARGETVARIABLES_OUTPUTARGUMENTS = @as(c_int, 15117);
pub const UA_NS0ID_TARGETVARIABLESTYPE_REMOVETARGETVARIABLES = @as(c_int, 15118);
pub const UA_NS0ID_TARGETVARIABLESTYPE_REMOVETARGETVARIABLES_INPUTARGUMENTS = @as(c_int, 15119);
pub const UA_NS0ID_TARGETVARIABLESTYPE_REMOVETARGETVARIABLES_OUTPUTARGUMENTS = @as(c_int, 15120);
pub const UA_NS0ID_TARGETVARIABLESTYPEADDTARGETVARIABLESMETHODTYPE = @as(c_int, 15121);
pub const UA_NS0ID_TARGETVARIABLESTYPEADDTARGETVARIABLESMETHODTYPE_INPUTARGUMENTS = @as(c_int, 15122);
pub const UA_NS0ID_TARGETVARIABLESTYPEADDTARGETVARIABLESMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 15123);
pub const UA_NS0ID_TARGETVARIABLESTYPEREMOVETARGETVARIABLESMETHODTYPE = @as(c_int, 15124);
pub const UA_NS0ID_TARGETVARIABLESTYPEREMOVETARGETVARIABLESMETHODTYPE_INPUTARGUMENTS = @as(c_int, 15125);
pub const UA_NS0ID_TARGETVARIABLESTYPEREMOVETARGETVARIABLESMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 15126);
pub const UA_NS0ID_SUBSCRIBEDDATASETMIRRORTYPE = @as(c_int, 15127);
pub const UA_NS0ID_EXPRESSIONGUARDVARIABLETYPE = @as(c_int, 15128);
pub const UA_NS0ID_EXPRESSIONGUARDVARIABLETYPE_EXPRESSION = @as(c_int, 15129);
pub const UA_NS0ID_REGISTERSERVER2RESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15130);
pub const UA_NS0ID_CHANNELSECURITYTOKEN_ENCODING_DEFAULTJSON = @as(c_int, 15131);
pub const UA_NS0ID_OPENSECURECHANNELREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15132);
pub const UA_NS0ID_OPENSECURECHANNELRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15133);
pub const UA_NS0ID_CLOSESECURECHANNELREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15134);
pub const UA_NS0ID_CLOSESECURECHANNELRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15135);
pub const UA_NS0ID_SIGNEDSOFTWARECERTIFICATE_ENCODING_DEFAULTJSON = @as(c_int, 15136);
pub const UA_NS0ID_SIGNATUREDATA_ENCODING_DEFAULTJSON = @as(c_int, 15137);
pub const UA_NS0ID_CREATESESSIONREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15138);
pub const UA_NS0ID_CREATESESSIONRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15139);
pub const UA_NS0ID_USERIDENTITYTOKEN_ENCODING_DEFAULTJSON = @as(c_int, 15140);
pub const UA_NS0ID_ANONYMOUSIDENTITYTOKEN_ENCODING_DEFAULTJSON = @as(c_int, 15141);
pub const UA_NS0ID_USERNAMEIDENTITYTOKEN_ENCODING_DEFAULTJSON = @as(c_int, 15142);
pub const UA_NS0ID_X509IDENTITYTOKEN_ENCODING_DEFAULTJSON = @as(c_int, 15143);
pub const UA_NS0ID_ISSUEDIDENTITYTOKEN_ENCODING_DEFAULTJSON = @as(c_int, 15144);
pub const UA_NS0ID_ACTIVATESESSIONREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15145);
pub const UA_NS0ID_ACTIVATESESSIONRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15146);
pub const UA_NS0ID_CLOSESESSIONREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15147);
pub const UA_NS0ID_CLOSESESSIONRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15148);
pub const UA_NS0ID_CANCELREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15149);
pub const UA_NS0ID_CANCELRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15150);
pub const UA_NS0ID_NODEATTRIBUTES_ENCODING_DEFAULTJSON = @as(c_int, 15151);
pub const UA_NS0ID_OBJECTATTRIBUTES_ENCODING_DEFAULTJSON = @as(c_int, 15152);
pub const UA_NS0ID_VARIABLEATTRIBUTES_ENCODING_DEFAULTJSON = @as(c_int, 15153);
pub const UA_NS0ID_DATAGRAMCONNECTIONTRANSPORTTYPE_DISCOVERYADDRESS_NETWORKINTERFACE = @as(c_int, 15154);
pub const UA_NS0ID_BROKERCONNECTIONTRANSPORTTYPE = @as(c_int, 15155);
pub const UA_NS0ID_BROKERCONNECTIONTRANSPORTTYPE_RESOURCEURI = @as(c_int, 15156);
pub const UA_NS0ID_METHODATTRIBUTES_ENCODING_DEFAULTJSON = @as(c_int, 15157);
pub const UA_NS0ID_OBJECTTYPEATTRIBUTES_ENCODING_DEFAULTJSON = @as(c_int, 15158);
pub const UA_NS0ID_VARIABLETYPEATTRIBUTES_ENCODING_DEFAULTJSON = @as(c_int, 15159);
pub const UA_NS0ID_REFERENCETYPEATTRIBUTES_ENCODING_DEFAULTJSON = @as(c_int, 15160);
pub const UA_NS0ID_DATATYPEATTRIBUTES_ENCODING_DEFAULTJSON = @as(c_int, 15161);
pub const UA_NS0ID_VIEWATTRIBUTES_ENCODING_DEFAULTJSON = @as(c_int, 15162);
pub const UA_NS0ID_GENERICATTRIBUTEVALUE_ENCODING_DEFAULTJSON = @as(c_int, 15163);
pub const UA_NS0ID_GENERICATTRIBUTES_ENCODING_DEFAULTJSON = @as(c_int, 15164);
pub const UA_NS0ID_ADDNODESITEM_ENCODING_DEFAULTJSON = @as(c_int, 15165);
pub const UA_NS0ID_ADDNODESRESULT_ENCODING_DEFAULTJSON = @as(c_int, 15166);
pub const UA_NS0ID_ADDNODESREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15167);
pub const UA_NS0ID_ADDNODESRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15168);
pub const UA_NS0ID_ADDREFERENCESITEM_ENCODING_DEFAULTJSON = @as(c_int, 15169);
pub const UA_NS0ID_ADDREFERENCESREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15170);
pub const UA_NS0ID_ADDREFERENCESRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15171);
pub const UA_NS0ID_DELETENODESITEM_ENCODING_DEFAULTJSON = @as(c_int, 15172);
pub const UA_NS0ID_DELETENODESREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15173);
pub const UA_NS0ID_DELETENODESRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15174);
pub const UA_NS0ID_DELETEREFERENCESITEM_ENCODING_DEFAULTJSON = @as(c_int, 15175);
pub const UA_NS0ID_DELETEREFERENCESREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15176);
pub const UA_NS0ID_DELETEREFERENCESRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15177);
pub const UA_NS0ID_BROKERCONNECTIONTRANSPORTTYPE_AUTHENTICATIONPROFILEURI = @as(c_int, 15178);
pub const UA_NS0ID_VIEWDESCRIPTION_ENCODING_DEFAULTJSON = @as(c_int, 15179);
pub const UA_NS0ID_BROWSEDESCRIPTION_ENCODING_DEFAULTJSON = @as(c_int, 15180);
pub const UA_NS0ID_USERCREDENTIALCERTIFICATETYPE = @as(c_int, 15181);
pub const UA_NS0ID_REFERENCEDESCRIPTION_ENCODING_DEFAULTJSON = @as(c_int, 15182);
pub const UA_NS0ID_BROWSERESULT_ENCODING_DEFAULTJSON = @as(c_int, 15183);
pub const UA_NS0ID_BROWSEREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15184);
pub const UA_NS0ID_BROWSERESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15185);
pub const UA_NS0ID_BROWSENEXTREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15186);
pub const UA_NS0ID_BROWSENEXTRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15187);
pub const UA_NS0ID_RELATIVEPATHELEMENT_ENCODING_DEFAULTJSON = @as(c_int, 15188);
pub const UA_NS0ID_RELATIVEPATH_ENCODING_DEFAULTJSON = @as(c_int, 15189);
pub const UA_NS0ID_BROWSEPATH_ENCODING_DEFAULTJSON = @as(c_int, 15190);
pub const UA_NS0ID_BROWSEPATHTARGET_ENCODING_DEFAULTJSON = @as(c_int, 15191);
pub const UA_NS0ID_BROWSEPATHRESULT_ENCODING_DEFAULTJSON = @as(c_int, 15192);
pub const UA_NS0ID_TRANSLATEBROWSEPATHSTONODEIDSREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15193);
pub const UA_NS0ID_TRANSLATEBROWSEPATHSTONODEIDSRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15194);
pub const UA_NS0ID_REGISTERNODESREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15195);
pub const UA_NS0ID_REGISTERNODESRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15196);
pub const UA_NS0ID_UNREGISTERNODESREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15197);
pub const UA_NS0ID_UNREGISTERNODESRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15198);
pub const UA_NS0ID_ENDPOINTCONFIGURATION_ENCODING_DEFAULTJSON = @as(c_int, 15199);
pub const UA_NS0ID_QUERYDATADESCRIPTION_ENCODING_DEFAULTJSON = @as(c_int, 15200);
pub const UA_NS0ID_NODETYPEDESCRIPTION_ENCODING_DEFAULTJSON = @as(c_int, 15201);
pub const UA_NS0ID_QUERYDATASET_ENCODING_DEFAULTJSON = @as(c_int, 15202);
pub const UA_NS0ID_NODEREFERENCE_ENCODING_DEFAULTJSON = @as(c_int, 15203);
pub const UA_NS0ID_CONTENTFILTERELEMENT_ENCODING_DEFAULTJSON = @as(c_int, 15204);
pub const UA_NS0ID_CONTENTFILTER_ENCODING_DEFAULTJSON = @as(c_int, 15205);
pub const UA_NS0ID_FILTEROPERAND_ENCODING_DEFAULTJSON = @as(c_int, 15206);
pub const UA_NS0ID_ELEMENTOPERAND_ENCODING_DEFAULTJSON = @as(c_int, 15207);
pub const UA_NS0ID_LITERALOPERAND_ENCODING_DEFAULTJSON = @as(c_int, 15208);
pub const UA_NS0ID_ATTRIBUTEOPERAND_ENCODING_DEFAULTJSON = @as(c_int, 15209);
pub const UA_NS0ID_SIMPLEATTRIBUTEOPERAND_ENCODING_DEFAULTJSON = @as(c_int, 15210);
pub const UA_NS0ID_CONTENTFILTERELEMENTRESULT_ENCODING_DEFAULTJSON = @as(c_int, 15211);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_GETSECURITYKEYS = @as(c_int, 15212);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_GETSECURITYKEYS_INPUTARGUMENTS = @as(c_int, 15213);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_GETSECURITYKEYS_OUTPUTARGUMENTS = @as(c_int, 15214);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_GETSECURITYKEYS = @as(c_int, 15215);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_GETSECURITYKEYS_INPUTARGUMENTS = @as(c_int, 15216);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_GETSECURITYKEYS_OUTPUTARGUMENTS = @as(c_int, 15217);
pub const UA_NS0ID_GETSECURITYKEYSMETHODTYPE = @as(c_int, 15218);
pub const UA_NS0ID_GETSECURITYKEYSMETHODTYPE_INPUTARGUMENTS = @as(c_int, 15219);
pub const UA_NS0ID_GETSECURITYKEYSMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 15220);
pub const UA_NS0ID_DATASETFOLDERTYPE_PUBLISHEDDATASETNAME_PLACEHOLDER_DATASETMETADATA = @as(c_int, 15221);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER = @as(c_int, 15222);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_STATUS = @as(c_int, 15223);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_STATUS_STATE = @as(c_int, 15224);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_STATUS_ENABLE = @as(c_int, 15225);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_STATUS_DISABLE = @as(c_int, 15226);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_TRANSPORTSETTINGS = @as(c_int, 15227);
pub const UA_NS0ID_CONTENTFILTERRESULT_ENCODING_DEFAULTJSON = @as(c_int, 15228);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETMETADATA = @as(c_int, 15229);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER = @as(c_int, 15230);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_STATUS = @as(c_int, 15231);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_STATUS_STATE = @as(c_int, 15232);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_STATUS_ENABLE = @as(c_int, 15233);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_STATUS_DISABLE = @as(c_int, 15234);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_TRANSPORTSETTINGS = @as(c_int, 15235);
pub const UA_NS0ID_PARSINGRESULT_ENCODING_DEFAULTJSON = @as(c_int, 15236);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETMETADATA = @as(c_int, 15237);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER = @as(c_int, 15238);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_STATUS = @as(c_int, 15239);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_STATUS_STATE = @as(c_int, 15240);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_STATUS_ENABLE = @as(c_int, 15241);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_STATUS_DISABLE = @as(c_int, 15242);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_TRANSPORTSETTINGS = @as(c_int, 15243);
pub const UA_NS0ID_QUERYFIRSTREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15244);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETMETADATA = @as(c_int, 15245);
pub const UA_NS0ID_BROKERWRITERGROUPTRANSPORTTYPE_RESOURCEURI = @as(c_int, 15246);
pub const UA_NS0ID_BROKERWRITERGROUPTRANSPORTTYPE_AUTHENTICATIONPROFILEURI = @as(c_int, 15247);
pub const UA_NS0ID_CREATECREDENTIALMETHODTYPE = @as(c_int, 15248);
pub const UA_NS0ID_BROKERWRITERGROUPTRANSPORTTYPE_REQUESTEDDELIVERYGUARANTEE = @as(c_int, 15249);
pub const UA_NS0ID_BROKERDATASETWRITERTRANSPORTTYPE_RESOURCEURI = @as(c_int, 15250);
pub const UA_NS0ID_BROKERDATASETWRITERTRANSPORTTYPE_AUTHENTICATIONPROFILEURI = @as(c_int, 15251);
pub const UA_NS0ID_QUERYFIRSTRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15252);
pub const UA_NS0ID_CREATECREDENTIALMETHODTYPE_INPUTARGUMENTS = @as(c_int, 15253);
pub const UA_NS0ID_QUERYNEXTREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15254);
pub const UA_NS0ID_QUERYNEXTRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15255);
pub const UA_NS0ID_READVALUEID_ENCODING_DEFAULTJSON = @as(c_int, 15256);
pub const UA_NS0ID_READREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15257);
pub const UA_NS0ID_READRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15258);
pub const UA_NS0ID_HISTORYREADVALUEID_ENCODING_DEFAULTJSON = @as(c_int, 15259);
pub const UA_NS0ID_HISTORYREADRESULT_ENCODING_DEFAULTJSON = @as(c_int, 15260);
pub const UA_NS0ID_HISTORYREADDETAILS_ENCODING_DEFAULTJSON = @as(c_int, 15261);
pub const UA_NS0ID_READEVENTDETAILS_ENCODING_DEFAULTJSON = @as(c_int, 15262);
pub const UA_NS0ID_READRAWMODIFIEDDETAILS_ENCODING_DEFAULTJSON = @as(c_int, 15263);
pub const UA_NS0ID_READPROCESSEDDETAILS_ENCODING_DEFAULTJSON = @as(c_int, 15264);
pub const UA_NS0ID_PUBSUBGROUPTYPE_STATUS = @as(c_int, 15265);
pub const UA_NS0ID_PUBSUBGROUPTYPE_STATUS_STATE = @as(c_int, 15266);
pub const UA_NS0ID_PUBSUBGROUPTYPE_STATUS_ENABLE = @as(c_int, 15267);
pub const UA_NS0ID_PUBSUBGROUPTYPE_STATUS_DISABLE = @as(c_int, 15268);
pub const UA_NS0ID_READATTIMEDETAILS_ENCODING_DEFAULTJSON = @as(c_int, 15269);
pub const UA_NS0ID_HISTORYDATA_ENCODING_DEFAULTJSON = @as(c_int, 15270);
pub const UA_NS0ID_MODIFICATIONINFO_ENCODING_DEFAULTJSON = @as(c_int, 15271);
pub const UA_NS0ID_HISTORYMODIFIEDDATA_ENCODING_DEFAULTJSON = @as(c_int, 15272);
pub const UA_NS0ID_HISTORYEVENT_ENCODING_DEFAULTJSON = @as(c_int, 15273);
pub const UA_NS0ID_HISTORYREADREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15274);
pub const UA_NS0ID_HISTORYREADRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15275);
pub const UA_NS0ID_WRITEVALUE_ENCODING_DEFAULTJSON = @as(c_int, 15276);
pub const UA_NS0ID_WRITEREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15277);
pub const UA_NS0ID_WRITERESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15278);
pub const UA_NS0ID_HISTORYUPDATEDETAILS_ENCODING_DEFAULTJSON = @as(c_int, 15279);
pub const UA_NS0ID_UPDATEDATADETAILS_ENCODING_DEFAULTJSON = @as(c_int, 15280);
pub const UA_NS0ID_UPDATESTRUCTUREDATADETAILS_ENCODING_DEFAULTJSON = @as(c_int, 15281);
pub const UA_NS0ID_UPDATEEVENTDETAILS_ENCODING_DEFAULTJSON = @as(c_int, 15282);
pub const UA_NS0ID_DELETERAWMODIFIEDDETAILS_ENCODING_DEFAULTJSON = @as(c_int, 15283);
pub const UA_NS0ID_DELETEATTIMEDETAILS_ENCODING_DEFAULTJSON = @as(c_int, 15284);
pub const UA_NS0ID_DELETEEVENTDETAILS_ENCODING_DEFAULTJSON = @as(c_int, 15285);
pub const UA_NS0ID_HISTORYUPDATERESULT_ENCODING_DEFAULTJSON = @as(c_int, 15286);
pub const UA_NS0ID_HISTORYUPDATEREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15287);
pub const UA_NS0ID_HISTORYUPDATERESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15288);
pub const UA_NS0ID_CALLMETHODREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15289);
pub const UA_NS0ID_CALLMETHODRESULT_ENCODING_DEFAULTJSON = @as(c_int, 15290);
pub const UA_NS0ID_CALLREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15291);
pub const UA_NS0ID_CALLRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15292);
pub const UA_NS0ID_MONITORINGFILTER_ENCODING_DEFAULTJSON = @as(c_int, 15293);
pub const UA_NS0ID_DATACHANGEFILTER_ENCODING_DEFAULTJSON = @as(c_int, 15294);
pub const UA_NS0ID_EVENTFILTER_ENCODING_DEFAULTJSON = @as(c_int, 15295);
pub const UA_NS0ID_HASDATASETWRITER = @as(c_int, 15296);
pub const UA_NS0ID_HASDATASETREADER = @as(c_int, 15297);
pub const UA_NS0ID_DATASETWRITERTYPE = @as(c_int, 15298);
pub const UA_NS0ID_DATASETWRITERTYPE_STATUS = @as(c_int, 15299);
pub const UA_NS0ID_DATASETWRITERTYPE_STATUS_STATE = @as(c_int, 15300);
pub const UA_NS0ID_DATASETWRITERTYPE_STATUS_ENABLE = @as(c_int, 15301);
pub const UA_NS0ID_DATASETWRITERTYPE_STATUS_DISABLE = @as(c_int, 15302);
pub const UA_NS0ID_DATASETWRITERTYPE_TRANSPORTSETTINGS = @as(c_int, 15303);
pub const UA_NS0ID_AGGREGATECONFIGURATION_ENCODING_DEFAULTJSON = @as(c_int, 15304);
pub const UA_NS0ID_DATASETWRITERTRANSPORTTYPE = @as(c_int, 15305);
pub const UA_NS0ID_DATASETREADERTYPE = @as(c_int, 15306);
pub const UA_NS0ID_DATASETREADERTYPE_STATUS = @as(c_int, 15307);
pub const UA_NS0ID_DATASETREADERTYPE_STATUS_STATE = @as(c_int, 15308);
pub const UA_NS0ID_DATASETREADERTYPE_STATUS_ENABLE = @as(c_int, 15309);
pub const UA_NS0ID_DATASETREADERTYPE_STATUS_DISABLE = @as(c_int, 15310);
pub const UA_NS0ID_DATASETREADERTYPE_TRANSPORTSETTINGS = @as(c_int, 15311);
pub const UA_NS0ID_AGGREGATEFILTER_ENCODING_DEFAULTJSON = @as(c_int, 15312);
pub const UA_NS0ID_MONITORINGFILTERRESULT_ENCODING_DEFAULTJSON = @as(c_int, 15313);
pub const UA_NS0ID_EVENTFILTERRESULT_ENCODING_DEFAULTJSON = @as(c_int, 15314);
pub const UA_NS0ID_AGGREGATEFILTERRESULT_ENCODING_DEFAULTJSON = @as(c_int, 15315);
pub const UA_NS0ID_DATASETREADERTYPE_SUBSCRIBEDDATASET = @as(c_int, 15316);
pub const UA_NS0ID_ELSEGUARDVARIABLETYPE = @as(c_int, 15317);
pub const UA_NS0ID_BASEANALOGTYPE = @as(c_int, 15318);
pub const UA_NS0ID_DATASETREADERTRANSPORTTYPE = @as(c_int, 15319);
pub const UA_NS0ID_MONITORINGPARAMETERS_ENCODING_DEFAULTJSON = @as(c_int, 15320);
pub const UA_NS0ID_MONITOREDITEMCREATEREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15321);
pub const UA_NS0ID_MONITOREDITEMCREATERESULT_ENCODING_DEFAULTJSON = @as(c_int, 15322);
pub const UA_NS0ID_CREATEMONITOREDITEMSREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15323);
pub const UA_NS0ID_CREATEMONITOREDITEMSRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15324);
pub const UA_NS0ID_MONITOREDITEMMODIFYREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15325);
pub const UA_NS0ID_MONITOREDITEMMODIFYRESULT_ENCODING_DEFAULTJSON = @as(c_int, 15326);
pub const UA_NS0ID_MODIFYMONITOREDITEMSREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15327);
pub const UA_NS0ID_MODIFYMONITOREDITEMSRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15328);
pub const UA_NS0ID_SETMONITORINGMODEREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15329);
pub const UA_NS0ID_BROKERDATASETWRITERTRANSPORTTYPE_REQUESTEDDELIVERYGUARANTEE = @as(c_int, 15330);
pub const UA_NS0ID_SETMONITORINGMODERESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15331);
pub const UA_NS0ID_SETTRIGGERINGREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15332);
pub const UA_NS0ID_SETTRIGGERINGRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15333);
pub const UA_NS0ID_BROKERDATASETREADERTRANSPORTTYPE_RESOURCEURI = @as(c_int, 15334);
pub const UA_NS0ID_DELETEMONITOREDITEMSREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15335);
pub const UA_NS0ID_DELETEMONITOREDITEMSRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15336);
pub const UA_NS0ID_CREATESUBSCRIPTIONREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15337);
pub const UA_NS0ID_CREATESUBSCRIPTIONRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15338);
pub const UA_NS0ID_MODIFYSUBSCRIPTIONREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15339);
pub const UA_NS0ID_MODIFYSUBSCRIPTIONRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15340);
pub const UA_NS0ID_SETPUBLISHINGMODEREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15341);
pub const UA_NS0ID_SETPUBLISHINGMODERESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15342);
pub const UA_NS0ID_NOTIFICATIONMESSAGE_ENCODING_DEFAULTJSON = @as(c_int, 15343);
pub const UA_NS0ID_NOTIFICATIONDATA_ENCODING_DEFAULTJSON = @as(c_int, 15344);
pub const UA_NS0ID_DATACHANGENOTIFICATION_ENCODING_DEFAULTJSON = @as(c_int, 15345);
pub const UA_NS0ID_MONITOREDITEMNOTIFICATION_ENCODING_DEFAULTJSON = @as(c_int, 15346);
pub const UA_NS0ID_EVENTNOTIFICATIONLIST_ENCODING_DEFAULTJSON = @as(c_int, 15347);
pub const UA_NS0ID_EVENTFIELDLIST_ENCODING_DEFAULTJSON = @as(c_int, 15348);
pub const UA_NS0ID_HISTORYEVENTFIELDLIST_ENCODING_DEFAULTJSON = @as(c_int, 15349);
pub const UA_NS0ID_STATUSCHANGENOTIFICATION_ENCODING_DEFAULTJSON = @as(c_int, 15350);
pub const UA_NS0ID_SUBSCRIPTIONACKNOWLEDGEMENT_ENCODING_DEFAULTJSON = @as(c_int, 15351);
pub const UA_NS0ID_PUBLISHREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15352);
pub const UA_NS0ID_PUBLISHRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15353);
pub const UA_NS0ID_REPUBLISHREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15354);
pub const UA_NS0ID_REPUBLISHRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15355);
pub const UA_NS0ID_TRANSFERRESULT_ENCODING_DEFAULTJSON = @as(c_int, 15356);
pub const UA_NS0ID_TRANSFERSUBSCRIPTIONSREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15357);
pub const UA_NS0ID_TRANSFERSUBSCRIPTIONSRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15358);
pub const UA_NS0ID_DELETESUBSCRIPTIONSREQUEST_ENCODING_DEFAULTJSON = @as(c_int, 15359);
pub const UA_NS0ID_DELETESUBSCRIPTIONSRESPONSE_ENCODING_DEFAULTJSON = @as(c_int, 15360);
pub const UA_NS0ID_BUILDINFO_ENCODING_DEFAULTJSON = @as(c_int, 15361);
pub const UA_NS0ID_REDUNDANTSERVERDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 15362);
pub const UA_NS0ID_ENDPOINTURLLISTDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 15363);
pub const UA_NS0ID_NETWORKGROUPDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 15364);
pub const UA_NS0ID_SAMPLINGINTERVALDIAGNOSTICSDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 15365);
pub const UA_NS0ID_SERVERDIAGNOSTICSSUMMARYDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 15366);
pub const UA_NS0ID_SERVERSTATUSDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 15367);
pub const UA_NS0ID_SESSIONDIAGNOSTICSDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 15368);
pub const UA_NS0ID_SESSIONSECURITYDIAGNOSTICSDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 15369);
pub const UA_NS0ID_SERVICECOUNTERDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 15370);
pub const UA_NS0ID_STATUSRESULT_ENCODING_DEFAULTJSON = @as(c_int, 15371);
pub const UA_NS0ID_SUBSCRIPTIONDIAGNOSTICSDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 15372);
pub const UA_NS0ID_MODELCHANGESTRUCTUREDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 15373);
pub const UA_NS0ID_SEMANTICCHANGESTRUCTUREDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 15374);
pub const UA_NS0ID_RANGE_ENCODING_DEFAULTJSON = @as(c_int, 15375);
pub const UA_NS0ID_EUINFORMATION_ENCODING_DEFAULTJSON = @as(c_int, 15376);
pub const UA_NS0ID_COMPLEXNUMBERTYPE_ENCODING_DEFAULTJSON = @as(c_int, 15377);
pub const UA_NS0ID_DOUBLECOMPLEXNUMBERTYPE_ENCODING_DEFAULTJSON = @as(c_int, 15378);
pub const UA_NS0ID_AXISINFORMATION_ENCODING_DEFAULTJSON = @as(c_int, 15379);
pub const UA_NS0ID_XVTYPE_ENCODING_DEFAULTJSON = @as(c_int, 15380);
pub const UA_NS0ID_PROGRAMDIAGNOSTICDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 15381);
pub const UA_NS0ID_ANNOTATION_ENCODING_DEFAULTJSON = @as(c_int, 15382);
pub const UA_NS0ID_PROGRAMDIAGNOSTIC2TYPE = @as(c_int, 15383);
pub const UA_NS0ID_PROGRAMDIAGNOSTIC2TYPE_CREATESESSIONID = @as(c_int, 15384);
pub const UA_NS0ID_PROGRAMDIAGNOSTIC2TYPE_CREATECLIENTNAME = @as(c_int, 15385);
pub const UA_NS0ID_PROGRAMDIAGNOSTIC2TYPE_INVOCATIONCREATIONTIME = @as(c_int, 15386);
pub const UA_NS0ID_PROGRAMDIAGNOSTIC2TYPE_LASTTRANSITIONTIME = @as(c_int, 15387);
pub const UA_NS0ID_PROGRAMDIAGNOSTIC2TYPE_LASTMETHODCALL = @as(c_int, 15388);
pub const UA_NS0ID_PROGRAMDIAGNOSTIC2TYPE_LASTMETHODSESSIONID = @as(c_int, 15389);
pub const UA_NS0ID_PROGRAMDIAGNOSTIC2TYPE_LASTMETHODINPUTARGUMENTS = @as(c_int, 15390);
pub const UA_NS0ID_PROGRAMDIAGNOSTIC2TYPE_LASTMETHODOUTPUTARGUMENTS = @as(c_int, 15391);
pub const UA_NS0ID_PROGRAMDIAGNOSTIC2TYPE_LASTMETHODINPUTVALUES = @as(c_int, 15392);
pub const UA_NS0ID_PROGRAMDIAGNOSTIC2TYPE_LASTMETHODOUTPUTVALUES = @as(c_int, 15393);
pub const UA_NS0ID_PROGRAMDIAGNOSTIC2TYPE_LASTMETHODCALLTIME = @as(c_int, 15394);
pub const UA_NS0ID_PROGRAMDIAGNOSTIC2TYPE_LASTMETHODRETURNSTATUS = @as(c_int, 15395);
pub const UA_NS0ID_ACCESSLEVELEXTYPE = @as(c_int, 15406);
pub const UA_NS0ID_ACCESSLEVELEXTYPE_OPTIONSETVALUES = @as(c_int, 15407);
pub const UA_NS0ID_ROLESETTYPE_ROLENAME_PLACEHOLDER_APPLICATIONSEXCLUDE = @as(c_int, 15408);
pub const UA_NS0ID_ROLESETTYPE_ROLENAME_PLACEHOLDER_ENDPOINTSEXCLUDE = @as(c_int, 15409);
pub const UA_NS0ID_ROLETYPE_APPLICATIONSEXCLUDE = @as(c_int, 15410);
pub const UA_NS0ID_ROLETYPE_ENDPOINTSEXCLUDE = @as(c_int, 15411);
pub const UA_NS0ID_WELLKNOWNROLE_ANONYMOUS_APPLICATIONSEXCLUDE = @as(c_int, 15412);
pub const UA_NS0ID_WELLKNOWNROLE_ANONYMOUS_ENDPOINTSEXCLUDE = @as(c_int, 15413);
pub const UA_NS0ID_WELLKNOWNROLE_AUTHENTICATEDUSER_APPLICATIONSEXCLUDE = @as(c_int, 15414);
pub const UA_NS0ID_WELLKNOWNROLE_AUTHENTICATEDUSER_ENDPOINTSEXCLUDE = @as(c_int, 15415);
pub const UA_NS0ID_WELLKNOWNROLE_OBSERVER_APPLICATIONSEXCLUDE = @as(c_int, 15416);
pub const UA_NS0ID_WELLKNOWNROLE_OBSERVER_ENDPOINTSEXCLUDE = @as(c_int, 15417);
pub const UA_NS0ID_WELLKNOWNROLE_OPERATOR_APPLICATIONSEXCLUDE = @as(c_int, 15418);
pub const UA_NS0ID_BROKERDATASETREADERTRANSPORTTYPE_AUTHENTICATIONPROFILEURI = @as(c_int, 15419);
pub const UA_NS0ID_BROKERDATASETREADERTRANSPORTTYPE_REQUESTEDDELIVERYGUARANTEE = @as(c_int, 15420);
pub const UA_NS0ID_SIMPLETYPEDESCRIPTION_ENCODING_DEFAULTBINARY = @as(c_int, 15421);
pub const UA_NS0ID_UABINARYFILEDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15422);
pub const UA_NS0ID_WELLKNOWNROLE_OPERATOR_ENDPOINTSEXCLUDE = @as(c_int, 15423);
pub const UA_NS0ID_WELLKNOWNROLE_ENGINEER_APPLICATIONSEXCLUDE = @as(c_int, 15424);
pub const UA_NS0ID_WELLKNOWNROLE_ENGINEER_ENDPOINTSEXCLUDE = @as(c_int, 15425);
pub const UA_NS0ID_WELLKNOWNROLE_SUPERVISOR_APPLICATIONSEXCLUDE = @as(c_int, 15426);
pub const UA_NS0ID_WELLKNOWNROLE_SUPERVISOR_ENDPOINTSEXCLUDE = @as(c_int, 15427);
pub const UA_NS0ID_WELLKNOWNROLE_CONFIGUREADMIN_APPLICATIONSEXCLUDE = @as(c_int, 15428);
pub const UA_NS0ID_WELLKNOWNROLE_CONFIGUREADMIN_ENDPOINTSEXCLUDE = @as(c_int, 15429);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYADMIN_APPLICATIONSEXCLUDE = @as(c_int, 15430);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_GETSECURITYGROUP = @as(c_int, 15431);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_GETSECURITYGROUP_INPUTARGUMENTS = @as(c_int, 15432);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_GETSECURITYGROUP_OUTPUTARGUMENTS = @as(c_int, 15433);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_SECURITYGROUPS = @as(c_int, 15434);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_SECURITYGROUPS_ADDSECURITYGROUP = @as(c_int, 15435);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_SECURITYGROUPS_ADDSECURITYGROUP_INPUTARGUMENTS = @as(c_int, 15436);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_SECURITYGROUPS_ADDSECURITYGROUP_OUTPUTARGUMENTS = @as(c_int, 15437);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_SECURITYGROUPS_REMOVESECURITYGROUP = @as(c_int, 15438);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_SECURITYGROUPS_REMOVESECURITYGROUP_INPUTARGUMENTS = @as(c_int, 15439);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_GETSECURITYGROUP = @as(c_int, 15440);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_GETSECURITYGROUP_INPUTARGUMENTS = @as(c_int, 15441);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_GETSECURITYGROUP_OUTPUTARGUMENTS = @as(c_int, 15442);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_SECURITYGROUPS = @as(c_int, 15443);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_SECURITYGROUPS_ADDSECURITYGROUP = @as(c_int, 15444);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_SECURITYGROUPS_ADDSECURITYGROUP_INPUTARGUMENTS = @as(c_int, 15445);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_SECURITYGROUPS_ADDSECURITYGROUP_OUTPUTARGUMENTS = @as(c_int, 15446);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_SECURITYGROUPS_REMOVESECURITYGROUP = @as(c_int, 15447);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_SECURITYGROUPS_REMOVESECURITYGROUP_INPUTARGUMENTS = @as(c_int, 15448);
pub const UA_NS0ID_GETSECURITYGROUPMETHODTYPE = @as(c_int, 15449);
pub const UA_NS0ID_GETSECURITYGROUPMETHODTYPE_INPUTARGUMENTS = @as(c_int, 15450);
pub const UA_NS0ID_GETSECURITYGROUPMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 15451);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE = @as(c_int, 15452);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_SECURITYGROUPFOLDERNAME_PLACEHOLDER = @as(c_int, 15453);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_SECURITYGROUPFOLDERNAME_PLACEHOLDER_ADDSECURITYGROUP = @as(c_int, 15454);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_SECURITYGROUPFOLDERNAME_PLACEHOLDER_ADDSECURITYGROUP_INPUTARGUMENTS = @as(c_int, 15455);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_SECURITYGROUPFOLDERNAME_PLACEHOLDER_ADDSECURITYGROUP_OUTPUTARGUMENTS = @as(c_int, 15456);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_SECURITYGROUPFOLDERNAME_PLACEHOLDER_REMOVESECURITYGROUP = @as(c_int, 15457);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_SECURITYGROUPFOLDERNAME_PLACEHOLDER_REMOVESECURITYGROUP_INPUTARGUMENTS = @as(c_int, 15458);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_SECURITYGROUPNAME_PLACEHOLDER = @as(c_int, 15459);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_SECURITYGROUPNAME_PLACEHOLDER_SECURITYGROUPID = @as(c_int, 15460);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_ADDSECURITYGROUP = @as(c_int, 15461);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_ADDSECURITYGROUP_INPUTARGUMENTS = @as(c_int, 15462);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_ADDSECURITYGROUP_OUTPUTARGUMENTS = @as(c_int, 15463);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_REMOVESECURITYGROUP = @as(c_int, 15464);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_REMOVESECURITYGROUP_INPUTARGUMENTS = @as(c_int, 15465);
pub const UA_NS0ID_ADDSECURITYGROUPMETHODTYPE = @as(c_int, 15466);
pub const UA_NS0ID_ADDSECURITYGROUPMETHODTYPE_INPUTARGUMENTS = @as(c_int, 15467);
pub const UA_NS0ID_ADDSECURITYGROUPMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 15468);
pub const UA_NS0ID_REMOVESECURITYGROUPMETHODTYPE = @as(c_int, 15469);
pub const UA_NS0ID_REMOVESECURITYGROUPMETHODTYPE_INPUTARGUMENTS = @as(c_int, 15470);
pub const UA_NS0ID_SECURITYGROUPTYPE = @as(c_int, 15471);
pub const UA_NS0ID_SECURITYGROUPTYPE_SECURITYGROUPID = @as(c_int, 15472);
pub const UA_NS0ID_DATASETFOLDERTYPE_PUBLISHEDDATASETNAME_PLACEHOLDER_EXTENSIONFIELDS = @as(c_int, 15473);
pub const UA_NS0ID_DATASETFOLDERTYPE_PUBLISHEDDATASETNAME_PLACEHOLDER_EXTENSIONFIELDS_ADDEXTENSIONFIELD = @as(c_int, 15474);
pub const UA_NS0ID_DATASETFOLDERTYPE_PUBLISHEDDATASETNAME_PLACEHOLDER_EXTENSIONFIELDS_ADDEXTENSIONFIELD_INPUTARGUMENTS = @as(c_int, 15475);
pub const UA_NS0ID_DATASETFOLDERTYPE_PUBLISHEDDATASETNAME_PLACEHOLDER_EXTENSIONFIELDS_ADDEXTENSIONFIELD_OUTPUTARGUMENTS = @as(c_int, 15476);
pub const UA_NS0ID_DATASETFOLDERTYPE_PUBLISHEDDATASETNAME_PLACEHOLDER_EXTENSIONFIELDS_REMOVEEXTENSIONFIELD = @as(c_int, 15477);
pub const UA_NS0ID_DATASETFOLDERTYPE_PUBLISHEDDATASETNAME_PLACEHOLDER_EXTENSIONFIELDS_REMOVEEXTENSIONFIELD_INPUTARGUMENTS = @as(c_int, 15478);
pub const UA_NS0ID_BROKERCONNECTIONTRANSPORTDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15479);
pub const UA_NS0ID_WRITERGROUPDATATYPE = @as(c_int, 15480);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_EXTENSIONFIELDS = @as(c_int, 15481);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_EXTENSIONFIELDS_ADDEXTENSIONFIELD = @as(c_int, 15482);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_EXTENSIONFIELDS_ADDEXTENSIONFIELD_INPUTARGUMENTS = @as(c_int, 15483);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_EXTENSIONFIELDS_ADDEXTENSIONFIELD_OUTPUTARGUMENTS = @as(c_int, 15484);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_EXTENSIONFIELDS_REMOVEEXTENSIONFIELD = @as(c_int, 15485);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_EXTENSIONFIELDS_REMOVEEXTENSIONFIELD_INPUTARGUMENTS = @as(c_int, 15486);
pub const UA_NS0ID_STRUCTUREDESCRIPTION = @as(c_int, 15487);
pub const UA_NS0ID_ENUMDESCRIPTION = @as(c_int, 15488);
pub const UA_NS0ID_EXTENSIONFIELDSTYPE = @as(c_int, 15489);
pub const UA_NS0ID_EXTENSIONFIELDSTYPE_EXTENSIONFIELDNAME_PLACEHOLDER = @as(c_int, 15490);
pub const UA_NS0ID_EXTENSIONFIELDSTYPE_ADDEXTENSIONFIELD = @as(c_int, 15491);
pub const UA_NS0ID_EXTENSIONFIELDSTYPE_ADDEXTENSIONFIELD_INPUTARGUMENTS = @as(c_int, 15492);
pub const UA_NS0ID_EXTENSIONFIELDSTYPE_ADDEXTENSIONFIELD_OUTPUTARGUMENTS = @as(c_int, 15493);
pub const UA_NS0ID_EXTENSIONFIELDSTYPE_REMOVEEXTENSIONFIELD = @as(c_int, 15494);
pub const UA_NS0ID_EXTENSIONFIELDSTYPE_REMOVEEXTENSIONFIELD_INPUTARGUMENTS = @as(c_int, 15495);
pub const UA_NS0ID_ADDEXTENSIONFIELDMETHODTYPE = @as(c_int, 15496);
pub const UA_NS0ID_ADDEXTENSIONFIELDMETHODTYPE_INPUTARGUMENTS = @as(c_int, 15497);
pub const UA_NS0ID_ADDEXTENSIONFIELDMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 15498);
pub const UA_NS0ID_REMOVEEXTENSIONFIELDMETHODTYPE = @as(c_int, 15499);
pub const UA_NS0ID_REMOVEEXTENSIONFIELDMETHODTYPE_INPUTARGUMENTS = @as(c_int, 15500);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SIMPLETYPEDESCRIPTION = @as(c_int, 15501);
pub const UA_NS0ID_NETWORKADDRESSDATATYPE = @as(c_int, 15502);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_EXTENSIONFIELDS = @as(c_int, 15503);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_EXTENSIONFIELDS_ADDEXTENSIONFIELD = @as(c_int, 15504);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_EXTENSIONFIELDS_ADDEXTENSIONFIELD_INPUTARGUMENTS = @as(c_int, 15505);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_EXTENSIONFIELDS_ADDEXTENSIONFIELD_OUTPUTARGUMENTS = @as(c_int, 15506);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_EXTENSIONFIELDS_REMOVEEXTENSIONFIELD = @as(c_int, 15507);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_EXTENSIONFIELDS_REMOVEEXTENSIONFIELD_INPUTARGUMENTS = @as(c_int, 15508);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SIMPLETYPEDESCRIPTION_DATATYPEVERSION = @as(c_int, 15509);
pub const UA_NS0ID_NETWORKADDRESSURLDATATYPE = @as(c_int, 15510);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_EXTENSIONFIELDS = @as(c_int, 15511);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_EXTENSIONFIELDS_ADDEXTENSIONFIELD = @as(c_int, 15512);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_EXTENSIONFIELDS_ADDEXTENSIONFIELD_INPUTARGUMENTS = @as(c_int, 15513);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_EXTENSIONFIELDS_ADDEXTENSIONFIELD_OUTPUTARGUMENTS = @as(c_int, 15514);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_EXTENSIONFIELDS_REMOVEEXTENSIONFIELD = @as(c_int, 15515);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_EXTENSIONFIELDS_REMOVEEXTENSIONFIELD_INPUTARGUMENTS = @as(c_int, 15516);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_MODIFYFIELDSELECTION_OUTPUTARGUMENTS = @as(c_int, 15517);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPEMODIFYFIELDSELECTIONMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 15518);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SIMPLETYPEDESCRIPTION_DICTIONARYFRAGMENT = @as(c_int, 15519);
pub const UA_NS0ID_READERGROUPDATATYPE = @as(c_int, 15520);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_UABINARYFILEDATATYPE = @as(c_int, 15521);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_UABINARYFILEDATATYPE_DATATYPEVERSION = @as(c_int, 15522);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_UABINARYFILEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15523);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_BROKERCONNECTIONTRANSPORTDATATYPE = @as(c_int, 15524);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_BROKERCONNECTIONTRANSPORTDATATYPE_DATATYPEVERSION = @as(c_int, 15525);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_BROKERCONNECTIONTRANSPORTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15526);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYADMIN_ENDPOINTSEXCLUDE = @as(c_int, 15527);
pub const UA_NS0ID_ENDPOINTTYPE = @as(c_int, 15528);
pub const UA_NS0ID_SIMPLETYPEDESCRIPTION_ENCODING_DEFAULTXML = @as(c_int, 15529);
pub const UA_NS0ID_PUBSUBCONFIGURATIONDATATYPE = @as(c_int, 15530);
pub const UA_NS0ID_UABINARYFILEDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 15531);
pub const UA_NS0ID_DATAGRAMWRITERGROUPTRANSPORTDATATYPE = @as(c_int, 15532);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_ADDRESS_NETWORKINTERFACE = @as(c_int, 15533);
pub const UA_NS0ID_DATATYPESCHEMAHEADER = @as(c_int, 15534);
pub const UA_NS0ID_PUBSUBSTATUSEVENTTYPE = @as(c_int, 15535);
pub const UA_NS0ID_PUBSUBSTATUSEVENTTYPE_EVENTID = @as(c_int, 15536);
pub const UA_NS0ID_PUBSUBSTATUSEVENTTYPE_EVENTTYPE = @as(c_int, 15537);
pub const UA_NS0ID_PUBSUBSTATUSEVENTTYPE_SOURCENODE = @as(c_int, 15538);
pub const UA_NS0ID_PUBSUBSTATUSEVENTTYPE_SOURCENAME = @as(c_int, 15539);
pub const UA_NS0ID_PUBSUBSTATUSEVENTTYPE_TIME = @as(c_int, 15540);
pub const UA_NS0ID_PUBSUBSTATUSEVENTTYPE_RECEIVETIME = @as(c_int, 15541);
pub const UA_NS0ID_PUBSUBSTATUSEVENTTYPE_LOCALTIME = @as(c_int, 15542);
pub const UA_NS0ID_PUBSUBSTATUSEVENTTYPE_MESSAGE = @as(c_int, 15543);
pub const UA_NS0ID_PUBSUBSTATUSEVENTTYPE_SEVERITY = @as(c_int, 15544);
pub const UA_NS0ID_PUBSUBSTATUSEVENTTYPE_CONNECTIONID = @as(c_int, 15545);
pub const UA_NS0ID_PUBSUBSTATUSEVENTTYPE_GROUPID = @as(c_int, 15546);
pub const UA_NS0ID_PUBSUBSTATUSEVENTTYPE_STATE = @as(c_int, 15547);
pub const UA_NS0ID_PUBSUBTRANSPORTLIMITSEXCEEDEVENTTYPE = @as(c_int, 15548);
pub const UA_NS0ID_PUBSUBTRANSPORTLIMITSEXCEEDEVENTTYPE_EVENTID = @as(c_int, 15549);
pub const UA_NS0ID_PUBSUBTRANSPORTLIMITSEXCEEDEVENTTYPE_EVENTTYPE = @as(c_int, 15550);
pub const UA_NS0ID_PUBSUBTRANSPORTLIMITSEXCEEDEVENTTYPE_SOURCENODE = @as(c_int, 15551);
pub const UA_NS0ID_PUBSUBTRANSPORTLIMITSEXCEEDEVENTTYPE_SOURCENAME = @as(c_int, 15552);
pub const UA_NS0ID_PUBSUBTRANSPORTLIMITSEXCEEDEVENTTYPE_TIME = @as(c_int, 15553);
pub const UA_NS0ID_PUBSUBTRANSPORTLIMITSEXCEEDEVENTTYPE_RECEIVETIME = @as(c_int, 15554);
pub const UA_NS0ID_PUBSUBTRANSPORTLIMITSEXCEEDEVENTTYPE_LOCALTIME = @as(c_int, 15555);
pub const UA_NS0ID_PUBSUBTRANSPORTLIMITSEXCEEDEVENTTYPE_MESSAGE = @as(c_int, 15556);
pub const UA_NS0ID_PUBSUBTRANSPORTLIMITSEXCEEDEVENTTYPE_SEVERITY = @as(c_int, 15557);
pub const UA_NS0ID_PUBSUBTRANSPORTLIMITSEXCEEDEVENTTYPE_CONNECTIONID = @as(c_int, 15558);
pub const UA_NS0ID_PUBSUBTRANSPORTLIMITSEXCEEDEVENTTYPE_GROUPID = @as(c_int, 15559);
pub const UA_NS0ID_PUBSUBTRANSPORTLIMITSEXCEEDEVENTTYPE_STATE = @as(c_int, 15560);
pub const UA_NS0ID_PUBSUBTRANSPORTLIMITSEXCEEDEVENTTYPE_ACTUAL = @as(c_int, 15561);
pub const UA_NS0ID_PUBSUBTRANSPORTLIMITSEXCEEDEVENTTYPE_MAXIMUM = @as(c_int, 15562);
pub const UA_NS0ID_PUBSUBCOMMUNICATIONFAILUREEVENTTYPE = @as(c_int, 15563);
pub const UA_NS0ID_PUBSUBCOMMUNICATIONFAILUREEVENTTYPE_EVENTID = @as(c_int, 15564);
pub const UA_NS0ID_PUBSUBCOMMUNICATIONFAILUREEVENTTYPE_EVENTTYPE = @as(c_int, 15565);
pub const UA_NS0ID_PUBSUBCOMMUNICATIONFAILUREEVENTTYPE_SOURCENODE = @as(c_int, 15566);
pub const UA_NS0ID_PUBSUBCOMMUNICATIONFAILUREEVENTTYPE_SOURCENAME = @as(c_int, 15567);
pub const UA_NS0ID_PUBSUBCOMMUNICATIONFAILUREEVENTTYPE_TIME = @as(c_int, 15568);
pub const UA_NS0ID_PUBSUBCOMMUNICATIONFAILUREEVENTTYPE_RECEIVETIME = @as(c_int, 15569);
pub const UA_NS0ID_PUBSUBCOMMUNICATIONFAILUREEVENTTYPE_LOCALTIME = @as(c_int, 15570);
pub const UA_NS0ID_PUBSUBCOMMUNICATIONFAILUREEVENTTYPE_MESSAGE = @as(c_int, 15571);
pub const UA_NS0ID_PUBSUBCOMMUNICATIONFAILUREEVENTTYPE_SEVERITY = @as(c_int, 15572);
pub const UA_NS0ID_PUBSUBCOMMUNICATIONFAILUREEVENTTYPE_CONNECTIONID = @as(c_int, 15573);
pub const UA_NS0ID_PUBSUBCOMMUNICATIONFAILUREEVENTTYPE_GROUPID = @as(c_int, 15574);
pub const UA_NS0ID_PUBSUBCOMMUNICATIONFAILUREEVENTTYPE_STATE = @as(c_int, 15575);
pub const UA_NS0ID_PUBSUBCOMMUNICATIONFAILUREEVENTTYPE_ERROR = @as(c_int, 15576);
pub const UA_NS0ID_DATASETFIELDFLAGS_OPTIONSETVALUES = @as(c_int, 15577);
pub const UA_NS0ID_PUBLISHEDDATASETDATATYPE = @as(c_int, 15578);
pub const UA_NS0ID_BROKERCONNECTIONTRANSPORTDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 15579);
pub const UA_NS0ID_PUBLISHEDDATASETSOURCEDATATYPE = @as(c_int, 15580);
pub const UA_NS0ID_PUBLISHEDDATAITEMSDATATYPE = @as(c_int, 15581);
pub const UA_NS0ID_PUBLISHEDEVENTSDATATYPE = @as(c_int, 15582);
pub const UA_NS0ID_DATASETFIELDCONTENTMASK = @as(c_int, 15583);
pub const UA_NS0ID_DATASETFIELDCONTENTMASK_OPTIONSETVALUES = @as(c_int, 15584);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SIMPLETYPEDESCRIPTION = @as(c_int, 15585);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SIMPLETYPEDESCRIPTION_DATATYPEVERSION = @as(c_int, 15586);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SIMPLETYPEDESCRIPTION_DICTIONARYFRAGMENT = @as(c_int, 15587);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_UABINARYFILEDATATYPE = @as(c_int, 15588);
pub const UA_NS0ID_STRUCTUREDESCRIPTION_ENCODING_DEFAULTXML = @as(c_int, 15589);
pub const UA_NS0ID_ENUMDESCRIPTION_ENCODING_DEFAULTXML = @as(c_int, 15590);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_STRUCTUREDESCRIPTION = @as(c_int, 15591);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_STRUCTUREDESCRIPTION_DATATYPEVERSION = @as(c_int, 15592);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_STRUCTUREDESCRIPTION_DICTIONARYFRAGMENT = @as(c_int, 15593);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ENUMDESCRIPTION = @as(c_int, 15594);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ENUMDESCRIPTION_DATATYPEVERSION = @as(c_int, 15595);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ENUMDESCRIPTION_DICTIONARYFRAGMENT = @as(c_int, 15596);
pub const UA_NS0ID_DATASETWRITERDATATYPE = @as(c_int, 15597);
pub const UA_NS0ID_DATASETWRITERTRANSPORTDATATYPE = @as(c_int, 15598);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_STRUCTUREDESCRIPTION = @as(c_int, 15599);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_STRUCTUREDESCRIPTION_DATATYPEVERSION = @as(c_int, 15600);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_STRUCTUREDESCRIPTION_DICTIONARYFRAGMENT = @as(c_int, 15601);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ENUMDESCRIPTION = @as(c_int, 15602);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ENUMDESCRIPTION_DATATYPEVERSION = @as(c_int, 15603);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ENUMDESCRIPTION_DICTIONARYFRAGMENT = @as(c_int, 15604);
pub const UA_NS0ID_DATASETWRITERMESSAGEDATATYPE = @as(c_int, 15605);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_ROLESET = @as(c_int, 15606);
pub const UA_NS0ID_ROLESETTYPE = @as(c_int, 15607);
pub const UA_NS0ID_ROLESETTYPE_ROLENAME_PLACEHOLDER = @as(c_int, 15608);
pub const UA_NS0ID_PUBSUBGROUPDATATYPE = @as(c_int, 15609);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_UABINARYFILEDATATYPE_DATATYPEVERSION = @as(c_int, 15610);
pub const UA_NS0ID_WRITERGROUPTRANSPORTDATATYPE = @as(c_int, 15611);
pub const UA_NS0ID_ROLESETTYPE_ROLENAME_PLACEHOLDER_ADDIDENTITY = @as(c_int, 15612);
pub const UA_NS0ID_ROLESETTYPE_ROLENAME_PLACEHOLDER_ADDIDENTITY_INPUTARGUMENTS = @as(c_int, 15613);
pub const UA_NS0ID_ROLESETTYPE_ROLENAME_PLACEHOLDER_REMOVEIDENTITY = @as(c_int, 15614);
pub const UA_NS0ID_ROLESETTYPE_ROLENAME_PLACEHOLDER_REMOVEIDENTITY_INPUTARGUMENTS = @as(c_int, 15615);
pub const UA_NS0ID_WRITERGROUPMESSAGEDATATYPE = @as(c_int, 15616);
pub const UA_NS0ID_PUBSUBCONNECTIONDATATYPE = @as(c_int, 15617);
pub const UA_NS0ID_CONNECTIONTRANSPORTDATATYPE = @as(c_int, 15618);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_UABINARYFILEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15619);
pub const UA_NS0ID_ROLETYPE = @as(c_int, 15620);
pub const UA_NS0ID_READERGROUPTRANSPORTDATATYPE = @as(c_int, 15621);
pub const UA_NS0ID_READERGROUPMESSAGEDATATYPE = @as(c_int, 15622);
pub const UA_NS0ID_DATASETREADERDATATYPE = @as(c_int, 15623);
pub const UA_NS0ID_ROLETYPE_ADDIDENTITY = @as(c_int, 15624);
pub const UA_NS0ID_ROLETYPE_ADDIDENTITY_INPUTARGUMENTS = @as(c_int, 15625);
pub const UA_NS0ID_ROLETYPE_REMOVEIDENTITY = @as(c_int, 15626);
pub const UA_NS0ID_ROLETYPE_REMOVEIDENTITY_INPUTARGUMENTS = @as(c_int, 15627);
pub const UA_NS0ID_DATASETREADERTRANSPORTDATATYPE = @as(c_int, 15628);
pub const UA_NS0ID_DATASETREADERMESSAGEDATATYPE = @as(c_int, 15629);
pub const UA_NS0ID_SUBSCRIBEDDATASETDATATYPE = @as(c_int, 15630);
pub const UA_NS0ID_TARGETVARIABLESDATATYPE = @as(c_int, 15631);
pub const UA_NS0ID_IDENTITYCRITERIATYPE = @as(c_int, 15632);
pub const UA_NS0ID_IDENTITYCRITERIATYPE_ENUMVALUES = @as(c_int, 15633);
pub const UA_NS0ID_IDENTITYMAPPINGRULETYPE = @as(c_int, 15634);
pub const UA_NS0ID_SUBSCRIBEDDATASETMIRRORDATATYPE = @as(c_int, 15635);
pub const UA_NS0ID_ADDIDENTITYMETHODTYPE = @as(c_int, 15636);
pub const UA_NS0ID_ADDIDENTITYMETHODTYPE_INPUTARGUMENTS = @as(c_int, 15637);
pub const UA_NS0ID_REMOVEIDENTITYMETHODTYPE = @as(c_int, 15638);
pub const UA_NS0ID_REMOVEIDENTITYMETHODTYPE_INPUTARGUMENTS = @as(c_int, 15639);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_BROKERCONNECTIONTRANSPORTDATATYPE = @as(c_int, 15640);
pub const UA_NS0ID_DATASETORDERINGTYPE_ENUMSTRINGS = @as(c_int, 15641);
pub const UA_NS0ID_UADPNETWORKMESSAGECONTENTMASK = @as(c_int, 15642);
pub const UA_NS0ID_UADPNETWORKMESSAGECONTENTMASK_OPTIONSETVALUES = @as(c_int, 15643);
pub const UA_NS0ID_WELLKNOWNROLE_ANONYMOUS = @as(c_int, 15644);
pub const UA_NS0ID_UADPWRITERGROUPMESSAGEDATATYPE = @as(c_int, 15645);
pub const UA_NS0ID_UADPDATASETMESSAGECONTENTMASK = @as(c_int, 15646);
pub const UA_NS0ID_UADPDATASETMESSAGECONTENTMASK_OPTIONSETVALUES = @as(c_int, 15647);
pub const UA_NS0ID_WELLKNOWNROLE_ANONYMOUS_ADDIDENTITY = @as(c_int, 15648);
pub const UA_NS0ID_WELLKNOWNROLE_ANONYMOUS_ADDIDENTITY_INPUTARGUMENTS = @as(c_int, 15649);
pub const UA_NS0ID_WELLKNOWNROLE_ANONYMOUS_REMOVEIDENTITY = @as(c_int, 15650);
pub const UA_NS0ID_WELLKNOWNROLE_ANONYMOUS_REMOVEIDENTITY_INPUTARGUMENTS = @as(c_int, 15651);
pub const UA_NS0ID_UADPDATASETWRITERMESSAGEDATATYPE = @as(c_int, 15652);
pub const UA_NS0ID_UADPDATASETREADERMESSAGEDATATYPE = @as(c_int, 15653);
pub const UA_NS0ID_JSONNETWORKMESSAGECONTENTMASK = @as(c_int, 15654);
pub const UA_NS0ID_JSONNETWORKMESSAGECONTENTMASK_OPTIONSETVALUES = @as(c_int, 15655);
pub const UA_NS0ID_WELLKNOWNROLE_AUTHENTICATEDUSER = @as(c_int, 15656);
pub const UA_NS0ID_JSONWRITERGROUPMESSAGEDATATYPE = @as(c_int, 15657);
pub const UA_NS0ID_JSONDATASETMESSAGECONTENTMASK = @as(c_int, 15658);
pub const UA_NS0ID_JSONDATASETMESSAGECONTENTMASK_OPTIONSETVALUES = @as(c_int, 15659);
pub const UA_NS0ID_WELLKNOWNROLE_AUTHENTICATEDUSER_ADDIDENTITY = @as(c_int, 15660);
pub const UA_NS0ID_WELLKNOWNROLE_AUTHENTICATEDUSER_ADDIDENTITY_INPUTARGUMENTS = @as(c_int, 15661);
pub const UA_NS0ID_WELLKNOWNROLE_AUTHENTICATEDUSER_REMOVEIDENTITY = @as(c_int, 15662);
pub const UA_NS0ID_WELLKNOWNROLE_AUTHENTICATEDUSER_REMOVEIDENTITY_INPUTARGUMENTS = @as(c_int, 15663);
pub const UA_NS0ID_JSONDATASETWRITERMESSAGEDATATYPE = @as(c_int, 15664);
pub const UA_NS0ID_JSONDATASETREADERMESSAGEDATATYPE = @as(c_int, 15665);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_BROKERCONNECTIONTRANSPORTDATATYPE_DATATYPEVERSION = @as(c_int, 15666);
pub const UA_NS0ID_BROKERWRITERGROUPTRANSPORTDATATYPE = @as(c_int, 15667);
pub const UA_NS0ID_WELLKNOWNROLE_OBSERVER = @as(c_int, 15668);
pub const UA_NS0ID_BROKERDATASETWRITERTRANSPORTDATATYPE = @as(c_int, 15669);
pub const UA_NS0ID_BROKERDATASETREADERTRANSPORTDATATYPE = @as(c_int, 15670);
pub const UA_NS0ID_ENDPOINTTYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15671);
pub const UA_NS0ID_WELLKNOWNROLE_OBSERVER_ADDIDENTITY = @as(c_int, 15672);
pub const UA_NS0ID_WELLKNOWNROLE_OBSERVER_ADDIDENTITY_INPUTARGUMENTS = @as(c_int, 15673);
pub const UA_NS0ID_WELLKNOWNROLE_OBSERVER_REMOVEIDENTITY = @as(c_int, 15674);
pub const UA_NS0ID_WELLKNOWNROLE_OBSERVER_REMOVEIDENTITY_INPUTARGUMENTS = @as(c_int, 15675);
pub const UA_NS0ID_DATATYPESCHEMAHEADER_ENCODING_DEFAULTBINARY = @as(c_int, 15676);
pub const UA_NS0ID_PUBLISHEDDATASETDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15677);
pub const UA_NS0ID_PUBLISHEDDATASETSOURCEDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15678);
pub const UA_NS0ID_PUBLISHEDDATAITEMSDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15679);
pub const UA_NS0ID_WELLKNOWNROLE_OPERATOR = @as(c_int, 15680);
pub const UA_NS0ID_PUBLISHEDEVENTSDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15681);
pub const UA_NS0ID_DATASETWRITERDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15682);
pub const UA_NS0ID_DATASETWRITERTRANSPORTDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15683);
pub const UA_NS0ID_WELLKNOWNROLE_OPERATOR_ADDIDENTITY = @as(c_int, 15684);
pub const UA_NS0ID_WELLKNOWNROLE_OPERATOR_ADDIDENTITY_INPUTARGUMENTS = @as(c_int, 15685);
pub const UA_NS0ID_WELLKNOWNROLE_OPERATOR_REMOVEIDENTITY = @as(c_int, 15686);
pub const UA_NS0ID_WELLKNOWNROLE_OPERATOR_REMOVEIDENTITY_INPUTARGUMENTS = @as(c_int, 15687);
pub const UA_NS0ID_DATASETWRITERMESSAGEDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15688);
pub const UA_NS0ID_PUBSUBGROUPDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15689);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_BROKERCONNECTIONTRANSPORTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15690);
pub const UA_NS0ID_WRITERGROUPTRANSPORTDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15691);
pub const UA_NS0ID_WELLKNOWNROLE_SUPERVISOR = @as(c_int, 15692);
pub const UA_NS0ID_WRITERGROUPMESSAGEDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15693);
pub const UA_NS0ID_PUBSUBCONNECTIONDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15694);
pub const UA_NS0ID_CONNECTIONTRANSPORTDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15695);
pub const UA_NS0ID_WELLKNOWNROLE_SUPERVISOR_ADDIDENTITY = @as(c_int, 15696);
pub const UA_NS0ID_WELLKNOWNROLE_SUPERVISOR_ADDIDENTITY_INPUTARGUMENTS = @as(c_int, 15697);
pub const UA_NS0ID_WELLKNOWNROLE_SUPERVISOR_REMOVEIDENTITY = @as(c_int, 15698);
pub const UA_NS0ID_WELLKNOWNROLE_SUPERVISOR_REMOVEIDENTITY_INPUTARGUMENTS = @as(c_int, 15699);
pub const UA_NS0ID_SIMPLETYPEDESCRIPTION_ENCODING_DEFAULTJSON = @as(c_int, 15700);
pub const UA_NS0ID_READERGROUPTRANSPORTDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15701);
pub const UA_NS0ID_READERGROUPMESSAGEDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15702);
pub const UA_NS0ID_DATASETREADERDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15703);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYADMIN = @as(c_int, 15704);
pub const UA_NS0ID_DATASETREADERTRANSPORTDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15705);
pub const UA_NS0ID_DATASETREADERMESSAGEDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15706);
pub const UA_NS0ID_SUBSCRIBEDDATASETDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15707);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYADMIN_ADDIDENTITY = @as(c_int, 15708);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYADMIN_ADDIDENTITY_INPUTARGUMENTS = @as(c_int, 15709);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYADMIN_REMOVEIDENTITY = @as(c_int, 15710);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYADMIN_REMOVEIDENTITY_INPUTARGUMENTS = @as(c_int, 15711);
pub const UA_NS0ID_TARGETVARIABLESDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15712);
pub const UA_NS0ID_SUBSCRIBEDDATASETMIRRORDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15713);
pub const UA_NS0ID_UABINARYFILEDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 15714);
pub const UA_NS0ID_UADPWRITERGROUPMESSAGEDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15715);
pub const UA_NS0ID_WELLKNOWNROLE_CONFIGUREADMIN = @as(c_int, 15716);
pub const UA_NS0ID_UADPDATASETWRITERMESSAGEDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15717);
pub const UA_NS0ID_UADPDATASETREADERMESSAGEDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15718);
pub const UA_NS0ID_JSONWRITERGROUPMESSAGEDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15719);
pub const UA_NS0ID_WELLKNOWNROLE_CONFIGUREADMIN_ADDIDENTITY = @as(c_int, 15720);
pub const UA_NS0ID_WELLKNOWNROLE_CONFIGUREADMIN_ADDIDENTITY_INPUTARGUMENTS = @as(c_int, 15721);
pub const UA_NS0ID_WELLKNOWNROLE_CONFIGUREADMIN_REMOVEIDENTITY = @as(c_int, 15722);
pub const UA_NS0ID_WELLKNOWNROLE_CONFIGUREADMIN_REMOVEIDENTITY_INPUTARGUMENTS = @as(c_int, 15723);
pub const UA_NS0ID_JSONDATASETWRITERMESSAGEDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15724);
pub const UA_NS0ID_JSONDATASETREADERMESSAGEDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15725);
pub const UA_NS0ID_BROKERCONNECTIONTRANSPORTDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 15726);
pub const UA_NS0ID_BROKERWRITERGROUPTRANSPORTDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15727);
pub const UA_NS0ID_IDENTITYMAPPINGRULETYPE_ENCODING_DEFAULTXML = @as(c_int, 15728);
pub const UA_NS0ID_BROKERDATASETWRITERTRANSPORTDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15729);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_IDENTITYMAPPINGRULETYPE = @as(c_int, 15730);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_IDENTITYMAPPINGRULETYPE_DATATYPEVERSION = @as(c_int, 15731);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_IDENTITYMAPPINGRULETYPE_DICTIONARYFRAGMENT = @as(c_int, 15732);
pub const UA_NS0ID_BROKERDATASETREADERTRANSPORTDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15733);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ENDPOINTTYPE = @as(c_int, 15734);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ENDPOINTTYPE_DATATYPEVERSION = @as(c_int, 15735);
pub const UA_NS0ID_IDENTITYMAPPINGRULETYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15736);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ENDPOINTTYPE_DICTIONARYFRAGMENT = @as(c_int, 15737);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_IDENTITYMAPPINGRULETYPE = @as(c_int, 15738);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_IDENTITYMAPPINGRULETYPE_DATATYPEVERSION = @as(c_int, 15739);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_IDENTITYMAPPINGRULETYPE_DICTIONARYFRAGMENT = @as(c_int, 15740);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATATYPESCHEMAHEADER = @as(c_int, 15741);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATATYPESCHEMAHEADER_DATATYPEVERSION = @as(c_int, 15742);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATATYPESCHEMAHEADER_DICTIONARYFRAGMENT = @as(c_int, 15743);
pub const UA_NS0ID_TEMPORARYFILETRANSFERTYPE = @as(c_int, 15744);
pub const UA_NS0ID_TEMPORARYFILETRANSFERTYPE_CLIENTPROCESSINGTIMEOUT = @as(c_int, 15745);
pub const UA_NS0ID_TEMPORARYFILETRANSFERTYPE_GENERATEFILEFORREAD = @as(c_int, 15746);
pub const UA_NS0ID_TEMPORARYFILETRANSFERTYPE_GENERATEFILEFORREAD_INPUTARGUMENTS = @as(c_int, 15747);
pub const UA_NS0ID_TEMPORARYFILETRANSFERTYPE_GENERATEFILEFORREAD_OUTPUTARGUMENTS = @as(c_int, 15748);
pub const UA_NS0ID_TEMPORARYFILETRANSFERTYPE_GENERATEFILEFORWRITE = @as(c_int, 15749);
pub const UA_NS0ID_TEMPORARYFILETRANSFERTYPE_GENERATEFILEFORWRITE_OUTPUTARGUMENTS = @as(c_int, 15750);
pub const UA_NS0ID_TEMPORARYFILETRANSFERTYPE_CLOSEANDCOMMIT = @as(c_int, 15751);
pub const UA_NS0ID_TEMPORARYFILETRANSFERTYPE_CLOSEANDCOMMIT_INPUTARGUMENTS = @as(c_int, 15752);
pub const UA_NS0ID_TEMPORARYFILETRANSFERTYPE_CLOSEANDCOMMIT_OUTPUTARGUMENTS = @as(c_int, 15753);
pub const UA_NS0ID_TEMPORARYFILETRANSFERTYPE_TRANSFERSTATE_PLACEHOLDER = @as(c_int, 15754);
pub const UA_NS0ID_TEMPORARYFILETRANSFERTYPE_TRANSFERSTATE_PLACEHOLDER_CURRENTSTATE = @as(c_int, 15755);
pub const UA_NS0ID_TEMPORARYFILETRANSFERTYPE_TRANSFERSTATE_PLACEHOLDER_CURRENTSTATE_ID = @as(c_int, 15756);
pub const UA_NS0ID_TEMPORARYFILETRANSFERTYPE_TRANSFERSTATE_PLACEHOLDER_CURRENTSTATE_NAME = @as(c_int, 15757);
pub const UA_NS0ID_TEMPORARYFILETRANSFERTYPE_TRANSFERSTATE_PLACEHOLDER_CURRENTSTATE_NUMBER = @as(c_int, 15758);
pub const UA_NS0ID_TEMPORARYFILETRANSFERTYPE_TRANSFERSTATE_PLACEHOLDER_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 15759);
pub const UA_NS0ID_TEMPORARYFILETRANSFERTYPE_TRANSFERSTATE_PLACEHOLDER_LASTTRANSITION = @as(c_int, 15760);
pub const UA_NS0ID_TEMPORARYFILETRANSFERTYPE_TRANSFERSTATE_PLACEHOLDER_LASTTRANSITION_ID = @as(c_int, 15761);
pub const UA_NS0ID_TEMPORARYFILETRANSFERTYPE_TRANSFERSTATE_PLACEHOLDER_LASTTRANSITION_NAME = @as(c_int, 15762);
pub const UA_NS0ID_TEMPORARYFILETRANSFERTYPE_TRANSFERSTATE_PLACEHOLDER_LASTTRANSITION_NUMBER = @as(c_int, 15763);
pub const UA_NS0ID_TEMPORARYFILETRANSFERTYPE_TRANSFERSTATE_PLACEHOLDER_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 15764);
pub const UA_NS0ID_TEMPORARYFILETRANSFERTYPE_TRANSFERSTATE_PLACEHOLDER_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 15765);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBLISHEDDATASETDATATYPE = @as(c_int, 15766);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBLISHEDDATASETDATATYPE_DATATYPEVERSION = @as(c_int, 15767);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBLISHEDDATASETDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15768);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBLISHEDDATASETSOURCEDATATYPE = @as(c_int, 15769);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBLISHEDDATASETSOURCEDATATYPE_DATATYPEVERSION = @as(c_int, 15770);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBLISHEDDATASETSOURCEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15771);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBLISHEDDATAITEMSDATATYPE = @as(c_int, 15772);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBLISHEDDATAITEMSDATATYPE_DATATYPEVERSION = @as(c_int, 15773);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBLISHEDDATAITEMSDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15774);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBLISHEDEVENTSDATATYPE = @as(c_int, 15775);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBLISHEDEVENTSDATATYPE_DATATYPEVERSION = @as(c_int, 15776);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBLISHEDEVENTSDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15777);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATASETWRITERDATATYPE = @as(c_int, 15778);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATASETWRITERDATATYPE_DATATYPEVERSION = @as(c_int, 15779);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATASETWRITERDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15780);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATASETWRITERTRANSPORTDATATYPE = @as(c_int, 15781);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATASETWRITERTRANSPORTDATATYPE_DATATYPEVERSION = @as(c_int, 15782);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATASETWRITERTRANSPORTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15783);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATASETWRITERMESSAGEDATATYPE = @as(c_int, 15784);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATASETWRITERMESSAGEDATATYPE_DATATYPEVERSION = @as(c_int, 15785);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATASETWRITERMESSAGEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15786);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBSUBGROUPDATATYPE = @as(c_int, 15787);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBSUBGROUPDATATYPE_DATATYPEVERSION = @as(c_int, 15788);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBSUBGROUPDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15789);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER = @as(c_int, 15790);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_PUBLISHERID = @as(c_int, 15791);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_TRANSPORTPROFILEURI = @as(c_int, 15792);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_WRITERGROUPTRANSPORTDATATYPE = @as(c_int, 15793);
pub const UA_NS0ID_TEMPORARYFILETRANSFERTYPE_TRANSFERSTATE_PLACEHOLDER_RESET = @as(c_int, 15794);
pub const UA_NS0ID_GENERATEFILEFORREADMETHODTYPE = @as(c_int, 15795);
pub const UA_NS0ID_GENERATEFILEFORREADMETHODTYPE_INPUTARGUMENTS = @as(c_int, 15796);
pub const UA_NS0ID_GENERATEFILEFORREADMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 15797);
pub const UA_NS0ID_GENERATEFILEFORWRITEMETHODTYPE = @as(c_int, 15798);
pub const UA_NS0ID_GENERATEFILEFORWRITEMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 15799);
pub const UA_NS0ID_CLOSEANDCOMMITMETHODTYPE = @as(c_int, 15800);
pub const UA_NS0ID_CLOSEANDCOMMITMETHODTYPE_INPUTARGUMENTS = @as(c_int, 15801);
pub const UA_NS0ID_CLOSEANDCOMMITMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 15802);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE = @as(c_int, 15803);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_CURRENTSTATE = @as(c_int, 15804);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_CURRENTSTATE_ID = @as(c_int, 15805);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_CURRENTSTATE_NAME = @as(c_int, 15806);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_CURRENTSTATE_NUMBER = @as(c_int, 15807);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 15808);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_LASTTRANSITION = @as(c_int, 15809);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_LASTTRANSITION_ID = @as(c_int, 15810);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_LASTTRANSITION_NAME = @as(c_int, 15811);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_LASTTRANSITION_NUMBER = @as(c_int, 15812);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 15813);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 15814);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_IDLE = @as(c_int, 15815);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_IDLE_STATENUMBER = @as(c_int, 15816);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_READPREPARE = @as(c_int, 15817);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_READPREPARE_STATENUMBER = @as(c_int, 15818);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_READTRANSFER = @as(c_int, 15819);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_READTRANSFER_STATENUMBER = @as(c_int, 15820);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_APPLYWRITE = @as(c_int, 15821);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_APPLYWRITE_STATENUMBER = @as(c_int, 15822);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_ERROR = @as(c_int, 15823);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_ERROR_STATENUMBER = @as(c_int, 15824);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_IDLETOREADPREPARE = @as(c_int, 15825);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_IDLETOREADPREPARE_TRANSITIONNUMBER = @as(c_int, 15826);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_READPREPARETOREADTRANSFER = @as(c_int, 15827);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_READPREPARETOREADTRANSFER_TRANSITIONNUMBER = @as(c_int, 15828);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_READTRANSFERTOIDLE = @as(c_int, 15829);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_READTRANSFERTOIDLE_TRANSITIONNUMBER = @as(c_int, 15830);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_IDLETOAPPLYWRITE = @as(c_int, 15831);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_IDLETOAPPLYWRITE_TRANSITIONNUMBER = @as(c_int, 15832);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_APPLYWRITETOIDLE = @as(c_int, 15833);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_APPLYWRITETOIDLE_TRANSITIONNUMBER = @as(c_int, 15834);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_READPREPARETOERROR = @as(c_int, 15835);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_READPREPARETOERROR_TRANSITIONNUMBER = @as(c_int, 15836);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_READTRANSFERTOERROR = @as(c_int, 15837);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_READTRANSFERTOERROR_TRANSITIONNUMBER = @as(c_int, 15838);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_APPLYWRITETOERROR = @as(c_int, 15839);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_APPLYWRITETOERROR_TRANSITIONNUMBER = @as(c_int, 15840);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_ERRORTOIDLE = @as(c_int, 15841);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_ERRORTOIDLE_TRANSITIONNUMBER = @as(c_int, 15842);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_RESET = @as(c_int, 15843);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_STATUS = @as(c_int, 15844);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_STATUS_STATE = @as(c_int, 15845);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_STATUS_ENABLE = @as(c_int, 15846);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_STATUS_DISABLE = @as(c_int, 15847);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_TRANSPORTPROFILEURI_SELECTIONS = @as(c_int, 15848);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_TRANSPORTPROFILEURI_SELECTIONDESCRIPTIONS = @as(c_int, 15849);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_TRANSPORTPROFILEURI_RESTRICTTOLIST = @as(c_int, 15850);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_ADDRESS = @as(c_int, 15851);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_WRITERGROUPTRANSPORTDATATYPE_DATATYPEVERSION = @as(c_int, 15852);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_WRITERGROUPTRANSPORTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15853);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_WRITERGROUPMESSAGEDATATYPE = @as(c_int, 15854);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_WRITERGROUPMESSAGEDATATYPE_DATATYPEVERSION = @as(c_int, 15855);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_WRITERGROUPMESSAGEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15856);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBSUBCONNECTIONDATATYPE = @as(c_int, 15857);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBSUBCONNECTIONDATATYPE_DATATYPEVERSION = @as(c_int, 15858);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBSUBCONNECTIONDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15859);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_CONNECTIONTRANSPORTDATATYPE = @as(c_int, 15860);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_CONNECTIONTRANSPORTDATATYPE_DATATYPEVERSION = @as(c_int, 15861);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_CONNECTIONTRANSPORTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15862);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_ADDRESS_NETWORKINTERFACE = @as(c_int, 15863);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_TRANSPORTSETTINGS = @as(c_int, 15864);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_STATUS = @as(c_int, 15865);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_READERGROUPTRANSPORTDATATYPE = @as(c_int, 15866);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_READERGROUPTRANSPORTDATATYPE_DATATYPEVERSION = @as(c_int, 15867);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_READERGROUPTRANSPORTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15868);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_READERGROUPMESSAGEDATATYPE = @as(c_int, 15869);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_READERGROUPMESSAGEDATATYPE_DATATYPEVERSION = @as(c_int, 15870);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_READERGROUPMESSAGEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15871);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATASETREADERDATATYPE = @as(c_int, 15872);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATASETREADERDATATYPE_DATATYPEVERSION = @as(c_int, 15873);
pub const UA_NS0ID_OVERRIDEVALUEHANDLING = @as(c_int, 15874);
pub const UA_NS0ID_OVERRIDEVALUEHANDLING_ENUMSTRINGS = @as(c_int, 15875);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATASETREADERDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15876);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATASETREADERTRANSPORTDATATYPE = @as(c_int, 15877);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATASETREADERTRANSPORTDATATYPE_DATATYPEVERSION = @as(c_int, 15878);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATASETREADERTRANSPORTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15879);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATASETREADERMESSAGEDATATYPE = @as(c_int, 15880);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATASETREADERMESSAGEDATATYPE_DATATYPEVERSION = @as(c_int, 15881);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATASETREADERMESSAGEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15882);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SUBSCRIBEDDATASETDATATYPE = @as(c_int, 15883);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SUBSCRIBEDDATASETDATATYPE_DATATYPEVERSION = @as(c_int, 15884);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SUBSCRIBEDDATASETDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15885);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_TARGETVARIABLESDATATYPE = @as(c_int, 15886);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_TARGETVARIABLESDATATYPE_DATATYPEVERSION = @as(c_int, 15887);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_TARGETVARIABLESDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15888);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SUBSCRIBEDDATASETMIRRORDATATYPE = @as(c_int, 15889);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SUBSCRIBEDDATASETMIRRORDATATYPE_DATATYPEVERSION = @as(c_int, 15890);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SUBSCRIBEDDATASETMIRRORDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15891);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_STATUS_STATE = @as(c_int, 15892);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_STATUS_ENABLE = @as(c_int, 15893);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_STATUS_DISABLE = @as(c_int, 15894);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_UADPWRITERGROUPMESSAGEDATATYPE = @as(c_int, 15895);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_UADPWRITERGROUPMESSAGEDATATYPE_DATATYPEVERSION = @as(c_int, 15896);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_UADPWRITERGROUPMESSAGEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15897);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_UADPDATASETWRITERMESSAGEDATATYPE = @as(c_int, 15898);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_UADPDATASETWRITERMESSAGEDATATYPE_DATATYPEVERSION = @as(c_int, 15899);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_UADPDATASETWRITERMESSAGEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15900);
pub const UA_NS0ID_SESSIONLESSINVOKEREQUESTTYPE = @as(c_int, 15901);
pub const UA_NS0ID_SESSIONLESSINVOKEREQUESTTYPE_ENCODING_DEFAULTXML = @as(c_int, 15902);
pub const UA_NS0ID_SESSIONLESSINVOKEREQUESTTYPE_ENCODING_DEFAULTBINARY = @as(c_int, 15903);
pub const UA_NS0ID_DATASETFIELDFLAGS = @as(c_int, 15904);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_TRANSPORTSETTINGS = @as(c_int, 15905);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE = @as(c_int, 15906);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_GETSECURITYKEYS = @as(c_int, 15907);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_GETSECURITYKEYS_INPUTARGUMENTS = @as(c_int, 15908);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_GETSECURITYKEYS_OUTPUTARGUMENTS = @as(c_int, 15909);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_GETSECURITYGROUP = @as(c_int, 15910);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_GETSECURITYGROUP_INPUTARGUMENTS = @as(c_int, 15911);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_GETSECURITYGROUP_OUTPUTARGUMENTS = @as(c_int, 15912);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_SECURITYGROUPS = @as(c_int, 15913);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_SECURITYGROUPS_ADDSECURITYGROUP = @as(c_int, 15914);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_SECURITYGROUPS_ADDSECURITYGROUP_INPUTARGUMENTS = @as(c_int, 15915);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_SECURITYGROUPS_ADDSECURITYGROUP_OUTPUTARGUMENTS = @as(c_int, 15916);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_SECURITYGROUPS_REMOVESECURITYGROUP = @as(c_int, 15917);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_SECURITYGROUPS_REMOVESECURITYGROUP_INPUTARGUMENTS = @as(c_int, 15918);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_UADPDATASETREADERMESSAGEDATATYPE = @as(c_int, 15919);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_UADPDATASETREADERMESSAGEDATATYPE_DATATYPEVERSION = @as(c_int, 15920);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_UADPDATASETREADERMESSAGEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15921);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_JSONWRITERGROUPMESSAGEDATATYPE = @as(c_int, 15922);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_JSONWRITERGROUPMESSAGEDATATYPE_DATATYPEVERSION = @as(c_int, 15923);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_JSONWRITERGROUPMESSAGEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15924);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_JSONDATASETWRITERMESSAGEDATATYPE = @as(c_int, 15925);
pub const UA_NS0ID_PUBSUBGROUPTYPE_SECURITYMODE = @as(c_int, 15926);
pub const UA_NS0ID_PUBSUBGROUPTYPE_SECURITYGROUPID = @as(c_int, 15927);
pub const UA_NS0ID_PUBSUBGROUPTYPE_SECURITYKEYSERVICES = @as(c_int, 15928);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_JSONDATASETWRITERMESSAGEDATATYPE_DATATYPEVERSION = @as(c_int, 15929);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_JSONDATASETWRITERMESSAGEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15930);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_JSONDATASETREADERMESSAGEDATATYPE = @as(c_int, 15931);
pub const UA_NS0ID_DATASETREADERTYPE_SECURITYMODE = @as(c_int, 15932);
pub const UA_NS0ID_DATASETREADERTYPE_SECURITYGROUPID = @as(c_int, 15933);
pub const UA_NS0ID_DATASETREADERTYPE_SECURITYKEYSERVICES = @as(c_int, 15934);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_JSONDATASETREADERMESSAGEDATATYPE_DATATYPEVERSION = @as(c_int, 15935);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_JSONDATASETREADERMESSAGEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15936);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS = @as(c_int, 15937);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_DIAGNOSTICSLEVEL = @as(c_int, 15938);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION = @as(c_int, 15939);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_BROKERWRITERGROUPTRANSPORTDATATYPE = @as(c_int, 15940);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_BROKERWRITERGROUPTRANSPORTDATATYPE_DATATYPEVERSION = @as(c_int, 15941);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_BROKERWRITERGROUPTRANSPORTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15942);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_BROKERDATASETWRITERTRANSPORTDATATYPE = @as(c_int, 15943);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_BROKERDATASETWRITERTRANSPORTDATATYPE_DATATYPEVERSION = @as(c_int, 15944);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_BROKERDATASETWRITERTRANSPORTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15945);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_BROKERDATASETREADERTRANSPORTDATATYPE = @as(c_int, 15946);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_BROKERDATASETREADERTRANSPORTDATATYPE_DATATYPEVERSION = @as(c_int, 15947);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_BROKERDATASETREADERTRANSPORTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 15948);
pub const UA_NS0ID_ENDPOINTTYPE_ENCODING_DEFAULTXML = @as(c_int, 15949);
pub const UA_NS0ID_DATATYPESCHEMAHEADER_ENCODING_DEFAULTXML = @as(c_int, 15950);
pub const UA_NS0ID_PUBLISHEDDATASETDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 15951);
pub const UA_NS0ID_PUBLISHEDDATASETSOURCEDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 15952);
pub const UA_NS0ID_PUBLISHEDDATAITEMSDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 15953);
pub const UA_NS0ID_PUBLISHEDEVENTSDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 15954);
pub const UA_NS0ID_DATASETWRITERDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 15955);
pub const UA_NS0ID_DATASETWRITERTRANSPORTDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 15956);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA = @as(c_int, 15957);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEURI = @as(c_int, 15958);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEVERSION = @as(c_int, 15959);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEPUBLICATIONDATE = @as(c_int, 15960);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_ISNAMESPACESUBSET = @as(c_int, 15961);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_STATICNODEIDTYPES = @as(c_int, 15962);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_STATICNUMERICNODEIDRANGE = @as(c_int, 15963);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_STATICSTRINGNODEIDPATTERN = @as(c_int, 15964);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEFILE = @as(c_int, 15965);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEFILE_SIZE = @as(c_int, 15966);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEFILE_WRITABLE = @as(c_int, 15967);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEFILE_USERWRITABLE = @as(c_int, 15968);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEFILE_OPENCOUNT = @as(c_int, 15969);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEFILE_MIMETYPE = @as(c_int, 15970);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEFILE_OPEN = @as(c_int, 15971);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEFILE_OPEN_INPUTARGUMENTS = @as(c_int, 15972);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEFILE_OPEN_OUTPUTARGUMENTS = @as(c_int, 15973);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEFILE_CLOSE = @as(c_int, 15974);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEFILE_CLOSE_INPUTARGUMENTS = @as(c_int, 15975);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEFILE_READ = @as(c_int, 15976);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEFILE_READ_INPUTARGUMENTS = @as(c_int, 15977);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEFILE_READ_OUTPUTARGUMENTS = @as(c_int, 15978);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEFILE_WRITE = @as(c_int, 15979);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEFILE_WRITE_INPUTARGUMENTS = @as(c_int, 15980);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEFILE_GETPOSITION = @as(c_int, 15981);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEFILE_GETPOSITION_INPUTARGUMENTS = @as(c_int, 15982);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEFILE_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 15983);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEFILE_SETPOSITION = @as(c_int, 15984);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEFILE_SETPOSITION_INPUTARGUMENTS = @as(c_int, 15985);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEFILE_EXPORTNAMESPACE = @as(c_int, 15986);
pub const UA_NS0ID_DATASETWRITERMESSAGEDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 15987);
pub const UA_NS0ID_PUBSUBGROUPDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 15988);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_ACTIVE = @as(c_int, 15989);
pub const UA_NS0ID_WRITERGROUPTRANSPORTDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 15990);
pub const UA_NS0ID_WRITERGROUPMESSAGEDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 15991);
pub const UA_NS0ID_PUBSUBCONNECTIONDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 15992);
pub const UA_NS0ID_CONNECTIONTRANSPORTDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 15993);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_CLASSIFICATION = @as(c_int, 15994);
pub const UA_NS0ID_READERGROUPTRANSPORTDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 15995);
pub const UA_NS0ID_READERGROUPMESSAGEDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 15996);
pub const UA_NS0ID_ROLESETTYPE_ADDROLE = @as(c_int, 15997);
pub const UA_NS0ID_ROLESETTYPE_ADDROLE_INPUTARGUMENTS = @as(c_int, 15998);
pub const UA_NS0ID_ROLESETTYPE_ADDROLE_OUTPUTARGUMENTS = @as(c_int, 15999);
pub const UA_NS0ID_ROLESETTYPE_REMOVEROLE = @as(c_int, 16000);
pub const UA_NS0ID_ROLESETTYPE_REMOVEROLE_INPUTARGUMENTS = @as(c_int, 16001);
pub const UA_NS0ID_ADDROLEMETHODTYPE = @as(c_int, 16002);
pub const UA_NS0ID_ADDROLEMETHODTYPE_INPUTARGUMENTS = @as(c_int, 16003);
pub const UA_NS0ID_ADDROLEMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 16004);
pub const UA_NS0ID_REMOVEROLEMETHODTYPE = @as(c_int, 16005);
pub const UA_NS0ID_REMOVEROLEMETHODTYPE_INPUTARGUMENTS = @as(c_int, 16006);
pub const UA_NS0ID_DATASETREADERDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 16007);
pub const UA_NS0ID_DATASETREADERTRANSPORTDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 16008);
pub const UA_NS0ID_DATASETREADERMESSAGEDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 16009);
pub const UA_NS0ID_SUBSCRIBEDDATASETDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 16010);
pub const UA_NS0ID_TARGETVARIABLESDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 16011);
pub const UA_NS0ID_SUBSCRIBEDDATASETMIRRORDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 16012);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_DIAGNOSTICSLEVEL = @as(c_int, 16013);
pub const UA_NS0ID_UADPWRITERGROUPMESSAGEDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 16014);
pub const UA_NS0ID_UADPDATASETWRITERMESSAGEDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 16015);
pub const UA_NS0ID_UADPDATASETREADERMESSAGEDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 16016);
pub const UA_NS0ID_JSONWRITERGROUPMESSAGEDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 16017);
pub const UA_NS0ID_JSONDATASETWRITERMESSAGEDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 16018);
pub const UA_NS0ID_JSONDATASETREADERMESSAGEDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 16019);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_TIMEFIRSTCHANGE = @as(c_int, 16020);
pub const UA_NS0ID_BROKERWRITERGROUPTRANSPORTDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 16021);
pub const UA_NS0ID_BROKERDATASETWRITERTRANSPORTDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 16022);
pub const UA_NS0ID_BROKERDATASETREADERTRANSPORTDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 16023);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ENDPOINTTYPE = @as(c_int, 16024);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ENDPOINTTYPE_DATATYPEVERSION = @as(c_int, 16025);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ENDPOINTTYPE_DICTIONARYFRAGMENT = @as(c_int, 16026);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATATYPESCHEMAHEADER = @as(c_int, 16027);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATATYPESCHEMAHEADER_DATATYPEVERSION = @as(c_int, 16028);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATATYPESCHEMAHEADER_DICTIONARYFRAGMENT = @as(c_int, 16029);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBLISHEDDATASETDATATYPE = @as(c_int, 16030);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBLISHEDDATASETDATATYPE_DATATYPEVERSION = @as(c_int, 16031);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBLISHEDDATASETDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16032);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBLISHEDDATASETSOURCEDATATYPE = @as(c_int, 16033);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBLISHEDDATASETSOURCEDATATYPE_DATATYPEVERSION = @as(c_int, 16034);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBLISHEDDATASETSOURCEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16035);
pub const UA_NS0ID_WELLKNOWNROLE_ENGINEER = @as(c_int, 16036);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBLISHEDDATAITEMSDATATYPE = @as(c_int, 16037);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBLISHEDDATAITEMSDATATYPE_DATATYPEVERSION = @as(c_int, 16038);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBLISHEDDATAITEMSDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16039);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBLISHEDEVENTSDATATYPE = @as(c_int, 16040);
pub const UA_NS0ID_WELLKNOWNROLE_ENGINEER_ADDIDENTITY = @as(c_int, 16041);
pub const UA_NS0ID_WELLKNOWNROLE_ENGINEER_ADDIDENTITY_INPUTARGUMENTS = @as(c_int, 16042);
pub const UA_NS0ID_WELLKNOWNROLE_ENGINEER_REMOVEIDENTITY = @as(c_int, 16043);
pub const UA_NS0ID_WELLKNOWNROLE_ENGINEER_REMOVEIDENTITY_INPUTARGUMENTS = @as(c_int, 16044);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBLISHEDEVENTSDATATYPE_DATATYPEVERSION = @as(c_int, 16045);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBLISHEDEVENTSDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16046);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATASETWRITERDATATYPE = @as(c_int, 16047);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATASETWRITERDATATYPE_DATATYPEVERSION = @as(c_int, 16048);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATASETWRITERDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16049);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATASETWRITERTRANSPORTDATATYPE = @as(c_int, 16050);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATASETWRITERTRANSPORTDATATYPE_DATATYPEVERSION = @as(c_int, 16051);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATASETWRITERTRANSPORTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16052);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATASETWRITERMESSAGEDATATYPE = @as(c_int, 16053);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATASETWRITERMESSAGEDATATYPE_DATATYPEVERSION = @as(c_int, 16054);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATASETWRITERMESSAGEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16055);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBSUBGROUPDATATYPE = @as(c_int, 16056);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBSUBGROUPDATATYPE_DATATYPEVERSION = @as(c_int, 16057);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBSUBGROUPDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16058);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR = @as(c_int, 16059);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_ACTIVE = @as(c_int, 16060);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_CLASSIFICATION = @as(c_int, 16061);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_WRITERGROUPTRANSPORTDATATYPE = @as(c_int, 16062);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_WRITERGROUPTRANSPORTDATATYPE_DATATYPEVERSION = @as(c_int, 16063);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_WRITERGROUPTRANSPORTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16064);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_WRITERGROUPMESSAGEDATATYPE = @as(c_int, 16065);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_WRITERGROUPMESSAGEDATATYPE_DATATYPEVERSION = @as(c_int, 16066);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_WRITERGROUPMESSAGEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16067);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBSUBCONNECTIONDATATYPE = @as(c_int, 16068);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBSUBCONNECTIONDATATYPE_DATATYPEVERSION = @as(c_int, 16069);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBSUBCONNECTIONDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16070);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_CONNECTIONTRANSPORTDATATYPE = @as(c_int, 16071);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_CONNECTIONTRANSPORTDATATYPE_DATATYPEVERSION = @as(c_int, 16072);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_CONNECTIONTRANSPORTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16073);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_DIAGNOSTICSLEVEL = @as(c_int, 16074);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_TIMEFIRSTCHANGE = @as(c_int, 16075);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_RESET = @as(c_int, 16076);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_READERGROUPTRANSPORTDATATYPE = @as(c_int, 16077);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_READERGROUPTRANSPORTDATATYPE_DATATYPEVERSION = @as(c_int, 16078);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_READERGROUPTRANSPORTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16079);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_READERGROUPMESSAGEDATATYPE = @as(c_int, 16080);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_READERGROUPMESSAGEDATATYPE_DATATYPEVERSION = @as(c_int, 16081);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_READERGROUPMESSAGEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16082);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATASETREADERDATATYPE = @as(c_int, 16083);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATASETREADERDATATYPE_DATATYPEVERSION = @as(c_int, 16084);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATASETREADERDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16085);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATASETREADERTRANSPORTDATATYPE = @as(c_int, 16086);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATASETREADERTRANSPORTDATATYPE_DATATYPEVERSION = @as(c_int, 16087);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATASETREADERTRANSPORTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16088);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATASETREADERMESSAGEDATATYPE = @as(c_int, 16089);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATASETREADERMESSAGEDATATYPE_DATATYPEVERSION = @as(c_int, 16090);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATASETREADERMESSAGEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16091);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SUBSCRIBEDDATASETDATATYPE = @as(c_int, 16092);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SUBSCRIBEDDATASETDATATYPE_DATATYPEVERSION = @as(c_int, 16093);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SUBSCRIBEDDATASETDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16094);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_TARGETVARIABLESDATATYPE = @as(c_int, 16095);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_TARGETVARIABLESDATATYPE_DATATYPEVERSION = @as(c_int, 16096);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_TARGETVARIABLESDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16097);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SUBSCRIBEDDATASETMIRRORDATATYPE = @as(c_int, 16098);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SUBSCRIBEDDATASETMIRRORDATATYPE_DATATYPEVERSION = @as(c_int, 16099);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SUBSCRIBEDDATASETMIRRORDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16100);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_SUBERROR = @as(c_int, 16101);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS = @as(c_int, 16102);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR = @as(c_int, 16103);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_UADPWRITERGROUPMESSAGEDATATYPE = @as(c_int, 16104);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_UADPWRITERGROUPMESSAGEDATATYPE_DATATYPEVERSION = @as(c_int, 16105);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_UADPWRITERGROUPMESSAGEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16106);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_UADPDATASETWRITERMESSAGEDATATYPE = @as(c_int, 16107);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_UADPDATASETWRITERMESSAGEDATATYPE_DATATYPEVERSION = @as(c_int, 16108);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_UADPDATASETWRITERMESSAGEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16109);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_UADPDATASETREADERMESSAGEDATATYPE = @as(c_int, 16110);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_UADPDATASETREADERMESSAGEDATATYPE_DATATYPEVERSION = @as(c_int, 16111);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_UADPDATASETREADERMESSAGEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16112);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_JSONWRITERGROUPMESSAGEDATATYPE = @as(c_int, 16113);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_JSONWRITERGROUPMESSAGEDATATYPE_DATATYPEVERSION = @as(c_int, 16114);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_JSONWRITERGROUPMESSAGEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16115);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_JSONDATASETWRITERMESSAGEDATATYPE = @as(c_int, 16116);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_JSONDATASETWRITERMESSAGEDATATYPE_DATATYPEVERSION = @as(c_int, 16117);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_JSONDATASETWRITERMESSAGEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16118);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_JSONDATASETREADERMESSAGEDATATYPE = @as(c_int, 16119);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_JSONDATASETREADERMESSAGEDATATYPE_DATATYPEVERSION = @as(c_int, 16120);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_JSONDATASETREADERMESSAGEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16121);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_ACTIVE = @as(c_int, 16122);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_CLASSIFICATION = @as(c_int, 16123);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_DIAGNOSTICSLEVEL = @as(c_int, 16124);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_BROKERWRITERGROUPTRANSPORTDATATYPE = @as(c_int, 16125);
pub const UA_NS0ID_ROLEPERMISSIONTYPE_ENCODING_DEFAULTXML = @as(c_int, 16126);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ROLEPERMISSIONTYPE = @as(c_int, 16127);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ROLEPERMISSIONTYPE_DATATYPEVERSION = @as(c_int, 16128);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ROLEPERMISSIONTYPE_DICTIONARYFRAGMENT = @as(c_int, 16129);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_BROKERWRITERGROUPTRANSPORTDATATYPE_DATATYPEVERSION = @as(c_int, 16130);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ROLEPERMISSIONTYPE = @as(c_int, 16131);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ROLEPERMISSIONTYPE_DATATYPEVERSION = @as(c_int, 16132);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ROLEPERMISSIONTYPE_DICTIONARYFRAGMENT = @as(c_int, 16133);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_DEFAULTROLEPERMISSIONS = @as(c_int, 16134);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_DEFAULTUSERROLEPERMISSIONS = @as(c_int, 16135);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_DEFAULTACCESSRESTRICTIONS = @as(c_int, 16136);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_DEFAULTROLEPERMISSIONS = @as(c_int, 16137);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_DEFAULTUSERROLEPERMISSIONS = @as(c_int, 16138);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_DEFAULTACCESSRESTRICTIONS = @as(c_int, 16139);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_DEFAULTROLEPERMISSIONS = @as(c_int, 16140);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_DEFAULTUSERROLEPERMISSIONS = @as(c_int, 16141);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_DEFAULTACCESSRESTRICTIONS = @as(c_int, 16142);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_BROKERWRITERGROUPTRANSPORTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16143);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_BROKERDATASETWRITERTRANSPORTDATATYPE = @as(c_int, 16144);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_BROKERDATASETWRITERTRANSPORTDATATYPE_DATATYPEVERSION = @as(c_int, 16145);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_BROKERDATASETWRITERTRANSPORTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16146);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_BROKERDATASETREADERTRANSPORTDATATYPE = @as(c_int, 16147);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_BROKERDATASETREADERTRANSPORTDATATYPE_DATATYPEVERSION = @as(c_int, 16148);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_BROKERDATASETREADERTRANSPORTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 16149);
pub const UA_NS0ID_ENDPOINTTYPE_ENCODING_DEFAULTJSON = @as(c_int, 16150);
pub const UA_NS0ID_DATATYPESCHEMAHEADER_ENCODING_DEFAULTJSON = @as(c_int, 16151);
pub const UA_NS0ID_PUBLISHEDDATASETDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16152);
pub const UA_NS0ID_PUBLISHEDDATASETSOURCEDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16153);
pub const UA_NS0ID_PUBLISHEDDATAITEMSDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16154);
pub const UA_NS0ID_PUBLISHEDEVENTSDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16155);
pub const UA_NS0ID_DATASETWRITERDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16156);
pub const UA_NS0ID_DATASETWRITERTRANSPORTDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16157);
pub const UA_NS0ID_DATASETWRITERMESSAGEDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16158);
pub const UA_NS0ID_PUBSUBGROUPDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16159);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_TIMEFIRSTCHANGE = @as(c_int, 16160);
pub const UA_NS0ID_WRITERGROUPTRANSPORTDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16161);
pub const UA_NS0ID_ROLESETTYPE_ROLENAME_PLACEHOLDER_IDENTITIES = @as(c_int, 16162);
pub const UA_NS0ID_ROLESETTYPE_ROLENAME_PLACEHOLDER_APPLICATIONS = @as(c_int, 16163);
pub const UA_NS0ID_ROLESETTYPE_ROLENAME_PLACEHOLDER_ENDPOINTS = @as(c_int, 16164);
pub const UA_NS0ID_ROLESETTYPE_ROLENAME_PLACEHOLDER_ADDAPPLICATION = @as(c_int, 16165);
pub const UA_NS0ID_ROLESETTYPE_ROLENAME_PLACEHOLDER_ADDAPPLICATION_INPUTARGUMENTS = @as(c_int, 16166);
pub const UA_NS0ID_ROLESETTYPE_ROLENAME_PLACEHOLDER_REMOVEAPPLICATION = @as(c_int, 16167);
pub const UA_NS0ID_ROLESETTYPE_ROLENAME_PLACEHOLDER_REMOVEAPPLICATION_INPUTARGUMENTS = @as(c_int, 16168);
pub const UA_NS0ID_ROLESETTYPE_ROLENAME_PLACEHOLDER_ADDENDPOINT = @as(c_int, 16169);
pub const UA_NS0ID_ROLESETTYPE_ROLENAME_PLACEHOLDER_ADDENDPOINT_INPUTARGUMENTS = @as(c_int, 16170);
pub const UA_NS0ID_ROLESETTYPE_ROLENAME_PLACEHOLDER_REMOVEENDPOINT = @as(c_int, 16171);
pub const UA_NS0ID_ROLESETTYPE_ROLENAME_PLACEHOLDER_REMOVEENDPOINT_INPUTARGUMENTS = @as(c_int, 16172);
pub const UA_NS0ID_ROLETYPE_IDENTITIES = @as(c_int, 16173);
pub const UA_NS0ID_ROLETYPE_APPLICATIONS = @as(c_int, 16174);
pub const UA_NS0ID_ROLETYPE_ENDPOINTS = @as(c_int, 16175);
pub const UA_NS0ID_ROLETYPE_ADDAPPLICATION = @as(c_int, 16176);
pub const UA_NS0ID_ROLETYPE_ADDAPPLICATION_INPUTARGUMENTS = @as(c_int, 16177);
pub const UA_NS0ID_ROLETYPE_REMOVEAPPLICATION = @as(c_int, 16178);
pub const UA_NS0ID_ROLETYPE_REMOVEAPPLICATION_INPUTARGUMENTS = @as(c_int, 16179);
pub const UA_NS0ID_ROLETYPE_ADDENDPOINT = @as(c_int, 16180);
pub const UA_NS0ID_ROLETYPE_ADDENDPOINT_INPUTARGUMENTS = @as(c_int, 16181);
pub const UA_NS0ID_ROLETYPE_REMOVEENDPOINT = @as(c_int, 16182);
pub const UA_NS0ID_ROLETYPE_REMOVEENDPOINT_INPUTARGUMENTS = @as(c_int, 16183);
pub const UA_NS0ID_ADDAPPLICATIONMETHODTYPE = @as(c_int, 16184);
pub const UA_NS0ID_ADDAPPLICATIONMETHODTYPE_INPUTARGUMENTS = @as(c_int, 16185);
pub const UA_NS0ID_REMOVEAPPLICATIONMETHODTYPE = @as(c_int, 16186);
pub const UA_NS0ID_REMOVEAPPLICATIONMETHODTYPE_INPUTARGUMENTS = @as(c_int, 16187);
pub const UA_NS0ID_ADDENDPOINTMETHODTYPE = @as(c_int, 16188);
pub const UA_NS0ID_ADDENDPOINTMETHODTYPE_INPUTARGUMENTS = @as(c_int, 16189);
pub const UA_NS0ID_REMOVEENDPOINTMETHODTYPE = @as(c_int, 16190);
pub const UA_NS0ID_REMOVEENDPOINTMETHODTYPE_INPUTARGUMENTS = @as(c_int, 16191);
pub const UA_NS0ID_WELLKNOWNROLE_ANONYMOUS_IDENTITIES = @as(c_int, 16192);
pub const UA_NS0ID_WELLKNOWNROLE_ANONYMOUS_APPLICATIONS = @as(c_int, 16193);
pub const UA_NS0ID_WELLKNOWNROLE_ANONYMOUS_ENDPOINTS = @as(c_int, 16194);
pub const UA_NS0ID_WELLKNOWNROLE_ANONYMOUS_ADDAPPLICATION = @as(c_int, 16195);
pub const UA_NS0ID_WELLKNOWNROLE_ANONYMOUS_ADDAPPLICATION_INPUTARGUMENTS = @as(c_int, 16196);
pub const UA_NS0ID_WELLKNOWNROLE_ANONYMOUS_REMOVEAPPLICATION = @as(c_int, 16197);
pub const UA_NS0ID_WELLKNOWNROLE_ANONYMOUS_REMOVEAPPLICATION_INPUTARGUMENTS = @as(c_int, 16198);
pub const UA_NS0ID_WELLKNOWNROLE_ANONYMOUS_ADDENDPOINT = @as(c_int, 16199);
pub const UA_NS0ID_WELLKNOWNROLE_ANONYMOUS_ADDENDPOINT_INPUTARGUMENTS = @as(c_int, 16200);
pub const UA_NS0ID_WELLKNOWNROLE_ANONYMOUS_REMOVEENDPOINT = @as(c_int, 16201);
pub const UA_NS0ID_WELLKNOWNROLE_ANONYMOUS_REMOVEENDPOINT_INPUTARGUMENTS = @as(c_int, 16202);
pub const UA_NS0ID_WELLKNOWNROLE_AUTHENTICATEDUSER_IDENTITIES = @as(c_int, 16203);
pub const UA_NS0ID_WELLKNOWNROLE_AUTHENTICATEDUSER_APPLICATIONS = @as(c_int, 16204);
pub const UA_NS0ID_WELLKNOWNROLE_AUTHENTICATEDUSER_ENDPOINTS = @as(c_int, 16205);
pub const UA_NS0ID_WELLKNOWNROLE_AUTHENTICATEDUSER_ADDAPPLICATION = @as(c_int, 16206);
pub const UA_NS0ID_WELLKNOWNROLE_AUTHENTICATEDUSER_ADDAPPLICATION_INPUTARGUMENTS = @as(c_int, 16207);
pub const UA_NS0ID_WELLKNOWNROLE_AUTHENTICATEDUSER_REMOVEAPPLICATION = @as(c_int, 16208);
pub const UA_NS0ID_WELLKNOWNROLE_AUTHENTICATEDUSER_REMOVEAPPLICATION_INPUTARGUMENTS = @as(c_int, 16209);
pub const UA_NS0ID_WELLKNOWNROLE_AUTHENTICATEDUSER_ADDENDPOINT = @as(c_int, 16210);
pub const UA_NS0ID_WELLKNOWNROLE_AUTHENTICATEDUSER_ADDENDPOINT_INPUTARGUMENTS = @as(c_int, 16211);
pub const UA_NS0ID_WELLKNOWNROLE_AUTHENTICATEDUSER_REMOVEENDPOINT = @as(c_int, 16212);
pub const UA_NS0ID_WELLKNOWNROLE_AUTHENTICATEDUSER_REMOVEENDPOINT_INPUTARGUMENTS = @as(c_int, 16213);
pub const UA_NS0ID_WELLKNOWNROLE_OBSERVER_IDENTITIES = @as(c_int, 16214);
pub const UA_NS0ID_WELLKNOWNROLE_OBSERVER_APPLICATIONS = @as(c_int, 16215);
pub const UA_NS0ID_WELLKNOWNROLE_OBSERVER_ENDPOINTS = @as(c_int, 16216);
pub const UA_NS0ID_WELLKNOWNROLE_OBSERVER_ADDAPPLICATION = @as(c_int, 16217);
pub const UA_NS0ID_WELLKNOWNROLE_OBSERVER_ADDAPPLICATION_INPUTARGUMENTS = @as(c_int, 16218);
pub const UA_NS0ID_WELLKNOWNROLE_OBSERVER_REMOVEAPPLICATION = @as(c_int, 16219);
pub const UA_NS0ID_WELLKNOWNROLE_OBSERVER_REMOVEAPPLICATION_INPUTARGUMENTS = @as(c_int, 16220);
pub const UA_NS0ID_WELLKNOWNROLE_OBSERVER_ADDENDPOINT = @as(c_int, 16221);
pub const UA_NS0ID_WELLKNOWNROLE_OBSERVER_ADDENDPOINT_INPUTARGUMENTS = @as(c_int, 16222);
pub const UA_NS0ID_WELLKNOWNROLE_OBSERVER_REMOVEENDPOINT = @as(c_int, 16223);
pub const UA_NS0ID_WELLKNOWNROLE_OBSERVER_REMOVEENDPOINT_INPUTARGUMENTS = @as(c_int, 16224);
pub const UA_NS0ID_WELLKNOWNROLE_OPERATOR_IDENTITIES = @as(c_int, 16225);
pub const UA_NS0ID_WELLKNOWNROLE_OPERATOR_APPLICATIONS = @as(c_int, 16226);
pub const UA_NS0ID_WELLKNOWNROLE_OPERATOR_ENDPOINTS = @as(c_int, 16227);
pub const UA_NS0ID_WELLKNOWNROLE_OPERATOR_ADDAPPLICATION = @as(c_int, 16228);
pub const UA_NS0ID_WELLKNOWNROLE_OPERATOR_ADDAPPLICATION_INPUTARGUMENTS = @as(c_int, 16229);
pub const UA_NS0ID_WELLKNOWNROLE_OPERATOR_REMOVEAPPLICATION = @as(c_int, 16230);
pub const UA_NS0ID_WELLKNOWNROLE_OPERATOR_REMOVEAPPLICATION_INPUTARGUMENTS = @as(c_int, 16231);
pub const UA_NS0ID_WELLKNOWNROLE_OPERATOR_ADDENDPOINT = @as(c_int, 16232);
pub const UA_NS0ID_WELLKNOWNROLE_OPERATOR_ADDENDPOINT_INPUTARGUMENTS = @as(c_int, 16233);
pub const UA_NS0ID_WELLKNOWNROLE_OPERATOR_REMOVEENDPOINT = @as(c_int, 16234);
pub const UA_NS0ID_WELLKNOWNROLE_OPERATOR_REMOVEENDPOINT_INPUTARGUMENTS = @as(c_int, 16235);
pub const UA_NS0ID_WELLKNOWNROLE_ENGINEER_IDENTITIES = @as(c_int, 16236);
pub const UA_NS0ID_WELLKNOWNROLE_ENGINEER_APPLICATIONS = @as(c_int, 16237);
pub const UA_NS0ID_WELLKNOWNROLE_ENGINEER_ENDPOINTS = @as(c_int, 16238);
pub const UA_NS0ID_WELLKNOWNROLE_ENGINEER_ADDAPPLICATION = @as(c_int, 16239);
pub const UA_NS0ID_WELLKNOWNROLE_ENGINEER_ADDAPPLICATION_INPUTARGUMENTS = @as(c_int, 16240);
pub const UA_NS0ID_WELLKNOWNROLE_ENGINEER_REMOVEAPPLICATION = @as(c_int, 16241);
pub const UA_NS0ID_WELLKNOWNROLE_ENGINEER_REMOVEAPPLICATION_INPUTARGUMENTS = @as(c_int, 16242);
pub const UA_NS0ID_WELLKNOWNROLE_ENGINEER_ADDENDPOINT = @as(c_int, 16243);
pub const UA_NS0ID_WELLKNOWNROLE_ENGINEER_ADDENDPOINT_INPUTARGUMENTS = @as(c_int, 16244);
pub const UA_NS0ID_WELLKNOWNROLE_ENGINEER_REMOVEENDPOINT = @as(c_int, 16245);
pub const UA_NS0ID_WELLKNOWNROLE_ENGINEER_REMOVEENDPOINT_INPUTARGUMENTS = @as(c_int, 16246);
pub const UA_NS0ID_WELLKNOWNROLE_SUPERVISOR_IDENTITIES = @as(c_int, 16247);
pub const UA_NS0ID_WELLKNOWNROLE_SUPERVISOR_APPLICATIONS = @as(c_int, 16248);
pub const UA_NS0ID_WELLKNOWNROLE_SUPERVISOR_ENDPOINTS = @as(c_int, 16249);
pub const UA_NS0ID_WELLKNOWNROLE_SUPERVISOR_ADDAPPLICATION = @as(c_int, 16250);
pub const UA_NS0ID_WELLKNOWNROLE_SUPERVISOR_ADDAPPLICATION_INPUTARGUMENTS = @as(c_int, 16251);
pub const UA_NS0ID_WELLKNOWNROLE_SUPERVISOR_REMOVEAPPLICATION = @as(c_int, 16252);
pub const UA_NS0ID_WELLKNOWNROLE_SUPERVISOR_REMOVEAPPLICATION_INPUTARGUMENTS = @as(c_int, 16253);
pub const UA_NS0ID_WELLKNOWNROLE_SUPERVISOR_ADDENDPOINT = @as(c_int, 16254);
pub const UA_NS0ID_WELLKNOWNROLE_SUPERVISOR_ADDENDPOINT_INPUTARGUMENTS = @as(c_int, 16255);
pub const UA_NS0ID_WELLKNOWNROLE_SUPERVISOR_REMOVEENDPOINT = @as(c_int, 16256);
pub const UA_NS0ID_WELLKNOWNROLE_SUPERVISOR_REMOVEENDPOINT_INPUTARGUMENTS = @as(c_int, 16257);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYADMIN_IDENTITIES = @as(c_int, 16258);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYADMIN_APPLICATIONS = @as(c_int, 16259);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYADMIN_ENDPOINTS = @as(c_int, 16260);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYADMIN_ADDAPPLICATION = @as(c_int, 16261);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYADMIN_ADDAPPLICATION_INPUTARGUMENTS = @as(c_int, 16262);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYADMIN_REMOVEAPPLICATION = @as(c_int, 16263);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYADMIN_REMOVEAPPLICATION_INPUTARGUMENTS = @as(c_int, 16264);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYADMIN_ADDENDPOINT = @as(c_int, 16265);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYADMIN_ADDENDPOINT_INPUTARGUMENTS = @as(c_int, 16266);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYADMIN_REMOVEENDPOINT = @as(c_int, 16267);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYADMIN_REMOVEENDPOINT_INPUTARGUMENTS = @as(c_int, 16268);
pub const UA_NS0ID_WELLKNOWNROLE_CONFIGUREADMIN_IDENTITIES = @as(c_int, 16269);
pub const UA_NS0ID_WELLKNOWNROLE_CONFIGUREADMIN_APPLICATIONS = @as(c_int, 16270);
pub const UA_NS0ID_WELLKNOWNROLE_CONFIGUREADMIN_ENDPOINTS = @as(c_int, 16271);
pub const UA_NS0ID_WELLKNOWNROLE_CONFIGUREADMIN_ADDAPPLICATION = @as(c_int, 16272);
pub const UA_NS0ID_WELLKNOWNROLE_CONFIGUREADMIN_ADDAPPLICATION_INPUTARGUMENTS = @as(c_int, 16273);
pub const UA_NS0ID_WELLKNOWNROLE_CONFIGUREADMIN_REMOVEAPPLICATION = @as(c_int, 16274);
pub const UA_NS0ID_WELLKNOWNROLE_CONFIGUREADMIN_REMOVEAPPLICATION_INPUTARGUMENTS = @as(c_int, 16275);
pub const UA_NS0ID_WELLKNOWNROLE_CONFIGUREADMIN_ADDENDPOINT = @as(c_int, 16276);
pub const UA_NS0ID_WELLKNOWNROLE_CONFIGUREADMIN_ADDENDPOINT_INPUTARGUMENTS = @as(c_int, 16277);
pub const UA_NS0ID_WELLKNOWNROLE_CONFIGUREADMIN_REMOVEENDPOINT = @as(c_int, 16278);
pub const UA_NS0ID_WELLKNOWNROLE_CONFIGUREADMIN_REMOVEENDPOINT_INPUTARGUMENTS = @as(c_int, 16279);
pub const UA_NS0ID_WRITERGROUPMESSAGEDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16280);
pub const UA_NS0ID_PUBSUBCONNECTIONDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16281);
pub const UA_NS0ID_CONNECTIONTRANSPORTDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16282);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD = @as(c_int, 16283);
pub const UA_NS0ID_READERGROUPTRANSPORTDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16284);
pub const UA_NS0ID_READERGROUPMESSAGEDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16285);
pub const UA_NS0ID_DATASETREADERDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16286);
pub const UA_NS0ID_DATASETREADERTRANSPORTDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16287);
pub const UA_NS0ID_DATASETREADERMESSAGEDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16288);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_ROLESET = @as(c_int, 16289);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_ROLESET_ADDROLE = @as(c_int, 16290);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_ROLESET_ADDROLE_INPUTARGUMENTS = @as(c_int, 16291);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_ROLESET_ADDROLE_OUTPUTARGUMENTS = @as(c_int, 16292);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_ROLESET_REMOVEROLE = @as(c_int, 16293);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_ROLESET_REMOVEROLE_INPUTARGUMENTS = @as(c_int, 16294);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_ROLESET = @as(c_int, 16295);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_ROLESET_ADDROLE = @as(c_int, 16296);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_ROLESET_ADDROLE_INPUTARGUMENTS = @as(c_int, 16297);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_ROLESET_ADDROLE_OUTPUTARGUMENTS = @as(c_int, 16298);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_ROLESET_REMOVEROLE = @as(c_int, 16299);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_ROLESET_REMOVEROLE_INPUTARGUMENTS = @as(c_int, 16300);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_ROLESET_ADDROLE = @as(c_int, 16301);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_ROLESET_ADDROLE_INPUTARGUMENTS = @as(c_int, 16302);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_ROLESET_ADDROLE_OUTPUTARGUMENTS = @as(c_int, 16303);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_ROLESET_REMOVEROLE = @as(c_int, 16304);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_ROLESET_REMOVEROLE_INPUTARGUMENTS = @as(c_int, 16305);
pub const UA_NS0ID_AUDIODATATYPE = @as(c_int, 16307);
pub const UA_NS0ID_SUBSCRIBEDDATASETDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16308);
pub const UA_NS0ID_SELECTIONLISTTYPE = @as(c_int, 16309);
pub const UA_NS0ID_TARGETVARIABLESDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16310);
pub const UA_NS0ID_SUBSCRIBEDDATASETMIRRORDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16311);
pub const UA_NS0ID_SELECTIONLISTTYPE_RESTRICTTOLIST = @as(c_int, 16312);
pub const UA_NS0ID_ADDITIONALPARAMETERSTYPE = @as(c_int, 16313);
pub const UA_NS0ID_FILESYSTEM = @as(c_int, 16314);
pub const UA_NS0ID_FILESYSTEM_FILEDIRECTORYNAME_PLACEHOLDER = @as(c_int, 16315);
pub const UA_NS0ID_FILESYSTEM_FILEDIRECTORYNAME_PLACEHOLDER_CREATEDIRECTORY = @as(c_int, 16316);
pub const UA_NS0ID_FILESYSTEM_FILEDIRECTORYNAME_PLACEHOLDER_CREATEDIRECTORY_INPUTARGUMENTS = @as(c_int, 16317);
pub const UA_NS0ID_FILESYSTEM_FILEDIRECTORYNAME_PLACEHOLDER_CREATEDIRECTORY_OUTPUTARGUMENTS = @as(c_int, 16318);
pub const UA_NS0ID_FILESYSTEM_FILEDIRECTORYNAME_PLACEHOLDER_CREATEFILE = @as(c_int, 16319);
pub const UA_NS0ID_FILESYSTEM_FILEDIRECTORYNAME_PLACEHOLDER_CREATEFILE_INPUTARGUMENTS = @as(c_int, 16320);
pub const UA_NS0ID_FILESYSTEM_FILEDIRECTORYNAME_PLACEHOLDER_CREATEFILE_OUTPUTARGUMENTS = @as(c_int, 16321);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_ACTIVE = @as(c_int, 16322);
pub const UA_NS0ID_UADPWRITERGROUPMESSAGEDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16323);
pub const UA_NS0ID_FILESYSTEM_FILEDIRECTORYNAME_PLACEHOLDER_MOVEORCOPY = @as(c_int, 16324);
pub const UA_NS0ID_FILESYSTEM_FILEDIRECTORYNAME_PLACEHOLDER_MOVEORCOPY_INPUTARGUMENTS = @as(c_int, 16325);
pub const UA_NS0ID_FILESYSTEM_FILEDIRECTORYNAME_PLACEHOLDER_MOVEORCOPY_OUTPUTARGUMENTS = @as(c_int, 16326);
pub const UA_NS0ID_FILESYSTEM_FILENAME_PLACEHOLDER = @as(c_int, 16327);
pub const UA_NS0ID_FILESYSTEM_FILENAME_PLACEHOLDER_SIZE = @as(c_int, 16328);
pub const UA_NS0ID_FILESYSTEM_FILENAME_PLACEHOLDER_WRITABLE = @as(c_int, 16329);
pub const UA_NS0ID_FILESYSTEM_FILENAME_PLACEHOLDER_USERWRITABLE = @as(c_int, 16330);
pub const UA_NS0ID_FILESYSTEM_FILENAME_PLACEHOLDER_OPENCOUNT = @as(c_int, 16331);
pub const UA_NS0ID_FILESYSTEM_FILENAME_PLACEHOLDER_MIMETYPE = @as(c_int, 16332);
pub const UA_NS0ID_FILESYSTEM_FILENAME_PLACEHOLDER_OPEN = @as(c_int, 16333);
pub const UA_NS0ID_FILESYSTEM_FILENAME_PLACEHOLDER_OPEN_INPUTARGUMENTS = @as(c_int, 16334);
pub const UA_NS0ID_FILESYSTEM_FILENAME_PLACEHOLDER_OPEN_OUTPUTARGUMENTS = @as(c_int, 16335);
pub const UA_NS0ID_FILESYSTEM_FILENAME_PLACEHOLDER_CLOSE = @as(c_int, 16336);
pub const UA_NS0ID_FILESYSTEM_FILENAME_PLACEHOLDER_CLOSE_INPUTARGUMENTS = @as(c_int, 16337);
pub const UA_NS0ID_FILESYSTEM_FILENAME_PLACEHOLDER_READ = @as(c_int, 16338);
pub const UA_NS0ID_FILESYSTEM_FILENAME_PLACEHOLDER_READ_INPUTARGUMENTS = @as(c_int, 16339);
pub const UA_NS0ID_FILESYSTEM_FILENAME_PLACEHOLDER_READ_OUTPUTARGUMENTS = @as(c_int, 16340);
pub const UA_NS0ID_FILESYSTEM_FILENAME_PLACEHOLDER_WRITE = @as(c_int, 16341);
pub const UA_NS0ID_FILESYSTEM_FILENAME_PLACEHOLDER_WRITE_INPUTARGUMENTS = @as(c_int, 16342);
pub const UA_NS0ID_FILESYSTEM_FILENAME_PLACEHOLDER_GETPOSITION = @as(c_int, 16343);
pub const UA_NS0ID_FILESYSTEM_FILENAME_PLACEHOLDER_GETPOSITION_INPUTARGUMENTS = @as(c_int, 16344);
pub const UA_NS0ID_FILESYSTEM_FILENAME_PLACEHOLDER_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 16345);
pub const UA_NS0ID_FILESYSTEM_FILENAME_PLACEHOLDER_SETPOSITION = @as(c_int, 16346);
pub const UA_NS0ID_FILESYSTEM_FILENAME_PLACEHOLDER_SETPOSITION_INPUTARGUMENTS = @as(c_int, 16347);
pub const UA_NS0ID_FILESYSTEM_CREATEDIRECTORY = @as(c_int, 16348);
pub const UA_NS0ID_FILESYSTEM_CREATEDIRECTORY_INPUTARGUMENTS = @as(c_int, 16349);
pub const UA_NS0ID_FILESYSTEM_CREATEDIRECTORY_OUTPUTARGUMENTS = @as(c_int, 16350);
pub const UA_NS0ID_FILESYSTEM_CREATEFILE = @as(c_int, 16351);
pub const UA_NS0ID_FILESYSTEM_CREATEFILE_INPUTARGUMENTS = @as(c_int, 16352);
pub const UA_NS0ID_FILESYSTEM_CREATEFILE_OUTPUTARGUMENTS = @as(c_int, 16353);
pub const UA_NS0ID_FILESYSTEM_DELETEFILESYSTEMOBJECT = @as(c_int, 16354);
pub const UA_NS0ID_FILESYSTEM_DELETEFILESYSTEMOBJECT_INPUTARGUMENTS = @as(c_int, 16355);
pub const UA_NS0ID_FILESYSTEM_MOVEORCOPY = @as(c_int, 16356);
pub const UA_NS0ID_FILESYSTEM_MOVEORCOPY_INPUTARGUMENTS = @as(c_int, 16357);
pub const UA_NS0ID_FILESYSTEM_MOVEORCOPY_OUTPUTARGUMENTS = @as(c_int, 16358);
pub const UA_NS0ID_TEMPORARYFILETRANSFERTYPE_GENERATEFILEFORWRITE_INPUTARGUMENTS = @as(c_int, 16359);
pub const UA_NS0ID_GENERATEFILEFORWRITEMETHODTYPE_INPUTARGUMENTS = @as(c_int, 16360);
pub const UA_NS0ID_HASALARMSUPPRESSIONGROUP = @as(c_int, 16361);
pub const UA_NS0ID_ALARMGROUPMEMBER = @as(c_int, 16362);
pub const UA_NS0ID_CONDITIONTYPE_CONDITIONSUBCLASSID = @as(c_int, 16363);
pub const UA_NS0ID_CONDITIONTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 16364);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_CONDITIONSUBCLASSID = @as(c_int, 16365);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 16366);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_CONDITIONSUBCLASSID = @as(c_int, 16367);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 16368);
pub const UA_NS0ID_ALARMCONDITIONTYPE_CONDITIONSUBCLASSID = @as(c_int, 16369);
pub const UA_NS0ID_ALARMCONDITIONTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 16370);
pub const UA_NS0ID_ALARMCONDITIONTYPE_OUTOFSERVICESTATE = @as(c_int, 16371);
pub const UA_NS0ID_ALARMCONDITIONTYPE_OUTOFSERVICESTATE_ID = @as(c_int, 16372);
pub const UA_NS0ID_ALARMCONDITIONTYPE_OUTOFSERVICESTATE_NAME = @as(c_int, 16373);
pub const UA_NS0ID_ALARMCONDITIONTYPE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 16374);
pub const UA_NS0ID_ALARMCONDITIONTYPE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16375);
pub const UA_NS0ID_ALARMCONDITIONTYPE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 16376);
pub const UA_NS0ID_ALARMCONDITIONTYPE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16377);
pub const UA_NS0ID_ALARMCONDITIONTYPE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 16378);
pub const UA_NS0ID_ALARMCONDITIONTYPE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 16379);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SILENCESTATE = @as(c_int, 16380);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SILENCESTATE_ID = @as(c_int, 16381);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SILENCESTATE_NAME = @as(c_int, 16382);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SILENCESTATE_NUMBER = @as(c_int, 16383);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16384);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 16385);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16386);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SILENCESTATE_TRUESTATE = @as(c_int, 16387);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SILENCESTATE_FALSESTATE = @as(c_int, 16388);
pub const UA_NS0ID_ALARMCONDITIONTYPE_AUDIBLEENABLED = @as(c_int, 16389);
pub const UA_NS0ID_ALARMCONDITIONTYPE_AUDIBLESOUND = @as(c_int, 16390);
pub const UA_NS0ID_UADPDATASETWRITERMESSAGEDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16391);
pub const UA_NS0ID_UADPDATASETREADERMESSAGEDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16392);
pub const UA_NS0ID_JSONWRITERGROUPMESSAGEDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16393);
pub const UA_NS0ID_JSONDATASETWRITERMESSAGEDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16394);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ONDELAY = @as(c_int, 16395);
pub const UA_NS0ID_ALARMCONDITIONTYPE_OFFDELAY = @as(c_int, 16396);
pub const UA_NS0ID_ALARMCONDITIONTYPE_FIRSTINGROUPFLAG = @as(c_int, 16397);
pub const UA_NS0ID_ALARMCONDITIONTYPE_FIRSTINGROUP = @as(c_int, 16398);
pub const UA_NS0ID_ALARMCONDITIONTYPE_ALARMGROUP_PLACEHOLDER = @as(c_int, 16399);
pub const UA_NS0ID_ALARMCONDITIONTYPE_REALARMTIME = @as(c_int, 16400);
pub const UA_NS0ID_ALARMCONDITIONTYPE_REALARMREPEATCOUNT = @as(c_int, 16401);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SILENCE = @as(c_int, 16402);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SUPPRESS = @as(c_int, 16403);
pub const UA_NS0ID_JSONDATASETREADERMESSAGEDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16404);
pub const UA_NS0ID_ALARMGROUPTYPE = @as(c_int, 16405);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER = @as(c_int, 16406);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_EVENTID = @as(c_int, 16407);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_EVENTTYPE = @as(c_int, 16408);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SOURCENODE = @as(c_int, 16409);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SOURCENAME = @as(c_int, 16410);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_TIME = @as(c_int, 16411);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_RECEIVETIME = @as(c_int, 16412);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_LOCALTIME = @as(c_int, 16413);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_MESSAGE = @as(c_int, 16414);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SEVERITY = @as(c_int, 16415);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONDITIONCLASSID = @as(c_int, 16416);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONDITIONCLASSNAME = @as(c_int, 16417);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONDITIONSUBCLASSID = @as(c_int, 16418);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONDITIONSUBCLASSNAME = @as(c_int, 16419);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONDITIONNAME = @as(c_int, 16420);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_BRANCHID = @as(c_int, 16421);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_RETAIN = @as(c_int, 16422);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ENABLEDSTATE = @as(c_int, 16423);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ENABLEDSTATE_ID = @as(c_int, 16424);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ENABLEDSTATE_NAME = @as(c_int, 16425);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ENABLEDSTATE_NUMBER = @as(c_int, 16426);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16427);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 16428);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16429);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ENABLEDSTATE_TRUESTATE = @as(c_int, 16430);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ENABLEDSTATE_FALSESTATE = @as(c_int, 16431);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_QUALITY = @as(c_int, 16432);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_QUALITY_SOURCETIMESTAMP = @as(c_int, 16433);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_LASTSEVERITY = @as(c_int, 16434);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 16435);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_COMMENT = @as(c_int, 16436);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_COMMENT_SOURCETIMESTAMP = @as(c_int, 16437);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CLIENTUSERID = @as(c_int, 16438);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_DISABLE = @as(c_int, 16439);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ENABLE = @as(c_int, 16440);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ADDCOMMENT = @as(c_int, 16441);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 16442);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACKEDSTATE = @as(c_int, 16443);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACKEDSTATE_ID = @as(c_int, 16444);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACKEDSTATE_NAME = @as(c_int, 16445);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACKEDSTATE_NUMBER = @as(c_int, 16446);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16447);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 16448);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16449);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACKEDSTATE_TRUESTATE = @as(c_int, 16450);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACKEDSTATE_FALSESTATE = @as(c_int, 16451);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONFIRMEDSTATE = @as(c_int, 16452);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONFIRMEDSTATE_ID = @as(c_int, 16453);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONFIRMEDSTATE_NAME = @as(c_int, 16454);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONFIRMEDSTATE_NUMBER = @as(c_int, 16455);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16456);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 16457);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16458);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 16459);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 16460);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACKNOWLEDGE = @as(c_int, 16461);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 16462);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONFIRM = @as(c_int, 16463);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONFIRM_INPUTARGUMENTS = @as(c_int, 16464);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACTIVESTATE = @as(c_int, 16465);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACTIVESTATE_ID = @as(c_int, 16466);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACTIVESTATE_NAME = @as(c_int, 16467);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACTIVESTATE_NUMBER = @as(c_int, 16468);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16469);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 16470);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16471);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACTIVESTATE_TRUESTATE = @as(c_int, 16472);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACTIVESTATE_FALSESTATE = @as(c_int, 16473);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_INPUTNODE = @as(c_int, 16474);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SUPPRESSEDSTATE = @as(c_int, 16475);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SUPPRESSEDSTATE_ID = @as(c_int, 16476);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SUPPRESSEDSTATE_NAME = @as(c_int, 16477);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SUPPRESSEDSTATE_NUMBER = @as(c_int, 16478);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16479);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 16480);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16481);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 16482);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 16483);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_OUTOFSERVICESTATE = @as(c_int, 16484);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_OUTOFSERVICESTATE_ID = @as(c_int, 16485);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_OUTOFSERVICESTATE_NAME = @as(c_int, 16486);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_OUTOFSERVICESTATE_NUMBER = @as(c_int, 16487);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16488);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 16489);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16490);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 16491);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 16492);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SILENCESTATE = @as(c_int, 16493);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SILENCESTATE_ID = @as(c_int, 16494);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SILENCESTATE_NAME = @as(c_int, 16495);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SILENCESTATE_NUMBER = @as(c_int, 16496);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16497);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SILENCESTATE_TRANSITIONTIME = @as(c_int, 16498);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16499);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SILENCESTATE_TRUESTATE = @as(c_int, 16500);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SILENCESTATE_FALSESTATE = @as(c_int, 16501);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE = @as(c_int, 16502);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 16503);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 16504);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 16505);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 16506);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16507);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 16508);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 16509);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 16510);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 16511);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 16512);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 16513);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 16514);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_UNSHELVE = @as(c_int, 16515);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 16516);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 16517);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 16518);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SUPPRESSEDORSHELVED = @as(c_int, 16519);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_MAXTIMESHELVED = @as(c_int, 16520);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_AUDIBLEENABLED = @as(c_int, 16521);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_AUDIBLESOUND = @as(c_int, 16522);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_CLASSIFICATION = @as(c_int, 16523);
pub const UA_NS0ID_BROKERWRITERGROUPTRANSPORTDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16524);
pub const UA_NS0ID_BROKERDATASETWRITERTRANSPORTDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16525);
pub const UA_NS0ID_BROKERDATASETREADERTRANSPORTDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 16526);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ONDELAY = @as(c_int, 16527);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_OFFDELAY = @as(c_int, 16528);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_FIRSTINGROUPFLAG = @as(c_int, 16529);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_FIRSTINGROUP = @as(c_int, 16530);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_REALARMTIME = @as(c_int, 16531);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_REALARMREPEATCOUNT = @as(c_int, 16532);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SILENCE = @as(c_int, 16533);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SUPPRESS = @as(c_int, 16534);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_ADDWRITERGROUP = @as(c_int, 16535);
pub const UA_NS0ID_LIMITALARMTYPE_CONDITIONSUBCLASSID = @as(c_int, 16536);
pub const UA_NS0ID_LIMITALARMTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 16537);
pub const UA_NS0ID_LIMITALARMTYPE_OUTOFSERVICESTATE = @as(c_int, 16538);
pub const UA_NS0ID_LIMITALARMTYPE_OUTOFSERVICESTATE_ID = @as(c_int, 16539);
pub const UA_NS0ID_LIMITALARMTYPE_OUTOFSERVICESTATE_NAME = @as(c_int, 16540);
pub const UA_NS0ID_LIMITALARMTYPE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 16541);
pub const UA_NS0ID_LIMITALARMTYPE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16542);
pub const UA_NS0ID_LIMITALARMTYPE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 16543);
pub const UA_NS0ID_LIMITALARMTYPE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16544);
pub const UA_NS0ID_LIMITALARMTYPE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 16545);
pub const UA_NS0ID_LIMITALARMTYPE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 16546);
pub const UA_NS0ID_LIMITALARMTYPE_SILENCESTATE = @as(c_int, 16547);
pub const UA_NS0ID_LIMITALARMTYPE_SILENCESTATE_ID = @as(c_int, 16548);
pub const UA_NS0ID_LIMITALARMTYPE_SILENCESTATE_NAME = @as(c_int, 16549);
pub const UA_NS0ID_LIMITALARMTYPE_SILENCESTATE_NUMBER = @as(c_int, 16550);
pub const UA_NS0ID_LIMITALARMTYPE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16551);
pub const UA_NS0ID_LIMITALARMTYPE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 16552);
pub const UA_NS0ID_LIMITALARMTYPE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16553);
pub const UA_NS0ID_LIMITALARMTYPE_SILENCESTATE_TRUESTATE = @as(c_int, 16554);
pub const UA_NS0ID_LIMITALARMTYPE_SILENCESTATE_FALSESTATE = @as(c_int, 16555);
pub const UA_NS0ID_LIMITALARMTYPE_AUDIBLEENABLED = @as(c_int, 16556);
pub const UA_NS0ID_LIMITALARMTYPE_AUDIBLESOUND = @as(c_int, 16557);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_ADDWRITERGROUP_INPUTARGUMENTS = @as(c_int, 16558);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_ADDWRITERGROUP_OUTPUTARGUMENTS = @as(c_int, 16559);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_ADDREADERGROUP = @as(c_int, 16560);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_ADDREADERGROUP_INPUTARGUMENTS = @as(c_int, 16561);
pub const UA_NS0ID_LIMITALARMTYPE_ONDELAY = @as(c_int, 16562);
pub const UA_NS0ID_LIMITALARMTYPE_OFFDELAY = @as(c_int, 16563);
pub const UA_NS0ID_LIMITALARMTYPE_FIRSTINGROUPFLAG = @as(c_int, 16564);
pub const UA_NS0ID_LIMITALARMTYPE_FIRSTINGROUP = @as(c_int, 16565);
pub const UA_NS0ID_LIMITALARMTYPE_ALARMGROUP_PLACEHOLDER = @as(c_int, 16566);
pub const UA_NS0ID_LIMITALARMTYPE_REALARMTIME = @as(c_int, 16567);
pub const UA_NS0ID_LIMITALARMTYPE_REALARMREPEATCOUNT = @as(c_int, 16568);
pub const UA_NS0ID_LIMITALARMTYPE_SILENCE = @as(c_int, 16569);
pub const UA_NS0ID_LIMITALARMTYPE_SUPPRESS = @as(c_int, 16570);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_ADDREADERGROUP_OUTPUTARGUMENTS = @as(c_int, 16571);
pub const UA_NS0ID_LIMITALARMTYPE_BASEHIGHHIGHLIMIT = @as(c_int, 16572);
pub const UA_NS0ID_LIMITALARMTYPE_BASEHIGHLIMIT = @as(c_int, 16573);
pub const UA_NS0ID_LIMITALARMTYPE_BASELOWLIMIT = @as(c_int, 16574);
pub const UA_NS0ID_LIMITALARMTYPE_BASELOWLOWLIMIT = @as(c_int, 16575);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_CONDITIONSUBCLASSID = @as(c_int, 16576);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 16577);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_OUTOFSERVICESTATE = @as(c_int, 16578);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_OUTOFSERVICESTATE_ID = @as(c_int, 16579);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_OUTOFSERVICESTATE_NAME = @as(c_int, 16580);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 16581);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16582);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 16583);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16584);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 16585);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 16586);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SILENCESTATE = @as(c_int, 16587);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SILENCESTATE_ID = @as(c_int, 16588);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SILENCESTATE_NAME = @as(c_int, 16589);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SILENCESTATE_NUMBER = @as(c_int, 16590);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16591);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 16592);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16593);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SILENCESTATE_TRUESTATE = @as(c_int, 16594);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SILENCESTATE_FALSESTATE = @as(c_int, 16595);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_AUDIBLEENABLED = @as(c_int, 16596);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_AUDIBLESOUND = @as(c_int, 16597);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_ADDCONNECTION = @as(c_int, 16598);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_ADDCONNECTION_INPUTARGUMENTS = @as(c_int, 16599);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_ADDCONNECTION_OUTPUTARGUMENTS = @as(c_int, 16600);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBLISHEDDATASETS_ADDPUBLISHEDDATAITEMSTEMPLATE = @as(c_int, 16601);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ONDELAY = @as(c_int, 16602);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_OFFDELAY = @as(c_int, 16603);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_FIRSTINGROUPFLAG = @as(c_int, 16604);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_FIRSTINGROUP = @as(c_int, 16605);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_ALARMGROUP_PLACEHOLDER = @as(c_int, 16606);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_REALARMTIME = @as(c_int, 16607);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_REALARMREPEATCOUNT = @as(c_int, 16608);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SILENCE = @as(c_int, 16609);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SUPPRESS = @as(c_int, 16610);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBLISHEDDATASETS_ADDPUBLISHEDDATAITEMSTEMPLATE_INPUTARGUMENTS = @as(c_int, 16611);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_BASEHIGHHIGHLIMIT = @as(c_int, 16612);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_BASEHIGHLIMIT = @as(c_int, 16613);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_BASELOWLIMIT = @as(c_int, 16614);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_BASELOWLOWLIMIT = @as(c_int, 16615);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_CONDITIONSUBCLASSID = @as(c_int, 16616);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 16617);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_OUTOFSERVICESTATE = @as(c_int, 16618);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_OUTOFSERVICESTATE_ID = @as(c_int, 16619);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_OUTOFSERVICESTATE_NAME = @as(c_int, 16620);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 16621);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16622);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 16623);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16624);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 16625);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 16626);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SILENCESTATE = @as(c_int, 16627);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SILENCESTATE_ID = @as(c_int, 16628);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SILENCESTATE_NAME = @as(c_int, 16629);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SILENCESTATE_NUMBER = @as(c_int, 16630);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16631);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 16632);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16633);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SILENCESTATE_TRUESTATE = @as(c_int, 16634);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SILENCESTATE_FALSESTATE = @as(c_int, 16635);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_AUDIBLEENABLED = @as(c_int, 16636);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_AUDIBLESOUND = @as(c_int, 16637);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBLISHEDDATASETS_ADDPUBLISHEDDATAITEMSTEMPLATE_OUTPUTARGUMENTS = @as(c_int, 16638);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBLISHEDDATASETS_ADDPUBLISHEDEVENTSTEMPLATE = @as(c_int, 16639);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBLISHEDDATASETS_ADDPUBLISHEDEVENTSTEMPLATE_INPUTARGUMENTS = @as(c_int, 16640);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBLISHEDDATASETS_ADDPUBLISHEDEVENTSTEMPLATE_OUTPUTARGUMENTS = @as(c_int, 16641);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ONDELAY = @as(c_int, 16642);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_OFFDELAY = @as(c_int, 16643);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_FIRSTINGROUPFLAG = @as(c_int, 16644);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_FIRSTINGROUP = @as(c_int, 16645);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_ALARMGROUP_PLACEHOLDER = @as(c_int, 16646);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_REALARMTIME = @as(c_int, 16647);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_REALARMREPEATCOUNT = @as(c_int, 16648);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SILENCE = @as(c_int, 16649);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SUPPRESS = @as(c_int, 16650);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBLISHEDDATASETS_ADDDATASETFOLDER = @as(c_int, 16651);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_BASEHIGHHIGHLIMIT = @as(c_int, 16652);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_BASEHIGHLIMIT = @as(c_int, 16653);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_BASELOWLIMIT = @as(c_int, 16654);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_BASELOWLOWLIMIT = @as(c_int, 16655);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_CONDITIONSUBCLASSID = @as(c_int, 16656);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 16657);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_OUTOFSERVICESTATE = @as(c_int, 16658);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_OUTOFSERVICESTATE_ID = @as(c_int, 16659);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_OUTOFSERVICESTATE_NAME = @as(c_int, 16660);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 16661);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16662);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 16663);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16664);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 16665);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 16666);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SILENCESTATE = @as(c_int, 16667);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SILENCESTATE_ID = @as(c_int, 16668);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SILENCESTATE_NAME = @as(c_int, 16669);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SILENCESTATE_NUMBER = @as(c_int, 16670);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16671);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 16672);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16673);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SILENCESTATE_TRUESTATE = @as(c_int, 16674);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SILENCESTATE_FALSESTATE = @as(c_int, 16675);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_AUDIBLEENABLED = @as(c_int, 16676);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_AUDIBLESOUND = @as(c_int, 16677);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBLISHEDDATASETS_ADDDATASETFOLDER_INPUTARGUMENTS = @as(c_int, 16678);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBLISHEDDATASETS_ADDDATASETFOLDER_OUTPUTARGUMENTS = @as(c_int, 16679);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBLISHEDDATASETS_REMOVEDATASETFOLDER = @as(c_int, 16680);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBLISHEDDATASETS_REMOVEDATASETFOLDER_INPUTARGUMENTS = @as(c_int, 16681);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ONDELAY = @as(c_int, 16682);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_OFFDELAY = @as(c_int, 16683);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_FIRSTINGROUPFLAG = @as(c_int, 16684);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_FIRSTINGROUP = @as(c_int, 16685);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_ALARMGROUP_PLACEHOLDER = @as(c_int, 16686);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_REALARMTIME = @as(c_int, 16687);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_REALARMREPEATCOUNT = @as(c_int, 16688);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SILENCE = @as(c_int, 16689);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SUPPRESS = @as(c_int, 16690);
pub const UA_NS0ID_ADDCONNECTIONMETHODTYPE = @as(c_int, 16691);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_BASEHIGHHIGHLIMIT = @as(c_int, 16692);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_BASEHIGHLIMIT = @as(c_int, 16693);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_BASELOWLIMIT = @as(c_int, 16694);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_BASELOWLOWLIMIT = @as(c_int, 16695);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_CONDITIONSUBCLASSID = @as(c_int, 16696);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 16697);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_OUTOFSERVICESTATE = @as(c_int, 16698);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_OUTOFSERVICESTATE_ID = @as(c_int, 16699);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_OUTOFSERVICESTATE_NAME = @as(c_int, 16700);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 16701);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16702);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 16703);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16704);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 16705);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 16706);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SILENCESTATE = @as(c_int, 16707);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SILENCESTATE_ID = @as(c_int, 16708);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SILENCESTATE_NAME = @as(c_int, 16709);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SILENCESTATE_NUMBER = @as(c_int, 16710);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16711);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 16712);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16713);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SILENCESTATE_TRUESTATE = @as(c_int, 16714);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SILENCESTATE_FALSESTATE = @as(c_int, 16715);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_AUDIBLEENABLED = @as(c_int, 16716);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_AUDIBLESOUND = @as(c_int, 16717);
pub const UA_NS0ID_ADDCONNECTIONMETHODTYPE_INPUTARGUMENTS = @as(c_int, 16718);
pub const UA_NS0ID_ADDCONNECTIONMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 16719);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DATASETWRITERID = @as(c_int, 16720);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DATASETFIELDCONTENTMASK = @as(c_int, 16721);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ONDELAY = @as(c_int, 16722);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_OFFDELAY = @as(c_int, 16723);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_FIRSTINGROUPFLAG = @as(c_int, 16724);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_FIRSTINGROUP = @as(c_int, 16725);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_ALARMGROUP_PLACEHOLDER = @as(c_int, 16726);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_REALARMTIME = @as(c_int, 16727);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_REALARMREPEATCOUNT = @as(c_int, 16728);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SILENCE = @as(c_int, 16729);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SUPPRESS = @as(c_int, 16730);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_KEYFRAMECOUNT = @as(c_int, 16731);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_BASEHIGHHIGHLIMIT = @as(c_int, 16732);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_BASEHIGHLIMIT = @as(c_int, 16733);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_BASELOWLIMIT = @as(c_int, 16734);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_BASELOWLOWLIMIT = @as(c_int, 16735);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_CONDITIONSUBCLASSID = @as(c_int, 16736);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 16737);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_OUTOFSERVICESTATE = @as(c_int, 16738);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_OUTOFSERVICESTATE_ID = @as(c_int, 16739);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_OUTOFSERVICESTATE_NAME = @as(c_int, 16740);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 16741);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16742);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 16743);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16744);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 16745);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 16746);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SILENCESTATE = @as(c_int, 16747);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SILENCESTATE_ID = @as(c_int, 16748);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SILENCESTATE_NAME = @as(c_int, 16749);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SILENCESTATE_NUMBER = @as(c_int, 16750);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16751);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 16752);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16753);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SILENCESTATE_TRUESTATE = @as(c_int, 16754);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SILENCESTATE_FALSESTATE = @as(c_int, 16755);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_AUDIBLEENABLED = @as(c_int, 16756);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_AUDIBLESOUND = @as(c_int, 16757);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_MESSAGESETTINGS = @as(c_int, 16758);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETCLASSID = @as(c_int, 16759);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DATASETWRITERID = @as(c_int, 16760);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DATASETFIELDCONTENTMASK = @as(c_int, 16761);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ONDELAY = @as(c_int, 16762);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_OFFDELAY = @as(c_int, 16763);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_FIRSTINGROUPFLAG = @as(c_int, 16764);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_FIRSTINGROUP = @as(c_int, 16765);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_ALARMGROUP_PLACEHOLDER = @as(c_int, 16766);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_REALARMTIME = @as(c_int, 16767);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_REALARMREPEATCOUNT = @as(c_int, 16768);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SILENCE = @as(c_int, 16769);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SUPPRESS = @as(c_int, 16770);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_KEYFRAMECOUNT = @as(c_int, 16771);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_BASEHIGHHIGHLIMIT = @as(c_int, 16772);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_BASEHIGHLIMIT = @as(c_int, 16773);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_BASELOWLIMIT = @as(c_int, 16774);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_BASELOWLOWLIMIT = @as(c_int, 16775);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_BASESETPOINTNODE = @as(c_int, 16776);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_CONDITIONSUBCLASSID = @as(c_int, 16777);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 16778);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_OUTOFSERVICESTATE = @as(c_int, 16779);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_OUTOFSERVICESTATE_ID = @as(c_int, 16780);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_OUTOFSERVICESTATE_NAME = @as(c_int, 16781);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 16782);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16783);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 16784);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16785);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 16786);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 16787);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SILENCESTATE = @as(c_int, 16788);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SILENCESTATE_ID = @as(c_int, 16789);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SILENCESTATE_NAME = @as(c_int, 16790);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SILENCESTATE_NUMBER = @as(c_int, 16791);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16792);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 16793);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16794);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SILENCESTATE_TRUESTATE = @as(c_int, 16795);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SILENCESTATE_FALSESTATE = @as(c_int, 16796);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_AUDIBLEENABLED = @as(c_int, 16797);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_AUDIBLESOUND = @as(c_int, 16798);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_MESSAGESETTINGS = @as(c_int, 16799);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETCLASSID = @as(c_int, 16800);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DATASETWRITERID = @as(c_int, 16801);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DATASETFIELDCONTENTMASK = @as(c_int, 16802);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ONDELAY = @as(c_int, 16803);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_OFFDELAY = @as(c_int, 16804);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_FIRSTINGROUPFLAG = @as(c_int, 16805);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_FIRSTINGROUP = @as(c_int, 16806);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_ALARMGROUP_PLACEHOLDER = @as(c_int, 16807);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_REALARMTIME = @as(c_int, 16808);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_REALARMREPEATCOUNT = @as(c_int, 16809);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SILENCE = @as(c_int, 16810);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SUPPRESS = @as(c_int, 16811);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_KEYFRAMECOUNT = @as(c_int, 16812);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_BASEHIGHHIGHLIMIT = @as(c_int, 16813);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_BASEHIGHLIMIT = @as(c_int, 16814);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_BASELOWLIMIT = @as(c_int, 16815);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_BASELOWLOWLIMIT = @as(c_int, 16816);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_BASESETPOINTNODE = @as(c_int, 16817);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_CONDITIONSUBCLASSID = @as(c_int, 16818);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 16819);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_OUTOFSERVICESTATE = @as(c_int, 16820);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_OUTOFSERVICESTATE_ID = @as(c_int, 16821);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_OUTOFSERVICESTATE_NAME = @as(c_int, 16822);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 16823);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16824);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 16825);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16826);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 16827);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 16828);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SILENCESTATE = @as(c_int, 16829);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SILENCESTATE_ID = @as(c_int, 16830);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SILENCESTATE_NAME = @as(c_int, 16831);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SILENCESTATE_NUMBER = @as(c_int, 16832);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16833);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 16834);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16835);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SILENCESTATE_TRUESTATE = @as(c_int, 16836);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SILENCESTATE_FALSESTATE = @as(c_int, 16837);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_AUDIBLEENABLED = @as(c_int, 16838);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_AUDIBLESOUND = @as(c_int, 16839);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_MESSAGESETTINGS = @as(c_int, 16840);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETCLASSID = @as(c_int, 16841);
pub const UA_NS0ID_DATASETFOLDERTYPE_DATASETFOLDERNAME_PLACEHOLDER_ADDPUBLISHEDDATAITEMSTEMPLATE = @as(c_int, 16842);
pub const UA_NS0ID_DATASETFOLDERTYPE_DATASETFOLDERNAME_PLACEHOLDER_ADDPUBLISHEDDATAITEMSTEMPLATE_INPUTARGUMENTS = @as(c_int, 16843);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ONDELAY = @as(c_int, 16844);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_OFFDELAY = @as(c_int, 16845);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_FIRSTINGROUPFLAG = @as(c_int, 16846);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_FIRSTINGROUP = @as(c_int, 16847);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ALARMGROUP_PLACEHOLDER = @as(c_int, 16848);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_REALARMTIME = @as(c_int, 16849);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_REALARMREPEATCOUNT = @as(c_int, 16850);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SILENCE = @as(c_int, 16851);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SUPPRESS = @as(c_int, 16852);
pub const UA_NS0ID_DATASETFOLDERTYPE_DATASETFOLDERNAME_PLACEHOLDER_ADDPUBLISHEDDATAITEMSTEMPLATE_OUTPUTARGUMENTS = @as(c_int, 16853);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_BASEHIGHHIGHLIMIT = @as(c_int, 16854);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_BASEHIGHLIMIT = @as(c_int, 16855);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_BASELOWLIMIT = @as(c_int, 16856);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_BASELOWLOWLIMIT = @as(c_int, 16857);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_ENGINEERINGUNITS = @as(c_int, 16858);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_CONDITIONSUBCLASSID = @as(c_int, 16859);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 16860);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_OUTOFSERVICESTATE = @as(c_int, 16861);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_OUTOFSERVICESTATE_ID = @as(c_int, 16862);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_OUTOFSERVICESTATE_NAME = @as(c_int, 16863);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 16864);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16865);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 16866);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16867);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 16868);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 16869);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SILENCESTATE = @as(c_int, 16870);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SILENCESTATE_ID = @as(c_int, 16871);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SILENCESTATE_NAME = @as(c_int, 16872);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SILENCESTATE_NUMBER = @as(c_int, 16873);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16874);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 16875);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16876);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SILENCESTATE_TRUESTATE = @as(c_int, 16877);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SILENCESTATE_FALSESTATE = @as(c_int, 16878);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_AUDIBLEENABLED = @as(c_int, 16879);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_AUDIBLESOUND = @as(c_int, 16880);
pub const UA_NS0ID_DATASETFOLDERTYPE_DATASETFOLDERNAME_PLACEHOLDER_ADDPUBLISHEDEVENTSTEMPLATE = @as(c_int, 16881);
pub const UA_NS0ID_DATASETFOLDERTYPE_DATASETFOLDERNAME_PLACEHOLDER_ADDPUBLISHEDEVENTSTEMPLATE_INPUTARGUMENTS = @as(c_int, 16882);
pub const UA_NS0ID_DATASETFOLDERTYPE_DATASETFOLDERNAME_PLACEHOLDER_ADDPUBLISHEDEVENTSTEMPLATE_OUTPUTARGUMENTS = @as(c_int, 16883);
pub const UA_NS0ID_DATASETFOLDERTYPE_DATASETFOLDERNAME_PLACEHOLDER_ADDDATASETFOLDER = @as(c_int, 16884);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ONDELAY = @as(c_int, 16885);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_OFFDELAY = @as(c_int, 16886);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_FIRSTINGROUPFLAG = @as(c_int, 16887);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_FIRSTINGROUP = @as(c_int, 16888);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ALARMGROUP_PLACEHOLDER = @as(c_int, 16889);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_REALARMTIME = @as(c_int, 16890);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_REALARMREPEATCOUNT = @as(c_int, 16891);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SILENCE = @as(c_int, 16892);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SUPPRESS = @as(c_int, 16893);
pub const UA_NS0ID_DATASETFOLDERTYPE_DATASETFOLDERNAME_PLACEHOLDER_ADDDATASETFOLDER_INPUTARGUMENTS = @as(c_int, 16894);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_BASEHIGHHIGHLIMIT = @as(c_int, 16895);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_BASEHIGHLIMIT = @as(c_int, 16896);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_BASELOWLIMIT = @as(c_int, 16897);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_BASELOWLOWLIMIT = @as(c_int, 16898);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_ENGINEERINGUNITS = @as(c_int, 16899);
pub const UA_NS0ID_DISCRETEALARMTYPE_CONDITIONSUBCLASSID = @as(c_int, 16900);
pub const UA_NS0ID_DISCRETEALARMTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 16901);
pub const UA_NS0ID_DISCRETEALARMTYPE_OUTOFSERVICESTATE = @as(c_int, 16902);
pub const UA_NS0ID_DISCRETEALARMTYPE_OUTOFSERVICESTATE_ID = @as(c_int, 16903);
pub const UA_NS0ID_DISCRETEALARMTYPE_OUTOFSERVICESTATE_NAME = @as(c_int, 16904);
pub const UA_NS0ID_DISCRETEALARMTYPE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 16905);
pub const UA_NS0ID_DISCRETEALARMTYPE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16906);
pub const UA_NS0ID_DISCRETEALARMTYPE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 16907);
pub const UA_NS0ID_DISCRETEALARMTYPE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16908);
pub const UA_NS0ID_DISCRETEALARMTYPE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 16909);
pub const UA_NS0ID_DISCRETEALARMTYPE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 16910);
pub const UA_NS0ID_DISCRETEALARMTYPE_SILENCESTATE = @as(c_int, 16911);
pub const UA_NS0ID_DISCRETEALARMTYPE_SILENCESTATE_ID = @as(c_int, 16912);
pub const UA_NS0ID_DISCRETEALARMTYPE_SILENCESTATE_NAME = @as(c_int, 16913);
pub const UA_NS0ID_DISCRETEALARMTYPE_SILENCESTATE_NUMBER = @as(c_int, 16914);
pub const UA_NS0ID_DISCRETEALARMTYPE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16915);
pub const UA_NS0ID_DISCRETEALARMTYPE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 16916);
pub const UA_NS0ID_DISCRETEALARMTYPE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16917);
pub const UA_NS0ID_DISCRETEALARMTYPE_SILENCESTATE_TRUESTATE = @as(c_int, 16918);
pub const UA_NS0ID_DISCRETEALARMTYPE_SILENCESTATE_FALSESTATE = @as(c_int, 16919);
pub const UA_NS0ID_DISCRETEALARMTYPE_AUDIBLEENABLED = @as(c_int, 16920);
pub const UA_NS0ID_DISCRETEALARMTYPE_AUDIBLESOUND = @as(c_int, 16921);
pub const UA_NS0ID_DATASETFOLDERTYPE_DATASETFOLDERNAME_PLACEHOLDER_ADDDATASETFOLDER_OUTPUTARGUMENTS = @as(c_int, 16922);
pub const UA_NS0ID_DATASETFOLDERTYPE_DATASETFOLDERNAME_PLACEHOLDER_REMOVEDATASETFOLDER = @as(c_int, 16923);
pub const UA_NS0ID_DATASETFOLDERTYPE_DATASETFOLDERNAME_PLACEHOLDER_REMOVEDATASETFOLDER_INPUTARGUMENTS = @as(c_int, 16924);
pub const UA_NS0ID_DATASETFOLDERTYPE_PUBLISHEDDATASETNAME_PLACEHOLDER_DATASETCLASSID = @as(c_int, 16925);
pub const UA_NS0ID_DISCRETEALARMTYPE_ONDELAY = @as(c_int, 16926);
pub const UA_NS0ID_DISCRETEALARMTYPE_OFFDELAY = @as(c_int, 16927);
pub const UA_NS0ID_DISCRETEALARMTYPE_FIRSTINGROUPFLAG = @as(c_int, 16928);
pub const UA_NS0ID_DISCRETEALARMTYPE_FIRSTINGROUP = @as(c_int, 16929);
pub const UA_NS0ID_DISCRETEALARMTYPE_ALARMGROUP_PLACEHOLDER = @as(c_int, 16930);
pub const UA_NS0ID_DISCRETEALARMTYPE_REALARMTIME = @as(c_int, 16931);
pub const UA_NS0ID_DISCRETEALARMTYPE_REALARMREPEATCOUNT = @as(c_int, 16932);
pub const UA_NS0ID_DISCRETEALARMTYPE_SILENCE = @as(c_int, 16933);
pub const UA_NS0ID_DISCRETEALARMTYPE_SUPPRESS = @as(c_int, 16934);
pub const UA_NS0ID_DATASETFOLDERTYPE_ADDPUBLISHEDDATAITEMSTEMPLATE = @as(c_int, 16935);
pub const UA_NS0ID_OFFNORMALALARMTYPE_CONDITIONSUBCLASSID = @as(c_int, 16936);
pub const UA_NS0ID_OFFNORMALALARMTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 16937);
pub const UA_NS0ID_OFFNORMALALARMTYPE_OUTOFSERVICESTATE = @as(c_int, 16938);
pub const UA_NS0ID_OFFNORMALALARMTYPE_OUTOFSERVICESTATE_ID = @as(c_int, 16939);
pub const UA_NS0ID_OFFNORMALALARMTYPE_OUTOFSERVICESTATE_NAME = @as(c_int, 16940);
pub const UA_NS0ID_OFFNORMALALARMTYPE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 16941);
pub const UA_NS0ID_OFFNORMALALARMTYPE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16942);
pub const UA_NS0ID_OFFNORMALALARMTYPE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 16943);
pub const UA_NS0ID_OFFNORMALALARMTYPE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16944);
pub const UA_NS0ID_OFFNORMALALARMTYPE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 16945);
pub const UA_NS0ID_OFFNORMALALARMTYPE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 16946);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SILENCESTATE = @as(c_int, 16947);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SILENCESTATE_ID = @as(c_int, 16948);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SILENCESTATE_NAME = @as(c_int, 16949);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SILENCESTATE_NUMBER = @as(c_int, 16950);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16951);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 16952);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16953);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SILENCESTATE_TRUESTATE = @as(c_int, 16954);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SILENCESTATE_FALSESTATE = @as(c_int, 16955);
pub const UA_NS0ID_OFFNORMALALARMTYPE_AUDIBLEENABLED = @as(c_int, 16956);
pub const UA_NS0ID_OFFNORMALALARMTYPE_AUDIBLESOUND = @as(c_int, 16957);
pub const UA_NS0ID_DATASETFOLDERTYPE_ADDPUBLISHEDDATAITEMSTEMPLATE_INPUTARGUMENTS = @as(c_int, 16958);
pub const UA_NS0ID_DATASETFOLDERTYPE_ADDPUBLISHEDDATAITEMSTEMPLATE_OUTPUTARGUMENTS = @as(c_int, 16959);
pub const UA_NS0ID_DATASETFOLDERTYPE_ADDPUBLISHEDEVENTSTEMPLATE = @as(c_int, 16960);
pub const UA_NS0ID_DATASETFOLDERTYPE_ADDPUBLISHEDEVENTSTEMPLATE_INPUTARGUMENTS = @as(c_int, 16961);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ONDELAY = @as(c_int, 16962);
pub const UA_NS0ID_OFFNORMALALARMTYPE_OFFDELAY = @as(c_int, 16963);
pub const UA_NS0ID_OFFNORMALALARMTYPE_FIRSTINGROUPFLAG = @as(c_int, 16964);
pub const UA_NS0ID_OFFNORMALALARMTYPE_FIRSTINGROUP = @as(c_int, 16965);
pub const UA_NS0ID_OFFNORMALALARMTYPE_ALARMGROUP_PLACEHOLDER = @as(c_int, 16966);
pub const UA_NS0ID_OFFNORMALALARMTYPE_REALARMTIME = @as(c_int, 16967);
pub const UA_NS0ID_OFFNORMALALARMTYPE_REALARMREPEATCOUNT = @as(c_int, 16968);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SILENCE = @as(c_int, 16969);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SUPPRESS = @as(c_int, 16970);
pub const UA_NS0ID_DATASETFOLDERTYPE_ADDPUBLISHEDEVENTSTEMPLATE_OUTPUTARGUMENTS = @as(c_int, 16971);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_CONDITIONSUBCLASSID = @as(c_int, 16972);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 16973);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_OUTOFSERVICESTATE = @as(c_int, 16974);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_OUTOFSERVICESTATE_ID = @as(c_int, 16975);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_OUTOFSERVICESTATE_NAME = @as(c_int, 16976);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 16977);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16978);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 16979);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16980);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 16981);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 16982);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SILENCESTATE = @as(c_int, 16983);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SILENCESTATE_ID = @as(c_int, 16984);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SILENCESTATE_NAME = @as(c_int, 16985);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SILENCESTATE_NUMBER = @as(c_int, 16986);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 16987);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 16988);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 16989);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SILENCESTATE_TRUESTATE = @as(c_int, 16990);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SILENCESTATE_FALSESTATE = @as(c_int, 16991);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_AUDIBLEENABLED = @as(c_int, 16992);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_AUDIBLESOUND = @as(c_int, 16993);
pub const UA_NS0ID_DATASETFOLDERTYPE_ADDDATASETFOLDER = @as(c_int, 16994);
pub const UA_NS0ID_DATASETFOLDERTYPE_ADDDATASETFOLDER_INPUTARGUMENTS = @as(c_int, 16995);
pub const UA_NS0ID_DATASETFOLDERTYPE_ADDDATASETFOLDER_OUTPUTARGUMENTS = @as(c_int, 16996);
pub const UA_NS0ID_DATASETFOLDERTYPE_REMOVEDATASETFOLDER = @as(c_int, 16997);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ONDELAY = @as(c_int, 16998);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_OFFDELAY = @as(c_int, 16999);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_FIRSTINGROUPFLAG = @as(c_int, 17000);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_FIRSTINGROUP = @as(c_int, 17001);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_ALARMGROUP_PLACEHOLDER = @as(c_int, 17002);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_REALARMTIME = @as(c_int, 17003);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_REALARMREPEATCOUNT = @as(c_int, 17004);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SILENCE = @as(c_int, 17005);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SUPPRESS = @as(c_int, 17006);
pub const UA_NS0ID_DATASETFOLDERTYPE_REMOVEDATASETFOLDER_INPUTARGUMENTS = @as(c_int, 17007);
pub const UA_NS0ID_TRIPALARMTYPE_CONDITIONSUBCLASSID = @as(c_int, 17008);
pub const UA_NS0ID_TRIPALARMTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 17009);
pub const UA_NS0ID_TRIPALARMTYPE_OUTOFSERVICESTATE = @as(c_int, 17010);
pub const UA_NS0ID_TRIPALARMTYPE_OUTOFSERVICESTATE_ID = @as(c_int, 17011);
pub const UA_NS0ID_TRIPALARMTYPE_OUTOFSERVICESTATE_NAME = @as(c_int, 17012);
pub const UA_NS0ID_TRIPALARMTYPE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 17013);
pub const UA_NS0ID_TRIPALARMTYPE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 17014);
pub const UA_NS0ID_TRIPALARMTYPE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 17015);
pub const UA_NS0ID_TRIPALARMTYPE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 17016);
pub const UA_NS0ID_TRIPALARMTYPE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 17017);
pub const UA_NS0ID_TRIPALARMTYPE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 17018);
pub const UA_NS0ID_TRIPALARMTYPE_SILENCESTATE = @as(c_int, 17019);
pub const UA_NS0ID_TRIPALARMTYPE_SILENCESTATE_ID = @as(c_int, 17020);
pub const UA_NS0ID_TRIPALARMTYPE_SILENCESTATE_NAME = @as(c_int, 17021);
pub const UA_NS0ID_TRIPALARMTYPE_SILENCESTATE_NUMBER = @as(c_int, 17022);
pub const UA_NS0ID_TRIPALARMTYPE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 17023);
pub const UA_NS0ID_TRIPALARMTYPE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 17024);
pub const UA_NS0ID_TRIPALARMTYPE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 17025);
pub const UA_NS0ID_TRIPALARMTYPE_SILENCESTATE_TRUESTATE = @as(c_int, 17026);
pub const UA_NS0ID_TRIPALARMTYPE_SILENCESTATE_FALSESTATE = @as(c_int, 17027);
pub const UA_NS0ID_TRIPALARMTYPE_AUDIBLEENABLED = @as(c_int, 17028);
pub const UA_NS0ID_TRIPALARMTYPE_AUDIBLESOUND = @as(c_int, 17029);
pub const UA_NS0ID_ADDPUBLISHEDDATAITEMSTEMPLATEMETHODTYPE = @as(c_int, 17030);
pub const UA_NS0ID_ADDPUBLISHEDDATAITEMSTEMPLATEMETHODTYPE_INPUTARGUMENTS = @as(c_int, 17031);
pub const UA_NS0ID_ADDPUBLISHEDDATAITEMSTEMPLATEMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 17032);
pub const UA_NS0ID_ADDPUBLISHEDEVENTSTEMPLATEMETHODTYPE = @as(c_int, 17033);
pub const UA_NS0ID_TRIPALARMTYPE_ONDELAY = @as(c_int, 17034);
pub const UA_NS0ID_TRIPALARMTYPE_OFFDELAY = @as(c_int, 17035);
pub const UA_NS0ID_TRIPALARMTYPE_FIRSTINGROUPFLAG = @as(c_int, 17036);
pub const UA_NS0ID_TRIPALARMTYPE_FIRSTINGROUP = @as(c_int, 17037);
pub const UA_NS0ID_TRIPALARMTYPE_ALARMGROUP_PLACEHOLDER = @as(c_int, 17038);
pub const UA_NS0ID_TRIPALARMTYPE_REALARMTIME = @as(c_int, 17039);
pub const UA_NS0ID_TRIPALARMTYPE_REALARMREPEATCOUNT = @as(c_int, 17040);
pub const UA_NS0ID_TRIPALARMTYPE_SILENCE = @as(c_int, 17041);
pub const UA_NS0ID_TRIPALARMTYPE_SUPPRESS = @as(c_int, 17042);
pub const UA_NS0ID_ADDPUBLISHEDEVENTSTEMPLATEMETHODTYPE_INPUTARGUMENTS = @as(c_int, 17043);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_CONDITIONSUBCLASSID = @as(c_int, 17044);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 17045);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_OUTOFSERVICESTATE = @as(c_int, 17046);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_OUTOFSERVICESTATE_ID = @as(c_int, 17047);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_OUTOFSERVICESTATE_NAME = @as(c_int, 17048);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 17049);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 17050);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 17051);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 17052);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 17053);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 17054);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SILENCESTATE = @as(c_int, 17055);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SILENCESTATE_ID = @as(c_int, 17056);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SILENCESTATE_NAME = @as(c_int, 17057);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SILENCESTATE_NUMBER = @as(c_int, 17058);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 17059);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 17060);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 17061);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SILENCESTATE_TRUESTATE = @as(c_int, 17062);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SILENCESTATE_FALSESTATE = @as(c_int, 17063);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_AUDIBLEENABLED = @as(c_int, 17064);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_AUDIBLESOUND = @as(c_int, 17065);
pub const UA_NS0ID_ADDPUBLISHEDEVENTSTEMPLATEMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 17066);
pub const UA_NS0ID_ADDDATASETFOLDERMETHODTYPE = @as(c_int, 17067);
pub const UA_NS0ID_ADDDATASETFOLDERMETHODTYPE_INPUTARGUMENTS = @as(c_int, 17068);
pub const UA_NS0ID_ADDDATASETFOLDERMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 17069);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ONDELAY = @as(c_int, 17070);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_OFFDELAY = @as(c_int, 17071);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_FIRSTINGROUPFLAG = @as(c_int, 17072);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_FIRSTINGROUP = @as(c_int, 17073);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_ALARMGROUP_PLACEHOLDER = @as(c_int, 17074);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_REALARMTIME = @as(c_int, 17075);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_REALARMREPEATCOUNT = @as(c_int, 17076);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SILENCE = @as(c_int, 17077);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SUPPRESS = @as(c_int, 17078);
pub const UA_NS0ID_REMOVEDATASETFOLDERMETHODTYPE = @as(c_int, 17079);
pub const UA_NS0ID_DISCREPANCYALARMTYPE = @as(c_int, 17080);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_EVENTID = @as(c_int, 17081);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_EVENTTYPE = @as(c_int, 17082);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SOURCENODE = @as(c_int, 17083);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SOURCENAME = @as(c_int, 17084);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_TIME = @as(c_int, 17085);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_RECEIVETIME = @as(c_int, 17086);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_LOCALTIME = @as(c_int, 17087);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_MESSAGE = @as(c_int, 17088);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SEVERITY = @as(c_int, 17089);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_CONDITIONCLASSID = @as(c_int, 17090);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_CONDITIONCLASSNAME = @as(c_int, 17091);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_CONDITIONSUBCLASSID = @as(c_int, 17092);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 17093);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_CONDITIONNAME = @as(c_int, 17094);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_BRANCHID = @as(c_int, 17095);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_RETAIN = @as(c_int, 17096);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ENABLEDSTATE = @as(c_int, 17097);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ENABLEDSTATE_ID = @as(c_int, 17098);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ENABLEDSTATE_NAME = @as(c_int, 17099);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ENABLEDSTATE_NUMBER = @as(c_int, 17100);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 17101);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 17102);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 17103);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ENABLEDSTATE_TRUESTATE = @as(c_int, 17104);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ENABLEDSTATE_FALSESTATE = @as(c_int, 17105);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_QUALITY = @as(c_int, 17106);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_QUALITY_SOURCETIMESTAMP = @as(c_int, 17107);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_LASTSEVERITY = @as(c_int, 17108);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 17109);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_COMMENT = @as(c_int, 17110);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_COMMENT_SOURCETIMESTAMP = @as(c_int, 17111);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_CLIENTUSERID = @as(c_int, 17112);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_DISABLE = @as(c_int, 17113);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ENABLE = @as(c_int, 17114);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ADDCOMMENT = @as(c_int, 17115);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 17116);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_CONDITIONREFRESH = @as(c_int, 17117);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_CONDITIONREFRESH_INPUTARGUMENTS = @as(c_int, 17118);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_CONDITIONREFRESH2 = @as(c_int, 17119);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_CONDITIONREFRESH2_INPUTARGUMENTS = @as(c_int, 17120);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ACKEDSTATE = @as(c_int, 17121);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ACKEDSTATE_ID = @as(c_int, 17122);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ACKEDSTATE_NAME = @as(c_int, 17123);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ACKEDSTATE_NUMBER = @as(c_int, 17124);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 17125);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 17126);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 17127);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ACKEDSTATE_TRUESTATE = @as(c_int, 17128);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ACKEDSTATE_FALSESTATE = @as(c_int, 17129);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_CONFIRMEDSTATE = @as(c_int, 17130);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_CONFIRMEDSTATE_ID = @as(c_int, 17131);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_CONFIRMEDSTATE_NAME = @as(c_int, 17132);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_CONFIRMEDSTATE_NUMBER = @as(c_int, 17133);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 17134);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 17135);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 17136);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 17137);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 17138);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ACKNOWLEDGE = @as(c_int, 17139);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 17140);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_CONFIRM = @as(c_int, 17141);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_CONFIRM_INPUTARGUMENTS = @as(c_int, 17142);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ACTIVESTATE = @as(c_int, 17143);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ACTIVESTATE_ID = @as(c_int, 17144);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ACTIVESTATE_NAME = @as(c_int, 17145);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ACTIVESTATE_NUMBER = @as(c_int, 17146);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 17147);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 17148);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 17149);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ACTIVESTATE_TRUESTATE = @as(c_int, 17150);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ACTIVESTATE_FALSESTATE = @as(c_int, 17151);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_INPUTNODE = @as(c_int, 17152);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SUPPRESSEDSTATE = @as(c_int, 17153);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SUPPRESSEDSTATE_ID = @as(c_int, 17154);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SUPPRESSEDSTATE_NAME = @as(c_int, 17155);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 17156);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 17157);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 17158);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 17159);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 17160);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 17161);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_OUTOFSERVICESTATE = @as(c_int, 17162);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_OUTOFSERVICESTATE_ID = @as(c_int, 17163);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_OUTOFSERVICESTATE_NAME = @as(c_int, 17164);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 17165);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 17166);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 17167);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 17168);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 17169);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 17170);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SILENCESTATE = @as(c_int, 17171);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SILENCESTATE_ID = @as(c_int, 17172);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SILENCESTATE_NAME = @as(c_int, 17173);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SILENCESTATE_NUMBER = @as(c_int, 17174);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 17175);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 17176);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 17177);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SILENCESTATE_TRUESTATE = @as(c_int, 17178);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SILENCESTATE_FALSESTATE = @as(c_int, 17179);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SHELVINGSTATE = @as(c_int, 17180);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 17181);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 17182);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 17183);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 17184);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 17185);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 17186);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 17187);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 17188);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 17189);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 17190);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 17191);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 17192);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SHELVINGSTATE_UNSHELVE = @as(c_int, 17193);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 17194);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 17195);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 17196);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SUPPRESSEDORSHELVED = @as(c_int, 17197);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_MAXTIMESHELVED = @as(c_int, 17198);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_AUDIBLEENABLED = @as(c_int, 17199);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_AUDIBLESOUND = @as(c_int, 17200);
pub const UA_NS0ID_REMOVEDATASETFOLDERMETHODTYPE_INPUTARGUMENTS = @as(c_int, 17201);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_ADDRESS_NETWORKINTERFACE = @as(c_int, 17202);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_TRANSPORTSETTINGS = @as(c_int, 17203);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_MAXNETWORKMESSAGESIZE = @as(c_int, 17204);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ONDELAY = @as(c_int, 17205);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_OFFDELAY = @as(c_int, 17206);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_FIRSTINGROUPFLAG = @as(c_int, 17207);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_FIRSTINGROUP = @as(c_int, 17208);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_ALARMGROUP_PLACEHOLDER = @as(c_int, 17209);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_REALARMTIME = @as(c_int, 17210);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_REALARMREPEATCOUNT = @as(c_int, 17211);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SILENCE = @as(c_int, 17212);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SUPPRESS = @as(c_int, 17213);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_WRITERGROUPID = @as(c_int, 17214);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_TARGETVALUENODE = @as(c_int, 17215);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_EXPECTEDTIME = @as(c_int, 17216);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_TOLERANCE = @as(c_int, 17217);
pub const UA_NS0ID_SAFETYCONDITIONCLASSTYPE = @as(c_int, 17218);
pub const UA_NS0ID_HIGHLYMANAGEDALARMCONDITIONCLASSTYPE = @as(c_int, 17219);
pub const UA_NS0ID_TRAININGCONDITIONCLASSTYPE = @as(c_int, 17220);
pub const UA_NS0ID_TESTINGCONDITIONCLASSTYPE = @as(c_int, 17221);
pub const UA_NS0ID_AUDITCONDITIONCOMMENTEVENTTYPE_CONDITIONEVENTID = @as(c_int, 17222);
pub const UA_NS0ID_AUDITCONDITIONACKNOWLEDGEEVENTTYPE_CONDITIONEVENTID = @as(c_int, 17223);
pub const UA_NS0ID_AUDITCONDITIONCONFIRMEVENTTYPE_CONDITIONEVENTID = @as(c_int, 17224);
pub const UA_NS0ID_AUDITCONDITIONSUPPRESSIONEVENTTYPE = @as(c_int, 17225);
pub const UA_NS0ID_AUDITCONDITIONSUPPRESSIONEVENTTYPE_EVENTID = @as(c_int, 17226);
pub const UA_NS0ID_AUDITCONDITIONSUPPRESSIONEVENTTYPE_EVENTTYPE = @as(c_int, 17227);
pub const UA_NS0ID_AUDITCONDITIONSUPPRESSIONEVENTTYPE_SOURCENODE = @as(c_int, 17228);
pub const UA_NS0ID_AUDITCONDITIONSUPPRESSIONEVENTTYPE_SOURCENAME = @as(c_int, 17229);
pub const UA_NS0ID_AUDITCONDITIONSUPPRESSIONEVENTTYPE_TIME = @as(c_int, 17230);
pub const UA_NS0ID_AUDITCONDITIONSUPPRESSIONEVENTTYPE_RECEIVETIME = @as(c_int, 17231);
pub const UA_NS0ID_AUDITCONDITIONSUPPRESSIONEVENTTYPE_LOCALTIME = @as(c_int, 17232);
pub const UA_NS0ID_AUDITCONDITIONSUPPRESSIONEVENTTYPE_MESSAGE = @as(c_int, 17233);
pub const UA_NS0ID_AUDITCONDITIONSUPPRESSIONEVENTTYPE_SEVERITY = @as(c_int, 17234);
pub const UA_NS0ID_AUDITCONDITIONSUPPRESSIONEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 17235);
pub const UA_NS0ID_AUDITCONDITIONSUPPRESSIONEVENTTYPE_STATUS = @as(c_int, 17236);
pub const UA_NS0ID_AUDITCONDITIONSUPPRESSIONEVENTTYPE_SERVERID = @as(c_int, 17237);
pub const UA_NS0ID_AUDITCONDITIONSUPPRESSIONEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 17238);
pub const UA_NS0ID_AUDITCONDITIONSUPPRESSIONEVENTTYPE_CLIENTUSERID = @as(c_int, 17239);
pub const UA_NS0ID_AUDITCONDITIONSUPPRESSIONEVENTTYPE_METHODID = @as(c_int, 17240);
pub const UA_NS0ID_AUDITCONDITIONSUPPRESSIONEVENTTYPE_INPUTARGUMENTS = @as(c_int, 17241);
pub const UA_NS0ID_AUDITCONDITIONSILENCEEVENTTYPE = @as(c_int, 17242);
pub const UA_NS0ID_AUDITCONDITIONSILENCEEVENTTYPE_EVENTID = @as(c_int, 17243);
pub const UA_NS0ID_AUDITCONDITIONSILENCEEVENTTYPE_EVENTTYPE = @as(c_int, 17244);
pub const UA_NS0ID_AUDITCONDITIONSILENCEEVENTTYPE_SOURCENODE = @as(c_int, 17245);
pub const UA_NS0ID_AUDITCONDITIONSILENCEEVENTTYPE_SOURCENAME = @as(c_int, 17246);
pub const UA_NS0ID_AUDITCONDITIONSILENCEEVENTTYPE_TIME = @as(c_int, 17247);
pub const UA_NS0ID_AUDITCONDITIONSILENCEEVENTTYPE_RECEIVETIME = @as(c_int, 17248);
pub const UA_NS0ID_AUDITCONDITIONSILENCEEVENTTYPE_LOCALTIME = @as(c_int, 17249);
pub const UA_NS0ID_AUDITCONDITIONSILENCEEVENTTYPE_MESSAGE = @as(c_int, 17250);
pub const UA_NS0ID_AUDITCONDITIONSILENCEEVENTTYPE_SEVERITY = @as(c_int, 17251);
pub const UA_NS0ID_AUDITCONDITIONSILENCEEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 17252);
pub const UA_NS0ID_AUDITCONDITIONSILENCEEVENTTYPE_STATUS = @as(c_int, 17253);
pub const UA_NS0ID_AUDITCONDITIONSILENCEEVENTTYPE_SERVERID = @as(c_int, 17254);
pub const UA_NS0ID_AUDITCONDITIONSILENCEEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 17255);
pub const UA_NS0ID_AUDITCONDITIONSILENCEEVENTTYPE_CLIENTUSERID = @as(c_int, 17256);
pub const UA_NS0ID_AUDITCONDITIONSILENCEEVENTTYPE_METHODID = @as(c_int, 17257);
pub const UA_NS0ID_AUDITCONDITIONSILENCEEVENTTYPE_INPUTARGUMENTS = @as(c_int, 17258);
pub const UA_NS0ID_AUDITCONDITIONOUTOFSERVICEEVENTTYPE = @as(c_int, 17259);
pub const UA_NS0ID_AUDITCONDITIONOUTOFSERVICEEVENTTYPE_EVENTID = @as(c_int, 17260);
pub const UA_NS0ID_AUDITCONDITIONOUTOFSERVICEEVENTTYPE_EVENTTYPE = @as(c_int, 17261);
pub const UA_NS0ID_AUDITCONDITIONOUTOFSERVICEEVENTTYPE_SOURCENODE = @as(c_int, 17262);
pub const UA_NS0ID_AUDITCONDITIONOUTOFSERVICEEVENTTYPE_SOURCENAME = @as(c_int, 17263);
pub const UA_NS0ID_AUDITCONDITIONOUTOFSERVICEEVENTTYPE_TIME = @as(c_int, 17264);
pub const UA_NS0ID_AUDITCONDITIONOUTOFSERVICEEVENTTYPE_RECEIVETIME = @as(c_int, 17265);
pub const UA_NS0ID_AUDITCONDITIONOUTOFSERVICEEVENTTYPE_LOCALTIME = @as(c_int, 17266);
pub const UA_NS0ID_AUDITCONDITIONOUTOFSERVICEEVENTTYPE_MESSAGE = @as(c_int, 17267);
pub const UA_NS0ID_AUDITCONDITIONOUTOFSERVICEEVENTTYPE_SEVERITY = @as(c_int, 17268);
pub const UA_NS0ID_AUDITCONDITIONOUTOFSERVICEEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 17269);
pub const UA_NS0ID_AUDITCONDITIONOUTOFSERVICEEVENTTYPE_STATUS = @as(c_int, 17270);
pub const UA_NS0ID_AUDITCONDITIONOUTOFSERVICEEVENTTYPE_SERVERID = @as(c_int, 17271);
pub const UA_NS0ID_AUDITCONDITIONOUTOFSERVICEEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 17272);
pub const UA_NS0ID_AUDITCONDITIONOUTOFSERVICEEVENTTYPE_CLIENTUSERID = @as(c_int, 17273);
pub const UA_NS0ID_AUDITCONDITIONOUTOFSERVICEEVENTTYPE_METHODID = @as(c_int, 17274);
pub const UA_NS0ID_AUDITCONDITIONOUTOFSERVICEEVENTTYPE_INPUTARGUMENTS = @as(c_int, 17275);
pub const UA_NS0ID_HASEFFECTDISABLE = @as(c_int, 17276);
pub const UA_NS0ID_ALARMRATEVARIABLETYPE = @as(c_int, 17277);
pub const UA_NS0ID_ALARMRATEVARIABLETYPE_RATE = @as(c_int, 17278);
pub const UA_NS0ID_ALARMMETRICSTYPE = @as(c_int, 17279);
pub const UA_NS0ID_ALARMMETRICSTYPE_ALARMCOUNT = @as(c_int, 17280);
pub const UA_NS0ID_ALARMMETRICSTYPE_MAXIMUMACTIVESTATE = @as(c_int, 17281);
pub const UA_NS0ID_ALARMMETRICSTYPE_MAXIMUMUNACK = @as(c_int, 17282);
pub const UA_NS0ID_ALARMMETRICSTYPE_MAXIMUMREALARMCOUNT = @as(c_int, 17283);
pub const UA_NS0ID_ALARMMETRICSTYPE_CURRENTALARMRATE = @as(c_int, 17284);
pub const UA_NS0ID_ALARMMETRICSTYPE_CURRENTALARMRATE_RATE = @as(c_int, 17285);
pub const UA_NS0ID_ALARMMETRICSTYPE_MAXIMUMALARMRATE = @as(c_int, 17286);
pub const UA_NS0ID_ALARMMETRICSTYPE_MAXIMUMALARMRATE_RATE = @as(c_int, 17287);
pub const UA_NS0ID_ALARMMETRICSTYPE_AVERAGEALARMRATE = @as(c_int, 17288);
pub const UA_NS0ID_ALARMMETRICSTYPE_AVERAGEALARMRATE_RATE = @as(c_int, 17289);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_TRANSPORTSETTINGS = @as(c_int, 17290);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_MESSAGESETTINGS = @as(c_int, 17291);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_TRANSPORTPROFILEURI = @as(c_int, 17292);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_ADDDATASETWRITER = @as(c_int, 17293);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_ADDDATASETWRITER_INPUTARGUMENTS = @as(c_int, 17294);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_TRANSPORTPROFILEURI_RESTRICTTOLIST = @as(c_int, 17295);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_SETSECURITYKEYS = @as(c_int, 17296);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_SETSECURITYKEYS_INPUTARGUMENTS = @as(c_int, 17297);
pub const UA_NS0ID_SETSECURITYKEYSMETHODTYPE = @as(c_int, 17298);
pub const UA_NS0ID_SETSECURITYKEYSMETHODTYPE_INPUTARGUMENTS = @as(c_int, 17299);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 17300);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_ADDDATASETWRITER_OUTPUTARGUMENTS = @as(c_int, 17301);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_MAXNETWORKMESSAGESIZE = @as(c_int, 17302);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 17303);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT = @as(c_int, 17304);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_ACTIVE = @as(c_int, 17305);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_TRANSPORTPROFILEURI = @as(c_int, 17306);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_TRANSPORTSETTINGS = @as(c_int, 17307);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_MESSAGESETTINGS = @as(c_int, 17308);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_TRANSPORTPROFILEURI_RESTRICTTOLIST = @as(c_int, 17309);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER = @as(c_int, 17310);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_SECURITYMODE = @as(c_int, 17311);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_SECURITYGROUPID = @as(c_int, 17312);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_SECURITYKEYSERVICES = @as(c_int, 17313);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_STATUS = @as(c_int, 17314);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_STATUS_STATE = @as(c_int, 17315);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_STATUS_ENABLE = @as(c_int, 17316);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_STATUS_DISABLE = @as(c_int, 17317);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_PUBLISHINGINTERVAL = @as(c_int, 17318);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_KEEPALIVETIME = @as(c_int, 17319);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_CLASSIFICATION = @as(c_int, 17320);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_PRIORITY = @as(c_int, 17321);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_LOCALEIDS = @as(c_int, 17322);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_REMOVEDATASETWRITER = @as(c_int, 17323);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_REMOVEDATASETWRITER_INPUTARGUMENTS = @as(c_int, 17324);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER = @as(c_int, 17325);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_SECURITYMODE = @as(c_int, 17326);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_SECURITYGROUPID = @as(c_int, 17327);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_SECURITYKEYSERVICES = @as(c_int, 17328);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_STATUS = @as(c_int, 17329);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_STATUS_STATE = @as(c_int, 17330);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_STATUS_ENABLE = @as(c_int, 17331);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_STATUS_DISABLE = @as(c_int, 17332);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_REMOVEDATASETREADER = @as(c_int, 17333);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_REMOVEDATASETREADER_INPUTARGUMENTS = @as(c_int, 17334);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 17335);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 17336);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR = @as(c_int, 17337);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_ACTIVE = @as(c_int, 17338);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_CLASSIFICATION = @as(c_int, 17339);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_DIAGNOSTICSLEVEL = @as(c_int, 17340);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_TIMEFIRSTCHANGE = @as(c_int, 17341);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT = @as(c_int, 17342);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_ACTIVE = @as(c_int, 17343);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_CLASSIFICATION = @as(c_int, 17344);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 17345);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 17346);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD = @as(c_int, 17347);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_ACTIVE = @as(c_int, 17348);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_CLASSIFICATION = @as(c_int, 17349);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 17350);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 17351);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES = @as(c_int, 17352);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_RESOLVEDADDRESS = @as(c_int, 17353);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_RESOLVEDADDRESS_DIAGNOSTICSLEVEL = @as(c_int, 17354);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_ADDDATASETREADER = @as(c_int, 17355);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_ADDWRITERGROUP = @as(c_int, 17356);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_ADDWRITERGROUP_INPUTARGUMENTS = @as(c_int, 17357);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_ADDWRITERGROUP_OUTPUTARGUMENTS = @as(c_int, 17358);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_ADDREADERGROUP = @as(c_int, 17359);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_ADDREADERGROUP_INPUTARGUMENTS = @as(c_int, 17360);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_ADDREADERGROUP_OUTPUTARGUMENTS = @as(c_int, 17361);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_REMOVEGROUP = @as(c_int, 17362);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_REMOVEGROUP_INPUTARGUMENTS = @as(c_int, 17363);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_SETSECURITYKEYS = @as(c_int, 17364);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_SETSECURITYKEYS_INPUTARGUMENTS = @as(c_int, 17365);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_ADDCONNECTION = @as(c_int, 17366);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_ADDCONNECTION_INPUTARGUMENTS = @as(c_int, 17367);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_ADDCONNECTION_OUTPUTARGUMENTS = @as(c_int, 17368);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_REMOVECONNECTION = @as(c_int, 17369);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_REMOVECONNECTION_INPUTARGUMENTS = @as(c_int, 17370);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBLISHEDDATASETS = @as(c_int, 17371);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBLISHEDDATASETS_ADDPUBLISHEDDATAITEMS = @as(c_int, 17372);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBLISHEDDATASETS_ADDPUBLISHEDDATAITEMS_INPUTARGUMENTS = @as(c_int, 17373);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBLISHEDDATASETS_ADDPUBLISHEDDATAITEMS_OUTPUTARGUMENTS = @as(c_int, 17374);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBLISHEDDATASETS_ADDPUBLISHEDEVENTS = @as(c_int, 17375);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBLISHEDDATASETS_ADDPUBLISHEDEVENTS_INPUTARGUMENTS = @as(c_int, 17376);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBLISHEDDATASETS_ADDPUBLISHEDEVENTS_OUTPUTARGUMENTS = @as(c_int, 17377);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBLISHEDDATASETS_ADDPUBLISHEDDATAITEMSTEMPLATE = @as(c_int, 17378);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBLISHEDDATASETS_ADDPUBLISHEDDATAITEMSTEMPLATE_INPUTARGUMENTS = @as(c_int, 17379);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBLISHEDDATASETS_ADDPUBLISHEDDATAITEMSTEMPLATE_OUTPUTARGUMENTS = @as(c_int, 17380);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBLISHEDDATASETS_ADDPUBLISHEDEVENTSTEMPLATE = @as(c_int, 17381);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBLISHEDDATASETS_ADDPUBLISHEDEVENTSTEMPLATE_INPUTARGUMENTS = @as(c_int, 17382);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBLISHEDDATASETS_ADDPUBLISHEDEVENTSTEMPLATE_OUTPUTARGUMENTS = @as(c_int, 17383);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBLISHEDDATASETS_REMOVEPUBLISHEDDATASET = @as(c_int, 17384);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBLISHEDDATASETS_REMOVEPUBLISHEDDATASET_INPUTARGUMENTS = @as(c_int, 17385);
pub const UA_NS0ID_DATASETREADERTYPE_CREATETARGETVARIABLES = @as(c_int, 17386);
pub const UA_NS0ID_DATASETREADERTYPE_CREATETARGETVARIABLES_INPUTARGUMENTS = @as(c_int, 17387);
pub const UA_NS0ID_DATASETREADERTYPE_CREATETARGETVARIABLES_OUTPUTARGUMENTS = @as(c_int, 17388);
pub const UA_NS0ID_DATASETREADERTYPE_CREATEDATASETMIRROR = @as(c_int, 17389);
pub const UA_NS0ID_DATASETREADERTYPE_CREATEDATASETMIRROR_INPUTARGUMENTS = @as(c_int, 17390);
pub const UA_NS0ID_DATASETREADERTYPE_CREATEDATASETMIRROR_OUTPUTARGUMENTS = @as(c_int, 17391);
pub const UA_NS0ID_DATASETREADERTYPECREATETARGETVARIABLESMETHODTYPE = @as(c_int, 17392);
pub const UA_NS0ID_DATASETREADERTYPECREATETARGETVARIABLESMETHODTYPE_INPUTARGUMENTS = @as(c_int, 17393);
pub const UA_NS0ID_DATASETREADERTYPECREATETARGETVARIABLESMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 17394);
pub const UA_NS0ID_DATASETREADERTYPECREATEDATASETMIRRORMETHODTYPE = @as(c_int, 17395);
pub const UA_NS0ID_DATASETREADERTYPECREATEDATASETMIRRORMETHODTYPE_INPUTARGUMENTS = @as(c_int, 17396);
pub const UA_NS0ID_DATASETREADERTYPECREATEDATASETMIRRORMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 17397);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBLISHEDDATASETS_ADDDATASETFOLDER = @as(c_int, 17398);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_ADDDATASETREADER_INPUTARGUMENTS = @as(c_int, 17399);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_ADDDATASETREADER_OUTPUTARGUMENTS = @as(c_int, 17400);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBLISHEDDATASETS_ADDDATASETFOLDER_INPUTARGUMENTS = @as(c_int, 17401);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBLISHEDDATASETS_ADDDATASETFOLDER_OUTPUTARGUMENTS = @as(c_int, 17402);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBLISHEDDATASETS_REMOVEDATASETFOLDER = @as(c_int, 17403);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBLISHEDDATASETS_REMOVEDATASETFOLDER_INPUTARGUMENTS = @as(c_int, 17404);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_STATUS = @as(c_int, 17405);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_STATUS_STATE = @as(c_int, 17406);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_STATUS_ENABLE = @as(c_int, 17407);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_STATUS_DISABLE = @as(c_int, 17408);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS = @as(c_int, 17409);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_DIAGNOSTICSLEVEL = @as(c_int, 17410);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_TOTALINFORMATION = @as(c_int, 17411);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_TOTALINFORMATION_ACTIVE = @as(c_int, 17412);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_TOTALINFORMATION_CLASSIFICATION = @as(c_int, 17413);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_TOTALINFORMATION_DIAGNOSTICSLEVEL = @as(c_int, 17414);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_TOTALINFORMATION_TIMEFIRSTCHANGE = @as(c_int, 17415);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_TOTALERROR = @as(c_int, 17416);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_TOTALERROR_ACTIVE = @as(c_int, 17417);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_TOTALERROR_CLASSIFICATION = @as(c_int, 17418);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_TOTALERROR_DIAGNOSTICSLEVEL = @as(c_int, 17419);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_TOTALERROR_TIMEFIRSTCHANGE = @as(c_int, 17420);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_RESET = @as(c_int, 17421);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_SUBERROR = @as(c_int, 17422);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS = @as(c_int, 17423);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEERROR = @as(c_int, 17424);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEERROR_ACTIVE = @as(c_int, 17425);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEERROR_CLASSIFICATION = @as(c_int, 17426);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_ADDWRITERGROUP = @as(c_int, 17427);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_ADDWRITERGROUP_INPUTARGUMENTS = @as(c_int, 17428);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEERROR_DIAGNOSTICSLEVEL = @as(c_int, 17429);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEERROR_TIMEFIRSTCHANGE = @as(c_int, 17430);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD = @as(c_int, 17431);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_ACTIVE = @as(c_int, 17432);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_CLASSIFICATION = @as(c_int, 17433);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 17434);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 17435);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT = @as(c_int, 17436);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_ACTIVE = @as(c_int, 17437);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_CLASSIFICATION = @as(c_int, 17438);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 17439);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 17440);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR = @as(c_int, 17441);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_ACTIVE = @as(c_int, 17442);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_CLASSIFICATION = @as(c_int, 17443);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_DIAGNOSTICSLEVEL = @as(c_int, 17444);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_TIMEFIRSTCHANGE = @as(c_int, 17445);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT = @as(c_int, 17446);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_ACTIVE = @as(c_int, 17447);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_CLASSIFICATION = @as(c_int, 17448);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 17449);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 17450);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD = @as(c_int, 17451);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_ACTIVE = @as(c_int, 17452);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_CLASSIFICATION = @as(c_int, 17453);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 17454);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 17455);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_ADDWRITERGROUP_OUTPUTARGUMENTS = @as(c_int, 17456);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_LIVEVALUES = @as(c_int, 17457);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_LIVEVALUES_CONFIGUREDDATASETWRITERS = @as(c_int, 17458);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_LIVEVALUES_CONFIGUREDDATASETWRITERS_DIAGNOSTICSLEVEL = @as(c_int, 17459);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_LIVEVALUES_CONFIGUREDDATASETREADERS = @as(c_int, 17460);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_LIVEVALUES_CONFIGUREDDATASETREADERS_DIAGNOSTICSLEVEL = @as(c_int, 17461);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_LIVEVALUES_OPERATIONALDATASETWRITERS = @as(c_int, 17462);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_LIVEVALUES_OPERATIONALDATASETWRITERS_DIAGNOSTICSLEVEL = @as(c_int, 17463);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_LIVEVALUES_OPERATIONALDATASETREADERS = @as(c_int, 17464);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_ADDREADERGROUP = @as(c_int, 17465);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DIAGNOSTICS_LIVEVALUES_OPERATIONALDATASETREADERS_DIAGNOSTICSLEVEL = @as(c_int, 17466);
pub const UA_NS0ID_DATAGRAMCONNECTIONTRANSPORTDATATYPE = @as(c_int, 17467);
pub const UA_NS0ID_DATAGRAMCONNECTIONTRANSPORTDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 17468);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATAGRAMCONNECTIONTRANSPORTDATATYPE = @as(c_int, 17469);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATAGRAMCONNECTIONTRANSPORTDATATYPE_DATATYPEVERSION = @as(c_int, 17470);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATAGRAMCONNECTIONTRANSPORTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 17471);
pub const UA_NS0ID_DATAGRAMCONNECTIONTRANSPORTDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 17472);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATAGRAMCONNECTIONTRANSPORTDATATYPE = @as(c_int, 17473);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATAGRAMCONNECTIONTRANSPORTDATATYPE_DATATYPEVERSION = @as(c_int, 17474);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATAGRAMCONNECTIONTRANSPORTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 17475);
pub const UA_NS0ID_DATAGRAMCONNECTIONTRANSPORTDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 17476);
pub const UA_NS0ID_UADPDATASETREADERMESSAGETYPE_DATASETOFFSET = @as(c_int, 17477);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_CONNECTIONPROPERTIES = @as(c_int, 17478);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_SUPPORTEDTRANSPORTPROFILES = @as(c_int, 17479);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_CONNECTIONPROPERTIES = @as(c_int, 17480);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_SUPPORTEDTRANSPORTPROFILES = @as(c_int, 17481);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DATASETWRITERPROPERTIES = @as(c_int, 17482);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DATASETWRITERPROPERTIES = @as(c_int, 17483);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DATASETWRITERPROPERTIES = @as(c_int, 17484);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_CONNECTIONPROPERTIES = @as(c_int, 17485);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_GROUPPROPERTIES = @as(c_int, 17486);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_GROUPPROPERTIES = @as(c_int, 17487);
pub const UA_NS0ID_PUBSUBGROUPTYPE_GROUPPROPERTIES = @as(c_int, 17488);
pub const UA_NS0ID_WRITERGROUPTYPE_GROUPPROPERTIES = @as(c_int, 17489);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DATASETWRITERPROPERTIES = @as(c_int, 17490);
pub const UA_NS0ID_READERGROUPTYPE_GROUPPROPERTIES = @as(c_int, 17491);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DATASETREADERPROPERTIES = @as(c_int, 17492);
pub const UA_NS0ID_DATASETWRITERTYPE_DATASETWRITERPROPERTIES = @as(c_int, 17493);
pub const UA_NS0ID_DATASETREADERTYPE_DATASETREADERPROPERTIES = @as(c_int, 17494);
pub const UA_NS0ID_CREATECREDENTIALMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 17495);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATIONFOLDERTYPE = @as(c_int, 17496);
pub const UA_NS0ID_ANALOGUNITTYPE = @as(c_int, 17497);
pub const UA_NS0ID_ANALOGUNITTYPE_DEFINITION = @as(c_int, 17498);
pub const UA_NS0ID_ANALOGUNITTYPE_VALUEPRECISION = @as(c_int, 17499);
pub const UA_NS0ID_ANALOGUNITTYPE_INSTRUMENTRANGE = @as(c_int, 17500);
pub const UA_NS0ID_ANALOGUNITTYPE_EURANGE = @as(c_int, 17501);
pub const UA_NS0ID_ANALOGUNITTYPE_ENGINEERINGUNITS = @as(c_int, 17502);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_ADDRESS_NETWORKINTERFACE_SELECTIONS = @as(c_int, 17503);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_ADDRESS_NETWORKINTERFACE_SELECTIONDESCRIPTIONS = @as(c_int, 17504);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_ADDRESS_NETWORKINTERFACE_RESTRICTTOLIST = @as(c_int, 17505);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_ADDRESS_NETWORKINTERFACE_SELECTIONS = @as(c_int, 17506);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_ADDREADERGROUP_INPUTARGUMENTS = @as(c_int, 17507);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_ADDREADERGROUP_OUTPUTARGUMENTS = @as(c_int, 17508);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_ADDRESS_NETWORKINTERFACE_SELECTIONDESCRIPTIONS = @as(c_int, 17509);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONNECTIONNAME_PLACEHOLDER_ADDRESS_NETWORKINTERFACE_RESTRICTTOLIST = @as(c_int, 17510);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATIONFOLDERTYPE_SERVICENAME_PLACEHOLDER = @as(c_int, 17511);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATIONFOLDERTYPE_SERVICENAME_PLACEHOLDER_RESOURCEURI = @as(c_int, 17512);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATIONFOLDERTYPE_SERVICENAME_PLACEHOLDER_PROFILEURI = @as(c_int, 17513);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATIONFOLDERTYPE_SERVICENAME_PLACEHOLDER_ENDPOINTURLS = @as(c_int, 17514);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATIONFOLDERTYPE_SERVICENAME_PLACEHOLDER_SERVICESTATUS = @as(c_int, 17515);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATIONFOLDERTYPE_SERVICENAME_PLACEHOLDER_GETENCRYPTINGKEY = @as(c_int, 17516);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATIONFOLDERTYPE_SERVICENAME_PLACEHOLDER_GETENCRYPTINGKEY_INPUTARGUMENTS = @as(c_int, 17517);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATIONFOLDERTYPE_SERVICENAME_PLACEHOLDER_GETENCRYPTINGKEY_OUTPUTARGUMENTS = @as(c_int, 17518);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATIONFOLDERTYPE_SERVICENAME_PLACEHOLDER_UPDATECREDENTIAL = @as(c_int, 17519);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATIONFOLDERTYPE_SERVICENAME_PLACEHOLDER_UPDATECREDENTIAL_INPUTARGUMENTS = @as(c_int, 17520);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATIONFOLDERTYPE_SERVICENAME_PLACEHOLDER_DELETECREDENTIAL = @as(c_int, 17521);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATIONFOLDERTYPE_CREATECREDENTIAL = @as(c_int, 17522);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATIONFOLDERTYPE_CREATECREDENTIAL_INPUTARGUMENTS = @as(c_int, 17523);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATIONFOLDERTYPE_CREATECREDENTIAL_OUTPUTARGUMENTS = @as(c_int, 17524);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATION_SERVICENAME_PLACEHOLDER_GETENCRYPTINGKEY = @as(c_int, 17525);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATION_SERVICENAME_PLACEHOLDER_GETENCRYPTINGKEY_INPUTARGUMENTS = @as(c_int, 17526);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATION_SERVICENAME_PLACEHOLDER_GETENCRYPTINGKEY_OUTPUTARGUMENTS = @as(c_int, 17527);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATION_CREATECREDENTIAL = @as(c_int, 17528);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATION_CREATECREDENTIAL_INPUTARGUMENTS = @as(c_int, 17529);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATION_CREATECREDENTIAL_OUTPUTARGUMENTS = @as(c_int, 17530);
pub const UA_NS0ID_GETENCRYPTINGKEYMETHODTYPE = @as(c_int, 17531);
pub const UA_NS0ID_GETENCRYPTINGKEYMETHODTYPE_INPUTARGUMENTS = @as(c_int, 17532);
pub const UA_NS0ID_GETENCRYPTINGKEYMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 17533);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATIONTYPE_GETENCRYPTINGKEY = @as(c_int, 17534);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATIONTYPE_GETENCRYPTINGKEY_INPUTARGUMENTS = @as(c_int, 17535);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATIONTYPE_GETENCRYPTINGKEY_OUTPUTARGUMENTS = @as(c_int, 17536);
pub const UA_NS0ID_ADDITIONALPARAMETERSTYPE_ENCODING_DEFAULTBINARY = @as(c_int, 17537);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ADDITIONALPARAMETERSTYPE = @as(c_int, 17538);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ADDITIONALPARAMETERSTYPE_DATATYPEVERSION = @as(c_int, 17539);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ADDITIONALPARAMETERSTYPE_DICTIONARYFRAGMENT = @as(c_int, 17540);
pub const UA_NS0ID_ADDITIONALPARAMETERSTYPE_ENCODING_DEFAULTXML = @as(c_int, 17541);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ADDITIONALPARAMETERSTYPE = @as(c_int, 17542);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ADDITIONALPARAMETERSTYPE_DATATYPEVERSION = @as(c_int, 17543);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ADDITIONALPARAMETERSTYPE_DICTIONARYFRAGMENT = @as(c_int, 17544);
pub const UA_NS0ID_RSAENCRYPTEDSECRET = @as(c_int, 17545);
pub const UA_NS0ID_ECCENCRYPTEDSECRET = @as(c_int, 17546);
pub const UA_NS0ID_ADDITIONALPARAMETERSTYPE_ENCODING_DEFAULTJSON = @as(c_int, 17547);
pub const UA_NS0ID_EPHEMERALKEYTYPE = @as(c_int, 17548);
pub const UA_NS0ID_EPHEMERALKEYTYPE_ENCODING_DEFAULTBINARY = @as(c_int, 17549);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_EPHEMERALKEYTYPE = @as(c_int, 17550);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_EPHEMERALKEYTYPE_DATATYPEVERSION = @as(c_int, 17551);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_EPHEMERALKEYTYPE_DICTIONARYFRAGMENT = @as(c_int, 17552);
pub const UA_NS0ID_EPHEMERALKEYTYPE_ENCODING_DEFAULTXML = @as(c_int, 17553);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_EPHEMERALKEYTYPE = @as(c_int, 17554);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_EPHEMERALKEYTYPE_DATATYPEVERSION = @as(c_int, 17555);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_EPHEMERALKEYTYPE_DICTIONARYFRAGMENT = @as(c_int, 17556);
pub const UA_NS0ID_EPHEMERALKEYTYPE_ENCODING_DEFAULTJSON = @as(c_int, 17557);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_HEADERLAYOUTURI = @as(c_int, 17558);
pub const UA_NS0ID_WRITERGROUPTYPE_HEADERLAYOUTURI = @as(c_int, 17559);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_KEYFRAMECOUNT = @as(c_int, 17560);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPEADDWRITERGROUPMETHODTYPE = @as(c_int, 17561);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_HEADERLAYOUTURI = @as(c_int, 17562);
pub const UA_NS0ID_DATASETREADERTYPE_KEYFRAMECOUNT = @as(c_int, 17563);
pub const UA_NS0ID_DATASETREADERTYPE_HEADERLAYOUTURI = @as(c_int, 17564);
pub const UA_NS0ID_BASEANALOGTYPE_DEFINITION = @as(c_int, 17565);
pub const UA_NS0ID_BASEANALOGTYPE_VALUEPRECISION = @as(c_int, 17566);
pub const UA_NS0ID_BASEANALOGTYPE_INSTRUMENTRANGE = @as(c_int, 17567);
pub const UA_NS0ID_BASEANALOGTYPE_EURANGE = @as(c_int, 17568);
pub const UA_NS0ID_BASEANALOGTYPE_ENGINEERINGUNITS = @as(c_int, 17569);
pub const UA_NS0ID_ANALOGUNITRANGETYPE = @as(c_int, 17570);
pub const UA_NS0ID_ANALOGUNITRANGETYPE_DEFINITION = @as(c_int, 17571);
pub const UA_NS0ID_ANALOGUNITRANGETYPE_VALUEPRECISION = @as(c_int, 17572);
pub const UA_NS0ID_ANALOGUNITRANGETYPE_INSTRUMENTRANGE = @as(c_int, 17573);
pub const UA_NS0ID_ANALOGUNITRANGETYPE_EURANGE = @as(c_int, 17574);
pub const UA_NS0ID_ANALOGUNITRANGETYPE_ENGINEERINGUNITS = @as(c_int, 17575);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_ADDRESS_NETWORKINTERFACE_SELECTIONS = @as(c_int, 17576);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_ADDRESS_NETWORKINTERFACE_SELECTIONDESCRIPTIONS = @as(c_int, 17577);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_ADDRESS_NETWORKINTERFACE_RESTRICTTOLIST = @as(c_int, 17578);
pub const UA_NS0ID_DATAGRAMCONNECTIONTRANSPORTTYPE_DISCOVERYADDRESS_NETWORKINTERFACE_SELECTIONS = @as(c_int, 17579);
pub const UA_NS0ID_DATAGRAMCONNECTIONTRANSPORTTYPE_DISCOVERYADDRESS_NETWORKINTERFACE_SELECTIONDESCRIPTIONS = @as(c_int, 17580);
pub const UA_NS0ID_DATAGRAMCONNECTIONTRANSPORTTYPE_DISCOVERYADDRESS_NETWORKINTERFACE_RESTRICTTOLIST = @as(c_int, 17581);
pub const UA_NS0ID_NETWORKADDRESSTYPE_NETWORKINTERFACE_SELECTIONS = @as(c_int, 17582);
pub const UA_NS0ID_NETWORKADDRESSTYPE_NETWORKINTERFACE_SELECTIONDESCRIPTIONS = @as(c_int, 17583);
pub const UA_NS0ID_NETWORKADDRESSTYPE_NETWORKINTERFACE_RESTRICTTOLIST = @as(c_int, 17584);
pub const UA_NS0ID_NETWORKADDRESSURLTYPE_NETWORKINTERFACE_SELECTIONS = @as(c_int, 17585);
pub const UA_NS0ID_NETWORKADDRESSURLTYPE_NETWORKINTERFACE_SELECTIONDESCRIPTIONS = @as(c_int, 17586);
pub const UA_NS0ID_NETWORKADDRESSURLTYPE_NETWORKINTERFACE_RESTRICTTOLIST = @as(c_int, 17587);
pub const UA_NS0ID_INDEX = @as(c_int, 17588);
pub const UA_NS0ID_DICTIONARYENTRYTYPE = @as(c_int, 17589);
pub const UA_NS0ID_DICTIONARYENTRYTYPE_DICTIONARYENTRYNAME_PLACEHOLDER = @as(c_int, 17590);
pub const UA_NS0ID_DICTIONARYFOLDERTYPE = @as(c_int, 17591);
pub const UA_NS0ID_DICTIONARYFOLDERTYPE_DICTIONARYFOLDERNAME_PLACEHOLDER = @as(c_int, 17592);
pub const UA_NS0ID_DICTIONARYFOLDERTYPE_DICTIONARYENTRYNAME_PLACEHOLDER = @as(c_int, 17593);
pub const UA_NS0ID_DICTIONARIES = @as(c_int, 17594);
pub const UA_NS0ID_DICTIONARIES_DICTIONARYFOLDERNAME_PLACEHOLDER = @as(c_int, 17595);
pub const UA_NS0ID_DICTIONARIES_DICTIONARYENTRYNAME_PLACEHOLDER = @as(c_int, 17596);
pub const UA_NS0ID_HASDICTIONARYENTRY = @as(c_int, 17597);
pub const UA_NS0ID_IRDIDICTIONARYENTRYTYPE = @as(c_int, 17598);
pub const UA_NS0ID_IRDIDICTIONARYENTRYTYPE_DICTIONARYENTRYNAME_PLACEHOLDER = @as(c_int, 17599);
pub const UA_NS0ID_URIDICTIONARYENTRYTYPE = @as(c_int, 17600);
pub const UA_NS0ID_URIDICTIONARYENTRYTYPE_DICTIONARYENTRYNAME_PLACEHOLDER = @as(c_int, 17601);
pub const UA_NS0ID_BASEINTERFACETYPE = @as(c_int, 17602);
pub const UA_NS0ID_HASINTERFACE = @as(c_int, 17603);
pub const UA_NS0ID_HASADDIN = @as(c_int, 17604);
pub const UA_NS0ID_DEFAULTINSTANCEBROWSENAME = @as(c_int, 17605);
pub const UA_NS0ID_GENERICATTRIBUTEVALUE = @as(c_int, 17606);
pub const UA_NS0ID_GENERICATTRIBUTES = @as(c_int, 17607);
pub const UA_NS0ID_GENERICATTRIBUTEVALUE_ENCODING_DEFAULTXML = @as(c_int, 17608);
pub const UA_NS0ID_GENERICATTRIBUTES_ENCODING_DEFAULTXML = @as(c_int, 17609);
pub const UA_NS0ID_GENERICATTRIBUTEVALUE_ENCODING_DEFAULTBINARY = @as(c_int, 17610);
pub const UA_NS0ID_GENERICATTRIBUTES_ENCODING_DEFAULTBINARY = @as(c_int, 17611);
pub const UA_NS0ID_SERVERTYPE_LOCALTIME = @as(c_int, 17612);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPEADDWRITERGROUPMETHODTYPE_INPUTARGUMENTS = @as(c_int, 17613);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPEADDWRITERGROUPMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 17614);
pub const UA_NS0ID_AUDITSECURITYEVENTTYPE_STATUSCODEID = @as(c_int, 17615);
pub const UA_NS0ID_AUDITCHANNELEVENTTYPE_STATUSCODEID = @as(c_int, 17616);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_STATUSCODEID = @as(c_int, 17617);
pub const UA_NS0ID_AUDITSESSIONEVENTTYPE_STATUSCODEID = @as(c_int, 17618);
pub const UA_NS0ID_AUDITCREATESESSIONEVENTTYPE_STATUSCODEID = @as(c_int, 17619);
pub const UA_NS0ID_AUDITURLMISMATCHEVENTTYPE_STATUSCODEID = @as(c_int, 17620);
pub const UA_NS0ID_AUDITACTIVATESESSIONEVENTTYPE_STATUSCODEID = @as(c_int, 17621);
pub const UA_NS0ID_AUDITCANCELEVENTTYPE_STATUSCODEID = @as(c_int, 17622);
pub const UA_NS0ID_AUDITCERTIFICATEEVENTTYPE_STATUSCODEID = @as(c_int, 17623);
pub const UA_NS0ID_AUDITCERTIFICATEDATAMISMATCHEVENTTYPE_STATUSCODEID = @as(c_int, 17624);
pub const UA_NS0ID_AUDITCERTIFICATEEXPIREDEVENTTYPE_STATUSCODEID = @as(c_int, 17625);
pub const UA_NS0ID_AUDITCERTIFICATEINVALIDEVENTTYPE_STATUSCODEID = @as(c_int, 17626);
pub const UA_NS0ID_AUDITCERTIFICATEUNTRUSTEDEVENTTYPE_STATUSCODEID = @as(c_int, 17627);
pub const UA_NS0ID_AUDITCERTIFICATEREVOKEDEVENTTYPE_STATUSCODEID = @as(c_int, 17628);
pub const UA_NS0ID_AUDITCERTIFICATEMISMATCHEVENTTYPE_STATUSCODEID = @as(c_int, 17629);
pub const UA_NS0ID_PUBSUBCONNECTIONADDREADERGROUPGROUPMETHODTYPE = @as(c_int, 17630);
pub const UA_NS0ID_PUBSUBCONNECTIONADDREADERGROUPGROUPMETHODTYPE_INPUTARGUMENTS = @as(c_int, 17631);
pub const UA_NS0ID_SELECTIONLISTTYPE_SELECTIONS = @as(c_int, 17632);
pub const UA_NS0ID_SELECTIONLISTTYPE_SELECTIONDESCRIPTIONS = @as(c_int, 17633);
pub const UA_NS0ID_SERVER_LOCALTIME = @as(c_int, 17634);
pub const UA_NS0ID_FINITESTATEMACHINETYPE_AVAILABLESTATES = @as(c_int, 17635);
pub const UA_NS0ID_FINITESTATEMACHINETYPE_AVAILABLETRANSITIONS = @as(c_int, 17636);
pub const UA_NS0ID_TEMPORARYFILETRANSFERTYPE_TRANSFERSTATE_PLACEHOLDER_AVAILABLESTATES = @as(c_int, 17637);
pub const UA_NS0ID_TEMPORARYFILETRANSFERTYPE_TRANSFERSTATE_PLACEHOLDER_AVAILABLETRANSITIONS = @as(c_int, 17638);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_AVAILABLESTATES = @as(c_int, 17639);
pub const UA_NS0ID_FILETRANSFERSTATEMACHINETYPE_AVAILABLETRANSITIONS = @as(c_int, 17640);
pub const UA_NS0ID_ROLEMAPPINGRULECHANGEDAUDITEVENTTYPE = @as(c_int, 17641);
pub const UA_NS0ID_ROLEMAPPINGRULECHANGEDAUDITEVENTTYPE_EVENTID = @as(c_int, 17642);
pub const UA_NS0ID_ROLEMAPPINGRULECHANGEDAUDITEVENTTYPE_EVENTTYPE = @as(c_int, 17643);
pub const UA_NS0ID_ROLEMAPPINGRULECHANGEDAUDITEVENTTYPE_SOURCENODE = @as(c_int, 17644);
pub const UA_NS0ID_ROLEMAPPINGRULECHANGEDAUDITEVENTTYPE_SOURCENAME = @as(c_int, 17645);
pub const UA_NS0ID_ROLEMAPPINGRULECHANGEDAUDITEVENTTYPE_TIME = @as(c_int, 17646);
pub const UA_NS0ID_ROLEMAPPINGRULECHANGEDAUDITEVENTTYPE_RECEIVETIME = @as(c_int, 17647);
pub const UA_NS0ID_ROLEMAPPINGRULECHANGEDAUDITEVENTTYPE_LOCALTIME = @as(c_int, 17648);
pub const UA_NS0ID_ROLEMAPPINGRULECHANGEDAUDITEVENTTYPE_MESSAGE = @as(c_int, 17649);
pub const UA_NS0ID_ROLEMAPPINGRULECHANGEDAUDITEVENTTYPE_SEVERITY = @as(c_int, 17650);
pub const UA_NS0ID_ROLEMAPPINGRULECHANGEDAUDITEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 17651);
pub const UA_NS0ID_ROLEMAPPINGRULECHANGEDAUDITEVENTTYPE_STATUS = @as(c_int, 17652);
pub const UA_NS0ID_ROLEMAPPINGRULECHANGEDAUDITEVENTTYPE_SERVERID = @as(c_int, 17653);
pub const UA_NS0ID_ROLEMAPPINGRULECHANGEDAUDITEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 17654);
pub const UA_NS0ID_ROLEMAPPINGRULECHANGEDAUDITEVENTTYPE_CLIENTUSERID = @as(c_int, 17655);
pub const UA_NS0ID_ROLEMAPPINGRULECHANGEDAUDITEVENTTYPE_METHODID = @as(c_int, 17656);
pub const UA_NS0ID_ROLEMAPPINGRULECHANGEDAUDITEVENTTYPE_INPUTARGUMENTS = @as(c_int, 17657);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 17658);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 17659);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 17660);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 17661);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_AVAILABLESTATES = @as(c_int, 17662);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_AVAILABLETRANSITIONS = @as(c_int, 17663);
pub const UA_NS0ID_LIMITALARMTYPE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 17664);
pub const UA_NS0ID_LIMITALARMTYPE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 17665);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_AVAILABLESTATES = @as(c_int, 17666);
pub const UA_NS0ID_EXCLUSIVELIMITSTATEMACHINETYPE_AVAILABLETRANSITIONS = @as(c_int, 17667);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 17668);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 17669);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LIMITSTATE_AVAILABLESTATES = @as(c_int, 17670);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LIMITSTATE_AVAILABLETRANSITIONS = @as(c_int, 17671);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 17672);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 17673);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 17674);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 17675);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 17676);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 17677);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LIMITSTATE_AVAILABLESTATES = @as(c_int, 17678);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LIMITSTATE_AVAILABLETRANSITIONS = @as(c_int, 17679);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 17680);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 17681);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 17682);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 17683);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LIMITSTATE_AVAILABLESTATES = @as(c_int, 17684);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LIMITSTATE_AVAILABLETRANSITIONS = @as(c_int, 17685);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 17686);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 17687);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 17688);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 17689);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LIMITSTATE_AVAILABLESTATES = @as(c_int, 17690);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LIMITSTATE_AVAILABLETRANSITIONS = @as(c_int, 17691);
pub const UA_NS0ID_DISCRETEALARMTYPE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 17692);
pub const UA_NS0ID_DISCRETEALARMTYPE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 17693);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 17694);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 17695);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 17696);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 17697);
pub const UA_NS0ID_TRIPALARMTYPE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 17698);
pub const UA_NS0ID_TRIPALARMTYPE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 17699);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 17700);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 17701);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 17702);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 17703);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_AVAILABLESTATES = @as(c_int, 17704);
pub const UA_NS0ID_PROGRAMSTATEMACHINETYPE_AVAILABLETRANSITIONS = @as(c_int, 17705);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_TRANSPORTPROFILEURI_SELECTIONS = @as(c_int, 17706);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_TRANSPORTPROFILEURI_SELECTIONDESCRIPTIONS = @as(c_int, 17707);
pub const UA_NS0ID_INTERFACETYPES = @as(c_int, 17708);
pub const UA_NS0ID_RATIONALNUMBERTYPE = @as(c_int, 17709);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_TRANSPORTPROFILEURI_SELECTIONS = @as(c_int, 17710);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_TRANSPORTPROFILEURI_SELECTIONDESCRIPTIONS = @as(c_int, 17711);
pub const UA_NS0ID_RATIONALNUMBERTYPE_NUMERATOR = @as(c_int, 17712);
pub const UA_NS0ID_RATIONALNUMBERTYPE_DENOMINATOR = @as(c_int, 17713);
pub const UA_NS0ID_VECTORTYPE = @as(c_int, 17714);
pub const UA_NS0ID_VECTORTYPE_VECTORUNIT = @as(c_int, 17715);
pub const UA_NS0ID_THREEDVECTORTYPE = @as(c_int, 17716);
pub const UA_NS0ID_THREEDVECTORTYPE_VECTORUNIT = @as(c_int, 17717);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILEDIRECTORYNAME_PLACEHOLDER_DELETEFILESYSTEMOBJECT = @as(c_int, 17718);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILEDIRECTORYNAME_PLACEHOLDER_DELETEFILESYSTEMOBJECT_INPUTARGUMENTS = @as(c_int, 17719);
pub const UA_NS0ID_PUBSUBCONNECTIONADDREADERGROUPGROUPMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 17720);
pub const UA_NS0ID_CONNECTIONTRANSPORTTYPE = @as(c_int, 17721);
pub const UA_NS0ID_FILESYSTEM_FILEDIRECTORYNAME_PLACEHOLDER_DELETEFILESYSTEMOBJECT = @as(c_int, 17722);
pub const UA_NS0ID_FILESYSTEM_FILEDIRECTORYNAME_PLACEHOLDER_DELETEFILESYSTEMOBJECT_INPUTARGUMENTS = @as(c_int, 17723);
pub const UA_NS0ID_PUBSUBGROUPTYPE_MAXNETWORKMESSAGESIZE = @as(c_int, 17724);
pub const UA_NS0ID_WRITERGROUPTYPE = @as(c_int, 17725);
pub const UA_NS0ID_WRITERGROUPTYPE_SECURITYMODE = @as(c_int, 17726);
pub const UA_NS0ID_WRITERGROUPTYPE_SECURITYGROUPID = @as(c_int, 17727);
pub const UA_NS0ID_WRITERGROUPTYPE_SECURITYKEYSERVICES = @as(c_int, 17728);
pub const UA_NS0ID_WRITERGROUPTYPE_MAXNETWORKMESSAGESIZE = @as(c_int, 17729);
pub const UA_NS0ID_WRITERGROUPTYPE_STATUS = @as(c_int, 17730);
pub const UA_NS0ID_WRITERGROUPTYPE_STATUS_STATE = @as(c_int, 17731);
pub const UA_NS0ID_AUTHORIZATIONSERVICES = @as(c_int, 17732);
pub const UA_NS0ID_WRITERGROUPTYPE_STATUS_ENABLE = @as(c_int, 17734);
pub const UA_NS0ID_WRITERGROUPTYPE_STATUS_DISABLE = @as(c_int, 17735);
pub const UA_NS0ID_WRITERGROUPTYPE_WRITERGROUPID = @as(c_int, 17736);
pub const UA_NS0ID_WRITERGROUPTYPE_PUBLISHINGINTERVAL = @as(c_int, 17737);
pub const UA_NS0ID_WRITERGROUPTYPE_KEEPALIVETIME = @as(c_int, 17738);
pub const UA_NS0ID_WRITERGROUPTYPE_PRIORITY = @as(c_int, 17739);
pub const UA_NS0ID_WRITERGROUPTYPE_LOCALEIDS = @as(c_int, 17740);
pub const UA_NS0ID_WRITERGROUPTYPE_TRANSPORTSETTINGS = @as(c_int, 17741);
pub const UA_NS0ID_WRITERGROUPTYPE_MESSAGESETTINGS = @as(c_int, 17742);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER = @as(c_int, 17743);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DATASETWRITERID = @as(c_int, 17744);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DATASETFIELDCONTENTMASK = @as(c_int, 17745);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_KEYFRAMECOUNT = @as(c_int, 17746);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_TRANSPORTSETTINGS = @as(c_int, 17747);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_MESSAGESETTINGS = @as(c_int, 17748);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_STATUS = @as(c_int, 17749);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_STATUS_STATE = @as(c_int, 17750);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_STATUS_ENABLE = @as(c_int, 17751);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_STATUS_DISABLE = @as(c_int, 17752);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS = @as(c_int, 17753);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_DIAGNOSTICSLEVEL = @as(c_int, 17754);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION = @as(c_int, 17755);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_ACTIVE = @as(c_int, 17756);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_CLASSIFICATION = @as(c_int, 17757);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_DIAGNOSTICSLEVEL = @as(c_int, 17758);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_TIMEFIRSTCHANGE = @as(c_int, 17759);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR = @as(c_int, 17760);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_ACTIVE = @as(c_int, 17761);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_CLASSIFICATION = @as(c_int, 17762);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_DIAGNOSTICSLEVEL = @as(c_int, 17763);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_TIMEFIRSTCHANGE = @as(c_int, 17764);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_RESET = @as(c_int, 17765);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_SUBERROR = @as(c_int, 17766);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS = @as(c_int, 17767);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR = @as(c_int, 17768);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_ACTIVE = @as(c_int, 17769);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_CLASSIFICATION = @as(c_int, 17770);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_DIAGNOSTICSLEVEL = @as(c_int, 17771);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_TIMEFIRSTCHANGE = @as(c_int, 17772);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD = @as(c_int, 17773);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_ACTIVE = @as(c_int, 17774);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_CLASSIFICATION = @as(c_int, 17775);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 17776);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 17777);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT = @as(c_int, 17778);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_ACTIVE = @as(c_int, 17779);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_CLASSIFICATION = @as(c_int, 17780);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 17781);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 17782);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR = @as(c_int, 17783);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_ACTIVE = @as(c_int, 17784);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_CLASSIFICATION = @as(c_int, 17785);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_DIAGNOSTICSLEVEL = @as(c_int, 17786);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_TIMEFIRSTCHANGE = @as(c_int, 17787);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT = @as(c_int, 17788);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_ACTIVE = @as(c_int, 17789);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_CLASSIFICATION = @as(c_int, 17790);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 17791);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 17792);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD = @as(c_int, 17793);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_ACTIVE = @as(c_int, 17794);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_CLASSIFICATION = @as(c_int, 17795);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 17796);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 17797);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES = @as(c_int, 17798);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES = @as(c_int, 17799);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_ACTIVE = @as(c_int, 17800);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_CLASSIFICATION = @as(c_int, 17801);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_DIAGNOSTICSLEVEL = @as(c_int, 17802);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_TIMEFIRSTCHANGE = @as(c_int, 17803);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MESSAGESEQUENCENUMBER = @as(c_int, 17804);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MESSAGESEQUENCENUMBER_DIAGNOSTICSLEVEL = @as(c_int, 17805);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_STATUSCODE = @as(c_int, 17806);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_STATUSCODE_DIAGNOSTICSLEVEL = @as(c_int, 17807);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MAJORVERSION = @as(c_int, 17808);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MAJORVERSION_DIAGNOSTICSLEVEL = @as(c_int, 17809);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MINORVERSION = @as(c_int, 17810);
pub const UA_NS0ID_WRITERGROUPTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MINORVERSION_DIAGNOSTICSLEVEL = @as(c_int, 17811);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS = @as(c_int, 17812);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_DIAGNOSTICSLEVEL = @as(c_int, 17813);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_TOTALINFORMATION = @as(c_int, 17814);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_TOTALINFORMATION_ACTIVE = @as(c_int, 17815);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_TOTALINFORMATION_CLASSIFICATION = @as(c_int, 17816);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_TOTALINFORMATION_DIAGNOSTICSLEVEL = @as(c_int, 17817);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_TOTALINFORMATION_TIMEFIRSTCHANGE = @as(c_int, 17818);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_TOTALERROR = @as(c_int, 17819);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_TOTALERROR_ACTIVE = @as(c_int, 17820);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_TOTALERROR_CLASSIFICATION = @as(c_int, 17821);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_TOTALERROR_DIAGNOSTICSLEVEL = @as(c_int, 17822);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_TOTALERROR_TIMEFIRSTCHANGE = @as(c_int, 17823);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_RESET = @as(c_int, 17824);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_SUBERROR = @as(c_int, 17825);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS = @as(c_int, 17826);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEERROR = @as(c_int, 17827);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEERROR_ACTIVE = @as(c_int, 17828);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEERROR_CLASSIFICATION = @as(c_int, 17829);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEERROR_DIAGNOSTICSLEVEL = @as(c_int, 17830);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEERROR_TIMEFIRSTCHANGE = @as(c_int, 17831);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD = @as(c_int, 17832);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_ACTIVE = @as(c_int, 17833);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_CLASSIFICATION = @as(c_int, 17834);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 17835);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 17836);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT = @as(c_int, 17837);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_ACTIVE = @as(c_int, 17838);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_CLASSIFICATION = @as(c_int, 17839);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 17840);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 17841);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR = @as(c_int, 17842);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_ACTIVE = @as(c_int, 17843);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_CLASSIFICATION = @as(c_int, 17844);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_DIAGNOSTICSLEVEL = @as(c_int, 17845);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_TIMEFIRSTCHANGE = @as(c_int, 17846);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT = @as(c_int, 17847);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_ACTIVE = @as(c_int, 17848);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_CLASSIFICATION = @as(c_int, 17849);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 17850);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 17851);
pub const UA_NS0ID_AUTHORIZATIONSERVICECONFIGURATIONTYPE = @as(c_int, 17852);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD = @as(c_int, 17853);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_ACTIVE = @as(c_int, 17854);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_CLASSIFICATION = @as(c_int, 17855);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 17856);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 17857);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_LIVEVALUES = @as(c_int, 17858);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_SENTNETWORKMESSAGES = @as(c_int, 17859);
pub const UA_NS0ID_AUTHORIZATIONSERVICECONFIGURATIONTYPE_SERVICECERTIFICATE = @as(c_int, 17860);
pub const UA_NS0ID_DECIMALDATATYPE = @as(c_int, 17861);
pub const UA_NS0ID_DECIMALDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 17862);
pub const UA_NS0ID_DECIMALDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 17863);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_SENTNETWORKMESSAGES_ACTIVE = @as(c_int, 17864);
pub const UA_NS0ID_ALARMCONDITIONTYPE_AUDIBLESOUND_LISTID = @as(c_int, 17865);
pub const UA_NS0ID_ALARMCONDITIONTYPE_AUDIBLESOUND_AGENCYID = @as(c_int, 17866);
pub const UA_NS0ID_ALARMCONDITIONTYPE_AUDIBLESOUND_VERSIONID = @as(c_int, 17867);
pub const UA_NS0ID_ALARMCONDITIONTYPE_UNSUPPRESS = @as(c_int, 17868);
pub const UA_NS0ID_ALARMCONDITIONTYPE_REMOVEFROMSERVICE = @as(c_int, 17869);
pub const UA_NS0ID_ALARMCONDITIONTYPE_PLACEINSERVICE = @as(c_int, 17870);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_SENTNETWORKMESSAGES_CLASSIFICATION = @as(c_int, 17871);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_SENTNETWORKMESSAGES_DIAGNOSTICSLEVEL = @as(c_int, 17872);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_SENTNETWORKMESSAGES_TIMEFIRSTCHANGE = @as(c_int, 17873);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_FAILEDTRANSMISSIONS = @as(c_int, 17874);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_UNSUPPRESS = @as(c_int, 17875);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_REMOVEFROMSERVICE = @as(c_int, 17876);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_PLACEINSERVICE = @as(c_int, 17877);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_FAILEDTRANSMISSIONS_ACTIVE = @as(c_int, 17878);
pub const UA_NS0ID_LIMITALARMTYPE_AUDIBLESOUND_LISTID = @as(c_int, 17879);
pub const UA_NS0ID_LIMITALARMTYPE_AUDIBLESOUND_AGENCYID = @as(c_int, 17880);
pub const UA_NS0ID_LIMITALARMTYPE_AUDIBLESOUND_VERSIONID = @as(c_int, 17881);
pub const UA_NS0ID_LIMITALARMTYPE_UNSUPPRESS = @as(c_int, 17882);
pub const UA_NS0ID_LIMITALARMTYPE_REMOVEFROMSERVICE = @as(c_int, 17883);
pub const UA_NS0ID_LIMITALARMTYPE_PLACEINSERVICE = @as(c_int, 17884);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_FAILEDTRANSMISSIONS_CLASSIFICATION = @as(c_int, 17885);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_AUDIBLESOUND_LISTID = @as(c_int, 17886);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_AUDIBLESOUND_AGENCYID = @as(c_int, 17887);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_AUDIBLESOUND_VERSIONID = @as(c_int, 17888);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_UNSUPPRESS = @as(c_int, 17889);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_REMOVEFROMSERVICE = @as(c_int, 17890);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_PLACEINSERVICE = @as(c_int, 17891);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_FAILEDTRANSMISSIONS_DIAGNOSTICSLEVEL = @as(c_int, 17892);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_AUDIBLESOUND_LISTID = @as(c_int, 17893);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_AUDIBLESOUND_AGENCYID = @as(c_int, 17894);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_AUDIBLESOUND_VERSIONID = @as(c_int, 17895);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_UNSUPPRESS = @as(c_int, 17896);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_REMOVEFROMSERVICE = @as(c_int, 17897);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_PLACEINSERVICE = @as(c_int, 17898);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_FAILEDTRANSMISSIONS_TIMEFIRSTCHANGE = @as(c_int, 17899);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_ENCRYPTIONERRORS = @as(c_int, 17900);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_ENCRYPTIONERRORS_ACTIVE = @as(c_int, 17901);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_ENCRYPTIONERRORS_CLASSIFICATION = @as(c_int, 17902);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_ENCRYPTIONERRORS_DIAGNOSTICSLEVEL = @as(c_int, 17903);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_REMOVEFROMSERVICE = @as(c_int, 17904);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_PLACEINSERVICE = @as(c_int, 17905);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_COUNTERS_ENCRYPTIONERRORS_TIMEFIRSTCHANGE = @as(c_int, 17906);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_AUDIBLESOUND_LISTID = @as(c_int, 17907);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_AUDIBLESOUND_AGENCYID = @as(c_int, 17908);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_AUDIBLESOUND_VERSIONID = @as(c_int, 17909);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_UNSUPPRESS = @as(c_int, 17910);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_REMOVEFROMSERVICE = @as(c_int, 17911);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_PLACEINSERVICE = @as(c_int, 17912);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_LIVEVALUES_CONFIGUREDDATASETWRITERS = @as(c_int, 17913);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_AUDIBLESOUND_LISTID = @as(c_int, 17914);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_AUDIBLESOUND_AGENCYID = @as(c_int, 17915);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_AUDIBLESOUND_VERSIONID = @as(c_int, 17916);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_UNSUPPRESS = @as(c_int, 17917);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_REMOVEFROMSERVICE = @as(c_int, 17918);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_PLACEINSERVICE = @as(c_int, 17919);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_LIVEVALUES_CONFIGUREDDATASETWRITERS_DIAGNOSTICSLEVEL = @as(c_int, 17920);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_AUDIBLESOUND_LISTID = @as(c_int, 17921);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_AUDIBLESOUND_AGENCYID = @as(c_int, 17922);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_AUDIBLESOUND_VERSIONID = @as(c_int, 17923);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_UNSUPPRESS = @as(c_int, 17924);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_REMOVEFROMSERVICE = @as(c_int, 17925);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_PLACEINSERVICE = @as(c_int, 17926);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_LIVEVALUES_OPERATIONALDATASETWRITERS = @as(c_int, 17927);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_AUDIBLESOUND_LISTID = @as(c_int, 17928);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_AUDIBLESOUND_AGENCYID = @as(c_int, 17929);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_AUDIBLESOUND_VERSIONID = @as(c_int, 17930);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_UNSUPPRESS = @as(c_int, 17931);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_REMOVEFROMSERVICE = @as(c_int, 17932);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_PLACEINSERVICE = @as(c_int, 17933);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_LIVEVALUES_OPERATIONALDATASETWRITERS_DIAGNOSTICSLEVEL = @as(c_int, 17934);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_AUDIBLESOUND_LISTID = @as(c_int, 17935);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_AUDIBLESOUND_AGENCYID = @as(c_int, 17936);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_AUDIBLESOUND_VERSIONID = @as(c_int, 17937);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_UNSUPPRESS = @as(c_int, 17938);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_REMOVEFROMSERVICE = @as(c_int, 17939);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_PLACEINSERVICE = @as(c_int, 17940);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_LIVEVALUES_SECURITYTOKENID = @as(c_int, 17941);
pub const UA_NS0ID_DISCRETEALARMTYPE_AUDIBLESOUND_LISTID = @as(c_int, 17942);
pub const UA_NS0ID_DISCRETEALARMTYPE_AUDIBLESOUND_AGENCYID = @as(c_int, 17943);
pub const UA_NS0ID_DISCRETEALARMTYPE_AUDIBLESOUND_VERSIONID = @as(c_int, 17944);
pub const UA_NS0ID_DISCRETEALARMTYPE_UNSUPPRESS = @as(c_int, 17945);
pub const UA_NS0ID_DISCRETEALARMTYPE_REMOVEFROMSERVICE = @as(c_int, 17946);
pub const UA_NS0ID_DISCRETEALARMTYPE_PLACEINSERVICE = @as(c_int, 17947);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_LIVEVALUES_SECURITYTOKENID_DIAGNOSTICSLEVEL = @as(c_int, 17948);
pub const UA_NS0ID_OFFNORMALALARMTYPE_AUDIBLESOUND_LISTID = @as(c_int, 17949);
pub const UA_NS0ID_OFFNORMALALARMTYPE_AUDIBLESOUND_AGENCYID = @as(c_int, 17950);
pub const UA_NS0ID_OFFNORMALALARMTYPE_AUDIBLESOUND_VERSIONID = @as(c_int, 17951);
pub const UA_NS0ID_OFFNORMALALARMTYPE_UNSUPPRESS = @as(c_int, 17952);
pub const UA_NS0ID_OFFNORMALALARMTYPE_REMOVEFROMSERVICE = @as(c_int, 17953);
pub const UA_NS0ID_OFFNORMALALARMTYPE_PLACEINSERVICE = @as(c_int, 17954);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_LIVEVALUES_TIMETONEXTTOKENID = @as(c_int, 17955);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_AUDIBLESOUND_LISTID = @as(c_int, 17956);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_AUDIBLESOUND_AGENCYID = @as(c_int, 17957);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_AUDIBLESOUND_VERSIONID = @as(c_int, 17958);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_UNSUPPRESS = @as(c_int, 17959);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_REMOVEFROMSERVICE = @as(c_int, 17960);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_PLACEINSERVICE = @as(c_int, 17961);
pub const UA_NS0ID_WRITERGROUPTYPE_DIAGNOSTICS_LIVEVALUES_TIMETONEXTTOKENID_DIAGNOSTICSLEVEL = @as(c_int, 17962);
pub const UA_NS0ID_TRIPALARMTYPE_AUDIBLESOUND_LISTID = @as(c_int, 17963);
pub const UA_NS0ID_TRIPALARMTYPE_AUDIBLESOUND_AGENCYID = @as(c_int, 17964);
pub const UA_NS0ID_TRIPALARMTYPE_AUDIBLESOUND_VERSIONID = @as(c_int, 17965);
pub const UA_NS0ID_TRIPALARMTYPE_UNSUPPRESS = @as(c_int, 17966);
pub const UA_NS0ID_TRIPALARMTYPE_REMOVEFROMSERVICE = @as(c_int, 17967);
pub const UA_NS0ID_TRIPALARMTYPE_PLACEINSERVICE = @as(c_int, 17968);
pub const UA_NS0ID_WRITERGROUPTYPE_ADDDATASETWRITER = @as(c_int, 17969);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_AUDIBLESOUND_LISTID = @as(c_int, 17970);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_AUDIBLESOUND_AGENCYID = @as(c_int, 17971);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_AUDIBLESOUND_VERSIONID = @as(c_int, 17972);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_UNSUPPRESS = @as(c_int, 17973);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_REMOVEFROMSERVICE = @as(c_int, 17974);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_PLACEINSERVICE = @as(c_int, 17975);
pub const UA_NS0ID_WRITERGROUPTYPE_ADDDATASETWRITER_INPUTARGUMENTS = @as(c_int, 17976);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_AUDIBLESOUND_LISTID = @as(c_int, 17977);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_AUDIBLESOUND_AGENCYID = @as(c_int, 17978);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_AUDIBLESOUND_VERSIONID = @as(c_int, 17979);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_UNSUPPRESS = @as(c_int, 17980);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_REMOVEFROMSERVICE = @as(c_int, 17981);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_PLACEINSERVICE = @as(c_int, 17982);
pub const UA_NS0ID_HASEFFECTENABLE = @as(c_int, 17983);
pub const UA_NS0ID_HASEFFECTSUPPRESSED = @as(c_int, 17984);
pub const UA_NS0ID_HASEFFECTUNSUPPRESSED = @as(c_int, 17985);
pub const UA_NS0ID_AUDIOVARIABLETYPE = @as(c_int, 17986);
pub const UA_NS0ID_WRITERGROUPTYPE_ADDDATASETWRITER_OUTPUTARGUMENTS = @as(c_int, 17987);
pub const UA_NS0ID_AUDIOVARIABLETYPE_LISTID = @as(c_int, 17988);
pub const UA_NS0ID_AUDIOVARIABLETYPE_AGENCYID = @as(c_int, 17989);
pub const UA_NS0ID_AUDIOVARIABLETYPE_VERSIONID = @as(c_int, 17990);
pub const UA_NS0ID_ALARMMETRICSTYPE_STARTTIME = @as(c_int, 17991);
pub const UA_NS0ID_WRITERGROUPTYPE_REMOVEDATASETWRITER = @as(c_int, 17992);
pub const UA_NS0ID_WRITERGROUPTYPE_REMOVEDATASETWRITER_INPUTARGUMENTS = @as(c_int, 17993);
pub const UA_NS0ID_PUBSUBGROUPTYPEADDWRITERMETHODTYPE = @as(c_int, 17994);
pub const UA_NS0ID_PUBSUBGROUPTYPEADDWRITERMETHODTYPE_INPUTARGUMENTS = @as(c_int, 17995);
pub const UA_NS0ID_PUBSUBGROUPTYPEADDWRITERMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 17996);
pub const UA_NS0ID_WRITERGROUPTRANSPORTTYPE = @as(c_int, 17997);
pub const UA_NS0ID_WRITERGROUPMESSAGETYPE = @as(c_int, 17998);
pub const UA_NS0ID_READERGROUPTYPE = @as(c_int, 17999);
pub const UA_NS0ID_READERGROUPTYPE_SECURITYMODE = @as(c_int, 18000);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATIONTYPE = @as(c_int, 18001);
pub const UA_NS0ID_READERGROUPTYPE_SECURITYGROUPID = @as(c_int, 18002);
pub const UA_NS0ID_READERGROUPTYPE_SECURITYKEYSERVICES = @as(c_int, 18003);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATIONTYPE_ENDPOINTURLS = @as(c_int, 18004);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATIONTYPE_SERVICESTATUS = @as(c_int, 18005);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATIONTYPE_UPDATECREDENTIAL = @as(c_int, 18006);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATIONTYPE_UPDATECREDENTIAL_INPUTARGUMENTS = @as(c_int, 18007);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATIONTYPE_DELETECREDENTIAL = @as(c_int, 18008);
pub const UA_NS0ID_KEYCREDENTIALUPDATEMETHODTYPE = @as(c_int, 18009);
pub const UA_NS0ID_KEYCREDENTIALUPDATEMETHODTYPE_INPUTARGUMENTS = @as(c_int, 18010);
pub const UA_NS0ID_KEYCREDENTIALAUDITEVENTTYPE = @as(c_int, 18011);
pub const UA_NS0ID_KEYCREDENTIALAUDITEVENTTYPE_EVENTID = @as(c_int, 18012);
pub const UA_NS0ID_KEYCREDENTIALAUDITEVENTTYPE_EVENTTYPE = @as(c_int, 18013);
pub const UA_NS0ID_KEYCREDENTIALAUDITEVENTTYPE_SOURCENODE = @as(c_int, 18014);
pub const UA_NS0ID_KEYCREDENTIALAUDITEVENTTYPE_SOURCENAME = @as(c_int, 18015);
pub const UA_NS0ID_KEYCREDENTIALAUDITEVENTTYPE_TIME = @as(c_int, 18016);
pub const UA_NS0ID_KEYCREDENTIALAUDITEVENTTYPE_RECEIVETIME = @as(c_int, 18017);
pub const UA_NS0ID_KEYCREDENTIALAUDITEVENTTYPE_LOCALTIME = @as(c_int, 18018);
pub const UA_NS0ID_KEYCREDENTIALAUDITEVENTTYPE_MESSAGE = @as(c_int, 18019);
pub const UA_NS0ID_KEYCREDENTIALAUDITEVENTTYPE_SEVERITY = @as(c_int, 18020);
pub const UA_NS0ID_KEYCREDENTIALAUDITEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 18021);
pub const UA_NS0ID_KEYCREDENTIALAUDITEVENTTYPE_STATUS = @as(c_int, 18022);
pub const UA_NS0ID_KEYCREDENTIALAUDITEVENTTYPE_SERVERID = @as(c_int, 18023);
pub const UA_NS0ID_KEYCREDENTIALAUDITEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 18024);
pub const UA_NS0ID_KEYCREDENTIALAUDITEVENTTYPE_CLIENTUSERID = @as(c_int, 18025);
pub const UA_NS0ID_KEYCREDENTIALAUDITEVENTTYPE_METHODID = @as(c_int, 18026);
pub const UA_NS0ID_KEYCREDENTIALAUDITEVENTTYPE_INPUTARGUMENTS = @as(c_int, 18027);
pub const UA_NS0ID_KEYCREDENTIALAUDITEVENTTYPE_RESOURCEURI = @as(c_int, 18028);
pub const UA_NS0ID_KEYCREDENTIALUPDATEDAUDITEVENTTYPE = @as(c_int, 18029);
pub const UA_NS0ID_KEYCREDENTIALUPDATEDAUDITEVENTTYPE_EVENTID = @as(c_int, 18030);
pub const UA_NS0ID_KEYCREDENTIALUPDATEDAUDITEVENTTYPE_EVENTTYPE = @as(c_int, 18031);
pub const UA_NS0ID_KEYCREDENTIALUPDATEDAUDITEVENTTYPE_SOURCENODE = @as(c_int, 18032);
pub const UA_NS0ID_KEYCREDENTIALUPDATEDAUDITEVENTTYPE_SOURCENAME = @as(c_int, 18033);
pub const UA_NS0ID_KEYCREDENTIALUPDATEDAUDITEVENTTYPE_TIME = @as(c_int, 18034);
pub const UA_NS0ID_KEYCREDENTIALUPDATEDAUDITEVENTTYPE_RECEIVETIME = @as(c_int, 18035);
pub const UA_NS0ID_KEYCREDENTIALUPDATEDAUDITEVENTTYPE_LOCALTIME = @as(c_int, 18036);
pub const UA_NS0ID_KEYCREDENTIALUPDATEDAUDITEVENTTYPE_MESSAGE = @as(c_int, 18037);
pub const UA_NS0ID_KEYCREDENTIALUPDATEDAUDITEVENTTYPE_SEVERITY = @as(c_int, 18038);
pub const UA_NS0ID_KEYCREDENTIALUPDATEDAUDITEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 18039);
pub const UA_NS0ID_KEYCREDENTIALUPDATEDAUDITEVENTTYPE_STATUS = @as(c_int, 18040);
pub const UA_NS0ID_KEYCREDENTIALUPDATEDAUDITEVENTTYPE_SERVERID = @as(c_int, 18041);
pub const UA_NS0ID_KEYCREDENTIALUPDATEDAUDITEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 18042);
pub const UA_NS0ID_KEYCREDENTIALUPDATEDAUDITEVENTTYPE_CLIENTUSERID = @as(c_int, 18043);
pub const UA_NS0ID_KEYCREDENTIALUPDATEDAUDITEVENTTYPE_METHODID = @as(c_int, 18044);
pub const UA_NS0ID_KEYCREDENTIALUPDATEDAUDITEVENTTYPE_INPUTARGUMENTS = @as(c_int, 18045);
pub const UA_NS0ID_KEYCREDENTIALUPDATEDAUDITEVENTTYPE_RESOURCEURI = @as(c_int, 18046);
pub const UA_NS0ID_KEYCREDENTIALDELETEDAUDITEVENTTYPE = @as(c_int, 18047);
pub const UA_NS0ID_KEYCREDENTIALDELETEDAUDITEVENTTYPE_EVENTID = @as(c_int, 18048);
pub const UA_NS0ID_KEYCREDENTIALDELETEDAUDITEVENTTYPE_EVENTTYPE = @as(c_int, 18049);
pub const UA_NS0ID_KEYCREDENTIALDELETEDAUDITEVENTTYPE_SOURCENODE = @as(c_int, 18050);
pub const UA_NS0ID_KEYCREDENTIALDELETEDAUDITEVENTTYPE_SOURCENAME = @as(c_int, 18051);
pub const UA_NS0ID_KEYCREDENTIALDELETEDAUDITEVENTTYPE_TIME = @as(c_int, 18052);
pub const UA_NS0ID_KEYCREDENTIALDELETEDAUDITEVENTTYPE_RECEIVETIME = @as(c_int, 18053);
pub const UA_NS0ID_KEYCREDENTIALDELETEDAUDITEVENTTYPE_LOCALTIME = @as(c_int, 18054);
pub const UA_NS0ID_KEYCREDENTIALDELETEDAUDITEVENTTYPE_MESSAGE = @as(c_int, 18055);
pub const UA_NS0ID_KEYCREDENTIALDELETEDAUDITEVENTTYPE_SEVERITY = @as(c_int, 18056);
pub const UA_NS0ID_KEYCREDENTIALDELETEDAUDITEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 18057);
pub const UA_NS0ID_KEYCREDENTIALDELETEDAUDITEVENTTYPE_STATUS = @as(c_int, 18058);
pub const UA_NS0ID_KEYCREDENTIALDELETEDAUDITEVENTTYPE_SERVERID = @as(c_int, 18059);
pub const UA_NS0ID_KEYCREDENTIALDELETEDAUDITEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 18060);
pub const UA_NS0ID_KEYCREDENTIALDELETEDAUDITEVENTTYPE_CLIENTUSERID = @as(c_int, 18061);
pub const UA_NS0ID_KEYCREDENTIALDELETEDAUDITEVENTTYPE_METHODID = @as(c_int, 18062);
pub const UA_NS0ID_KEYCREDENTIALDELETEDAUDITEVENTTYPE_INPUTARGUMENTS = @as(c_int, 18063);
pub const UA_NS0ID_KEYCREDENTIALDELETEDAUDITEVENTTYPE_RESOURCEURI = @as(c_int, 18064);
pub const UA_NS0ID_READERGROUPTYPE_MAXNETWORKMESSAGESIZE = @as(c_int, 18065);
pub const UA_NS0ID_READERGROUPTYPE_STATUS = @as(c_int, 18067);
pub const UA_NS0ID_READERGROUPTYPE_STATUS_STATE = @as(c_int, 18068);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATIONTYPE_RESOURCEURI = @as(c_int, 18069);
pub const UA_NS0ID_AUTHORIZATIONSERVICECONFIGURATIONTYPE_SERVICEURI = @as(c_int, 18072);
pub const UA_NS0ID_AUTHORIZATIONSERVICECONFIGURATIONTYPE_ISSUERENDPOINTURL = @as(c_int, 18073);
pub const UA_NS0ID_READERGROUPTYPE_STATUS_ENABLE = @as(c_int, 18074);
pub const UA_NS0ID_READERGROUPTYPE_STATUS_DISABLE = @as(c_int, 18075);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER = @as(c_int, 18076);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_PUBLISHERID = @as(c_int, 18077);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_WRITERGROUPID = @as(c_int, 18078);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DATASETWRITERID = @as(c_int, 18079);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DATASETMETADATA = @as(c_int, 18080);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DATASETFIELDCONTENTMASK = @as(c_int, 18081);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_MESSAGERECEIVETIMEOUT = @as(c_int, 18082);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_SECURITYMODE = @as(c_int, 18083);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_SECURITYGROUPID = @as(c_int, 18084);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_SECURITYKEYSERVICES = @as(c_int, 18085);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_TRANSPORTSETTINGS = @as(c_int, 18086);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_MESSAGESETTINGS = @as(c_int, 18087);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_STATUS = @as(c_int, 18088);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_STATUS_STATE = @as(c_int, 18089);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_STATUS_ENABLE = @as(c_int, 18090);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_STATUS_DISABLE = @as(c_int, 18091);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS = @as(c_int, 18092);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_DIAGNOSTICSLEVEL = @as(c_int, 18093);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION = @as(c_int, 18094);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_ACTIVE = @as(c_int, 18095);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_CLASSIFICATION = @as(c_int, 18096);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_DIAGNOSTICSLEVEL = @as(c_int, 18097);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_TIMEFIRSTCHANGE = @as(c_int, 18098);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR = @as(c_int, 18099);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_ACTIVE = @as(c_int, 18100);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_CLASSIFICATION = @as(c_int, 18101);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_DIAGNOSTICSLEVEL = @as(c_int, 18102);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_TIMEFIRSTCHANGE = @as(c_int, 18103);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_RESET = @as(c_int, 18104);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_SUBERROR = @as(c_int, 18105);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS = @as(c_int, 18106);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR = @as(c_int, 18107);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_ACTIVE = @as(c_int, 18108);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_CLASSIFICATION = @as(c_int, 18109);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_DIAGNOSTICSLEVEL = @as(c_int, 18110);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_TIMEFIRSTCHANGE = @as(c_int, 18111);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD = @as(c_int, 18112);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_ACTIVE = @as(c_int, 18113);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_CLASSIFICATION = @as(c_int, 18114);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 18115);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 18116);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT = @as(c_int, 18117);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_ACTIVE = @as(c_int, 18118);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_CLASSIFICATION = @as(c_int, 18119);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 18120);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 18121);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR = @as(c_int, 18122);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_ACTIVE = @as(c_int, 18123);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_CLASSIFICATION = @as(c_int, 18124);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_DIAGNOSTICSLEVEL = @as(c_int, 18125);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_TIMEFIRSTCHANGE = @as(c_int, 18126);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT = @as(c_int, 18127);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_ACTIVE = @as(c_int, 18128);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_CLASSIFICATION = @as(c_int, 18129);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 18130);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 18131);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD = @as(c_int, 18132);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_ACTIVE = @as(c_int, 18133);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_CLASSIFICATION = @as(c_int, 18134);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 18135);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 18136);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES = @as(c_int, 18137);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES = @as(c_int, 18138);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_ACTIVE = @as(c_int, 18139);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_CLASSIFICATION = @as(c_int, 18140);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_DIAGNOSTICSLEVEL = @as(c_int, 18141);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_TIMEFIRSTCHANGE = @as(c_int, 18142);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_DECRYPTIONERRORS = @as(c_int, 18143);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_DECRYPTIONERRORS_ACTIVE = @as(c_int, 18144);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_DECRYPTIONERRORS_CLASSIFICATION = @as(c_int, 18145);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_DECRYPTIONERRORS_DIAGNOSTICSLEVEL = @as(c_int, 18146);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_DECRYPTIONERRORS_TIMEFIRSTCHANGE = @as(c_int, 18147);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MESSAGESEQUENCENUMBER = @as(c_int, 18148);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MESSAGESEQUENCENUMBER_DIAGNOSTICSLEVEL = @as(c_int, 18149);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_STATUSCODE = @as(c_int, 18150);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_STATUSCODE_DIAGNOSTICSLEVEL = @as(c_int, 18151);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MAJORVERSION = @as(c_int, 18152);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MAJORVERSION_DIAGNOSTICSLEVEL = @as(c_int, 18153);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MINORVERSION = @as(c_int, 18154);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATION = @as(c_int, 18155);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATION_SERVICENAME_PLACEHOLDER = @as(c_int, 18156);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATION_SERVICENAME_PLACEHOLDER_RESOURCEURI = @as(c_int, 18157);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MINORVERSION_DIAGNOSTICSLEVEL = @as(c_int, 18158);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATION_SERVICENAME_PLACEHOLDER_ENDPOINTURLS = @as(c_int, 18159);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATION_SERVICENAME_PLACEHOLDER_SERVICESTATUS = @as(c_int, 18160);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATION_SERVICENAME_PLACEHOLDER_UPDATECREDENTIAL = @as(c_int, 18161);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATION_SERVICENAME_PLACEHOLDER_UPDATECREDENTIAL_INPUTARGUMENTS = @as(c_int, 18162);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATION_SERVICENAME_PLACEHOLDER_DELETECREDENTIAL = @as(c_int, 18163);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATION_SERVICENAME_PLACEHOLDER_PROFILEURI = @as(c_int, 18164);
pub const UA_NS0ID_KEYCREDENTIALCONFIGURATIONTYPE_PROFILEURI = @as(c_int, 18165);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATATYPEDEFINITION = @as(c_int, 18166);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATATYPEDEFINITION_DATATYPEVERSION = @as(c_int, 18167);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATATYPEDEFINITION_DICTIONARYFRAGMENT = @as(c_int, 18168);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_STRUCTUREFIELD = @as(c_int, 18169);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_STRUCTUREFIELD_DATATYPEVERSION = @as(c_int, 18170);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_STRUCTUREFIELD_DICTIONARYFRAGMENT = @as(c_int, 18171);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_STRUCTUREDEFINITION = @as(c_int, 18172);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_STRUCTUREDEFINITION_DATATYPEVERSION = @as(c_int, 18173);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_STRUCTUREDEFINITION_DICTIONARYFRAGMENT = @as(c_int, 18174);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ENUMDEFINITION = @as(c_int, 18175);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ENUMDEFINITION_DATATYPEVERSION = @as(c_int, 18176);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ENUMDEFINITION_DICTIONARYFRAGMENT = @as(c_int, 18177);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATATYPEDEFINITION = @as(c_int, 18178);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATATYPEDEFINITION_DATATYPEVERSION = @as(c_int, 18179);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATATYPEDEFINITION_DICTIONARYFRAGMENT = @as(c_int, 18180);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_STRUCTUREFIELD = @as(c_int, 18181);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_STRUCTUREFIELD_DATATYPEVERSION = @as(c_int, 18182);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_STRUCTUREFIELD_DICTIONARYFRAGMENT = @as(c_int, 18183);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_STRUCTUREDEFINITION = @as(c_int, 18184);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_STRUCTUREDEFINITION_DATATYPEVERSION = @as(c_int, 18185);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_STRUCTUREDEFINITION_DICTIONARYFRAGMENT = @as(c_int, 18186);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ENUMDEFINITION = @as(c_int, 18187);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ENUMDEFINITION_DATATYPEVERSION = @as(c_int, 18188);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ENUMDEFINITION_DICTIONARYFRAGMENT = @as(c_int, 18189);
pub const UA_NS0ID_ALARMCONDITIONTYPE_LATCHEDSTATE = @as(c_int, 18190);
pub const UA_NS0ID_ALARMCONDITIONTYPE_LATCHEDSTATE_ID = @as(c_int, 18191);
pub const UA_NS0ID_ALARMCONDITIONTYPE_LATCHEDSTATE_NAME = @as(c_int, 18192);
pub const UA_NS0ID_ALARMCONDITIONTYPE_LATCHEDSTATE_NUMBER = @as(c_int, 18193);
pub const UA_NS0ID_ALARMCONDITIONTYPE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18194);
pub const UA_NS0ID_ALARMCONDITIONTYPE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 18195);
pub const UA_NS0ID_ALARMCONDITIONTYPE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18196);
pub const UA_NS0ID_ALARMCONDITIONTYPE_LATCHEDSTATE_TRUESTATE = @as(c_int, 18197);
pub const UA_NS0ID_ALARMCONDITIONTYPE_LATCHEDSTATE_FALSESTATE = @as(c_int, 18198);
pub const UA_NS0ID_ALARMCONDITIONTYPE_RESET = @as(c_int, 18199);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_AUDIBLESOUND_LISTID = @as(c_int, 18200);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_AUDIBLESOUND_AGENCYID = @as(c_int, 18201);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_AUDIBLESOUND_VERSIONID = @as(c_int, 18202);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_LATCHEDSTATE = @as(c_int, 18203);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_LATCHEDSTATE_ID = @as(c_int, 18204);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_LATCHEDSTATE_NAME = @as(c_int, 18205);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_LATCHEDSTATE_NUMBER = @as(c_int, 18206);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18207);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 18208);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18209);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_LATCHEDSTATE_TRUESTATE = @as(c_int, 18210);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_LATCHEDSTATE_FALSESTATE = @as(c_int, 18211);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_RESET = @as(c_int, 18212);
pub const UA_NS0ID_LIMITALARMTYPE_LATCHEDSTATE = @as(c_int, 18213);
pub const UA_NS0ID_LIMITALARMTYPE_LATCHEDSTATE_ID = @as(c_int, 18214);
pub const UA_NS0ID_LIMITALARMTYPE_LATCHEDSTATE_NAME = @as(c_int, 18215);
pub const UA_NS0ID_LIMITALARMTYPE_LATCHEDSTATE_NUMBER = @as(c_int, 18216);
pub const UA_NS0ID_LIMITALARMTYPE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18217);
pub const UA_NS0ID_LIMITALARMTYPE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 18218);
pub const UA_NS0ID_LIMITALARMTYPE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18219);
pub const UA_NS0ID_LIMITALARMTYPE_LATCHEDSTATE_TRUESTATE = @as(c_int, 18220);
pub const UA_NS0ID_LIMITALARMTYPE_LATCHEDSTATE_FALSESTATE = @as(c_int, 18221);
pub const UA_NS0ID_LIMITALARMTYPE_RESET = @as(c_int, 18222);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LATCHEDSTATE = @as(c_int, 18223);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LATCHEDSTATE_ID = @as(c_int, 18224);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LATCHEDSTATE_NAME = @as(c_int, 18225);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LATCHEDSTATE_NUMBER = @as(c_int, 18226);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18227);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 18228);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18229);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LATCHEDSTATE_TRUESTATE = @as(c_int, 18230);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LATCHEDSTATE_FALSESTATE = @as(c_int, 18231);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_RESET = @as(c_int, 18232);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LATCHEDSTATE = @as(c_int, 18233);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LATCHEDSTATE_ID = @as(c_int, 18234);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LATCHEDSTATE_NAME = @as(c_int, 18235);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LATCHEDSTATE_NUMBER = @as(c_int, 18236);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18237);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 18238);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18239);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LATCHEDSTATE_TRUESTATE = @as(c_int, 18240);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LATCHEDSTATE_FALSESTATE = @as(c_int, 18241);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_RESET = @as(c_int, 18242);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_AUDIBLESOUND_LISTID = @as(c_int, 18243);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_AUDIBLESOUND_AGENCYID = @as(c_int, 18244);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_AUDIBLESOUND_VERSIONID = @as(c_int, 18245);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LATCHEDSTATE = @as(c_int, 18246);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LATCHEDSTATE_ID = @as(c_int, 18247);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LATCHEDSTATE_NAME = @as(c_int, 18248);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LATCHEDSTATE_NUMBER = @as(c_int, 18249);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18250);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 18251);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18252);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LATCHEDSTATE_TRUESTATE = @as(c_int, 18253);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LATCHEDSTATE_FALSESTATE = @as(c_int, 18254);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_UNSUPPRESS = @as(c_int, 18255);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_RESET = @as(c_int, 18256);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LATCHEDSTATE = @as(c_int, 18257);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LATCHEDSTATE_ID = @as(c_int, 18258);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LATCHEDSTATE_NAME = @as(c_int, 18259);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LATCHEDSTATE_NUMBER = @as(c_int, 18260);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18261);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 18262);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18263);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LATCHEDSTATE_TRUESTATE = @as(c_int, 18264);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LATCHEDSTATE_FALSESTATE = @as(c_int, 18265);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_RESET = @as(c_int, 18266);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LATCHEDSTATE = @as(c_int, 18267);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LATCHEDSTATE_ID = @as(c_int, 18268);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LATCHEDSTATE_NAME = @as(c_int, 18269);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LATCHEDSTATE_NUMBER = @as(c_int, 18270);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18271);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 18272);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18273);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LATCHEDSTATE_TRUESTATE = @as(c_int, 18274);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LATCHEDSTATE_FALSESTATE = @as(c_int, 18275);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_RESET = @as(c_int, 18276);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LATCHEDSTATE = @as(c_int, 18277);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LATCHEDSTATE_ID = @as(c_int, 18278);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LATCHEDSTATE_NAME = @as(c_int, 18279);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LATCHEDSTATE_NUMBER = @as(c_int, 18280);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18281);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 18282);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18283);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LATCHEDSTATE_TRUESTATE = @as(c_int, 18284);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LATCHEDSTATE_FALSESTATE = @as(c_int, 18285);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_RESET = @as(c_int, 18286);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LATCHEDSTATE = @as(c_int, 18287);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LATCHEDSTATE_ID = @as(c_int, 18288);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LATCHEDSTATE_NAME = @as(c_int, 18289);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LATCHEDSTATE_NUMBER = @as(c_int, 18290);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18291);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 18292);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18293);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LATCHEDSTATE_TRUESTATE = @as(c_int, 18294);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LATCHEDSTATE_FALSESTATE = @as(c_int, 18295);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_RESET = @as(c_int, 18296);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LATCHEDSTATE = @as(c_int, 18297);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LATCHEDSTATE_ID = @as(c_int, 18298);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LATCHEDSTATE_NAME = @as(c_int, 18299);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LATCHEDSTATE_NUMBER = @as(c_int, 18300);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18301);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 18302);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18303);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LATCHEDSTATE_TRUESTATE = @as(c_int, 18304);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LATCHEDSTATE_FALSESTATE = @as(c_int, 18305);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_RESET = @as(c_int, 18306);
pub const UA_NS0ID_DISCRETEALARMTYPE_LATCHEDSTATE = @as(c_int, 18307);
pub const UA_NS0ID_DISCRETEALARMTYPE_LATCHEDSTATE_ID = @as(c_int, 18308);
pub const UA_NS0ID_DISCRETEALARMTYPE_LATCHEDSTATE_NAME = @as(c_int, 18309);
pub const UA_NS0ID_DISCRETEALARMTYPE_LATCHEDSTATE_NUMBER = @as(c_int, 18310);
pub const UA_NS0ID_DISCRETEALARMTYPE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18311);
pub const UA_NS0ID_DISCRETEALARMTYPE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 18312);
pub const UA_NS0ID_DISCRETEALARMTYPE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18313);
pub const UA_NS0ID_DISCRETEALARMTYPE_LATCHEDSTATE_TRUESTATE = @as(c_int, 18314);
pub const UA_NS0ID_DISCRETEALARMTYPE_LATCHEDSTATE_FALSESTATE = @as(c_int, 18315);
pub const UA_NS0ID_DISCRETEALARMTYPE_RESET = @as(c_int, 18316);
pub const UA_NS0ID_OFFNORMALALARMTYPE_LATCHEDSTATE = @as(c_int, 18317);
pub const UA_NS0ID_OFFNORMALALARMTYPE_LATCHEDSTATE_ID = @as(c_int, 18318);
pub const UA_NS0ID_OFFNORMALALARMTYPE_LATCHEDSTATE_NAME = @as(c_int, 18319);
pub const UA_NS0ID_OFFNORMALALARMTYPE_LATCHEDSTATE_NUMBER = @as(c_int, 18320);
pub const UA_NS0ID_OFFNORMALALARMTYPE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18321);
pub const UA_NS0ID_OFFNORMALALARMTYPE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 18322);
pub const UA_NS0ID_OFFNORMALALARMTYPE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18323);
pub const UA_NS0ID_OFFNORMALALARMTYPE_LATCHEDSTATE_TRUESTATE = @as(c_int, 18324);
pub const UA_NS0ID_OFFNORMALALARMTYPE_LATCHEDSTATE_FALSESTATE = @as(c_int, 18325);
pub const UA_NS0ID_OFFNORMALALARMTYPE_RESET = @as(c_int, 18326);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_LATCHEDSTATE = @as(c_int, 18327);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_LATCHEDSTATE_ID = @as(c_int, 18328);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_LATCHEDSTATE_NAME = @as(c_int, 18329);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_LATCHEDSTATE_NUMBER = @as(c_int, 18330);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18331);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 18332);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18333);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_LATCHEDSTATE_TRUESTATE = @as(c_int, 18334);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_LATCHEDSTATE_FALSESTATE = @as(c_int, 18335);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_RESET = @as(c_int, 18336);
pub const UA_NS0ID_TRIPALARMTYPE_LATCHEDSTATE = @as(c_int, 18337);
pub const UA_NS0ID_TRIPALARMTYPE_LATCHEDSTATE_ID = @as(c_int, 18338);
pub const UA_NS0ID_TRIPALARMTYPE_LATCHEDSTATE_NAME = @as(c_int, 18339);
pub const UA_NS0ID_TRIPALARMTYPE_LATCHEDSTATE_NUMBER = @as(c_int, 18340);
pub const UA_NS0ID_TRIPALARMTYPE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18341);
pub const UA_NS0ID_TRIPALARMTYPE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 18342);
pub const UA_NS0ID_TRIPALARMTYPE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18343);
pub const UA_NS0ID_TRIPALARMTYPE_LATCHEDSTATE_TRUESTATE = @as(c_int, 18344);
pub const UA_NS0ID_TRIPALARMTYPE_LATCHEDSTATE_FALSESTATE = @as(c_int, 18345);
pub const UA_NS0ID_TRIPALARMTYPE_RESET = @as(c_int, 18346);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE = @as(c_int, 18347);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_EVENTID = @as(c_int, 18348);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_EVENTTYPE = @as(c_int, 18349);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SOURCENODE = @as(c_int, 18350);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SOURCENAME = @as(c_int, 18351);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_TIME = @as(c_int, 18352);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_RECEIVETIME = @as(c_int, 18353);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_LOCALTIME = @as(c_int, 18354);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_MESSAGE = @as(c_int, 18355);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SEVERITY = @as(c_int, 18356);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_CONDITIONCLASSID = @as(c_int, 18357);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_CONDITIONCLASSNAME = @as(c_int, 18358);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_CONDITIONSUBCLASSID = @as(c_int, 18359);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 18360);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_CONDITIONNAME = @as(c_int, 18361);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_BRANCHID = @as(c_int, 18362);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_RETAIN = @as(c_int, 18363);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ENABLEDSTATE = @as(c_int, 18364);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ENABLEDSTATE_ID = @as(c_int, 18365);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ENABLEDSTATE_NAME = @as(c_int, 18366);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ENABLEDSTATE_NUMBER = @as(c_int, 18367);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18368);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 18369);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18370);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ENABLEDSTATE_TRUESTATE = @as(c_int, 18371);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ENABLEDSTATE_FALSESTATE = @as(c_int, 18372);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_QUALITY = @as(c_int, 18373);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_QUALITY_SOURCETIMESTAMP = @as(c_int, 18374);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_LASTSEVERITY = @as(c_int, 18375);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 18376);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_COMMENT = @as(c_int, 18377);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_COMMENT_SOURCETIMESTAMP = @as(c_int, 18378);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_CLIENTUSERID = @as(c_int, 18379);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_DISABLE = @as(c_int, 18380);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ENABLE = @as(c_int, 18381);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ADDCOMMENT = @as(c_int, 18382);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 18383);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_CONDITIONREFRESH = @as(c_int, 18384);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_CONDITIONREFRESH_INPUTARGUMENTS = @as(c_int, 18385);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_CONDITIONREFRESH2 = @as(c_int, 18386);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_CONDITIONREFRESH2_INPUTARGUMENTS = @as(c_int, 18387);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ACKEDSTATE = @as(c_int, 18388);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ACKEDSTATE_ID = @as(c_int, 18389);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ACKEDSTATE_NAME = @as(c_int, 18390);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ACKEDSTATE_NUMBER = @as(c_int, 18391);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18392);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 18393);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18394);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ACKEDSTATE_TRUESTATE = @as(c_int, 18395);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ACKEDSTATE_FALSESTATE = @as(c_int, 18396);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_CONFIRMEDSTATE = @as(c_int, 18397);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_CONFIRMEDSTATE_ID = @as(c_int, 18398);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_CONFIRMEDSTATE_NAME = @as(c_int, 18399);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_CONFIRMEDSTATE_NUMBER = @as(c_int, 18400);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18401);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 18402);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18403);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 18404);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 18405);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ACKNOWLEDGE = @as(c_int, 18406);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 18407);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_CONFIRM = @as(c_int, 18408);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_CONFIRM_INPUTARGUMENTS = @as(c_int, 18409);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ACTIVESTATE = @as(c_int, 18410);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ACTIVESTATE_ID = @as(c_int, 18411);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ACTIVESTATE_NAME = @as(c_int, 18412);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ACTIVESTATE_NUMBER = @as(c_int, 18413);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18414);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 18415);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18416);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ACTIVESTATE_TRUESTATE = @as(c_int, 18417);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ACTIVESTATE_FALSESTATE = @as(c_int, 18418);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_INPUTNODE = @as(c_int, 18419);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SUPPRESSEDSTATE = @as(c_int, 18420);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SUPPRESSEDSTATE_ID = @as(c_int, 18421);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SUPPRESSEDSTATE_NAME = @as(c_int, 18422);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 18423);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18424);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 18425);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18426);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 18427);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 18428);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_OUTOFSERVICESTATE = @as(c_int, 18429);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_OUTOFSERVICESTATE_ID = @as(c_int, 18430);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_OUTOFSERVICESTATE_NAME = @as(c_int, 18431);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 18432);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18433);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 18434);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18435);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 18436);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 18437);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SHELVINGSTATE = @as(c_int, 18438);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 18439);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 18440);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 18441);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 18442);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18443);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 18444);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 18445);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 18446);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 18447);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 18448);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 18449);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 18450);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 18451);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 18452);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 18453);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 18454);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SHELVINGSTATE_UNSHELVE = @as(c_int, 18455);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 18456);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SUPPRESSEDORSHELVED = @as(c_int, 18457);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_MAXTIMESHELVED = @as(c_int, 18458);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_AUDIBLEENABLED = @as(c_int, 18459);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_AUDIBLESOUND = @as(c_int, 18460);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_AUDIBLESOUND_LISTID = @as(c_int, 18461);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_AUDIBLESOUND_AGENCYID = @as(c_int, 18462);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_AUDIBLESOUND_VERSIONID = @as(c_int, 18463);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SILENCESTATE = @as(c_int, 18464);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SILENCESTATE_ID = @as(c_int, 18465);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SILENCESTATE_NAME = @as(c_int, 18466);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SILENCESTATE_NUMBER = @as(c_int, 18467);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18468);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 18469);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18470);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SILENCESTATE_TRUESTATE = @as(c_int, 18471);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SILENCESTATE_FALSESTATE = @as(c_int, 18472);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ONDELAY = @as(c_int, 18473);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_OFFDELAY = @as(c_int, 18474);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_FIRSTINGROUPFLAG = @as(c_int, 18475);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_FIRSTINGROUP = @as(c_int, 18476);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_LATCHEDSTATE = @as(c_int, 18477);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_LATCHEDSTATE_ID = @as(c_int, 18478);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_LATCHEDSTATE_NAME = @as(c_int, 18479);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_LATCHEDSTATE_NUMBER = @as(c_int, 18480);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18481);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 18482);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18483);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_LATCHEDSTATE_TRUESTATE = @as(c_int, 18484);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_LATCHEDSTATE_FALSESTATE = @as(c_int, 18485);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_ALARMGROUP_PLACEHOLDER = @as(c_int, 18486);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_REALARMTIME = @as(c_int, 18487);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_REALARMREPEATCOUNT = @as(c_int, 18488);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SILENCE = @as(c_int, 18489);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SUPPRESS = @as(c_int, 18490);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_UNSUPPRESS = @as(c_int, 18491);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_REMOVEFROMSERVICE = @as(c_int, 18492);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_PLACEINSERVICE = @as(c_int, 18493);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_RESET = @as(c_int, 18494);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_NORMALSTATE = @as(c_int, 18495);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE = @as(c_int, 18496);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_EVENTID = @as(c_int, 18497);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_EVENTTYPE = @as(c_int, 18498);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SOURCENODE = @as(c_int, 18499);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SOURCENAME = @as(c_int, 18500);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_TIME = @as(c_int, 18501);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_RECEIVETIME = @as(c_int, 18502);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_LOCALTIME = @as(c_int, 18503);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_MESSAGE = @as(c_int, 18504);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SEVERITY = @as(c_int, 18505);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_CONDITIONCLASSID = @as(c_int, 18506);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_CONDITIONCLASSNAME = @as(c_int, 18507);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_CONDITIONSUBCLASSID = @as(c_int, 18508);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 18509);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_CONDITIONNAME = @as(c_int, 18510);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_BRANCHID = @as(c_int, 18511);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_RETAIN = @as(c_int, 18512);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ENABLEDSTATE = @as(c_int, 18513);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ENABLEDSTATE_ID = @as(c_int, 18514);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ENABLEDSTATE_NAME = @as(c_int, 18515);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ENABLEDSTATE_NUMBER = @as(c_int, 18516);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18517);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 18518);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18519);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ENABLEDSTATE_TRUESTATE = @as(c_int, 18520);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ENABLEDSTATE_FALSESTATE = @as(c_int, 18521);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_QUALITY = @as(c_int, 18522);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_QUALITY_SOURCETIMESTAMP = @as(c_int, 18523);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_LASTSEVERITY = @as(c_int, 18524);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 18525);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_COMMENT = @as(c_int, 18526);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_COMMENT_SOURCETIMESTAMP = @as(c_int, 18527);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_CLIENTUSERID = @as(c_int, 18528);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_DISABLE = @as(c_int, 18529);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ENABLE = @as(c_int, 18530);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ADDCOMMENT = @as(c_int, 18531);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 18532);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_CONDITIONREFRESH = @as(c_int, 18533);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_CONDITIONREFRESH_INPUTARGUMENTS = @as(c_int, 18534);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_CONDITIONREFRESH2 = @as(c_int, 18535);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_CONDITIONREFRESH2_INPUTARGUMENTS = @as(c_int, 18536);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ACKEDSTATE = @as(c_int, 18537);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ACKEDSTATE_ID = @as(c_int, 18538);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ACKEDSTATE_NAME = @as(c_int, 18539);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ACKEDSTATE_NUMBER = @as(c_int, 18540);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18541);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 18542);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18543);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ACKEDSTATE_TRUESTATE = @as(c_int, 18544);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ACKEDSTATE_FALSESTATE = @as(c_int, 18545);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_CONFIRMEDSTATE = @as(c_int, 18546);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_CONFIRMEDSTATE_ID = @as(c_int, 18547);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_CONFIRMEDSTATE_NAME = @as(c_int, 18548);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_CONFIRMEDSTATE_NUMBER = @as(c_int, 18549);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18550);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 18551);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18552);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 18553);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 18554);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ACKNOWLEDGE = @as(c_int, 18555);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 18556);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_CONFIRM = @as(c_int, 18557);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_CONFIRM_INPUTARGUMENTS = @as(c_int, 18558);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ACTIVESTATE = @as(c_int, 18559);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ACTIVESTATE_ID = @as(c_int, 18560);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ACTIVESTATE_NAME = @as(c_int, 18561);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ACTIVESTATE_NUMBER = @as(c_int, 18562);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18563);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 18564);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18565);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ACTIVESTATE_TRUESTATE = @as(c_int, 18566);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ACTIVESTATE_FALSESTATE = @as(c_int, 18567);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_INPUTNODE = @as(c_int, 18568);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SUPPRESSEDSTATE = @as(c_int, 18569);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SUPPRESSEDSTATE_ID = @as(c_int, 18570);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SUPPRESSEDSTATE_NAME = @as(c_int, 18571);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 18572);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18573);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 18574);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18575);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 18576);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 18577);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_OUTOFSERVICESTATE = @as(c_int, 18578);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_OUTOFSERVICESTATE_ID = @as(c_int, 18579);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_OUTOFSERVICESTATE_NAME = @as(c_int, 18580);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 18581);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18582);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 18583);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18584);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 18585);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 18586);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SHELVINGSTATE = @as(c_int, 18587);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 18588);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 18589);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 18590);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 18591);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18592);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 18593);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 18594);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 18595);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 18596);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 18597);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 18598);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 18599);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 18600);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 18601);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 18602);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 18603);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SHELVINGSTATE_UNSHELVE = @as(c_int, 18604);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 18605);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SUPPRESSEDORSHELVED = @as(c_int, 18606);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_MAXTIMESHELVED = @as(c_int, 18607);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_AUDIBLEENABLED = @as(c_int, 18608);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_AUDIBLESOUND = @as(c_int, 18609);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_AUDIBLESOUND_LISTID = @as(c_int, 18610);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_AUDIBLESOUND_AGENCYID = @as(c_int, 18611);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_AUDIBLESOUND_VERSIONID = @as(c_int, 18612);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SILENCESTATE = @as(c_int, 18613);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SILENCESTATE_ID = @as(c_int, 18614);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SILENCESTATE_NAME = @as(c_int, 18615);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SILENCESTATE_NUMBER = @as(c_int, 18616);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18617);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 18618);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18619);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SILENCESTATE_TRUESTATE = @as(c_int, 18620);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SILENCESTATE_FALSESTATE = @as(c_int, 18621);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ONDELAY = @as(c_int, 18622);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_OFFDELAY = @as(c_int, 18623);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_FIRSTINGROUPFLAG = @as(c_int, 18624);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_FIRSTINGROUP = @as(c_int, 18625);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_LATCHEDSTATE = @as(c_int, 18626);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_LATCHEDSTATE_ID = @as(c_int, 18627);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_LATCHEDSTATE_NAME = @as(c_int, 18628);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_LATCHEDSTATE_NUMBER = @as(c_int, 18629);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18630);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 18631);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18632);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_LATCHEDSTATE_TRUESTATE = @as(c_int, 18633);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_LATCHEDSTATE_FALSESTATE = @as(c_int, 18634);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_ALARMGROUP_PLACEHOLDER = @as(c_int, 18635);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_REALARMTIME = @as(c_int, 18636);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_REALARMREPEATCOUNT = @as(c_int, 18637);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SILENCE = @as(c_int, 18638);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SUPPRESS = @as(c_int, 18639);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_UNSUPPRESS = @as(c_int, 18640);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_REMOVEFROMSERVICE = @as(c_int, 18641);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_PLACEINSERVICE = @as(c_int, 18642);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_RESET = @as(c_int, 18643);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_NORMALSTATE = @as(c_int, 18644);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_LATCHEDSTATE = @as(c_int, 18645);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_LATCHEDSTATE_ID = @as(c_int, 18646);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_LATCHEDSTATE_NAME = @as(c_int, 18647);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_LATCHEDSTATE_NUMBER = @as(c_int, 18648);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18649);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 18650);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18651);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_LATCHEDSTATE_TRUESTATE = @as(c_int, 18652);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_LATCHEDSTATE_FALSESTATE = @as(c_int, 18653);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_RESET = @as(c_int, 18654);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_LATCHEDSTATE = @as(c_int, 18655);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_LATCHEDSTATE_ID = @as(c_int, 18656);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_LATCHEDSTATE_NAME = @as(c_int, 18657);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_LATCHEDSTATE_NUMBER = @as(c_int, 18658);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 18659);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 18660);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 18661);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_LATCHEDSTATE_TRUESTATE = @as(c_int, 18662);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_LATCHEDSTATE_FALSESTATE = @as(c_int, 18663);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_RESET = @as(c_int, 18664);
pub const UA_NS0ID_STATISTICALCONDITIONCLASSTYPE = @as(c_int, 18665);
pub const UA_NS0ID_ALARMMETRICSTYPE_RESET = @as(c_int, 18666);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS = @as(c_int, 18667);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_DIAGNOSTICSLEVEL = @as(c_int, 18668);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION = @as(c_int, 18669);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_ACTIVE = @as(c_int, 18670);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_CLASSIFICATION = @as(c_int, 18671);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_DIAGNOSTICSLEVEL = @as(c_int, 18672);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_TIMEFIRSTCHANGE = @as(c_int, 18673);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR = @as(c_int, 18674);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_ACTIVE = @as(c_int, 18675);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_CLASSIFICATION = @as(c_int, 18676);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_DIAGNOSTICSLEVEL = @as(c_int, 18677);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_TIMEFIRSTCHANGE = @as(c_int, 18678);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_RESET = @as(c_int, 18679);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_SUBERROR = @as(c_int, 18680);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS = @as(c_int, 18681);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR = @as(c_int, 18682);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_ACTIVE = @as(c_int, 18683);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_CLASSIFICATION = @as(c_int, 18684);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_DIAGNOSTICSLEVEL = @as(c_int, 18685);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_TIMEFIRSTCHANGE = @as(c_int, 18686);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD = @as(c_int, 18687);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_ACTIVE = @as(c_int, 18688);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_CLASSIFICATION = @as(c_int, 18689);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 18690);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 18691);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT = @as(c_int, 18692);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_ACTIVE = @as(c_int, 18693);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_CLASSIFICATION = @as(c_int, 18694);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 18695);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 18696);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR = @as(c_int, 18697);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_ACTIVE = @as(c_int, 18698);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_CLASSIFICATION = @as(c_int, 18699);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_DIAGNOSTICSLEVEL = @as(c_int, 18700);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_TIMEFIRSTCHANGE = @as(c_int, 18701);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT = @as(c_int, 18702);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_ACTIVE = @as(c_int, 18703);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_CLASSIFICATION = @as(c_int, 18704);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 18705);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 18706);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD = @as(c_int, 18707);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_ACTIVE = @as(c_int, 18708);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_CLASSIFICATION = @as(c_int, 18709);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 18710);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 18711);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES = @as(c_int, 18712);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_RESOLVEDADDRESS = @as(c_int, 18713);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_RESOLVEDADDRESS_DIAGNOSTICSLEVEL = @as(c_int, 18714);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS = @as(c_int, 18715);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_DIAGNOSTICSLEVEL = @as(c_int, 18716);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_TOTALINFORMATION = @as(c_int, 18717);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_TOTALINFORMATION_ACTIVE = @as(c_int, 18718);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_TOTALINFORMATION_CLASSIFICATION = @as(c_int, 18719);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_TOTALINFORMATION_DIAGNOSTICSLEVEL = @as(c_int, 18720);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_TOTALINFORMATION_TIMEFIRSTCHANGE = @as(c_int, 18721);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_TOTALERROR = @as(c_int, 18722);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_TOTALERROR_ACTIVE = @as(c_int, 18723);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_TOTALERROR_CLASSIFICATION = @as(c_int, 18724);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_TOTALERROR_DIAGNOSTICSLEVEL = @as(c_int, 18725);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_TOTALERROR_TIMEFIRSTCHANGE = @as(c_int, 18726);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_RESET = @as(c_int, 18727);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_SUBERROR = @as(c_int, 18728);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS = @as(c_int, 18729);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEERROR = @as(c_int, 18730);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEERROR_ACTIVE = @as(c_int, 18731);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEERROR_CLASSIFICATION = @as(c_int, 18732);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEERROR_DIAGNOSTICSLEVEL = @as(c_int, 18733);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEERROR_TIMEFIRSTCHANGE = @as(c_int, 18734);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD = @as(c_int, 18735);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_ACTIVE = @as(c_int, 18736);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_CLASSIFICATION = @as(c_int, 18737);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 18738);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 18739);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT = @as(c_int, 18740);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_ACTIVE = @as(c_int, 18741);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_CLASSIFICATION = @as(c_int, 18742);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 18743);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 18744);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR = @as(c_int, 18745);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_ACTIVE = @as(c_int, 18746);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_CLASSIFICATION = @as(c_int, 18747);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_DIAGNOSTICSLEVEL = @as(c_int, 18748);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_TIMEFIRSTCHANGE = @as(c_int, 18749);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT = @as(c_int, 18750);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_ACTIVE = @as(c_int, 18751);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_CLASSIFICATION = @as(c_int, 18752);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 18753);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 18754);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD = @as(c_int, 18755);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_ACTIVE = @as(c_int, 18756);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_CLASSIFICATION = @as(c_int, 18757);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 18758);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 18759);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_LIVEVALUES = @as(c_int, 18760);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_LIVEVALUES_CONFIGUREDDATASETWRITERS = @as(c_int, 18761);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_LIVEVALUES_CONFIGUREDDATASETWRITERS_DIAGNOSTICSLEVEL = @as(c_int, 18762);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_LIVEVALUES_CONFIGUREDDATASETREADERS = @as(c_int, 18763);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_LIVEVALUES_CONFIGUREDDATASETREADERS_DIAGNOSTICSLEVEL = @as(c_int, 18764);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_LIVEVALUES_OPERATIONALDATASETWRITERS = @as(c_int, 18765);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_LIVEVALUES_OPERATIONALDATASETWRITERS_DIAGNOSTICSLEVEL = @as(c_int, 18766);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_LIVEVALUES_OPERATIONALDATASETREADERS = @as(c_int, 18767);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DIAGNOSTICS_LIVEVALUES_OPERATIONALDATASETREADERS_DIAGNOSTICSLEVEL = @as(c_int, 18768);
pub const UA_NS0ID_THREEDVECTORTYPE_X = @as(c_int, 18769);
pub const UA_NS0ID_THREEDVECTORTYPE_Y = @as(c_int, 18770);
pub const UA_NS0ID_THREEDVECTORTYPE_Z = @as(c_int, 18771);
pub const UA_NS0ID_CARTESIANCOORDINATESTYPE = @as(c_int, 18772);
pub const UA_NS0ID_CARTESIANCOORDINATESTYPE_LENGTHUNIT = @as(c_int, 18773);
pub const UA_NS0ID_THREEDCARTESIANCOORDINATESTYPE = @as(c_int, 18774);
pub const UA_NS0ID_THREEDCARTESIANCOORDINATESTYPE_LENGTHUNIT = @as(c_int, 18775);
pub const UA_NS0ID_THREEDCARTESIANCOORDINATESTYPE_X = @as(c_int, 18776);
pub const UA_NS0ID_THREEDCARTESIANCOORDINATESTYPE_Y = @as(c_int, 18777);
pub const UA_NS0ID_THREEDCARTESIANCOORDINATESTYPE_Z = @as(c_int, 18778);
pub const UA_NS0ID_ORIENTATIONTYPE = @as(c_int, 18779);
pub const UA_NS0ID_ORIENTATIONTYPE_ANGLEUNIT = @as(c_int, 18780);
pub const UA_NS0ID_THREEDORIENTATIONTYPE = @as(c_int, 18781);
pub const UA_NS0ID_THREEDORIENTATIONTYPE_ANGLEUNIT = @as(c_int, 18782);
pub const UA_NS0ID_THREEDORIENTATIONTYPE_A = @as(c_int, 18783);
pub const UA_NS0ID_THREEDORIENTATIONTYPE_B = @as(c_int, 18784);
pub const UA_NS0ID_THREEDORIENTATIONTYPE_C = @as(c_int, 18785);
pub const UA_NS0ID_FRAMETYPE = @as(c_int, 18786);
pub const UA_NS0ID_FRAMETYPE_ORIENTATION = @as(c_int, 18787);
pub const UA_NS0ID_FRAMETYPE_CONSTANT = @as(c_int, 18788);
pub const UA_NS0ID_FRAMETYPE_BASEFRAME = @as(c_int, 18789);
pub const UA_NS0ID_FRAMETYPE_FIXEDBASE = @as(c_int, 18790);
pub const UA_NS0ID_THREEDFRAMETYPE = @as(c_int, 18791);
pub const UA_NS0ID_THREEDFRAMETYPE_ORIENTATION = @as(c_int, 18792);
pub const UA_NS0ID_THREEDFRAMETYPE_CONSTANT = @as(c_int, 18793);
pub const UA_NS0ID_THREEDFRAMETYPE_BASEFRAME = @as(c_int, 18794);
pub const UA_NS0ID_THREEDFRAMETYPE_FIXEDBASE = @as(c_int, 18795);
pub const UA_NS0ID_THREEDFRAMETYPE_CARTESIANCOORDINATES = @as(c_int, 18796);
pub const UA_NS0ID_THREEDFRAMETYPE_CARTESIANCOORDINATES_LENGTHUNIT = @as(c_int, 18797);
pub const UA_NS0ID_THREEDFRAMETYPE_CARTESIANCOORDINATES_X = @as(c_int, 18798);
pub const UA_NS0ID_THREEDFRAMETYPE_CARTESIANCOORDINATES_Y = @as(c_int, 18799);
pub const UA_NS0ID_THREEDFRAMETYPE_CARTESIANCOORDINATES_Z = @as(c_int, 18800);
pub const UA_NS0ID_FRAMETYPE_CARTESIANCOORDINATES = @as(c_int, 18801);
pub const UA_NS0ID_FRAMETYPE_CARTESIANCOORDINATES_LENGTHUNIT = @as(c_int, 18802);
pub const UA_NS0ID_FRAMETYPE_ORIENTATION_ANGLEUNIT = @as(c_int, 18803);
pub const UA_NS0ID_HASWRITERGROUP = @as(c_int, 18804);
pub const UA_NS0ID_HASREADERGROUP = @as(c_int, 18805);
pub const UA_NS0ID_RATIONALNUMBER = @as(c_int, 18806);
pub const UA_NS0ID_VECTOR = @as(c_int, 18807);
pub const UA_NS0ID_THREEDVECTOR = @as(c_int, 18808);
pub const UA_NS0ID_CARTESIANCOORDINATES = @as(c_int, 18809);
pub const UA_NS0ID_THREEDCARTESIANCOORDINATES = @as(c_int, 18810);
pub const UA_NS0ID_ORIENTATION = @as(c_int, 18811);
pub const UA_NS0ID_THREEDORIENTATION = @as(c_int, 18812);
pub const UA_NS0ID_FRAME = @as(c_int, 18813);
pub const UA_NS0ID_THREEDFRAME = @as(c_int, 18814);
pub const UA_NS0ID_RATIONALNUMBER_ENCODING_DEFAULTBINARY = @as(c_int, 18815);
pub const UA_NS0ID_VECTOR_ENCODING_DEFAULTBINARY = @as(c_int, 18816);
pub const UA_NS0ID_THREEDVECTOR_ENCODING_DEFAULTBINARY = @as(c_int, 18817);
pub const UA_NS0ID_CARTESIANCOORDINATES_ENCODING_DEFAULTBINARY = @as(c_int, 18818);
pub const UA_NS0ID_THREEDCARTESIANCOORDINATES_ENCODING_DEFAULTBINARY = @as(c_int, 18819);
pub const UA_NS0ID_ORIENTATION_ENCODING_DEFAULTBINARY = @as(c_int, 18820);
pub const UA_NS0ID_THREEDORIENTATION_ENCODING_DEFAULTBINARY = @as(c_int, 18821);
pub const UA_NS0ID_FRAME_ENCODING_DEFAULTBINARY = @as(c_int, 18822);
pub const UA_NS0ID_THREEDFRAME_ENCODING_DEFAULTBINARY = @as(c_int, 18823);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_RATIONALNUMBER = @as(c_int, 18824);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_RATIONALNUMBER_DATATYPEVERSION = @as(c_int, 18825);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_RATIONALNUMBER_DICTIONARYFRAGMENT = @as(c_int, 18826);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_VECTOR = @as(c_int, 18827);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_VECTOR_DATATYPEVERSION = @as(c_int, 18828);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_VECTOR_DICTIONARYFRAGMENT = @as(c_int, 18829);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_THREEDVECTOR = @as(c_int, 18830);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_THREEDVECTOR_DATATYPEVERSION = @as(c_int, 18831);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_THREEDVECTOR_DICTIONARYFRAGMENT = @as(c_int, 18832);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_CARTESIANCOORDINATES = @as(c_int, 18833);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_CARTESIANCOORDINATES_DATATYPEVERSION = @as(c_int, 18834);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_CARTESIANCOORDINATES_DICTIONARYFRAGMENT = @as(c_int, 18835);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_THREEDCARTESIANCOORDINATES = @as(c_int, 18836);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_THREEDCARTESIANCOORDINATES_DATATYPEVERSION = @as(c_int, 18837);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_THREEDCARTESIANCOORDINATES_DICTIONARYFRAGMENT = @as(c_int, 18838);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ORIENTATION = @as(c_int, 18839);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ORIENTATION_DATATYPEVERSION = @as(c_int, 18840);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ORIENTATION_DICTIONARYFRAGMENT = @as(c_int, 18841);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_THREEDORIENTATION = @as(c_int, 18842);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_THREEDORIENTATION_DATATYPEVERSION = @as(c_int, 18843);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_THREEDORIENTATION_DICTIONARYFRAGMENT = @as(c_int, 18844);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_FRAME = @as(c_int, 18845);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_FRAME_DATATYPEVERSION = @as(c_int, 18846);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_FRAME_DICTIONARYFRAGMENT = @as(c_int, 18847);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_THREEDFRAME = @as(c_int, 18848);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_THREEDFRAME_DATATYPEVERSION = @as(c_int, 18849);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_THREEDFRAME_DICTIONARYFRAGMENT = @as(c_int, 18850);
pub const UA_NS0ID_RATIONALNUMBER_ENCODING_DEFAULTXML = @as(c_int, 18851);
pub const UA_NS0ID_VECTOR_ENCODING_DEFAULTXML = @as(c_int, 18852);
pub const UA_NS0ID_THREEDVECTOR_ENCODING_DEFAULTXML = @as(c_int, 18853);
pub const UA_NS0ID_CARTESIANCOORDINATES_ENCODING_DEFAULTXML = @as(c_int, 18854);
pub const UA_NS0ID_THREEDCARTESIANCOORDINATES_ENCODING_DEFAULTXML = @as(c_int, 18855);
pub const UA_NS0ID_ORIENTATION_ENCODING_DEFAULTXML = @as(c_int, 18856);
pub const UA_NS0ID_THREEDORIENTATION_ENCODING_DEFAULTXML = @as(c_int, 18857);
pub const UA_NS0ID_FRAME_ENCODING_DEFAULTXML = @as(c_int, 18858);
pub const UA_NS0ID_THREEDFRAME_ENCODING_DEFAULTXML = @as(c_int, 18859);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_RATIONALNUMBER = @as(c_int, 18860);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_RATIONALNUMBER_DATATYPEVERSION = @as(c_int, 18861);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_RATIONALNUMBER_DICTIONARYFRAGMENT = @as(c_int, 18862);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_VECTOR = @as(c_int, 18863);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_VECTOR_DATATYPEVERSION = @as(c_int, 18864);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_VECTOR_DICTIONARYFRAGMENT = @as(c_int, 18865);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_THREEDVECTOR = @as(c_int, 18866);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_THREEDVECTOR_DATATYPEVERSION = @as(c_int, 18867);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_THREEDVECTOR_DICTIONARYFRAGMENT = @as(c_int, 18868);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_CARTESIANCOORDINATES = @as(c_int, 18869);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_CARTESIANCOORDINATES_DATATYPEVERSION = @as(c_int, 18870);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS = @as(c_int, 18871);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_DIAGNOSTICSLEVEL = @as(c_int, 18872);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION = @as(c_int, 18873);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_ACTIVE = @as(c_int, 18874);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_CLASSIFICATION = @as(c_int, 18875);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_DIAGNOSTICSLEVEL = @as(c_int, 18876);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_TIMEFIRSTCHANGE = @as(c_int, 18877);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR = @as(c_int, 18878);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_ACTIVE = @as(c_int, 18879);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_CLASSIFICATION = @as(c_int, 18880);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_DIAGNOSTICSLEVEL = @as(c_int, 18881);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_TIMEFIRSTCHANGE = @as(c_int, 18882);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_RESET = @as(c_int, 18883);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_SUBERROR = @as(c_int, 18884);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS = @as(c_int, 18885);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR = @as(c_int, 18886);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_ACTIVE = @as(c_int, 18887);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_CLASSIFICATION = @as(c_int, 18888);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_DIAGNOSTICSLEVEL = @as(c_int, 18889);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_TIMEFIRSTCHANGE = @as(c_int, 18890);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD = @as(c_int, 18891);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_ACTIVE = @as(c_int, 18892);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_CLASSIFICATION = @as(c_int, 18893);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 18894);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 18895);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT = @as(c_int, 18896);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_ACTIVE = @as(c_int, 18897);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_CLASSIFICATION = @as(c_int, 18898);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 18899);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 18900);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR = @as(c_int, 18901);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_ACTIVE = @as(c_int, 18902);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_CLASSIFICATION = @as(c_int, 18903);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_DIAGNOSTICSLEVEL = @as(c_int, 18904);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_TIMEFIRSTCHANGE = @as(c_int, 18905);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT = @as(c_int, 18906);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_ACTIVE = @as(c_int, 18907);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_CLASSIFICATION = @as(c_int, 18908);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 18909);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 18910);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD = @as(c_int, 18911);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_ACTIVE = @as(c_int, 18912);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_CLASSIFICATION = @as(c_int, 18913);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 18914);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 18915);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES = @as(c_int, 18916);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES = @as(c_int, 18917);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_ACTIVE = @as(c_int, 18918);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_CLASSIFICATION = @as(c_int, 18919);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_DIAGNOSTICSLEVEL = @as(c_int, 18920);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_TIMEFIRSTCHANGE = @as(c_int, 18921);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MESSAGESEQUENCENUMBER = @as(c_int, 18922);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MESSAGESEQUENCENUMBER_DIAGNOSTICSLEVEL = @as(c_int, 18923);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_STATUSCODE = @as(c_int, 18924);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_STATUSCODE_DIAGNOSTICSLEVEL = @as(c_int, 18925);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MAJORVERSION = @as(c_int, 18926);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MAJORVERSION_DIAGNOSTICSLEVEL = @as(c_int, 18927);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MINORVERSION = @as(c_int, 18928);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MINORVERSION_DIAGNOSTICSLEVEL = @as(c_int, 18929);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS = @as(c_int, 18930);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_DIAGNOSTICSLEVEL = @as(c_int, 18931);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION = @as(c_int, 18932);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_ACTIVE = @as(c_int, 18933);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_CLASSIFICATION = @as(c_int, 18934);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_DIAGNOSTICSLEVEL = @as(c_int, 18935);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_TIMEFIRSTCHANGE = @as(c_int, 18936);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR = @as(c_int, 18937);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_ACTIVE = @as(c_int, 18938);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_CLASSIFICATION = @as(c_int, 18939);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_DIAGNOSTICSLEVEL = @as(c_int, 18940);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_TIMEFIRSTCHANGE = @as(c_int, 18941);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_RESET = @as(c_int, 18942);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_SUBERROR = @as(c_int, 18943);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS = @as(c_int, 18944);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR = @as(c_int, 18945);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_ACTIVE = @as(c_int, 18946);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_CLASSIFICATION = @as(c_int, 18947);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_DIAGNOSTICSLEVEL = @as(c_int, 18948);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_TIMEFIRSTCHANGE = @as(c_int, 18949);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD = @as(c_int, 18950);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_ACTIVE = @as(c_int, 18951);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_CLASSIFICATION = @as(c_int, 18952);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 18953);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 18954);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT = @as(c_int, 18955);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_ACTIVE = @as(c_int, 18956);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_CLASSIFICATION = @as(c_int, 18957);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 18958);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 18959);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR = @as(c_int, 18960);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_ACTIVE = @as(c_int, 18961);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_CLASSIFICATION = @as(c_int, 18962);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_DIAGNOSTICSLEVEL = @as(c_int, 18963);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_TIMEFIRSTCHANGE = @as(c_int, 18964);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT = @as(c_int, 18965);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_ACTIVE = @as(c_int, 18966);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_CLASSIFICATION = @as(c_int, 18967);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 18968);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 18969);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD = @as(c_int, 18970);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_ACTIVE = @as(c_int, 18971);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_CLASSIFICATION = @as(c_int, 18972);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 18973);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 18974);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES = @as(c_int, 18975);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES = @as(c_int, 18976);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_ACTIVE = @as(c_int, 18977);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_CLASSIFICATION = @as(c_int, 18978);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_DIAGNOSTICSLEVEL = @as(c_int, 18979);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_TIMEFIRSTCHANGE = @as(c_int, 18980);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MESSAGESEQUENCENUMBER = @as(c_int, 18981);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MESSAGESEQUENCENUMBER_DIAGNOSTICSLEVEL = @as(c_int, 18982);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_STATUSCODE = @as(c_int, 18983);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_STATUSCODE_DIAGNOSTICSLEVEL = @as(c_int, 18984);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MAJORVERSION = @as(c_int, 18985);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MAJORVERSION_DIAGNOSTICSLEVEL = @as(c_int, 18986);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MINORVERSION = @as(c_int, 18987);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MINORVERSION_DIAGNOSTICSLEVEL = @as(c_int, 18988);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS = @as(c_int, 18989);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_DIAGNOSTICSLEVEL = @as(c_int, 18990);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION = @as(c_int, 18991);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_ACTIVE = @as(c_int, 18992);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_CLASSIFICATION = @as(c_int, 18993);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_DIAGNOSTICSLEVEL = @as(c_int, 18994);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_TIMEFIRSTCHANGE = @as(c_int, 18995);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR = @as(c_int, 18996);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_ACTIVE = @as(c_int, 18997);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_CLASSIFICATION = @as(c_int, 18998);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_DIAGNOSTICSLEVEL = @as(c_int, 18999);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_TIMEFIRSTCHANGE = @as(c_int, 19000);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_RESET = @as(c_int, 19001);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_SUBERROR = @as(c_int, 19002);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS = @as(c_int, 19003);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR = @as(c_int, 19004);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_ACTIVE = @as(c_int, 19005);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_CLASSIFICATION = @as(c_int, 19006);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_DIAGNOSTICSLEVEL = @as(c_int, 19007);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_TIMEFIRSTCHANGE = @as(c_int, 19008);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD = @as(c_int, 19009);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_ACTIVE = @as(c_int, 19010);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_CLASSIFICATION = @as(c_int, 19011);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 19012);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 19013);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT = @as(c_int, 19014);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_ACTIVE = @as(c_int, 19015);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_CLASSIFICATION = @as(c_int, 19016);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 19017);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 19018);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR = @as(c_int, 19019);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_ACTIVE = @as(c_int, 19020);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_CLASSIFICATION = @as(c_int, 19021);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_DIAGNOSTICSLEVEL = @as(c_int, 19022);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_TIMEFIRSTCHANGE = @as(c_int, 19023);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT = @as(c_int, 19024);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_ACTIVE = @as(c_int, 19025);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_CLASSIFICATION = @as(c_int, 19026);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 19027);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 19028);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD = @as(c_int, 19029);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_ACTIVE = @as(c_int, 19030);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_CLASSIFICATION = @as(c_int, 19031);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 19032);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 19033);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES = @as(c_int, 19034);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES = @as(c_int, 19035);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_ACTIVE = @as(c_int, 19036);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_CLASSIFICATION = @as(c_int, 19037);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_DIAGNOSTICSLEVEL = @as(c_int, 19038);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_TIMEFIRSTCHANGE = @as(c_int, 19039);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MESSAGESEQUENCENUMBER = @as(c_int, 19040);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MESSAGESEQUENCENUMBER_DIAGNOSTICSLEVEL = @as(c_int, 19041);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_STATUSCODE = @as(c_int, 19042);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_STATUSCODE_DIAGNOSTICSLEVEL = @as(c_int, 19043);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MAJORVERSION = @as(c_int, 19044);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MAJORVERSION_DIAGNOSTICSLEVEL = @as(c_int, 19045);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MINORVERSION = @as(c_int, 19046);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_DATASETWRITERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_MINORVERSION_DIAGNOSTICSLEVEL = @as(c_int, 19047);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_CARTESIANCOORDINATES_DICTIONARYFRAGMENT = @as(c_int, 19048);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_THREEDCARTESIANCOORDINATES = @as(c_int, 19049);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_THREEDCARTESIANCOORDINATES_DATATYPEVERSION = @as(c_int, 19050);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_THREEDCARTESIANCOORDINATES_DICTIONARYFRAGMENT = @as(c_int, 19051);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ORIENTATION = @as(c_int, 19052);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ORIENTATION_DATATYPEVERSION = @as(c_int, 19053);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ORIENTATION_DICTIONARYFRAGMENT = @as(c_int, 19054);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_THREEDORIENTATION = @as(c_int, 19055);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_THREEDORIENTATION_DATATYPEVERSION = @as(c_int, 19056);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_THREEDORIENTATION_DICTIONARYFRAGMENT = @as(c_int, 19057);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_FRAME = @as(c_int, 19058);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_FRAME_DATATYPEVERSION = @as(c_int, 19059);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_FRAME_DICTIONARYFRAGMENT = @as(c_int, 19060);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_THREEDFRAME = @as(c_int, 19061);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_THREEDFRAME_DATATYPEVERSION = @as(c_int, 19062);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_THREEDFRAME_DICTIONARYFRAGMENT = @as(c_int, 19063);
pub const UA_NS0ID_RATIONALNUMBER_ENCODING_DEFAULTJSON = @as(c_int, 19064);
pub const UA_NS0ID_VECTOR_ENCODING_DEFAULTJSON = @as(c_int, 19065);
pub const UA_NS0ID_THREEDVECTOR_ENCODING_DEFAULTJSON = @as(c_int, 19066);
pub const UA_NS0ID_CARTESIANCOORDINATES_ENCODING_DEFAULTJSON = @as(c_int, 19067);
pub const UA_NS0ID_THREEDCARTESIANCOORDINATES_ENCODING_DEFAULTJSON = @as(c_int, 19068);
pub const UA_NS0ID_ORIENTATION_ENCODING_DEFAULTJSON = @as(c_int, 19069);
pub const UA_NS0ID_THREEDORIENTATION_ENCODING_DEFAULTJSON = @as(c_int, 19070);
pub const UA_NS0ID_FRAME_ENCODING_DEFAULTJSON = @as(c_int, 19071);
pub const UA_NS0ID_THREEDFRAME_ENCODING_DEFAULTJSON = @as(c_int, 19072);
pub const UA_NS0ID_THREEDFRAMETYPE_ORIENTATION_ANGLEUNIT = @as(c_int, 19073);
pub const UA_NS0ID_THREEDFRAMETYPE_ORIENTATION_A = @as(c_int, 19074);
pub const UA_NS0ID_THREEDFRAMETYPE_ORIENTATION_B = @as(c_int, 19075);
pub const UA_NS0ID_THREEDFRAMETYPE_ORIENTATION_C = @as(c_int, 19076);
pub const UA_NS0ID_MULTISTATEDICTIONARYENTRYDISCRETEBASETYPE = @as(c_int, 19077);
pub const UA_NS0ID_MULTISTATEDICTIONARYENTRYDISCRETEBASETYPE_DEFINITION = @as(c_int, 19078);
pub const UA_NS0ID_MULTISTATEDICTIONARYENTRYDISCRETEBASETYPE_VALUEPRECISION = @as(c_int, 19079);
pub const UA_NS0ID_MULTISTATEDICTIONARYENTRYDISCRETEBASETYPE_ENUMVALUES = @as(c_int, 19080);
pub const UA_NS0ID_MULTISTATEDICTIONARYENTRYDISCRETEBASETYPE_VALUEASTEXT = @as(c_int, 19081);
pub const UA_NS0ID_MULTISTATEDICTIONARYENTRYDISCRETEBASETYPE_ENUMDICTIONARYENTRIES = @as(c_int, 19082);
pub const UA_NS0ID_MULTISTATEDICTIONARYENTRYDISCRETEBASETYPE_VALUEASDICTIONARYENTRIES = @as(c_int, 19083);
pub const UA_NS0ID_MULTISTATEDICTIONARYENTRYDISCRETETYPE = @as(c_int, 19084);
pub const UA_NS0ID_MULTISTATEDICTIONARYENTRYDISCRETETYPE_DEFINITION = @as(c_int, 19085);
pub const UA_NS0ID_MULTISTATEDICTIONARYENTRYDISCRETETYPE_VALUEPRECISION = @as(c_int, 19086);
pub const UA_NS0ID_MULTISTATEDICTIONARYENTRYDISCRETETYPE_ENUMVALUES = @as(c_int, 19087);
pub const UA_NS0ID_MULTISTATEDICTIONARYENTRYDISCRETETYPE_VALUEASTEXT = @as(c_int, 19088);
pub const UA_NS0ID_MULTISTATEDICTIONARYENTRYDISCRETETYPE_ENUMDICTIONARYENTRIES = @as(c_int, 19089);
pub const UA_NS0ID_MULTISTATEDICTIONARYENTRYDISCRETETYPE_VALUEASDICTIONARYENTRIES = @as(c_int, 19090);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIES_SERVERTIMESTAMPSUPPORTED = @as(c_int, 19091);
pub const UA_NS0ID_HISTORICALDATACONFIGURATIONTYPE_SERVERTIMESTAMPSUPPORTED = @as(c_int, 19092);
pub const UA_NS0ID_HACONFIGURATION_SERVERTIMESTAMPSUPPORTED = @as(c_int, 19093);
pub const UA_NS0ID_HISTORYSERVERCAPABILITIESTYPE_SERVERTIMESTAMPSUPPORTED = @as(c_int, 19094);
pub const UA_NS0ID_AUDITHISTORYANNOTATIONUPDATEEVENTTYPE = @as(c_int, 19095);
pub const UA_NS0ID_AUDITHISTORYANNOTATIONUPDATEEVENTTYPE_EVENTID = @as(c_int, 19096);
pub const UA_NS0ID_AUDITHISTORYANNOTATIONUPDATEEVENTTYPE_EVENTTYPE = @as(c_int, 19097);
pub const UA_NS0ID_AUDITHISTORYANNOTATIONUPDATEEVENTTYPE_SOURCENODE = @as(c_int, 19098);
pub const UA_NS0ID_AUDITHISTORYANNOTATIONUPDATEEVENTTYPE_SOURCENAME = @as(c_int, 19099);
pub const UA_NS0ID_AUDITHISTORYANNOTATIONUPDATEEVENTTYPE_TIME = @as(c_int, 19100);
pub const UA_NS0ID_AUDITHISTORYANNOTATIONUPDATEEVENTTYPE_RECEIVETIME = @as(c_int, 19101);
pub const UA_NS0ID_AUDITHISTORYANNOTATIONUPDATEEVENTTYPE_LOCALTIME = @as(c_int, 19102);
pub const UA_NS0ID_AUDITHISTORYANNOTATIONUPDATEEVENTTYPE_MESSAGE = @as(c_int, 19103);
pub const UA_NS0ID_AUDITHISTORYANNOTATIONUPDATEEVENTTYPE_SEVERITY = @as(c_int, 19104);
pub const UA_NS0ID_AUDITHISTORYANNOTATIONUPDATEEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 19105);
pub const UA_NS0ID_AUDITHISTORYANNOTATIONUPDATEEVENTTYPE_STATUS = @as(c_int, 19106);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS = @as(c_int, 19107);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_DIAGNOSTICSLEVEL = @as(c_int, 19108);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION = @as(c_int, 19109);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_ACTIVE = @as(c_int, 19110);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_CLASSIFICATION = @as(c_int, 19111);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_DIAGNOSTICSLEVEL = @as(c_int, 19112);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_TIMEFIRSTCHANGE = @as(c_int, 19113);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR = @as(c_int, 19114);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_ACTIVE = @as(c_int, 19115);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_CLASSIFICATION = @as(c_int, 19116);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_DIAGNOSTICSLEVEL = @as(c_int, 19117);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_TIMEFIRSTCHANGE = @as(c_int, 19118);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_RESET = @as(c_int, 19119);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_SUBERROR = @as(c_int, 19120);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS = @as(c_int, 19121);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR = @as(c_int, 19122);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_ACTIVE = @as(c_int, 19123);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_CLASSIFICATION = @as(c_int, 19124);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_DIAGNOSTICSLEVEL = @as(c_int, 19125);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_TIMEFIRSTCHANGE = @as(c_int, 19126);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD = @as(c_int, 19127);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_ACTIVE = @as(c_int, 19128);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_CLASSIFICATION = @as(c_int, 19129);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 19130);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 19131);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT = @as(c_int, 19132);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_ACTIVE = @as(c_int, 19133);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_CLASSIFICATION = @as(c_int, 19134);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 19135);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 19136);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR = @as(c_int, 19137);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_ACTIVE = @as(c_int, 19138);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_CLASSIFICATION = @as(c_int, 19139);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_DIAGNOSTICSLEVEL = @as(c_int, 19140);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_TIMEFIRSTCHANGE = @as(c_int, 19141);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT = @as(c_int, 19142);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_ACTIVE = @as(c_int, 19143);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_CLASSIFICATION = @as(c_int, 19144);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 19145);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 19146);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD = @as(c_int, 19147);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_ACTIVE = @as(c_int, 19148);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_CLASSIFICATION = @as(c_int, 19149);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 19150);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 19151);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES = @as(c_int, 19152);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_SENTNETWORKMESSAGES = @as(c_int, 19153);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_SENTNETWORKMESSAGES_ACTIVE = @as(c_int, 19154);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_SENTNETWORKMESSAGES_CLASSIFICATION = @as(c_int, 19155);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_SENTNETWORKMESSAGES_DIAGNOSTICSLEVEL = @as(c_int, 19156);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_SENTNETWORKMESSAGES_TIMEFIRSTCHANGE = @as(c_int, 19157);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDTRANSMISSIONS = @as(c_int, 19158);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDTRANSMISSIONS_ACTIVE = @as(c_int, 19159);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDTRANSMISSIONS_CLASSIFICATION = @as(c_int, 19160);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDTRANSMISSIONS_DIAGNOSTICSLEVEL = @as(c_int, 19161);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_FAILEDTRANSMISSIONS_TIMEFIRSTCHANGE = @as(c_int, 19162);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_ENCRYPTIONERRORS = @as(c_int, 19163);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_ENCRYPTIONERRORS_ACTIVE = @as(c_int, 19164);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_ENCRYPTIONERRORS_CLASSIFICATION = @as(c_int, 19165);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_ENCRYPTIONERRORS_DIAGNOSTICSLEVEL = @as(c_int, 19166);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_ENCRYPTIONERRORS_TIMEFIRSTCHANGE = @as(c_int, 19167);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_CONFIGUREDDATASETWRITERS = @as(c_int, 19168);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_CONFIGUREDDATASETWRITERS_DIAGNOSTICSLEVEL = @as(c_int, 19169);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_OPERATIONALDATASETWRITERS = @as(c_int, 19170);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_OPERATIONALDATASETWRITERS_DIAGNOSTICSLEVEL = @as(c_int, 19171);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_SECURITYTOKENID = @as(c_int, 19172);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_SECURITYTOKENID_DIAGNOSTICSLEVEL = @as(c_int, 19173);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_TIMETONEXTTOKENID = @as(c_int, 19174);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_WRITERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_TIMETONEXTTOKENID_DIAGNOSTICSLEVEL = @as(c_int, 19175);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS = @as(c_int, 19176);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_DIAGNOSTICSLEVEL = @as(c_int, 19177);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION = @as(c_int, 19178);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_ACTIVE = @as(c_int, 19179);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_CLASSIFICATION = @as(c_int, 19180);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_DIAGNOSTICSLEVEL = @as(c_int, 19181);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_TIMEFIRSTCHANGE = @as(c_int, 19182);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR = @as(c_int, 19183);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_ACTIVE = @as(c_int, 19184);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_CLASSIFICATION = @as(c_int, 19185);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_DIAGNOSTICSLEVEL = @as(c_int, 19186);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_TIMEFIRSTCHANGE = @as(c_int, 19187);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_RESET = @as(c_int, 19188);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_SUBERROR = @as(c_int, 19189);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS = @as(c_int, 19190);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR = @as(c_int, 19191);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_ACTIVE = @as(c_int, 19192);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_CLASSIFICATION = @as(c_int, 19193);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_DIAGNOSTICSLEVEL = @as(c_int, 19194);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_TIMEFIRSTCHANGE = @as(c_int, 19195);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD = @as(c_int, 19196);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_ACTIVE = @as(c_int, 19197);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_CLASSIFICATION = @as(c_int, 19198);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 19199);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 19200);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT = @as(c_int, 19201);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_ACTIVE = @as(c_int, 19202);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_CLASSIFICATION = @as(c_int, 19203);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 19204);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 19205);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR = @as(c_int, 19206);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_ACTIVE = @as(c_int, 19207);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_CLASSIFICATION = @as(c_int, 19208);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_DIAGNOSTICSLEVEL = @as(c_int, 19209);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_TIMEFIRSTCHANGE = @as(c_int, 19210);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT = @as(c_int, 19211);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_ACTIVE = @as(c_int, 19212);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_CLASSIFICATION = @as(c_int, 19213);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 19214);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 19215);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD = @as(c_int, 19216);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_ACTIVE = @as(c_int, 19217);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_CLASSIFICATION = @as(c_int, 19218);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 19219);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 19220);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES = @as(c_int, 19221);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_RECEIVEDNETWORKMESSAGES = @as(c_int, 19222);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_RECEIVEDNETWORKMESSAGES_ACTIVE = @as(c_int, 19223);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_RECEIVEDNETWORKMESSAGES_CLASSIFICATION = @as(c_int, 19224);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_RECEIVEDNETWORKMESSAGES_DIAGNOSTICSLEVEL = @as(c_int, 19225);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_RECEIVEDNETWORKMESSAGES_TIMEFIRSTCHANGE = @as(c_int, 19226);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_RECEIVEDINVALIDNETWORKMESSAGES = @as(c_int, 19227);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_RECEIVEDINVALIDNETWORKMESSAGES_ACTIVE = @as(c_int, 19228);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_RECEIVEDINVALIDNETWORKMESSAGES_CLASSIFICATION = @as(c_int, 19229);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_RECEIVEDINVALIDNETWORKMESSAGES_DIAGNOSTICSLEVEL = @as(c_int, 19230);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_RECEIVEDINVALIDNETWORKMESSAGES_TIMEFIRSTCHANGE = @as(c_int, 19231);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_DECRYPTIONERRORS = @as(c_int, 19232);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_DECRYPTIONERRORS_ACTIVE = @as(c_int, 19233);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_DECRYPTIONERRORS_CLASSIFICATION = @as(c_int, 19234);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_DECRYPTIONERRORS_DIAGNOSTICSLEVEL = @as(c_int, 19235);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_DECRYPTIONERRORS_TIMEFIRSTCHANGE = @as(c_int, 19236);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_CONFIGUREDDATASETREADERS = @as(c_int, 19237);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_CONFIGUREDDATASETREADERS_DIAGNOSTICSLEVEL = @as(c_int, 19238);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_OPERATIONALDATASETREADERS = @as(c_int, 19239);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_READERGROUPNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_OPERATIONALDATASETREADERS_DIAGNOSTICSLEVEL = @as(c_int, 19240);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS = @as(c_int, 19241);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_DIAGNOSTICSLEVEL = @as(c_int, 19242);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_TOTALINFORMATION = @as(c_int, 19243);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_TOTALINFORMATION_ACTIVE = @as(c_int, 19244);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_TOTALINFORMATION_CLASSIFICATION = @as(c_int, 19245);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_TOTALINFORMATION_DIAGNOSTICSLEVEL = @as(c_int, 19246);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_TOTALINFORMATION_TIMEFIRSTCHANGE = @as(c_int, 19247);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_TOTALERROR = @as(c_int, 19248);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_TOTALERROR_ACTIVE = @as(c_int, 19249);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_TOTALERROR_CLASSIFICATION = @as(c_int, 19250);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_TOTALERROR_DIAGNOSTICSLEVEL = @as(c_int, 19251);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_TOTALERROR_TIMEFIRSTCHANGE = @as(c_int, 19252);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_RESET = @as(c_int, 19253);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_SUBERROR = @as(c_int, 19254);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS = @as(c_int, 19255);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEERROR = @as(c_int, 19256);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEERROR_ACTIVE = @as(c_int, 19257);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEERROR_CLASSIFICATION = @as(c_int, 19258);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEERROR_DIAGNOSTICSLEVEL = @as(c_int, 19259);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEERROR_TIMEFIRSTCHANGE = @as(c_int, 19260);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD = @as(c_int, 19261);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_ACTIVE = @as(c_int, 19262);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_CLASSIFICATION = @as(c_int, 19263);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 19264);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 19265);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT = @as(c_int, 19266);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_ACTIVE = @as(c_int, 19267);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_CLASSIFICATION = @as(c_int, 19268);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 19269);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 19270);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR = @as(c_int, 19271);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_ACTIVE = @as(c_int, 19272);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_CLASSIFICATION = @as(c_int, 19273);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_DIAGNOSTICSLEVEL = @as(c_int, 19274);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_TIMEFIRSTCHANGE = @as(c_int, 19275);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT = @as(c_int, 19276);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_ACTIVE = @as(c_int, 19277);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_CLASSIFICATION = @as(c_int, 19278);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 19279);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 19280);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD = @as(c_int, 19281);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_ACTIVE = @as(c_int, 19282);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_CLASSIFICATION = @as(c_int, 19283);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 19284);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 19285);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_LIVEVALUES = @as(c_int, 19286);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_LIVEVALUES_RESOLVEDADDRESS = @as(c_int, 19287);
pub const UA_NS0ID_PUBSUBCONNECTIONTYPE_DIAGNOSTICS_LIVEVALUES_RESOLVEDADDRESS_DIAGNOSTICSLEVEL = @as(c_int, 19288);
pub const UA_NS0ID_AUDITHISTORYANNOTATIONUPDATEEVENTTYPE_SERVERID = @as(c_int, 19289);
pub const UA_NS0ID_AUDITHISTORYANNOTATIONUPDATEEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 19290);
pub const UA_NS0ID_AUDITHISTORYANNOTATIONUPDATEEVENTTYPE_CLIENTUSERID = @as(c_int, 19291);
pub const UA_NS0ID_AUDITHISTORYANNOTATIONUPDATEEVENTTYPE_PARAMETERDATATYPEID = @as(c_int, 19292);
pub const UA_NS0ID_AUDITHISTORYANNOTATIONUPDATEEVENTTYPE_PERFORMINSERTREPLACE = @as(c_int, 19293);
pub const UA_NS0ID_AUDITHISTORYANNOTATIONUPDATEEVENTTYPE_NEWVALUES = @as(c_int, 19294);
pub const UA_NS0ID_AUDITHISTORYANNOTATIONUPDATEEVENTTYPE_OLDVALUES = @as(c_int, 19295);
pub const UA_NS0ID_TRUSTLISTTYPE_UPDATEFREQUENCY = @as(c_int, 19296);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE = @as(c_int, 19297);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_EVENTID = @as(c_int, 19298);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_EVENTTYPE = @as(c_int, 19299);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SOURCENODE = @as(c_int, 19300);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SOURCENAME = @as(c_int, 19301);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_TIME = @as(c_int, 19302);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_RECEIVETIME = @as(c_int, 19303);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_LOCALTIME = @as(c_int, 19304);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_MESSAGE = @as(c_int, 19305);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SEVERITY = @as(c_int, 19306);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_CONDITIONCLASSID = @as(c_int, 19307);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_CONDITIONCLASSNAME = @as(c_int, 19308);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_CONDITIONSUBCLASSID = @as(c_int, 19309);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 19310);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_CONDITIONNAME = @as(c_int, 19311);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_BRANCHID = @as(c_int, 19312);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_RETAIN = @as(c_int, 19313);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ENABLEDSTATE = @as(c_int, 19314);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ENABLEDSTATE_ID = @as(c_int, 19315);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ENABLEDSTATE_NAME = @as(c_int, 19316);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ENABLEDSTATE_NUMBER = @as(c_int, 19317);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 19318);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 19319);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 19320);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ENABLEDSTATE_TRUESTATE = @as(c_int, 19321);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ENABLEDSTATE_FALSESTATE = @as(c_int, 19322);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_QUALITY = @as(c_int, 19323);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_QUALITY_SOURCETIMESTAMP = @as(c_int, 19324);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_LASTSEVERITY = @as(c_int, 19325);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 19326);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_COMMENT = @as(c_int, 19327);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_COMMENT_SOURCETIMESTAMP = @as(c_int, 19328);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_CLIENTUSERID = @as(c_int, 19329);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_DISABLE = @as(c_int, 19330);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ENABLE = @as(c_int, 19331);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ADDCOMMENT = @as(c_int, 19332);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 19333);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_CONDITIONREFRESH = @as(c_int, 19334);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_CONDITIONREFRESH_INPUTARGUMENTS = @as(c_int, 19335);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_CONDITIONREFRESH2 = @as(c_int, 19336);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_CONDITIONREFRESH2_INPUTARGUMENTS = @as(c_int, 19337);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ACKEDSTATE = @as(c_int, 19338);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ACKEDSTATE_ID = @as(c_int, 19339);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ACKEDSTATE_NAME = @as(c_int, 19340);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ACKEDSTATE_NUMBER = @as(c_int, 19341);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 19342);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 19343);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 19344);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ACKEDSTATE_TRUESTATE = @as(c_int, 19345);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ACKEDSTATE_FALSESTATE = @as(c_int, 19346);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_CONFIRMEDSTATE = @as(c_int, 19347);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_CONFIRMEDSTATE_ID = @as(c_int, 19348);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_CONFIRMEDSTATE_NAME = @as(c_int, 19349);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_CONFIRMEDSTATE_NUMBER = @as(c_int, 19350);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 19351);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 19352);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 19353);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 19354);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 19355);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ACKNOWLEDGE = @as(c_int, 19356);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 19357);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_CONFIRM = @as(c_int, 19358);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_CONFIRM_INPUTARGUMENTS = @as(c_int, 19359);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ACTIVESTATE = @as(c_int, 19360);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ACTIVESTATE_ID = @as(c_int, 19361);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ACTIVESTATE_NAME = @as(c_int, 19362);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ACTIVESTATE_NUMBER = @as(c_int, 19363);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 19364);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 19365);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 19366);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ACTIVESTATE_TRUESTATE = @as(c_int, 19367);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ACTIVESTATE_FALSESTATE = @as(c_int, 19368);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_INPUTNODE = @as(c_int, 19369);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SUPPRESSEDSTATE = @as(c_int, 19370);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SUPPRESSEDSTATE_ID = @as(c_int, 19371);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SUPPRESSEDSTATE_NAME = @as(c_int, 19372);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 19373);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 19374);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 19375);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 19376);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 19377);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 19378);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_OUTOFSERVICESTATE = @as(c_int, 19379);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_OUTOFSERVICESTATE_ID = @as(c_int, 19380);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_OUTOFSERVICESTATE_NAME = @as(c_int, 19381);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 19382);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 19383);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 19384);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 19385);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 19386);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 19387);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SHELVINGSTATE = @as(c_int, 19388);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 19389);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 19390);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 19391);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 19392);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 19393);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 19394);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 19395);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 19396);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 19397);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 19398);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 19399);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 19400);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 19401);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 19402);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 19403);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 19404);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SHELVINGSTATE_UNSHELVE = @as(c_int, 19405);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 19406);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SUPPRESSEDORSHELVED = @as(c_int, 19407);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_MAXTIMESHELVED = @as(c_int, 19408);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_AUDIBLEENABLED = @as(c_int, 19409);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_AUDIBLESOUND = @as(c_int, 19410);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_AUDIBLESOUND_LISTID = @as(c_int, 19411);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_AUDIBLESOUND_AGENCYID = @as(c_int, 19412);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_AUDIBLESOUND_VERSIONID = @as(c_int, 19413);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SILENCESTATE = @as(c_int, 19414);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SILENCESTATE_ID = @as(c_int, 19415);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SILENCESTATE_NAME = @as(c_int, 19416);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SILENCESTATE_NUMBER = @as(c_int, 19417);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 19418);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 19419);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 19420);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SILENCESTATE_TRUESTATE = @as(c_int, 19421);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SILENCESTATE_FALSESTATE = @as(c_int, 19422);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ONDELAY = @as(c_int, 19423);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_OFFDELAY = @as(c_int, 19424);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_FIRSTINGROUPFLAG = @as(c_int, 19425);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_FIRSTINGROUP = @as(c_int, 19426);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_LATCHEDSTATE = @as(c_int, 19427);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_LATCHEDSTATE_ID = @as(c_int, 19428);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_LATCHEDSTATE_NAME = @as(c_int, 19429);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_LATCHEDSTATE_NUMBER = @as(c_int, 19430);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 19431);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 19432);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 19433);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_LATCHEDSTATE_TRUESTATE = @as(c_int, 19434);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_LATCHEDSTATE_FALSESTATE = @as(c_int, 19435);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_ALARMGROUP_PLACEHOLDER = @as(c_int, 19436);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_REALARMTIME = @as(c_int, 19437);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_REALARMREPEATCOUNT = @as(c_int, 19438);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SILENCE = @as(c_int, 19439);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SUPPRESS = @as(c_int, 19440);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_UNSUPPRESS = @as(c_int, 19441);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_REMOVEFROMSERVICE = @as(c_int, 19442);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_PLACEINSERVICE = @as(c_int, 19443);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_RESET = @as(c_int, 19444);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_NORMALSTATE = @as(c_int, 19445);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_TRUSTLISTID = @as(c_int, 19446);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_LASTUPDATETIME = @as(c_int, 19447);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_UPDATEFREQUENCY = @as(c_int, 19448);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_UPDATEFREQUENCY = @as(c_int, 19449);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED = @as(c_int, 19450);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_EVENTID = @as(c_int, 19451);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_EVENTTYPE = @as(c_int, 19452);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SOURCENODE = @as(c_int, 19453);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SOURCENAME = @as(c_int, 19454);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_TIME = @as(c_int, 19455);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_RECEIVETIME = @as(c_int, 19456);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_LOCALTIME = @as(c_int, 19457);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_MESSAGE = @as(c_int, 19458);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SEVERITY = @as(c_int, 19459);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_CONDITIONCLASSID = @as(c_int, 19460);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_CONDITIONCLASSNAME = @as(c_int, 19461);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_CONDITIONSUBCLASSID = @as(c_int, 19462);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_CONDITIONSUBCLASSNAME = @as(c_int, 19463);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_CONDITIONNAME = @as(c_int, 19464);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_BRANCHID = @as(c_int, 19465);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_RETAIN = @as(c_int, 19466);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ENABLEDSTATE = @as(c_int, 19467);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ENABLEDSTATE_ID = @as(c_int, 19468);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ENABLEDSTATE_NAME = @as(c_int, 19469);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ENABLEDSTATE_NUMBER = @as(c_int, 19470);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 19471);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 19472);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 19473);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ENABLEDSTATE_TRUESTATE = @as(c_int, 19474);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ENABLEDSTATE_FALSESTATE = @as(c_int, 19475);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_QUALITY = @as(c_int, 19476);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_QUALITY_SOURCETIMESTAMP = @as(c_int, 19477);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_LASTSEVERITY = @as(c_int, 19478);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 19479);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_COMMENT = @as(c_int, 19480);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_COMMENT_SOURCETIMESTAMP = @as(c_int, 19481);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_CLIENTUSERID = @as(c_int, 19482);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_DISABLE = @as(c_int, 19483);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ENABLE = @as(c_int, 19484);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ADDCOMMENT = @as(c_int, 19485);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 19486);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ACKEDSTATE = @as(c_int, 19487);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ACKEDSTATE_ID = @as(c_int, 19488);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ACKEDSTATE_NAME = @as(c_int, 19489);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ACKEDSTATE_NUMBER = @as(c_int, 19490);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 19491);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 19492);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 19493);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ACKEDSTATE_TRUESTATE = @as(c_int, 19494);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ACKEDSTATE_FALSESTATE = @as(c_int, 19495);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_CONFIRMEDSTATE = @as(c_int, 19496);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_CONFIRMEDSTATE_ID = @as(c_int, 19497);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NAME = @as(c_int, 19498);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NUMBER = @as(c_int, 19499);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 19500);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 19501);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 19502);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 19503);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 19504);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ACKNOWLEDGE = @as(c_int, 19505);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 19506);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_CONFIRM = @as(c_int, 19507);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_CONFIRM_INPUTARGUMENTS = @as(c_int, 19508);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ACTIVESTATE = @as(c_int, 19509);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ACTIVESTATE_ID = @as(c_int, 19510);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ACTIVESTATE_NAME = @as(c_int, 19511);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ACTIVESTATE_NUMBER = @as(c_int, 19512);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 19513);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 19514);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 19515);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ACTIVESTATE_TRUESTATE = @as(c_int, 19516);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ACTIVESTATE_FALSESTATE = @as(c_int, 19517);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_INPUTNODE = @as(c_int, 19518);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SUPPRESSEDSTATE = @as(c_int, 19519);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_ID = @as(c_int, 19520);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NAME = @as(c_int, 19521);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NUMBER = @as(c_int, 19522);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 19523);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 19524);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 19525);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 19526);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 19527);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_OUTOFSERVICESTATE = @as(c_int, 19528);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_ID = @as(c_int, 19529);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NAME = @as(c_int, 19530);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NUMBER = @as(c_int, 19531);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 19532);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 19533);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 19534);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 19535);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 19536);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SHELVINGSTATE = @as(c_int, 19537);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 19538);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 19539);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 19540);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 19541);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 19542);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 19543);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 19544);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 19545);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 19546);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 19547);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 19548);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 19549);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS = @as(c_int, 19550);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_DIAGNOSTICSLEVEL = @as(c_int, 19551);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_TOTALINFORMATION = @as(c_int, 19552);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_TOTALINFORMATION_ACTIVE = @as(c_int, 19553);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_TOTALINFORMATION_CLASSIFICATION = @as(c_int, 19554);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_TOTALINFORMATION_DIAGNOSTICSLEVEL = @as(c_int, 19555);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_TOTALINFORMATION_TIMEFIRSTCHANGE = @as(c_int, 19556);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_TOTALERROR = @as(c_int, 19557);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_TOTALERROR_ACTIVE = @as(c_int, 19558);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_TOTALERROR_CLASSIFICATION = @as(c_int, 19559);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_TOTALERROR_DIAGNOSTICSLEVEL = @as(c_int, 19560);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_TOTALERROR_TIMEFIRSTCHANGE = @as(c_int, 19561);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_RESET = @as(c_int, 19562);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_SUBERROR = @as(c_int, 19563);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS = @as(c_int, 19564);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEERROR = @as(c_int, 19565);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEERROR_ACTIVE = @as(c_int, 19566);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEERROR_CLASSIFICATION = @as(c_int, 19567);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEERROR_DIAGNOSTICSLEVEL = @as(c_int, 19568);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEERROR_TIMEFIRSTCHANGE = @as(c_int, 19569);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD = @as(c_int, 19570);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_ACTIVE = @as(c_int, 19571);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_CLASSIFICATION = @as(c_int, 19572);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 19573);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 19574);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT = @as(c_int, 19575);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_ACTIVE = @as(c_int, 19576);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_CLASSIFICATION = @as(c_int, 19577);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 19578);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 19579);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR = @as(c_int, 19580);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_ACTIVE = @as(c_int, 19581);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_CLASSIFICATION = @as(c_int, 19582);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_DIAGNOSTICSLEVEL = @as(c_int, 19583);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_TIMEFIRSTCHANGE = @as(c_int, 19584);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT = @as(c_int, 19585);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_ACTIVE = @as(c_int, 19586);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_CLASSIFICATION = @as(c_int, 19587);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 19588);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 19589);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD = @as(c_int, 19590);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_ACTIVE = @as(c_int, 19591);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_CLASSIFICATION = @as(c_int, 19592);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 19593);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 19594);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_LIVEVALUES = @as(c_int, 19595);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES = @as(c_int, 19596);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_ACTIVE = @as(c_int, 19597);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_CLASSIFICATION = @as(c_int, 19598);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_DIAGNOSTICSLEVEL = @as(c_int, 19599);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_TIMEFIRSTCHANGE = @as(c_int, 19600);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_LIVEVALUES_MESSAGESEQUENCENUMBER = @as(c_int, 19601);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_LIVEVALUES_MESSAGESEQUENCENUMBER_DIAGNOSTICSLEVEL = @as(c_int, 19602);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_LIVEVALUES_STATUSCODE = @as(c_int, 19603);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_LIVEVALUES_STATUSCODE_DIAGNOSTICSLEVEL = @as(c_int, 19604);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_LIVEVALUES_MAJORVERSION = @as(c_int, 19605);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_LIVEVALUES_MAJORVERSION_DIAGNOSTICSLEVEL = @as(c_int, 19606);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_LIVEVALUES_MINORVERSION = @as(c_int, 19607);
pub const UA_NS0ID_DATASETWRITERTYPE_DIAGNOSTICS_LIVEVALUES_MINORVERSION_DIAGNOSTICSLEVEL = @as(c_int, 19608);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS = @as(c_int, 19609);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_DIAGNOSTICSLEVEL = @as(c_int, 19610);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_TOTALINFORMATION = @as(c_int, 19611);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_TOTALINFORMATION_ACTIVE = @as(c_int, 19612);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_TOTALINFORMATION_CLASSIFICATION = @as(c_int, 19613);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_TOTALINFORMATION_DIAGNOSTICSLEVEL = @as(c_int, 19614);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_TOTALINFORMATION_TIMEFIRSTCHANGE = @as(c_int, 19615);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_TOTALERROR = @as(c_int, 19616);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_TOTALERROR_ACTIVE = @as(c_int, 19617);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_TOTALERROR_CLASSIFICATION = @as(c_int, 19618);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_TOTALERROR_DIAGNOSTICSLEVEL = @as(c_int, 19619);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_TOTALERROR_TIMEFIRSTCHANGE = @as(c_int, 19620);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_RESET = @as(c_int, 19621);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_SUBERROR = @as(c_int, 19622);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS = @as(c_int, 19623);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEERROR = @as(c_int, 19624);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEERROR_ACTIVE = @as(c_int, 19625);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEERROR_CLASSIFICATION = @as(c_int, 19626);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEERROR_DIAGNOSTICSLEVEL = @as(c_int, 19627);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEERROR_TIMEFIRSTCHANGE = @as(c_int, 19628);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD = @as(c_int, 19629);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_ACTIVE = @as(c_int, 19630);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_CLASSIFICATION = @as(c_int, 19631);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 19632);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 19633);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT = @as(c_int, 19634);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_ACTIVE = @as(c_int, 19635);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_CLASSIFICATION = @as(c_int, 19636);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 19637);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 19638);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR = @as(c_int, 19639);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_ACTIVE = @as(c_int, 19640);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_CLASSIFICATION = @as(c_int, 19641);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_DIAGNOSTICSLEVEL = @as(c_int, 19642);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_TIMEFIRSTCHANGE = @as(c_int, 19643);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT = @as(c_int, 19644);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_ACTIVE = @as(c_int, 19645);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_CLASSIFICATION = @as(c_int, 19646);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 19647);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 19648);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD = @as(c_int, 19649);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_ACTIVE = @as(c_int, 19650);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_CLASSIFICATION = @as(c_int, 19651);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 19652);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 19653);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_LIVEVALUES = @as(c_int, 19654);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES = @as(c_int, 19655);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_ACTIVE = @as(c_int, 19656);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_CLASSIFICATION = @as(c_int, 19657);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_DIAGNOSTICSLEVEL = @as(c_int, 19658);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_FAILEDDATASETMESSAGES_TIMEFIRSTCHANGE = @as(c_int, 19659);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_DECRYPTIONERRORS = @as(c_int, 19660);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_DECRYPTIONERRORS_ACTIVE = @as(c_int, 19661);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_DECRYPTIONERRORS_CLASSIFICATION = @as(c_int, 19662);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_DECRYPTIONERRORS_DIAGNOSTICSLEVEL = @as(c_int, 19663);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_COUNTERS_DECRYPTIONERRORS_TIMEFIRSTCHANGE = @as(c_int, 19664);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_LIVEVALUES_MESSAGESEQUENCENUMBER = @as(c_int, 19665);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_LIVEVALUES_MESSAGESEQUENCENUMBER_DIAGNOSTICSLEVEL = @as(c_int, 19666);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_LIVEVALUES_STATUSCODE = @as(c_int, 19667);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_LIVEVALUES_STATUSCODE_DIAGNOSTICSLEVEL = @as(c_int, 19668);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_LIVEVALUES_MAJORVERSION = @as(c_int, 19669);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_LIVEVALUES_MAJORVERSION_DIAGNOSTICSLEVEL = @as(c_int, 19670);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_LIVEVALUES_MINORVERSION = @as(c_int, 19671);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_LIVEVALUES_MINORVERSION_DIAGNOSTICSLEVEL = @as(c_int, 19672);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_LIVEVALUES_SECURITYTOKENID = @as(c_int, 19673);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_LIVEVALUES_SECURITYTOKENID_DIAGNOSTICSLEVEL = @as(c_int, 19674);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_LIVEVALUES_TIMETONEXTTOKENID = @as(c_int, 19675);
pub const UA_NS0ID_DATASETREADERTYPE_DIAGNOSTICS_LIVEVALUES_TIMETONEXTTOKENID_DIAGNOSTICSLEVEL = @as(c_int, 19676);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE = @as(c_int, 19677);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_DIAGNOSTICSLEVEL = @as(c_int, 19678);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_TOTALINFORMATION = @as(c_int, 19679);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_TOTALINFORMATION_ACTIVE = @as(c_int, 19680);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_TOTALINFORMATION_CLASSIFICATION = @as(c_int, 19681);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_TOTALINFORMATION_DIAGNOSTICSLEVEL = @as(c_int, 19682);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_TOTALINFORMATION_TIMEFIRSTCHANGE = @as(c_int, 19683);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_TOTALERROR = @as(c_int, 19684);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_TOTALERROR_ACTIVE = @as(c_int, 19685);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_TOTALERROR_CLASSIFICATION = @as(c_int, 19686);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_TOTALERROR_DIAGNOSTICSLEVEL = @as(c_int, 19687);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_TOTALERROR_TIMEFIRSTCHANGE = @as(c_int, 19688);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_RESET = @as(c_int, 19689);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_SUBERROR = @as(c_int, 19690);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS = @as(c_int, 19691);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEERROR = @as(c_int, 19692);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEERROR_ACTIVE = @as(c_int, 19693);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEERROR_CLASSIFICATION = @as(c_int, 19694);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEERROR_DIAGNOSTICSLEVEL = @as(c_int, 19695);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEERROR_TIMEFIRSTCHANGE = @as(c_int, 19696);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEOPERATIONALBYMETHOD = @as(c_int, 19697);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_ACTIVE = @as(c_int, 19698);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_CLASSIFICATION = @as(c_int, 19699);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 19700);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 19701);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEOPERATIONALBYPARENT = @as(c_int, 19702);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEOPERATIONALBYPARENT_ACTIVE = @as(c_int, 19703);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEOPERATIONALBYPARENT_CLASSIFICATION = @as(c_int, 19704);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEOPERATIONALBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 19705);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEOPERATIONALBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 19706);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEOPERATIONALFROMERROR = @as(c_int, 19707);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEOPERATIONALFROMERROR_ACTIVE = @as(c_int, 19708);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEOPERATIONALFROMERROR_CLASSIFICATION = @as(c_int, 19709);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEOPERATIONALFROMERROR_DIAGNOSTICSLEVEL = @as(c_int, 19710);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEOPERATIONALFROMERROR_TIMEFIRSTCHANGE = @as(c_int, 19711);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEPAUSEDBYPARENT = @as(c_int, 19712);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEPAUSEDBYPARENT_ACTIVE = @as(c_int, 19713);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEPAUSEDBYPARENT_CLASSIFICATION = @as(c_int, 19714);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEPAUSEDBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 19715);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEPAUSEDBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 19716);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEDISABLEDBYMETHOD = @as(c_int, 19717);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEDISABLEDBYMETHOD_ACTIVE = @as(c_int, 19718);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEDISABLEDBYMETHOD_CLASSIFICATION = @as(c_int, 19719);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEDISABLEDBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 19720);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_COUNTERS_STATEDISABLEDBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 19721);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSTYPE_LIVEVALUES = @as(c_int, 19722);
pub const UA_NS0ID_DIAGNOSTICSLEVEL = @as(c_int, 19723);
pub const UA_NS0ID_DIAGNOSTICSLEVEL_ENUMSTRINGS = @as(c_int, 19724);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCOUNTERTYPE = @as(c_int, 19725);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCOUNTERTYPE_ACTIVE = @as(c_int, 19726);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCOUNTERTYPE_CLASSIFICATION = @as(c_int, 19727);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCOUNTERTYPE_DIAGNOSTICSLEVEL = @as(c_int, 19728);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCOUNTERTYPE_TIMEFIRSTCHANGE = @as(c_int, 19729);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCOUNTERCLASSIFICATION = @as(c_int, 19730);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCOUNTERCLASSIFICATION_ENUMSTRINGS = @as(c_int, 19731);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE = @as(c_int, 19732);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_DIAGNOSTICSLEVEL = @as(c_int, 19733);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_TOTALINFORMATION = @as(c_int, 19734);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_TOTALINFORMATION_ACTIVE = @as(c_int, 19735);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_TOTALINFORMATION_CLASSIFICATION = @as(c_int, 19736);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_TOTALINFORMATION_DIAGNOSTICSLEVEL = @as(c_int, 19737);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_TOTALINFORMATION_TIMEFIRSTCHANGE = @as(c_int, 19738);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_TOTALERROR = @as(c_int, 19739);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_TOTALERROR_ACTIVE = @as(c_int, 19740);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_TOTALERROR_CLASSIFICATION = @as(c_int, 19741);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_TOTALERROR_DIAGNOSTICSLEVEL = @as(c_int, 19742);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_TOTALERROR_TIMEFIRSTCHANGE = @as(c_int, 19743);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_RESET = @as(c_int, 19744);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_SUBERROR = @as(c_int, 19745);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS = @as(c_int, 19746);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEERROR = @as(c_int, 19747);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEERROR_ACTIVE = @as(c_int, 19748);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEERROR_CLASSIFICATION = @as(c_int, 19749);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEERROR_DIAGNOSTICSLEVEL = @as(c_int, 19750);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEERROR_TIMEFIRSTCHANGE = @as(c_int, 19751);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEOPERATIONALBYMETHOD = @as(c_int, 19752);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_ACTIVE = @as(c_int, 19753);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_CLASSIFICATION = @as(c_int, 19754);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 19755);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 19756);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEOPERATIONALBYPARENT = @as(c_int, 19757);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEOPERATIONALBYPARENT_ACTIVE = @as(c_int, 19758);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEOPERATIONALBYPARENT_CLASSIFICATION = @as(c_int, 19759);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEOPERATIONALBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 19760);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEOPERATIONALBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 19761);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEOPERATIONALFROMERROR = @as(c_int, 19762);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEOPERATIONALFROMERROR_ACTIVE = @as(c_int, 19763);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEOPERATIONALFROMERROR_CLASSIFICATION = @as(c_int, 19764);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEOPERATIONALFROMERROR_DIAGNOSTICSLEVEL = @as(c_int, 19765);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEOPERATIONALFROMERROR_TIMEFIRSTCHANGE = @as(c_int, 19766);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEPAUSEDBYPARENT = @as(c_int, 19767);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEPAUSEDBYPARENT_ACTIVE = @as(c_int, 19768);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEPAUSEDBYPARENT_CLASSIFICATION = @as(c_int, 19769);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEPAUSEDBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 19770);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEPAUSEDBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 19771);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEDISABLEDBYMETHOD = @as(c_int, 19772);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEDISABLEDBYMETHOD_ACTIVE = @as(c_int, 19773);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEDISABLEDBYMETHOD_CLASSIFICATION = @as(c_int, 19774);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEDISABLEDBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 19775);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_COUNTERS_STATEDISABLEDBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 19776);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_LIVEVALUES = @as(c_int, 19777);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_LIVEVALUES_CONFIGUREDDATASETWRITERS = @as(c_int, 19778);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_LIVEVALUES_CONFIGUREDDATASETWRITERS_DIAGNOSTICSLEVEL = @as(c_int, 19779);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_LIVEVALUES_CONFIGUREDDATASETREADERS = @as(c_int, 19780);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_LIVEVALUES_CONFIGUREDDATASETREADERS_DIAGNOSTICSLEVEL = @as(c_int, 19781);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_LIVEVALUES_OPERATIONALDATASETWRITERS = @as(c_int, 19782);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_LIVEVALUES_OPERATIONALDATASETWRITERS_DIAGNOSTICSLEVEL = @as(c_int, 19783);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_LIVEVALUES_OPERATIONALDATASETREADERS = @as(c_int, 19784);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSROOTTYPE_LIVEVALUES_OPERATIONALDATASETREADERS_DIAGNOSTICSLEVEL = @as(c_int, 19785);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE = @as(c_int, 19786);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_DIAGNOSTICSLEVEL = @as(c_int, 19787);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_TOTALINFORMATION = @as(c_int, 19788);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_TOTALINFORMATION_ACTIVE = @as(c_int, 19789);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_TOTALINFORMATION_CLASSIFICATION = @as(c_int, 19790);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_TOTALINFORMATION_DIAGNOSTICSLEVEL = @as(c_int, 19791);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_TOTALINFORMATION_TIMEFIRSTCHANGE = @as(c_int, 19792);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_TOTALERROR = @as(c_int, 19793);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_TOTALERROR_ACTIVE = @as(c_int, 19794);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_TOTALERROR_CLASSIFICATION = @as(c_int, 19795);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_TOTALERROR_DIAGNOSTICSLEVEL = @as(c_int, 19796);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_TOTALERROR_TIMEFIRSTCHANGE = @as(c_int, 19797);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_RESET = @as(c_int, 19798);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_SUBERROR = @as(c_int, 19799);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS = @as(c_int, 19800);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEERROR = @as(c_int, 19801);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEERROR_ACTIVE = @as(c_int, 19802);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEERROR_CLASSIFICATION = @as(c_int, 19803);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEERROR_DIAGNOSTICSLEVEL = @as(c_int, 19804);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEERROR_TIMEFIRSTCHANGE = @as(c_int, 19805);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEOPERATIONALBYMETHOD = @as(c_int, 19806);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_ACTIVE = @as(c_int, 19807);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_CLASSIFICATION = @as(c_int, 19808);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 19809);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 19810);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEOPERATIONALBYPARENT = @as(c_int, 19811);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEOPERATIONALBYPARENT_ACTIVE = @as(c_int, 19812);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEOPERATIONALBYPARENT_CLASSIFICATION = @as(c_int, 19813);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEOPERATIONALBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 19814);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEOPERATIONALBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 19815);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEOPERATIONALFROMERROR = @as(c_int, 19816);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEOPERATIONALFROMERROR_ACTIVE = @as(c_int, 19817);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEOPERATIONALFROMERROR_CLASSIFICATION = @as(c_int, 19818);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEOPERATIONALFROMERROR_DIAGNOSTICSLEVEL = @as(c_int, 19819);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEOPERATIONALFROMERROR_TIMEFIRSTCHANGE = @as(c_int, 19820);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEPAUSEDBYPARENT = @as(c_int, 19821);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEPAUSEDBYPARENT_ACTIVE = @as(c_int, 19822);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEPAUSEDBYPARENT_CLASSIFICATION = @as(c_int, 19823);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEPAUSEDBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 19824);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEPAUSEDBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 19825);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEDISABLEDBYMETHOD = @as(c_int, 19826);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEDISABLEDBYMETHOD_ACTIVE = @as(c_int, 19827);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEDISABLEDBYMETHOD_CLASSIFICATION = @as(c_int, 19828);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEDISABLEDBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 19829);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_COUNTERS_STATEDISABLEDBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 19830);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_LIVEVALUES = @as(c_int, 19831);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_LIVEVALUES_RESOLVEDADDRESS = @as(c_int, 19832);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSCONNECTIONTYPE_LIVEVALUES_RESOLVEDADDRESS_DIAGNOSTICSLEVEL = @as(c_int, 19833);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE = @as(c_int, 19834);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_DIAGNOSTICSLEVEL = @as(c_int, 19835);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_TOTALINFORMATION = @as(c_int, 19836);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_TOTALINFORMATION_ACTIVE = @as(c_int, 19837);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_TOTALINFORMATION_CLASSIFICATION = @as(c_int, 19838);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_TOTALINFORMATION_DIAGNOSTICSLEVEL = @as(c_int, 19839);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_TOTALINFORMATION_TIMEFIRSTCHANGE = @as(c_int, 19840);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_TOTALERROR = @as(c_int, 19841);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_TOTALERROR_ACTIVE = @as(c_int, 19842);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_TOTALERROR_CLASSIFICATION = @as(c_int, 19843);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_TOTALERROR_DIAGNOSTICSLEVEL = @as(c_int, 19844);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_TOTALERROR_TIMEFIRSTCHANGE = @as(c_int, 19845);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_RESET = @as(c_int, 19846);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_SUBERROR = @as(c_int, 19847);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS = @as(c_int, 19848);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEERROR = @as(c_int, 19849);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEERROR_ACTIVE = @as(c_int, 19850);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEERROR_CLASSIFICATION = @as(c_int, 19851);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEERROR_DIAGNOSTICSLEVEL = @as(c_int, 19852);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEERROR_TIMEFIRSTCHANGE = @as(c_int, 19853);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEOPERATIONALBYMETHOD = @as(c_int, 19854);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_ACTIVE = @as(c_int, 19855);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_CLASSIFICATION = @as(c_int, 19856);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 19857);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 19858);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEOPERATIONALBYPARENT = @as(c_int, 19859);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEOPERATIONALBYPARENT_ACTIVE = @as(c_int, 19860);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEOPERATIONALBYPARENT_CLASSIFICATION = @as(c_int, 19861);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEOPERATIONALBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 19862);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEOPERATIONALBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 19863);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEOPERATIONALFROMERROR = @as(c_int, 19864);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEOPERATIONALFROMERROR_ACTIVE = @as(c_int, 19865);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEOPERATIONALFROMERROR_CLASSIFICATION = @as(c_int, 19866);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEOPERATIONALFROMERROR_DIAGNOSTICSLEVEL = @as(c_int, 19867);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEOPERATIONALFROMERROR_TIMEFIRSTCHANGE = @as(c_int, 19868);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEPAUSEDBYPARENT = @as(c_int, 19869);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEPAUSEDBYPARENT_ACTIVE = @as(c_int, 19870);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEPAUSEDBYPARENT_CLASSIFICATION = @as(c_int, 19871);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEPAUSEDBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 19872);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEPAUSEDBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 19873);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEDISABLEDBYMETHOD = @as(c_int, 19874);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEDISABLEDBYMETHOD_ACTIVE = @as(c_int, 19875);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEDISABLEDBYMETHOD_CLASSIFICATION = @as(c_int, 19876);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEDISABLEDBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 19877);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_STATEDISABLEDBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 19878);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_LIVEVALUES = @as(c_int, 19879);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_SENTNETWORKMESSAGES = @as(c_int, 19880);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_SENTNETWORKMESSAGES_ACTIVE = @as(c_int, 19881);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_SENTNETWORKMESSAGES_CLASSIFICATION = @as(c_int, 19882);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_SENTNETWORKMESSAGES_DIAGNOSTICSLEVEL = @as(c_int, 19883);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_SENTNETWORKMESSAGES_TIMEFIRSTCHANGE = @as(c_int, 19884);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_FAILEDTRANSMISSIONS = @as(c_int, 19885);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_FAILEDTRANSMISSIONS_ACTIVE = @as(c_int, 19886);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_FAILEDTRANSMISSIONS_CLASSIFICATION = @as(c_int, 19887);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_FAILEDTRANSMISSIONS_DIAGNOSTICSLEVEL = @as(c_int, 19888);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_FAILEDTRANSMISSIONS_TIMEFIRSTCHANGE = @as(c_int, 19889);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_ENCRYPTIONERRORS = @as(c_int, 19890);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_ENCRYPTIONERRORS_ACTIVE = @as(c_int, 19891);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_ENCRYPTIONERRORS_CLASSIFICATION = @as(c_int, 19892);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_ENCRYPTIONERRORS_DIAGNOSTICSLEVEL = @as(c_int, 19893);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_COUNTERS_ENCRYPTIONERRORS_TIMEFIRSTCHANGE = @as(c_int, 19894);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_LIVEVALUES_CONFIGUREDDATASETWRITERS = @as(c_int, 19895);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_LIVEVALUES_CONFIGUREDDATASETWRITERS_DIAGNOSTICSLEVEL = @as(c_int, 19896);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_LIVEVALUES_OPERATIONALDATASETWRITERS = @as(c_int, 19897);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_LIVEVALUES_OPERATIONALDATASETWRITERS_DIAGNOSTICSLEVEL = @as(c_int, 19898);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_LIVEVALUES_SECURITYTOKENID = @as(c_int, 19899);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_LIVEVALUES_SECURITYTOKENID_DIAGNOSTICSLEVEL = @as(c_int, 19900);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_LIVEVALUES_TIMETONEXTTOKENID = @as(c_int, 19901);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSWRITERGROUPTYPE_LIVEVALUES_TIMETONEXTTOKENID_DIAGNOSTICSLEVEL = @as(c_int, 19902);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE = @as(c_int, 19903);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_DIAGNOSTICSLEVEL = @as(c_int, 19904);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_TOTALINFORMATION = @as(c_int, 19905);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_TOTALINFORMATION_ACTIVE = @as(c_int, 19906);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_TOTALINFORMATION_CLASSIFICATION = @as(c_int, 19907);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_TOTALINFORMATION_DIAGNOSTICSLEVEL = @as(c_int, 19908);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_TOTALINFORMATION_TIMEFIRSTCHANGE = @as(c_int, 19909);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_TOTALERROR = @as(c_int, 19910);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_TOTALERROR_ACTIVE = @as(c_int, 19911);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_TOTALERROR_CLASSIFICATION = @as(c_int, 19912);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_TOTALERROR_DIAGNOSTICSLEVEL = @as(c_int, 19913);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_TOTALERROR_TIMEFIRSTCHANGE = @as(c_int, 19914);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_RESET = @as(c_int, 19915);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_SUBERROR = @as(c_int, 19916);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS = @as(c_int, 19917);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEERROR = @as(c_int, 19918);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEERROR_ACTIVE = @as(c_int, 19919);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEERROR_CLASSIFICATION = @as(c_int, 19920);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEERROR_DIAGNOSTICSLEVEL = @as(c_int, 19921);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEERROR_TIMEFIRSTCHANGE = @as(c_int, 19922);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEOPERATIONALBYMETHOD = @as(c_int, 19923);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_ACTIVE = @as(c_int, 19924);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_CLASSIFICATION = @as(c_int, 19925);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 19926);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 19927);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEOPERATIONALBYPARENT = @as(c_int, 19928);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEOPERATIONALBYPARENT_ACTIVE = @as(c_int, 19929);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEOPERATIONALBYPARENT_CLASSIFICATION = @as(c_int, 19930);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEOPERATIONALBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 19931);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEOPERATIONALBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 19932);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEOPERATIONALFROMERROR = @as(c_int, 19933);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEOPERATIONALFROMERROR_ACTIVE = @as(c_int, 19934);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEOPERATIONALFROMERROR_CLASSIFICATION = @as(c_int, 19935);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEOPERATIONALFROMERROR_DIAGNOSTICSLEVEL = @as(c_int, 19936);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEOPERATIONALFROMERROR_TIMEFIRSTCHANGE = @as(c_int, 19937);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEPAUSEDBYPARENT = @as(c_int, 19938);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEPAUSEDBYPARENT_ACTIVE = @as(c_int, 19939);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEPAUSEDBYPARENT_CLASSIFICATION = @as(c_int, 19940);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEPAUSEDBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 19941);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEPAUSEDBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 19942);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEDISABLEDBYMETHOD = @as(c_int, 19943);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEDISABLEDBYMETHOD_ACTIVE = @as(c_int, 19944);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEDISABLEDBYMETHOD_CLASSIFICATION = @as(c_int, 19945);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEDISABLEDBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 19946);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_STATEDISABLEDBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 19947);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_LIVEVALUES = @as(c_int, 19948);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_RECEIVEDNETWORKMESSAGES = @as(c_int, 19949);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_RECEIVEDNETWORKMESSAGES_ACTIVE = @as(c_int, 19950);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_RECEIVEDNETWORKMESSAGES_CLASSIFICATION = @as(c_int, 19951);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_RECEIVEDNETWORKMESSAGES_DIAGNOSTICSLEVEL = @as(c_int, 19952);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_RECEIVEDNETWORKMESSAGES_TIMEFIRSTCHANGE = @as(c_int, 19953);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_RECEIVEDINVALIDNETWORKMESSAGES = @as(c_int, 19954);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_RECEIVEDINVALIDNETWORKMESSAGES_ACTIVE = @as(c_int, 19955);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_RECEIVEDINVALIDNETWORKMESSAGES_CLASSIFICATION = @as(c_int, 19956);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_RECEIVEDINVALIDNETWORKMESSAGES_DIAGNOSTICSLEVEL = @as(c_int, 19957);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_RECEIVEDINVALIDNETWORKMESSAGES_TIMEFIRSTCHANGE = @as(c_int, 19958);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_DECRYPTIONERRORS = @as(c_int, 19959);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_DECRYPTIONERRORS_ACTIVE = @as(c_int, 19960);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_DECRYPTIONERRORS_CLASSIFICATION = @as(c_int, 19961);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_DECRYPTIONERRORS_DIAGNOSTICSLEVEL = @as(c_int, 19962);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_COUNTERS_DECRYPTIONERRORS_TIMEFIRSTCHANGE = @as(c_int, 19963);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_LIVEVALUES_CONFIGUREDDATASETREADERS = @as(c_int, 19964);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_LIVEVALUES_CONFIGUREDDATASETREADERS_DIAGNOSTICSLEVEL = @as(c_int, 19965);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_LIVEVALUES_OPERATIONALDATASETREADERS = @as(c_int, 19966);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSREADERGROUPTYPE_LIVEVALUES_OPERATIONALDATASETREADERS_DIAGNOSTICSLEVEL = @as(c_int, 19967);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE = @as(c_int, 19968);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_DIAGNOSTICSLEVEL = @as(c_int, 19969);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_TOTALINFORMATION = @as(c_int, 19970);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_TOTALINFORMATION_ACTIVE = @as(c_int, 19971);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_TOTALINFORMATION_CLASSIFICATION = @as(c_int, 19972);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_TOTALINFORMATION_DIAGNOSTICSLEVEL = @as(c_int, 19973);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_TOTALINFORMATION_TIMEFIRSTCHANGE = @as(c_int, 19974);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_TOTALERROR = @as(c_int, 19975);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_TOTALERROR_ACTIVE = @as(c_int, 19976);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_TOTALERROR_CLASSIFICATION = @as(c_int, 19977);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_TOTALERROR_DIAGNOSTICSLEVEL = @as(c_int, 19978);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_TOTALERROR_TIMEFIRSTCHANGE = @as(c_int, 19979);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_RESET = @as(c_int, 19980);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_SUBERROR = @as(c_int, 19981);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS = @as(c_int, 19982);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEERROR = @as(c_int, 19983);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEERROR_ACTIVE = @as(c_int, 19984);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEERROR_CLASSIFICATION = @as(c_int, 19985);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEERROR_DIAGNOSTICSLEVEL = @as(c_int, 19986);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEERROR_TIMEFIRSTCHANGE = @as(c_int, 19987);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEOPERATIONALBYMETHOD = @as(c_int, 19988);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_ACTIVE = @as(c_int, 19989);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_CLASSIFICATION = @as(c_int, 19990);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 19991);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 19992);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEOPERATIONALBYPARENT = @as(c_int, 19993);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEOPERATIONALBYPARENT_ACTIVE = @as(c_int, 19994);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEOPERATIONALBYPARENT_CLASSIFICATION = @as(c_int, 19995);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEOPERATIONALBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 19996);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEOPERATIONALBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 19997);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEOPERATIONALFROMERROR = @as(c_int, 19998);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEOPERATIONALFROMERROR_ACTIVE = @as(c_int, 19999);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEOPERATIONALFROMERROR_CLASSIFICATION = @as(c_int, 20000);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEOPERATIONALFROMERROR_DIAGNOSTICSLEVEL = @as(c_int, 20001);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEOPERATIONALFROMERROR_TIMEFIRSTCHANGE = @as(c_int, 20002);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEPAUSEDBYPARENT = @as(c_int, 20003);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEPAUSEDBYPARENT_ACTIVE = @as(c_int, 20004);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEPAUSEDBYPARENT_CLASSIFICATION = @as(c_int, 20005);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEPAUSEDBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 20006);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEPAUSEDBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 20007);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEDISABLEDBYMETHOD = @as(c_int, 20008);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEDISABLEDBYMETHOD_ACTIVE = @as(c_int, 20009);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEDISABLEDBYMETHOD_CLASSIFICATION = @as(c_int, 20010);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEDISABLEDBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 20011);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_STATEDISABLEDBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 20012);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_LIVEVALUES = @as(c_int, 20013);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_FAILEDDATASETMESSAGES = @as(c_int, 20014);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_FAILEDDATASETMESSAGES_ACTIVE = @as(c_int, 20015);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_FAILEDDATASETMESSAGES_CLASSIFICATION = @as(c_int, 20016);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_FAILEDDATASETMESSAGES_DIAGNOSTICSLEVEL = @as(c_int, 20017);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_COUNTERS_FAILEDDATASETMESSAGES_TIMEFIRSTCHANGE = @as(c_int, 20018);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_LIVEVALUES_MESSAGESEQUENCENUMBER = @as(c_int, 20019);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_LIVEVALUES_MESSAGESEQUENCENUMBER_DIAGNOSTICSLEVEL = @as(c_int, 20020);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_LIVEVALUES_STATUSCODE = @as(c_int, 20021);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_LIVEVALUES_STATUSCODE_DIAGNOSTICSLEVEL = @as(c_int, 20022);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_LIVEVALUES_MAJORVERSION = @as(c_int, 20023);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_LIVEVALUES_MAJORVERSION_DIAGNOSTICSLEVEL = @as(c_int, 20024);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_LIVEVALUES_MINORVERSION = @as(c_int, 20025);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETWRITERTYPE_LIVEVALUES_MINORVERSION_DIAGNOSTICSLEVEL = @as(c_int, 20026);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE = @as(c_int, 20027);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_DIAGNOSTICSLEVEL = @as(c_int, 20028);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_TOTALINFORMATION = @as(c_int, 20029);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_TOTALINFORMATION_ACTIVE = @as(c_int, 20030);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_TOTALINFORMATION_CLASSIFICATION = @as(c_int, 20031);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_TOTALINFORMATION_DIAGNOSTICSLEVEL = @as(c_int, 20032);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_TOTALINFORMATION_TIMEFIRSTCHANGE = @as(c_int, 20033);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_TOTALERROR = @as(c_int, 20034);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_TOTALERROR_ACTIVE = @as(c_int, 20035);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_TOTALERROR_CLASSIFICATION = @as(c_int, 20036);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_TOTALERROR_DIAGNOSTICSLEVEL = @as(c_int, 20037);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_TOTALERROR_TIMEFIRSTCHANGE = @as(c_int, 20038);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_RESET = @as(c_int, 20039);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_SUBERROR = @as(c_int, 20040);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS = @as(c_int, 20041);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEERROR = @as(c_int, 20042);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEERROR_ACTIVE = @as(c_int, 20043);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEERROR_CLASSIFICATION = @as(c_int, 20044);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEERROR_DIAGNOSTICSLEVEL = @as(c_int, 20045);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEERROR_TIMEFIRSTCHANGE = @as(c_int, 20046);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEOPERATIONALBYMETHOD = @as(c_int, 20047);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_ACTIVE = @as(c_int, 20048);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_CLASSIFICATION = @as(c_int, 20049);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 20050);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEOPERATIONALBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 20051);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEOPERATIONALBYPARENT = @as(c_int, 20052);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEOPERATIONALBYPARENT_ACTIVE = @as(c_int, 20053);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEOPERATIONALBYPARENT_CLASSIFICATION = @as(c_int, 20054);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEOPERATIONALBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 20055);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEOPERATIONALBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 20056);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEOPERATIONALFROMERROR = @as(c_int, 20057);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEOPERATIONALFROMERROR_ACTIVE = @as(c_int, 20058);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEOPERATIONALFROMERROR_CLASSIFICATION = @as(c_int, 20059);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEOPERATIONALFROMERROR_DIAGNOSTICSLEVEL = @as(c_int, 20060);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEOPERATIONALFROMERROR_TIMEFIRSTCHANGE = @as(c_int, 20061);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEPAUSEDBYPARENT = @as(c_int, 20062);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEPAUSEDBYPARENT_ACTIVE = @as(c_int, 20063);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEPAUSEDBYPARENT_CLASSIFICATION = @as(c_int, 20064);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEPAUSEDBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 20065);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEPAUSEDBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 20066);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEDISABLEDBYMETHOD = @as(c_int, 20067);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEDISABLEDBYMETHOD_ACTIVE = @as(c_int, 20068);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEDISABLEDBYMETHOD_CLASSIFICATION = @as(c_int, 20069);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEDISABLEDBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 20070);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_STATEDISABLEDBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 20071);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_LIVEVALUES = @as(c_int, 20072);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_FAILEDDATASETMESSAGES = @as(c_int, 20073);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_FAILEDDATASETMESSAGES_ACTIVE = @as(c_int, 20074);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_FAILEDDATASETMESSAGES_CLASSIFICATION = @as(c_int, 20075);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_FAILEDDATASETMESSAGES_DIAGNOSTICSLEVEL = @as(c_int, 20076);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_FAILEDDATASETMESSAGES_TIMEFIRSTCHANGE = @as(c_int, 20077);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_DECRYPTIONERRORS = @as(c_int, 20078);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_DECRYPTIONERRORS_ACTIVE = @as(c_int, 20079);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_DECRYPTIONERRORS_CLASSIFICATION = @as(c_int, 20080);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_DECRYPTIONERRORS_DIAGNOSTICSLEVEL = @as(c_int, 20081);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_COUNTERS_DECRYPTIONERRORS_TIMEFIRSTCHANGE = @as(c_int, 20082);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_LIVEVALUES_MESSAGESEQUENCENUMBER = @as(c_int, 20083);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_LIVEVALUES_MESSAGESEQUENCENUMBER_DIAGNOSTICSLEVEL = @as(c_int, 20084);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_LIVEVALUES_STATUSCODE = @as(c_int, 20085);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_LIVEVALUES_STATUSCODE_DIAGNOSTICSLEVEL = @as(c_int, 20086);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_LIVEVALUES_MAJORVERSION = @as(c_int, 20087);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_LIVEVALUES_MAJORVERSION_DIAGNOSTICSLEVEL = @as(c_int, 20088);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_LIVEVALUES_MINORVERSION = @as(c_int, 20089);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_LIVEVALUES_MINORVERSION_DIAGNOSTICSLEVEL = @as(c_int, 20090);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_LIVEVALUES_SECURITYTOKENID = @as(c_int, 20091);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_LIVEVALUES_SECURITYTOKENID_DIAGNOSTICSLEVEL = @as(c_int, 20092);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_LIVEVALUES_TIMETONEXTTOKENID = @as(c_int, 20093);
pub const UA_NS0ID_PUBSUBDIAGNOSTICSDATASETREADERTYPE_LIVEVALUES_TIMETONEXTTOKENID_DIAGNOSTICSLEVEL = @as(c_int, 20094);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 20095);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 20096);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 20097);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 20098);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE = @as(c_int, 20099);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 20100);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SUPPRESSEDORSHELVED = @as(c_int, 20101);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_MAXTIMESHELVED = @as(c_int, 20102);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_AUDIBLEENABLED = @as(c_int, 20103);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_AUDIBLESOUND = @as(c_int, 20104);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_AUDIBLESOUND_LISTID = @as(c_int, 20105);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_AUDIBLESOUND_AGENCYID = @as(c_int, 20106);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_AUDIBLESOUND_VERSIONID = @as(c_int, 20107);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SILENCESTATE = @as(c_int, 20108);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SILENCESTATE_ID = @as(c_int, 20109);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SILENCESTATE_NAME = @as(c_int, 20110);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SILENCESTATE_NUMBER = @as(c_int, 20111);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20112);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SILENCESTATE_TRANSITIONTIME = @as(c_int, 20113);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20114);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SILENCESTATE_TRUESTATE = @as(c_int, 20115);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SILENCESTATE_FALSESTATE = @as(c_int, 20116);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_ONDELAY = @as(c_int, 20117);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_OFFDELAY = @as(c_int, 20118);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_FIRSTINGROUPFLAG = @as(c_int, 20119);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_FIRSTINGROUP = @as(c_int, 20120);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_LATCHEDSTATE = @as(c_int, 20121);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_LATCHEDSTATE_ID = @as(c_int, 20122);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_LATCHEDSTATE_NAME = @as(c_int, 20123);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_LATCHEDSTATE_NUMBER = @as(c_int, 20124);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20125);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 20126);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20127);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_LATCHEDSTATE_TRUESTATE = @as(c_int, 20128);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_LATCHEDSTATE_FALSESTATE = @as(c_int, 20129);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_REALARMTIME = @as(c_int, 20130);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_REALARMREPEATCOUNT = @as(c_int, 20131);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SILENCE = @as(c_int, 20132);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SUPPRESS = @as(c_int, 20133);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_UNSUPPRESS = @as(c_int, 20134);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_REMOVEFROMSERVICE = @as(c_int, 20135);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_PLACEINSERVICE = @as(c_int, 20136);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_RESET = @as(c_int, 20137);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_NORMALSTATE = @as(c_int, 20138);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_EXPIRATIONDATE = @as(c_int, 20139);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_EXPIRATIONLIMIT = @as(c_int, 20140);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_CERTIFICATETYPE = @as(c_int, 20141);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_CERTIFICATE = @as(c_int, 20142);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE = @as(c_int, 20143);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_EVENTID = @as(c_int, 20144);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_EVENTTYPE = @as(c_int, 20145);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SOURCENODE = @as(c_int, 20146);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SOURCENAME = @as(c_int, 20147);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_TIME = @as(c_int, 20148);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_RECEIVETIME = @as(c_int, 20149);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_LOCALTIME = @as(c_int, 20150);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_MESSAGE = @as(c_int, 20151);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SEVERITY = @as(c_int, 20152);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_CONDITIONCLASSID = @as(c_int, 20153);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_CONDITIONCLASSNAME = @as(c_int, 20154);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSID = @as(c_int, 20155);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSNAME = @as(c_int, 20156);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_CONDITIONNAME = @as(c_int, 20157);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_BRANCHID = @as(c_int, 20158);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_RETAIN = @as(c_int, 20159);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ENABLEDSTATE = @as(c_int, 20160);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ENABLEDSTATE_ID = @as(c_int, 20161);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NAME = @as(c_int, 20162);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NUMBER = @as(c_int, 20163);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20164);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 20165);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20166);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRUESTATE = @as(c_int, 20167);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ENABLEDSTATE_FALSESTATE = @as(c_int, 20168);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_QUALITY = @as(c_int, 20169);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_QUALITY_SOURCETIMESTAMP = @as(c_int, 20170);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_LASTSEVERITY = @as(c_int, 20171);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 20172);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_COMMENT = @as(c_int, 20173);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_COMMENT_SOURCETIMESTAMP = @as(c_int, 20174);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_CLIENTUSERID = @as(c_int, 20175);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_DISABLE = @as(c_int, 20176);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ENABLE = @as(c_int, 20177);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ADDCOMMENT = @as(c_int, 20178);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 20179);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ACKEDSTATE = @as(c_int, 20180);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ACKEDSTATE_ID = @as(c_int, 20181);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ACKEDSTATE_NAME = @as(c_int, 20182);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ACKEDSTATE_NUMBER = @as(c_int, 20183);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20184);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 20185);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20186);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRUESTATE = @as(c_int, 20187);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ACKEDSTATE_FALSESTATE = @as(c_int, 20188);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE = @as(c_int, 20189);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_ID = @as(c_int, 20190);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NAME = @as(c_int, 20191);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NUMBER = @as(c_int, 20192);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20193);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 20194);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20195);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 20196);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 20197);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ACKNOWLEDGE = @as(c_int, 20198);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 20199);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_CONFIRM = @as(c_int, 20200);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_CONFIRM_INPUTARGUMENTS = @as(c_int, 20201);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ACTIVESTATE = @as(c_int, 20202);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ACTIVESTATE_ID = @as(c_int, 20203);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ACTIVESTATE_NAME = @as(c_int, 20204);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ACTIVESTATE_NUMBER = @as(c_int, 20205);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20206);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 20207);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20208);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRUESTATE = @as(c_int, 20209);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ACTIVESTATE_FALSESTATE = @as(c_int, 20210);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_INPUTNODE = @as(c_int, 20211);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE = @as(c_int, 20212);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_ID = @as(c_int, 20213);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NAME = @as(c_int, 20214);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 20215);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20216);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 20217);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20218);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 20219);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 20220);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE = @as(c_int, 20221);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_ID = @as(c_int, 20222);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NAME = @as(c_int, 20223);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 20224);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20225);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 20226);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20227);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 20228);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 20229);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SHELVINGSTATE = @as(c_int, 20230);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 20231);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 20232);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 20233);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 20234);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20235);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 20236);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 20237);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 20238);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 20239);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 20240);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 20241);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 20242);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 20243);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 20244);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 20245);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 20246);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE = @as(c_int, 20247);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 20248);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SUPPRESSEDORSHELVED = @as(c_int, 20249);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_MAXTIMESHELVED = @as(c_int, 20250);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_AUDIBLEENABLED = @as(c_int, 20251);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_AUDIBLESOUND = @as(c_int, 20252);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_AUDIBLESOUND_LISTID = @as(c_int, 20253);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_AUDIBLESOUND_AGENCYID = @as(c_int, 20254);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_AUDIBLESOUND_VERSIONID = @as(c_int, 20255);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SILENCESTATE = @as(c_int, 20256);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SILENCESTATE_ID = @as(c_int, 20257);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SILENCESTATE_NAME = @as(c_int, 20258);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SILENCESTATE_NUMBER = @as(c_int, 20259);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20260);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 20261);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20262);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SILENCESTATE_TRUESTATE = @as(c_int, 20263);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SILENCESTATE_FALSESTATE = @as(c_int, 20264);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_ONDELAY = @as(c_int, 20265);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_OFFDELAY = @as(c_int, 20266);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_FIRSTINGROUPFLAG = @as(c_int, 20267);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_FIRSTINGROUP = @as(c_int, 20268);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_LATCHEDSTATE = @as(c_int, 20269);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_LATCHEDSTATE_ID = @as(c_int, 20270);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NAME = @as(c_int, 20271);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NUMBER = @as(c_int, 20272);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20273);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 20274);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20275);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRUESTATE = @as(c_int, 20276);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_LATCHEDSTATE_FALSESTATE = @as(c_int, 20277);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_REALARMTIME = @as(c_int, 20278);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_REALARMREPEATCOUNT = @as(c_int, 20279);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SILENCE = @as(c_int, 20280);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SUPPRESS = @as(c_int, 20281);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_UNSUPPRESS = @as(c_int, 20282);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE = @as(c_int, 20283);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_PLACEINSERVICE = @as(c_int, 20284);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_RESET = @as(c_int, 20285);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_NORMALSTATE = @as(c_int, 20286);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_TRUSTLISTID = @as(c_int, 20287);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_LASTUPDATETIME = @as(c_int, 20288);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_UPDATEFREQUENCY = @as(c_int, 20289);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_UPDATEFREQUENCY = @as(c_int, 20290);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED = @as(c_int, 20291);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_EVENTID = @as(c_int, 20292);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_EVENTTYPE = @as(c_int, 20293);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SOURCENODE = @as(c_int, 20294);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SOURCENAME = @as(c_int, 20295);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_TIME = @as(c_int, 20296);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RECEIVETIME = @as(c_int, 20297);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LOCALTIME = @as(c_int, 20298);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_MESSAGE = @as(c_int, 20299);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SEVERITY = @as(c_int, 20300);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSID = @as(c_int, 20301);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSNAME = @as(c_int, 20302);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSID = @as(c_int, 20303);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSNAME = @as(c_int, 20304);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONNAME = @as(c_int, 20305);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_BRANCHID = @as(c_int, 20306);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RETAIN = @as(c_int, 20307);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE = @as(c_int, 20308);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_ID = @as(c_int, 20309);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NAME = @as(c_int, 20310);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NUMBER = @as(c_int, 20311);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20312);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 20313);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20314);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRUESTATE = @as(c_int, 20315);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_FALSESTATE = @as(c_int, 20316);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_QUALITY = @as(c_int, 20317);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_QUALITY_SOURCETIMESTAMP = @as(c_int, 20318);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LASTSEVERITY = @as(c_int, 20319);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 20320);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_COMMENT = @as(c_int, 20321);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_COMMENT_SOURCETIMESTAMP = @as(c_int, 20322);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CLIENTUSERID = @as(c_int, 20323);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_DISABLE = @as(c_int, 20324);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLE = @as(c_int, 20325);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ADDCOMMENT = @as(c_int, 20326);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 20327);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE = @as(c_int, 20328);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_ID = @as(c_int, 20329);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NAME = @as(c_int, 20330);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NUMBER = @as(c_int, 20331);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20332);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 20333);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20334);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRUESTATE = @as(c_int, 20335);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_FALSESTATE = @as(c_int, 20336);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE = @as(c_int, 20337);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_ID = @as(c_int, 20338);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NAME = @as(c_int, 20339);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NUMBER = @as(c_int, 20340);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20341);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 20342);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20343);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 20344);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 20345);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE = @as(c_int, 20346);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 20347);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRM = @as(c_int, 20348);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRM_INPUTARGUMENTS = @as(c_int, 20349);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE = @as(c_int, 20350);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_ID = @as(c_int, 20351);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NAME = @as(c_int, 20352);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NUMBER = @as(c_int, 20353);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20354);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 20355);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20356);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRUESTATE = @as(c_int, 20357);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_FALSESTATE = @as(c_int, 20358);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_INPUTNODE = @as(c_int, 20359);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE = @as(c_int, 20360);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_ID = @as(c_int, 20361);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NAME = @as(c_int, 20362);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NUMBER = @as(c_int, 20363);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20364);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 20365);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20366);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 20367);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 20368);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE = @as(c_int, 20369);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_ID = @as(c_int, 20370);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NAME = @as(c_int, 20371);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NUMBER = @as(c_int, 20372);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20373);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 20374);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20375);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 20376);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 20377);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE = @as(c_int, 20378);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 20379);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 20380);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 20381);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 20382);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20383);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 20384);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 20385);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 20386);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 20387);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 20388);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 20389);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 20390);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 20391);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 20392);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 20393);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 20394);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE = @as(c_int, 20395);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 20396);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDORSHELVED = @as(c_int, 20397);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_MAXTIMESHELVED = @as(c_int, 20398);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLEENABLED = @as(c_int, 20399);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND = @as(c_int, 20400);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_LISTID = @as(c_int, 20401);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_AGENCYID = @as(c_int, 20402);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_VERSIONID = @as(c_int, 20403);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE = @as(c_int, 20404);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_ID = @as(c_int, 20405);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NAME = @as(c_int, 20406);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NUMBER = @as(c_int, 20407);
pub const UA_NS0ID_DATASETORDERINGTYPE = @as(c_int, 20408);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_SECURITYTOKENID = @as(c_int, 20409);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20410);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRANSITIONTIME = @as(c_int, 20411);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20412);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRUESTATE = @as(c_int, 20413);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_FALSESTATE = @as(c_int, 20414);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ONDELAY = @as(c_int, 20415);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OFFDELAY = @as(c_int, 20416);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_FIRSTINGROUPFLAG = @as(c_int, 20417);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_FIRSTINGROUP = @as(c_int, 20418);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE = @as(c_int, 20419);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_ID = @as(c_int, 20420);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NAME = @as(c_int, 20421);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NUMBER = @as(c_int, 20422);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20423);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 20424);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20425);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRUESTATE = @as(c_int, 20426);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_FALSESTATE = @as(c_int, 20427);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REALARMTIME = @as(c_int, 20428);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REALARMREPEATCOUNT = @as(c_int, 20429);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCE = @as(c_int, 20430);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESS = @as(c_int, 20431);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_UNSUPPRESS = @as(c_int, 20432);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE = @as(c_int, 20433);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE = @as(c_int, 20434);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RESET = @as(c_int, 20435);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_NORMALSTATE = @as(c_int, 20436);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_EXPIRATIONDATE = @as(c_int, 20437);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_EXPIRATIONLIMIT = @as(c_int, 20438);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CERTIFICATETYPE = @as(c_int, 20439);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CERTIFICATE = @as(c_int, 20440);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE = @as(c_int, 20441);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_EVENTID = @as(c_int, 20442);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_EVENTTYPE = @as(c_int, 20443);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SOURCENODE = @as(c_int, 20444);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SOURCENAME = @as(c_int, 20445);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_TIME = @as(c_int, 20446);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RECEIVETIME = @as(c_int, 20447);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LOCALTIME = @as(c_int, 20448);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_MESSAGE = @as(c_int, 20449);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SEVERITY = @as(c_int, 20450);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSID = @as(c_int, 20451);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSNAME = @as(c_int, 20452);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSID = @as(c_int, 20453);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSNAME = @as(c_int, 20454);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONNAME = @as(c_int, 20455);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_BRANCHID = @as(c_int, 20456);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RETAIN = @as(c_int, 20457);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE = @as(c_int, 20458);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_ID = @as(c_int, 20459);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NAME = @as(c_int, 20460);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NUMBER = @as(c_int, 20461);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20462);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 20463);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20464);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRUESTATE = @as(c_int, 20465);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_FALSESTATE = @as(c_int, 20466);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_QUALITY = @as(c_int, 20467);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_QUALITY_SOURCETIMESTAMP = @as(c_int, 20468);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY = @as(c_int, 20469);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 20470);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_COMMENT = @as(c_int, 20471);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_COMMENT_SOURCETIMESTAMP = @as(c_int, 20472);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CLIENTUSERID = @as(c_int, 20473);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_DISABLE = @as(c_int, 20474);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLE = @as(c_int, 20475);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT = @as(c_int, 20476);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 20477);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE = @as(c_int, 20478);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_ID = @as(c_int, 20479);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NAME = @as(c_int, 20480);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NUMBER = @as(c_int, 20481);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20482);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 20483);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20484);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRUESTATE = @as(c_int, 20485);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_FALSESTATE = @as(c_int, 20486);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE = @as(c_int, 20487);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_ID = @as(c_int, 20488);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NAME = @as(c_int, 20489);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NUMBER = @as(c_int, 20490);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20491);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 20492);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20493);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 20494);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 20495);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE = @as(c_int, 20496);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 20497);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRM = @as(c_int, 20498);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRM_INPUTARGUMENTS = @as(c_int, 20499);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE = @as(c_int, 20500);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_ID = @as(c_int, 20501);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NAME = @as(c_int, 20502);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NUMBER = @as(c_int, 20503);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20504);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 20505);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20506);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRUESTATE = @as(c_int, 20507);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_FALSESTATE = @as(c_int, 20508);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_INPUTNODE = @as(c_int, 20509);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE = @as(c_int, 20510);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_ID = @as(c_int, 20511);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NAME = @as(c_int, 20512);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 20513);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20514);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 20515);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20516);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 20517);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 20518);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE = @as(c_int, 20519);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_ID = @as(c_int, 20520);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NAME = @as(c_int, 20521);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 20522);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20523);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 20524);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20525);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 20526);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 20527);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE = @as(c_int, 20528);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 20529);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 20530);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 20531);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 20532);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20533);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 20534);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 20535);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 20536);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 20537);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 20538);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 20539);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 20540);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 20541);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 20542);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 20543);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 20544);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE = @as(c_int, 20545);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 20546);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDORSHELVED = @as(c_int, 20547);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_MAXTIMESHELVED = @as(c_int, 20548);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLEENABLED = @as(c_int, 20549);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND = @as(c_int, 20550);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_LISTID = @as(c_int, 20551);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_AGENCYID = @as(c_int, 20552);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_VERSIONID = @as(c_int, 20553);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE = @as(c_int, 20554);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_ID = @as(c_int, 20555);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NAME = @as(c_int, 20556);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NUMBER = @as(c_int, 20557);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20558);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 20559);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20560);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRUESTATE = @as(c_int, 20561);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_FALSESTATE = @as(c_int, 20562);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ONDELAY = @as(c_int, 20563);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OFFDELAY = @as(c_int, 20564);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUPFLAG = @as(c_int, 20565);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUP = @as(c_int, 20566);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE = @as(c_int, 20567);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_ID = @as(c_int, 20568);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NAME = @as(c_int, 20569);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NUMBER = @as(c_int, 20570);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20571);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 20572);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20573);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRUESTATE = @as(c_int, 20574);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_FALSESTATE = @as(c_int, 20575);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REALARMTIME = @as(c_int, 20576);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REALARMREPEATCOUNT = @as(c_int, 20577);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCE = @as(c_int, 20578);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESS = @as(c_int, 20579);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS = @as(c_int, 20580);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE = @as(c_int, 20581);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE = @as(c_int, 20582);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RESET = @as(c_int, 20583);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_NORMALSTATE = @as(c_int, 20584);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_TRUSTLISTID = @as(c_int, 20585);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LASTUPDATETIME = @as(c_int, 20586);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_UPDATEFREQUENCY = @as(c_int, 20587);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_UPDATEFREQUENCY = @as(c_int, 20588);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED = @as(c_int, 20589);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_EVENTID = @as(c_int, 20590);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_EVENTTYPE = @as(c_int, 20591);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SOURCENODE = @as(c_int, 20592);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SOURCENAME = @as(c_int, 20593);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_TIME = @as(c_int, 20594);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RECEIVETIME = @as(c_int, 20595);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LOCALTIME = @as(c_int, 20596);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_MESSAGE = @as(c_int, 20597);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SEVERITY = @as(c_int, 20598);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSID = @as(c_int, 20599);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSNAME = @as(c_int, 20600);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSID = @as(c_int, 20601);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSNAME = @as(c_int, 20602);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONNAME = @as(c_int, 20603);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_BRANCHID = @as(c_int, 20604);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RETAIN = @as(c_int, 20605);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE = @as(c_int, 20606);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_ID = @as(c_int, 20607);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NAME = @as(c_int, 20608);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NUMBER = @as(c_int, 20609);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20610);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 20611);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20612);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRUESTATE = @as(c_int, 20613);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_FALSESTATE = @as(c_int, 20614);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_QUALITY = @as(c_int, 20615);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_QUALITY_SOURCETIMESTAMP = @as(c_int, 20616);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LASTSEVERITY = @as(c_int, 20617);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 20618);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_COMMENT = @as(c_int, 20619);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_COMMENT_SOURCETIMESTAMP = @as(c_int, 20620);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CLIENTUSERID = @as(c_int, 20621);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_DISABLE = @as(c_int, 20622);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLE = @as(c_int, 20623);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ADDCOMMENT = @as(c_int, 20624);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 20625);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE = @as(c_int, 20626);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_ID = @as(c_int, 20627);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NAME = @as(c_int, 20628);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NUMBER = @as(c_int, 20629);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20630);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 20631);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20632);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRUESTATE = @as(c_int, 20633);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_FALSESTATE = @as(c_int, 20634);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE = @as(c_int, 20635);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_ID = @as(c_int, 20636);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NAME = @as(c_int, 20637);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NUMBER = @as(c_int, 20638);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20639);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 20640);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20641);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 20642);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 20643);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE = @as(c_int, 20644);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 20645);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRM = @as(c_int, 20646);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRM_INPUTARGUMENTS = @as(c_int, 20647);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE = @as(c_int, 20648);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_ID = @as(c_int, 20649);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NAME = @as(c_int, 20650);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NUMBER = @as(c_int, 20651);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20652);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 20653);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20654);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRUESTATE = @as(c_int, 20655);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_FALSESTATE = @as(c_int, 20656);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_INPUTNODE = @as(c_int, 20657);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE = @as(c_int, 20658);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_ID = @as(c_int, 20659);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NAME = @as(c_int, 20660);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NUMBER = @as(c_int, 20661);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20662);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 20663);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20664);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 20665);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 20666);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE = @as(c_int, 20667);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_ID = @as(c_int, 20668);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NAME = @as(c_int, 20669);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NUMBER = @as(c_int, 20670);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20671);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 20672);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20673);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 20674);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 20675);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE = @as(c_int, 20676);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 20677);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 20678);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 20679);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 20680);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20681);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 20682);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 20683);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 20684);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 20685);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 20686);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 20687);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 20688);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 20689);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 20690);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 20691);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 20692);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE = @as(c_int, 20693);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 20694);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDORSHELVED = @as(c_int, 20695);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_MAXTIMESHELVED = @as(c_int, 20696);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLEENABLED = @as(c_int, 20697);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND = @as(c_int, 20698);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_LISTID = @as(c_int, 20699);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_AGENCYID = @as(c_int, 20700);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_VERSIONID = @as(c_int, 20701);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE = @as(c_int, 20702);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_ID = @as(c_int, 20703);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NAME = @as(c_int, 20704);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NUMBER = @as(c_int, 20705);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20706);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRANSITIONTIME = @as(c_int, 20707);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20708);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRUESTATE = @as(c_int, 20709);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_FALSESTATE = @as(c_int, 20710);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ONDELAY = @as(c_int, 20711);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OFFDELAY = @as(c_int, 20712);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_FIRSTINGROUPFLAG = @as(c_int, 20713);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_FIRSTINGROUP = @as(c_int, 20714);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE = @as(c_int, 20715);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_ID = @as(c_int, 20716);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NAME = @as(c_int, 20717);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NUMBER = @as(c_int, 20718);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20719);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 20720);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20721);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRUESTATE = @as(c_int, 20722);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_FALSESTATE = @as(c_int, 20723);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REALARMTIME = @as(c_int, 20724);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REALARMREPEATCOUNT = @as(c_int, 20725);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCE = @as(c_int, 20726);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESS = @as(c_int, 20727);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_UNSUPPRESS = @as(c_int, 20728);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE = @as(c_int, 20729);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE = @as(c_int, 20730);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RESET = @as(c_int, 20731);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_NORMALSTATE = @as(c_int, 20732);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_EXPIRATIONDATE = @as(c_int, 20733);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_EXPIRATIONLIMIT = @as(c_int, 20734);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CERTIFICATETYPE = @as(c_int, 20735);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CERTIFICATE = @as(c_int, 20736);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE = @as(c_int, 20737);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_EVENTID = @as(c_int, 20738);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_EVENTTYPE = @as(c_int, 20739);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SOURCENODE = @as(c_int, 20740);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SOURCENAME = @as(c_int, 20741);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_TIME = @as(c_int, 20742);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RECEIVETIME = @as(c_int, 20743);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LOCALTIME = @as(c_int, 20744);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_MESSAGE = @as(c_int, 20745);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SEVERITY = @as(c_int, 20746);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSID = @as(c_int, 20747);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSNAME = @as(c_int, 20748);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSID = @as(c_int, 20749);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSNAME = @as(c_int, 20750);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONNAME = @as(c_int, 20751);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_BRANCHID = @as(c_int, 20752);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RETAIN = @as(c_int, 20753);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE = @as(c_int, 20754);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_ID = @as(c_int, 20755);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NAME = @as(c_int, 20756);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NUMBER = @as(c_int, 20757);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20758);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 20759);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20760);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRUESTATE = @as(c_int, 20761);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_FALSESTATE = @as(c_int, 20762);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_QUALITY = @as(c_int, 20763);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_QUALITY_SOURCETIMESTAMP = @as(c_int, 20764);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY = @as(c_int, 20765);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 20766);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_COMMENT = @as(c_int, 20767);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_COMMENT_SOURCETIMESTAMP = @as(c_int, 20768);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CLIENTUSERID = @as(c_int, 20769);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_DISABLE = @as(c_int, 20770);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLE = @as(c_int, 20771);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT = @as(c_int, 20772);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 20773);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE = @as(c_int, 20774);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_ID = @as(c_int, 20775);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NAME = @as(c_int, 20776);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NUMBER = @as(c_int, 20777);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20778);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 20779);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20780);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRUESTATE = @as(c_int, 20781);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_FALSESTATE = @as(c_int, 20782);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE = @as(c_int, 20783);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_ID = @as(c_int, 20784);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NAME = @as(c_int, 20785);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NUMBER = @as(c_int, 20786);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20787);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 20788);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20789);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 20790);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 20791);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE = @as(c_int, 20792);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 20793);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRM = @as(c_int, 20794);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRM_INPUTARGUMENTS = @as(c_int, 20795);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE = @as(c_int, 20796);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_ID = @as(c_int, 20797);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NAME = @as(c_int, 20798);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NUMBER = @as(c_int, 20799);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20800);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 20801);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20802);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRUESTATE = @as(c_int, 20803);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_FALSESTATE = @as(c_int, 20804);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_INPUTNODE = @as(c_int, 20805);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE = @as(c_int, 20806);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_ID = @as(c_int, 20807);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NAME = @as(c_int, 20808);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 20809);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20810);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 20811);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20812);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 20813);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 20814);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE = @as(c_int, 20815);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_ID = @as(c_int, 20816);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NAME = @as(c_int, 20817);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 20818);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20819);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 20820);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20821);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 20822);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 20823);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE = @as(c_int, 20824);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 20825);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 20826);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 20827);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 20828);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20829);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 20830);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 20831);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 20832);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 20833);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 20834);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 20835);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 20836);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 20837);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 20838);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 20839);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 20840);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE = @as(c_int, 20841);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 20842);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDORSHELVED = @as(c_int, 20843);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_MAXTIMESHELVED = @as(c_int, 20844);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLEENABLED = @as(c_int, 20845);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND = @as(c_int, 20846);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_LISTID = @as(c_int, 20847);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_AGENCYID = @as(c_int, 20848);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_VERSIONID = @as(c_int, 20849);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE = @as(c_int, 20850);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_ID = @as(c_int, 20851);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NAME = @as(c_int, 20852);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NUMBER = @as(c_int, 20853);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20854);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 20855);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20856);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRUESTATE = @as(c_int, 20857);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_FALSESTATE = @as(c_int, 20858);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ONDELAY = @as(c_int, 20859);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OFFDELAY = @as(c_int, 20860);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUPFLAG = @as(c_int, 20861);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUP = @as(c_int, 20862);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE = @as(c_int, 20863);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_ID = @as(c_int, 20864);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NAME = @as(c_int, 20865);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NUMBER = @as(c_int, 20866);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20867);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 20868);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20869);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRUESTATE = @as(c_int, 20870);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_FALSESTATE = @as(c_int, 20871);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REALARMTIME = @as(c_int, 20872);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REALARMREPEATCOUNT = @as(c_int, 20873);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCE = @as(c_int, 20874);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESS = @as(c_int, 20875);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS = @as(c_int, 20876);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE = @as(c_int, 20877);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE = @as(c_int, 20878);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RESET = @as(c_int, 20879);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_NORMALSTATE = @as(c_int, 20880);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_TRUSTLISTID = @as(c_int, 20881);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LASTUPDATETIME = @as(c_int, 20882);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_UPDATEFREQUENCY = @as(c_int, 20883);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_UPDATEFREQUENCY = @as(c_int, 20884);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED = @as(c_int, 20885);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_EVENTID = @as(c_int, 20886);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_EVENTTYPE = @as(c_int, 20887);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SOURCENODE = @as(c_int, 20888);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SOURCENAME = @as(c_int, 20889);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_TIME = @as(c_int, 20890);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RECEIVETIME = @as(c_int, 20891);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LOCALTIME = @as(c_int, 20892);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_MESSAGE = @as(c_int, 20893);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SEVERITY = @as(c_int, 20894);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSID = @as(c_int, 20895);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSNAME = @as(c_int, 20896);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSID = @as(c_int, 20897);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSNAME = @as(c_int, 20898);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONNAME = @as(c_int, 20899);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_BRANCHID = @as(c_int, 20900);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RETAIN = @as(c_int, 20901);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE = @as(c_int, 20902);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_ID = @as(c_int, 20903);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NAME = @as(c_int, 20904);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NUMBER = @as(c_int, 20905);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20906);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 20907);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20908);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRUESTATE = @as(c_int, 20909);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_FALSESTATE = @as(c_int, 20910);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_QUALITY = @as(c_int, 20911);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_QUALITY_SOURCETIMESTAMP = @as(c_int, 20912);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LASTSEVERITY = @as(c_int, 20913);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 20914);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_COMMENT = @as(c_int, 20915);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_COMMENT_SOURCETIMESTAMP = @as(c_int, 20916);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CLIENTUSERID = @as(c_int, 20917);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_DISABLE = @as(c_int, 20918);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLE = @as(c_int, 20919);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ADDCOMMENT = @as(c_int, 20920);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 20921);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE = @as(c_int, 20922);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_ID = @as(c_int, 20923);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NAME = @as(c_int, 20924);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NUMBER = @as(c_int, 20925);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20926);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 20927);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20928);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRUESTATE = @as(c_int, 20929);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_FALSESTATE = @as(c_int, 20930);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE = @as(c_int, 20931);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_ID = @as(c_int, 20932);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NAME = @as(c_int, 20933);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NUMBER = @as(c_int, 20934);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20935);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 20936);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20937);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 20938);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 20939);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE = @as(c_int, 20940);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 20941);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRM = @as(c_int, 20942);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRM_INPUTARGUMENTS = @as(c_int, 20943);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE = @as(c_int, 20944);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_ID = @as(c_int, 20945);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NAME = @as(c_int, 20946);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NUMBER = @as(c_int, 20947);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20948);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 20949);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20950);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRUESTATE = @as(c_int, 20951);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_FALSESTATE = @as(c_int, 20952);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_INPUTNODE = @as(c_int, 20953);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE = @as(c_int, 20954);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_ID = @as(c_int, 20955);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NAME = @as(c_int, 20956);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NUMBER = @as(c_int, 20957);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20958);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 20959);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20960);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 20961);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 20962);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE = @as(c_int, 20963);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_ID = @as(c_int, 20964);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NAME = @as(c_int, 20965);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NUMBER = @as(c_int, 20966);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20967);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 20968);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 20969);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 20970);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 20971);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE = @as(c_int, 20972);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 20973);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 20974);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 20975);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 20976);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 20977);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 20978);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 20979);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 20980);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 20981);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 20982);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 20983);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 20984);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 20985);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 20986);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 20987);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 20988);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE = @as(c_int, 20989);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 20990);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDORSHELVED = @as(c_int, 20991);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_MAXTIMESHELVED = @as(c_int, 20992);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLEENABLED = @as(c_int, 20993);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND = @as(c_int, 20994);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_LISTID = @as(c_int, 20995);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_AGENCYID = @as(c_int, 20996);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_VERSIONID = @as(c_int, 20997);
pub const UA_NS0ID_VERSIONTIME = @as(c_int, 20998);
pub const UA_NS0ID_SESSIONLESSINVOKERESPONSETYPE = @as(c_int, 20999);
pub const UA_NS0ID_SESSIONLESSINVOKERESPONSETYPE_ENCODING_DEFAULTXML = @as(c_int, 21000);
pub const UA_NS0ID_SESSIONLESSINVOKERESPONSETYPE_ENCODING_DEFAULTBINARY = @as(c_int, 21001);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_FIELDTARGETDATATYPE = @as(c_int, 21002);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_SECURITYTOKENID_DIAGNOSTICSLEVEL = @as(c_int, 21003);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_TIMETONEXTTOKENID = @as(c_int, 21004);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_TIMETONEXTTOKENID_DIAGNOSTICSLEVEL = @as(c_int, 21005);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_SUBSCRIBEDDATASET = @as(c_int, 21006);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE = @as(c_int, 21007);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_ID = @as(c_int, 21008);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_CREATETARGETVARIABLES = @as(c_int, 21009);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_CREATETARGETVARIABLES_INPUTARGUMENTS = @as(c_int, 21010);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_CREATETARGETVARIABLES_OUTPUTARGUMENTS = @as(c_int, 21011);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_CREATEDATASETMIRROR = @as(c_int, 21012);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_CREATEDATASETMIRROR_INPUTARGUMENTS = @as(c_int, 21013);
pub const UA_NS0ID_READERGROUPTYPE_DATASETREADERNAME_PLACEHOLDER_CREATEDATASETMIRROR_OUTPUTARGUMENTS = @as(c_int, 21014);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS = @as(c_int, 21015);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_DIAGNOSTICSLEVEL = @as(c_int, 21016);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_TOTALINFORMATION = @as(c_int, 21017);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_TOTALINFORMATION_ACTIVE = @as(c_int, 21018);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_TOTALINFORMATION_CLASSIFICATION = @as(c_int, 21019);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_TOTALINFORMATION_DIAGNOSTICSLEVEL = @as(c_int, 21020);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_TOTALINFORMATION_TIMEFIRSTCHANGE = @as(c_int, 21021);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_TOTALERROR = @as(c_int, 21022);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_TOTALERROR_ACTIVE = @as(c_int, 21023);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_TOTALERROR_CLASSIFICATION = @as(c_int, 21024);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_TOTALERROR_DIAGNOSTICSLEVEL = @as(c_int, 21025);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_TOTALERROR_TIMEFIRSTCHANGE = @as(c_int, 21026);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_RESET = @as(c_int, 21027);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_SUBERROR = @as(c_int, 21028);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS = @as(c_int, 21029);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEERROR = @as(c_int, 21030);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEERROR_ACTIVE = @as(c_int, 21031);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEERROR_CLASSIFICATION = @as(c_int, 21032);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEERROR_DIAGNOSTICSLEVEL = @as(c_int, 21033);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEERROR_TIMEFIRSTCHANGE = @as(c_int, 21034);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD = @as(c_int, 21035);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_ACTIVE = @as(c_int, 21036);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_CLASSIFICATION = @as(c_int, 21037);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 21038);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 21039);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT = @as(c_int, 21040);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_ACTIVE = @as(c_int, 21041);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_CLASSIFICATION = @as(c_int, 21042);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 21043);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 21044);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR = @as(c_int, 21045);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_ACTIVE = @as(c_int, 21046);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_CLASSIFICATION = @as(c_int, 21047);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_DIAGNOSTICSLEVEL = @as(c_int, 21048);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_TIMEFIRSTCHANGE = @as(c_int, 21049);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT = @as(c_int, 21050);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_ACTIVE = @as(c_int, 21051);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_CLASSIFICATION = @as(c_int, 21052);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 21053);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 21054);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD = @as(c_int, 21055);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_ACTIVE = @as(c_int, 21056);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_CLASSIFICATION = @as(c_int, 21057);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 21058);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 21059);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_LIVEVALUES = @as(c_int, 21060);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_RECEIVEDNETWORKMESSAGES = @as(c_int, 21061);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_RECEIVEDNETWORKMESSAGES_ACTIVE = @as(c_int, 21062);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_RECEIVEDNETWORKMESSAGES_CLASSIFICATION = @as(c_int, 21063);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_RECEIVEDNETWORKMESSAGES_DIAGNOSTICSLEVEL = @as(c_int, 21064);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_RECEIVEDNETWORKMESSAGES_TIMEFIRSTCHANGE = @as(c_int, 21065);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_RECEIVEDINVALIDNETWORKMESSAGES = @as(c_int, 21066);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_RECEIVEDINVALIDNETWORKMESSAGES_ACTIVE = @as(c_int, 21067);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_RECEIVEDINVALIDNETWORKMESSAGES_CLASSIFICATION = @as(c_int, 21068);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_RECEIVEDINVALIDNETWORKMESSAGES_DIAGNOSTICSLEVEL = @as(c_int, 21069);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_RECEIVEDINVALIDNETWORKMESSAGES_TIMEFIRSTCHANGE = @as(c_int, 21070);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_DECRYPTIONERRORS = @as(c_int, 21071);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_DECRYPTIONERRORS_ACTIVE = @as(c_int, 21072);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_DECRYPTIONERRORS_CLASSIFICATION = @as(c_int, 21073);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_DECRYPTIONERRORS_DIAGNOSTICSLEVEL = @as(c_int, 21074);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_COUNTERS_DECRYPTIONERRORS_TIMEFIRSTCHANGE = @as(c_int, 21075);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_LIVEVALUES_CONFIGUREDDATASETREADERS = @as(c_int, 21076);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_LIVEVALUES_CONFIGUREDDATASETREADERS_DIAGNOSTICSLEVEL = @as(c_int, 21077);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_LIVEVALUES_OPERATIONALDATASETREADERS = @as(c_int, 21078);
pub const UA_NS0ID_READERGROUPTYPE_DIAGNOSTICS_LIVEVALUES_OPERATIONALDATASETREADERS_DIAGNOSTICSLEVEL = @as(c_int, 21079);
pub const UA_NS0ID_READERGROUPTYPE_TRANSPORTSETTINGS = @as(c_int, 21080);
pub const UA_NS0ID_READERGROUPTYPE_MESSAGESETTINGS = @as(c_int, 21081);
pub const UA_NS0ID_READERGROUPTYPE_ADDDATASETREADER = @as(c_int, 21082);
pub const UA_NS0ID_READERGROUPTYPE_ADDDATASETREADER_INPUTARGUMENTS = @as(c_int, 21083);
pub const UA_NS0ID_READERGROUPTYPE_ADDDATASETREADER_OUTPUTARGUMENTS = @as(c_int, 21084);
pub const UA_NS0ID_READERGROUPTYPE_REMOVEDATASETREADER = @as(c_int, 21085);
pub const UA_NS0ID_READERGROUPTYPE_REMOVEDATASETREADER_INPUTARGUMENTS = @as(c_int, 21086);
pub const UA_NS0ID_PUBSUBGROUPTYPEADDREADERMETHODTYPE = @as(c_int, 21087);
pub const UA_NS0ID_PUBSUBGROUPTYPEADDREADERMETHODTYPE_INPUTARGUMENTS = @as(c_int, 21088);
pub const UA_NS0ID_PUBSUBGROUPTYPEADDREADERMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 21089);
pub const UA_NS0ID_READERGROUPTRANSPORTTYPE = @as(c_int, 21090);
pub const UA_NS0ID_READERGROUPMESSAGETYPE = @as(c_int, 21091);
pub const UA_NS0ID_DATASETWRITERTYPE_DATASETWRITERID = @as(c_int, 21092);
pub const UA_NS0ID_DATASETWRITERTYPE_DATASETFIELDCONTENTMASK = @as(c_int, 21093);
pub const UA_NS0ID_DATASETWRITERTYPE_KEYFRAMECOUNT = @as(c_int, 21094);
pub const UA_NS0ID_DATASETWRITERTYPE_MESSAGESETTINGS = @as(c_int, 21095);
pub const UA_NS0ID_DATASETWRITERMESSAGETYPE = @as(c_int, 21096);
pub const UA_NS0ID_DATASETREADERTYPE_PUBLISHERID = @as(c_int, 21097);
pub const UA_NS0ID_DATASETREADERTYPE_WRITERGROUPID = @as(c_int, 21098);
pub const UA_NS0ID_DATASETREADERTYPE_DATASETWRITERID = @as(c_int, 21099);
pub const UA_NS0ID_DATASETREADERTYPE_DATASETMETADATA = @as(c_int, 21100);
pub const UA_NS0ID_DATASETREADERTYPE_DATASETFIELDCONTENTMASK = @as(c_int, 21101);
pub const UA_NS0ID_DATASETREADERTYPE_MESSAGERECEIVETIMEOUT = @as(c_int, 21102);
pub const UA_NS0ID_DATASETREADERTYPE_MESSAGESETTINGS = @as(c_int, 21103);
pub const UA_NS0ID_DATASETREADERMESSAGETYPE = @as(c_int, 21104);
pub const UA_NS0ID_UADPWRITERGROUPMESSAGETYPE = @as(c_int, 21105);
pub const UA_NS0ID_UADPWRITERGROUPMESSAGETYPE_GROUPVERSION = @as(c_int, 21106);
pub const UA_NS0ID_UADPWRITERGROUPMESSAGETYPE_DATASETORDERING = @as(c_int, 21107);
pub const UA_NS0ID_UADPWRITERGROUPMESSAGETYPE_NETWORKMESSAGECONTENTMASK = @as(c_int, 21108);
pub const UA_NS0ID_UADPWRITERGROUPMESSAGETYPE_SAMPLINGOFFSET = @as(c_int, 21109);
pub const UA_NS0ID_UADPWRITERGROUPMESSAGETYPE_PUBLISHINGOFFSET = @as(c_int, 21110);
pub const UA_NS0ID_UADPDATASETWRITERMESSAGETYPE = @as(c_int, 21111);
pub const UA_NS0ID_UADPDATASETWRITERMESSAGETYPE_DATASETMESSAGECONTENTMASK = @as(c_int, 21112);
pub const UA_NS0ID_UADPDATASETWRITERMESSAGETYPE_CONFIGUREDSIZE = @as(c_int, 21113);
pub const UA_NS0ID_UADPDATASETWRITERMESSAGETYPE_NETWORKMESSAGENUMBER = @as(c_int, 21114);
pub const UA_NS0ID_UADPDATASETWRITERMESSAGETYPE_DATASETOFFSET = @as(c_int, 21115);
pub const UA_NS0ID_UADPDATASETREADERMESSAGETYPE = @as(c_int, 21116);
pub const UA_NS0ID_UADPDATASETREADERMESSAGETYPE_GROUPVERSION = @as(c_int, 21117);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NAME = @as(c_int, 21118);
pub const UA_NS0ID_UADPDATASETREADERMESSAGETYPE_NETWORKMESSAGENUMBER = @as(c_int, 21119);
pub const UA_NS0ID_UADPDATASETREADERMESSAGETYPE_DATASETCLASSID = @as(c_int, 21120);
pub const UA_NS0ID_UADPDATASETREADERMESSAGETYPE_NETWORKMESSAGECONTENTMASK = @as(c_int, 21121);
pub const UA_NS0ID_UADPDATASETREADERMESSAGETYPE_DATASETMESSAGECONTENTMASK = @as(c_int, 21122);
pub const UA_NS0ID_UADPDATASETREADERMESSAGETYPE_PUBLISHINGINTERVAL = @as(c_int, 21123);
pub const UA_NS0ID_UADPDATASETREADERMESSAGETYPE_PROCESSINGOFFSET = @as(c_int, 21124);
pub const UA_NS0ID_UADPDATASETREADERMESSAGETYPE_RECEIVEOFFSET = @as(c_int, 21125);
pub const UA_NS0ID_JSONWRITERGROUPMESSAGETYPE = @as(c_int, 21126);
pub const UA_NS0ID_JSONWRITERGROUPMESSAGETYPE_NETWORKMESSAGECONTENTMASK = @as(c_int, 21127);
pub const UA_NS0ID_JSONDATASETWRITERMESSAGETYPE = @as(c_int, 21128);
pub const UA_NS0ID_JSONDATASETWRITERMESSAGETYPE_DATASETMESSAGECONTENTMASK = @as(c_int, 21129);
pub const UA_NS0ID_JSONDATASETREADERMESSAGETYPE = @as(c_int, 21130);
pub const UA_NS0ID_JSONDATASETREADERMESSAGETYPE_NETWORKMESSAGECONTENTMASK = @as(c_int, 21131);
pub const UA_NS0ID_JSONDATASETREADERMESSAGETYPE_DATASETMESSAGECONTENTMASK = @as(c_int, 21132);
pub const UA_NS0ID_DATAGRAMWRITERGROUPTRANSPORTTYPE = @as(c_int, 21133);
pub const UA_NS0ID_DATAGRAMWRITERGROUPTRANSPORTTYPE_MESSAGEREPEATCOUNT = @as(c_int, 21134);
pub const UA_NS0ID_DATAGRAMWRITERGROUPTRANSPORTTYPE_MESSAGEREPEATDELAY = @as(c_int, 21135);
pub const UA_NS0ID_BROKERWRITERGROUPTRANSPORTTYPE = @as(c_int, 21136);
pub const UA_NS0ID_BROKERWRITERGROUPTRANSPORTTYPE_QUEUENAME = @as(c_int, 21137);
pub const UA_NS0ID_BROKERDATASETWRITERTRANSPORTTYPE = @as(c_int, 21138);
pub const UA_NS0ID_BROKERDATASETWRITERTRANSPORTTYPE_QUEUENAME = @as(c_int, 21139);
pub const UA_NS0ID_BROKERDATASETWRITERTRANSPORTTYPE_METADATAQUEUENAME = @as(c_int, 21140);
pub const UA_NS0ID_BROKERDATASETWRITERTRANSPORTTYPE_METADATAUPDATETIME = @as(c_int, 21141);
pub const UA_NS0ID_BROKERDATASETREADERTRANSPORTTYPE = @as(c_int, 21142);
pub const UA_NS0ID_BROKERDATASETREADERTRANSPORTTYPE_QUEUENAME = @as(c_int, 21143);
pub const UA_NS0ID_BROKERDATASETREADERTRANSPORTTYPE_METADATAQUEUENAME = @as(c_int, 21144);
pub const UA_NS0ID_NETWORKADDRESSTYPE = @as(c_int, 21145);
pub const UA_NS0ID_NETWORKADDRESSTYPE_NETWORKINTERFACE = @as(c_int, 21146);
pub const UA_NS0ID_NETWORKADDRESSURLTYPE = @as(c_int, 21147);
pub const UA_NS0ID_NETWORKADDRESSURLTYPE_NETWORKINTERFACE = @as(c_int, 21148);
pub const UA_NS0ID_NETWORKADDRESSURLTYPE_URL = @as(c_int, 21149);
pub const UA_NS0ID_WRITERGROUPDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 21150);
pub const UA_NS0ID_NETWORKADDRESSDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 21151);
pub const UA_NS0ID_NETWORKADDRESSURLDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 21152);
pub const UA_NS0ID_READERGROUPDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 21153);
pub const UA_NS0ID_PUBSUBCONFIGURATIONDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 21154);
pub const UA_NS0ID_DATAGRAMWRITERGROUPTRANSPORTDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 21155);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_WRITERGROUPDATATYPE = @as(c_int, 21156);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_WRITERGROUPDATATYPE_DATATYPEVERSION = @as(c_int, 21157);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_WRITERGROUPDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 21158);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_NETWORKADDRESSDATATYPE = @as(c_int, 21159);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_NETWORKADDRESSDATATYPE_DATATYPEVERSION = @as(c_int, 21160);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_NETWORKADDRESSDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 21161);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_NETWORKADDRESSURLDATATYPE = @as(c_int, 21162);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_NETWORKADDRESSURLDATATYPE_DATATYPEVERSION = @as(c_int, 21163);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_NETWORKADDRESSURLDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 21164);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_READERGROUPDATATYPE = @as(c_int, 21165);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_READERGROUPDATATYPE_DATATYPEVERSION = @as(c_int, 21166);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_READERGROUPDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 21167);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBSUBCONFIGURATIONDATATYPE = @as(c_int, 21168);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBSUBCONFIGURATIONDATATYPE_DATATYPEVERSION = @as(c_int, 21169);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBSUBCONFIGURATIONDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 21170);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATAGRAMWRITERGROUPTRANSPORTDATATYPE = @as(c_int, 21171);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATAGRAMWRITERGROUPTRANSPORTDATATYPE_DATATYPEVERSION = @as(c_int, 21172);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATAGRAMWRITERGROUPTRANSPORTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 21173);
pub const UA_NS0ID_WRITERGROUPDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 21174);
pub const UA_NS0ID_NETWORKADDRESSDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 21175);
pub const UA_NS0ID_NETWORKADDRESSURLDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 21176);
pub const UA_NS0ID_READERGROUPDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 21177);
pub const UA_NS0ID_PUBSUBCONFIGURATIONDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 21178);
pub const UA_NS0ID_DATAGRAMWRITERGROUPTRANSPORTDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 21179);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_WRITERGROUPDATATYPE = @as(c_int, 21180);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_WRITERGROUPDATATYPE_DATATYPEVERSION = @as(c_int, 21181);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_WRITERGROUPDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 21182);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_NETWORKADDRESSDATATYPE = @as(c_int, 21183);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_NETWORKADDRESSDATATYPE_DATATYPEVERSION = @as(c_int, 21184);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_NETWORKADDRESSDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 21185);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_NETWORKADDRESSURLDATATYPE = @as(c_int, 21186);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_NETWORKADDRESSURLDATATYPE_DATATYPEVERSION = @as(c_int, 21187);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_NETWORKADDRESSURLDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 21188);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_READERGROUPDATATYPE = @as(c_int, 21189);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_READERGROUPDATATYPE_DATATYPEVERSION = @as(c_int, 21190);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_READERGROUPDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 21191);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBSUBCONFIGURATIONDATATYPE = @as(c_int, 21192);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBSUBCONFIGURATIONDATATYPE_DATATYPEVERSION = @as(c_int, 21193);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBSUBCONFIGURATIONDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 21194);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATAGRAMWRITERGROUPTRANSPORTDATATYPE = @as(c_int, 21195);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATAGRAMWRITERGROUPTRANSPORTDATATYPE_DATATYPEVERSION = @as(c_int, 21196);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATAGRAMWRITERGROUPTRANSPORTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 21197);
pub const UA_NS0ID_WRITERGROUPDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 21198);
pub const UA_NS0ID_NETWORKADDRESSDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 21199);
pub const UA_NS0ID_NETWORKADDRESSURLDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 21200);
pub const UA_NS0ID_READERGROUPDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 21201);
pub const UA_NS0ID_PUBSUBCONFIGURATIONDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 21202);
pub const UA_NS0ID_DATAGRAMWRITERGROUPTRANSPORTDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 21203);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NUMBER = @as(c_int, 21204);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21205);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRANSITIONTIME = @as(c_int, 21206);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21207);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRUESTATE = @as(c_int, 21208);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_FALSESTATE = @as(c_int, 21209);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ONDELAY = @as(c_int, 21210);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OFFDELAY = @as(c_int, 21211);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_FIRSTINGROUPFLAG = @as(c_int, 21212);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_FIRSTINGROUP = @as(c_int, 21213);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE = @as(c_int, 21214);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_ID = @as(c_int, 21215);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NAME = @as(c_int, 21216);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NUMBER = @as(c_int, 21217);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21218);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 21219);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21220);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRUESTATE = @as(c_int, 21221);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_FALSESTATE = @as(c_int, 21222);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REALARMTIME = @as(c_int, 21223);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REALARMREPEATCOUNT = @as(c_int, 21224);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCE = @as(c_int, 21225);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESS = @as(c_int, 21226);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_UNSUPPRESS = @as(c_int, 21227);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE = @as(c_int, 21228);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE = @as(c_int, 21229);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RESET = @as(c_int, 21230);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_NORMALSTATE = @as(c_int, 21231);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_EXPIRATIONDATE = @as(c_int, 21232);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_EXPIRATIONLIMIT = @as(c_int, 21233);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CERTIFICATETYPE = @as(c_int, 21234);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CERTIFICATE = @as(c_int, 21235);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE = @as(c_int, 21236);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_EVENTID = @as(c_int, 21237);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_EVENTTYPE = @as(c_int, 21238);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SOURCENODE = @as(c_int, 21239);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SOURCENAME = @as(c_int, 21240);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_TIME = @as(c_int, 21241);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RECEIVETIME = @as(c_int, 21242);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LOCALTIME = @as(c_int, 21243);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_MESSAGE = @as(c_int, 21244);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SEVERITY = @as(c_int, 21245);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSID = @as(c_int, 21246);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSNAME = @as(c_int, 21247);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSID = @as(c_int, 21248);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSNAME = @as(c_int, 21249);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONNAME = @as(c_int, 21250);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_BRANCHID = @as(c_int, 21251);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RETAIN = @as(c_int, 21252);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE = @as(c_int, 21253);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_ID = @as(c_int, 21254);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NAME = @as(c_int, 21255);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NUMBER = @as(c_int, 21256);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21257);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 21258);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21259);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRUESTATE = @as(c_int, 21260);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_FALSESTATE = @as(c_int, 21261);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_QUALITY = @as(c_int, 21262);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_QUALITY_SOURCETIMESTAMP = @as(c_int, 21263);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY = @as(c_int, 21264);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 21265);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_COMMENT = @as(c_int, 21266);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_COMMENT_SOURCETIMESTAMP = @as(c_int, 21267);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CLIENTUSERID = @as(c_int, 21268);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_DISABLE = @as(c_int, 21269);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLE = @as(c_int, 21270);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT = @as(c_int, 21271);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 21272);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE = @as(c_int, 21273);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_ID = @as(c_int, 21274);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NAME = @as(c_int, 21275);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NUMBER = @as(c_int, 21276);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21277);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 21278);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21279);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRUESTATE = @as(c_int, 21280);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_FALSESTATE = @as(c_int, 21281);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE = @as(c_int, 21282);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_ID = @as(c_int, 21283);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NAME = @as(c_int, 21284);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NUMBER = @as(c_int, 21285);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21286);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 21287);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21288);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 21289);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 21290);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE = @as(c_int, 21291);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 21292);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRM = @as(c_int, 21293);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRM_INPUTARGUMENTS = @as(c_int, 21294);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE = @as(c_int, 21295);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_ID = @as(c_int, 21296);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NAME = @as(c_int, 21297);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NUMBER = @as(c_int, 21298);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21299);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 21300);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21301);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRUESTATE = @as(c_int, 21302);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_FALSESTATE = @as(c_int, 21303);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_INPUTNODE = @as(c_int, 21304);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE = @as(c_int, 21305);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_ID = @as(c_int, 21306);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NAME = @as(c_int, 21307);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 21308);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21309);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 21310);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21311);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 21312);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 21313);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE = @as(c_int, 21314);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_ID = @as(c_int, 21315);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NAME = @as(c_int, 21316);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 21317);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21318);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 21319);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21320);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 21321);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 21322);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE = @as(c_int, 21323);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 21324);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 21325);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 21326);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 21327);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21328);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 21329);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 21330);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 21331);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 21332);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 21333);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 21334);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 21335);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 21336);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 21337);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 21338);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 21339);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE = @as(c_int, 21340);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 21341);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDORSHELVED = @as(c_int, 21342);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_MAXTIMESHELVED = @as(c_int, 21343);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLEENABLED = @as(c_int, 21344);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND = @as(c_int, 21345);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_LISTID = @as(c_int, 21346);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_AGENCYID = @as(c_int, 21347);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_VERSIONID = @as(c_int, 21348);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE = @as(c_int, 21349);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_ID = @as(c_int, 21350);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NAME = @as(c_int, 21351);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NUMBER = @as(c_int, 21352);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21353);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 21354);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21355);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRUESTATE = @as(c_int, 21356);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_FALSESTATE = @as(c_int, 21357);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ONDELAY = @as(c_int, 21358);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OFFDELAY = @as(c_int, 21359);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUPFLAG = @as(c_int, 21360);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUP = @as(c_int, 21361);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE = @as(c_int, 21362);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_ID = @as(c_int, 21363);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NAME = @as(c_int, 21364);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NUMBER = @as(c_int, 21365);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21366);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 21367);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21368);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRUESTATE = @as(c_int, 21369);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_FALSESTATE = @as(c_int, 21370);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REALARMTIME = @as(c_int, 21371);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REALARMREPEATCOUNT = @as(c_int, 21372);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCE = @as(c_int, 21373);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESS = @as(c_int, 21374);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS = @as(c_int, 21375);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE = @as(c_int, 21376);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE = @as(c_int, 21377);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RESET = @as(c_int, 21378);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_NORMALSTATE = @as(c_int, 21379);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_TRUSTLISTID = @as(c_int, 21380);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LASTUPDATETIME = @as(c_int, 21381);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_UPDATEFREQUENCY = @as(c_int, 21382);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_UPDATEFREQUENCY = @as(c_int, 21383);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED = @as(c_int, 21384);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_EVENTID = @as(c_int, 21385);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_EVENTTYPE = @as(c_int, 21386);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SOURCENODE = @as(c_int, 21387);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SOURCENAME = @as(c_int, 21388);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_TIME = @as(c_int, 21389);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_RECEIVETIME = @as(c_int, 21390);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_LOCALTIME = @as(c_int, 21391);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_MESSAGE = @as(c_int, 21392);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SEVERITY = @as(c_int, 21393);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_CONDITIONCLASSID = @as(c_int, 21394);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_CONDITIONCLASSNAME = @as(c_int, 21395);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_CONDITIONSUBCLASSID = @as(c_int, 21396);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_CONDITIONSUBCLASSNAME = @as(c_int, 21397);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_CONDITIONNAME = @as(c_int, 21398);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_BRANCHID = @as(c_int, 21399);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_RETAIN = @as(c_int, 21400);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ENABLEDSTATE = @as(c_int, 21401);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ENABLEDSTATE_ID = @as(c_int, 21402);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ENABLEDSTATE_NAME = @as(c_int, 21403);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ENABLEDSTATE_NUMBER = @as(c_int, 21404);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21405);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 21406);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21407);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ENABLEDSTATE_TRUESTATE = @as(c_int, 21408);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ENABLEDSTATE_FALSESTATE = @as(c_int, 21409);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_QUALITY = @as(c_int, 21410);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_QUALITY_SOURCETIMESTAMP = @as(c_int, 21411);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_LASTSEVERITY = @as(c_int, 21412);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 21413);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_COMMENT = @as(c_int, 21414);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_COMMENT_SOURCETIMESTAMP = @as(c_int, 21415);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_CLIENTUSERID = @as(c_int, 21416);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_DISABLE = @as(c_int, 21417);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ENABLE = @as(c_int, 21418);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ADDCOMMENT = @as(c_int, 21419);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 21420);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ACKEDSTATE = @as(c_int, 21421);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ACKEDSTATE_ID = @as(c_int, 21422);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ACKEDSTATE_NAME = @as(c_int, 21423);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ACKEDSTATE_NUMBER = @as(c_int, 21424);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21425);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 21426);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21427);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ACKEDSTATE_TRUESTATE = @as(c_int, 21428);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ACKEDSTATE_FALSESTATE = @as(c_int, 21429);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_CONFIRMEDSTATE = @as(c_int, 21430);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_CONFIRMEDSTATE_ID = @as(c_int, 21431);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NAME = @as(c_int, 21432);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NUMBER = @as(c_int, 21433);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21434);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 21435);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21436);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 21437);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 21438);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ACKNOWLEDGE = @as(c_int, 21439);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 21440);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_CONFIRM = @as(c_int, 21441);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_CONFIRM_INPUTARGUMENTS = @as(c_int, 21442);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ACTIVESTATE = @as(c_int, 21443);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ACTIVESTATE_ID = @as(c_int, 21444);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ACTIVESTATE_NAME = @as(c_int, 21445);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ACTIVESTATE_NUMBER = @as(c_int, 21446);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21447);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 21448);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21449);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ACTIVESTATE_TRUESTATE = @as(c_int, 21450);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ACTIVESTATE_FALSESTATE = @as(c_int, 21451);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_INPUTNODE = @as(c_int, 21452);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SUPPRESSEDSTATE = @as(c_int, 21453);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_ID = @as(c_int, 21454);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NAME = @as(c_int, 21455);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NUMBER = @as(c_int, 21456);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21457);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 21458);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21459);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 21460);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 21461);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_OUTOFSERVICESTATE = @as(c_int, 21462);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_ID = @as(c_int, 21463);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NAME = @as(c_int, 21464);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NUMBER = @as(c_int, 21465);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21466);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 21467);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21468);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 21469);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 21470);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SHELVINGSTATE = @as(c_int, 21471);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 21472);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 21473);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 21474);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 21475);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21476);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 21477);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 21478);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 21479);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 21480);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 21481);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 21482);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 21483);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 21484);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 21485);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 21486);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 21487);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE = @as(c_int, 21488);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 21489);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SUPPRESSEDORSHELVED = @as(c_int, 21490);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_MAXTIMESHELVED = @as(c_int, 21491);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_AUDIBLEENABLED = @as(c_int, 21492);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_AUDIBLESOUND = @as(c_int, 21493);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_AUDIBLESOUND_LISTID = @as(c_int, 21494);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_AUDIBLESOUND_AGENCYID = @as(c_int, 21495);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_AUDIBLESOUND_VERSIONID = @as(c_int, 21496);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SILENCESTATE = @as(c_int, 21497);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SILENCESTATE_ID = @as(c_int, 21498);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SILENCESTATE_NAME = @as(c_int, 21499);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SILENCESTATE_NUMBER = @as(c_int, 21500);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21501);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SILENCESTATE_TRANSITIONTIME = @as(c_int, 21502);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21503);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SILENCESTATE_TRUESTATE = @as(c_int, 21504);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SILENCESTATE_FALSESTATE = @as(c_int, 21505);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_ONDELAY = @as(c_int, 21506);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_OFFDELAY = @as(c_int, 21507);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_FIRSTINGROUPFLAG = @as(c_int, 21508);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_FIRSTINGROUP = @as(c_int, 21509);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_LATCHEDSTATE = @as(c_int, 21510);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_LATCHEDSTATE_ID = @as(c_int, 21511);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_LATCHEDSTATE_NAME = @as(c_int, 21512);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_LATCHEDSTATE_NUMBER = @as(c_int, 21513);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21514);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 21515);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21516);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_LATCHEDSTATE_TRUESTATE = @as(c_int, 21517);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_LATCHEDSTATE_FALSESTATE = @as(c_int, 21518);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_REALARMTIME = @as(c_int, 21519);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_REALARMREPEATCOUNT = @as(c_int, 21520);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SILENCE = @as(c_int, 21521);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SUPPRESS = @as(c_int, 21522);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_UNSUPPRESS = @as(c_int, 21523);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_REMOVEFROMSERVICE = @as(c_int, 21524);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_PLACEINSERVICE = @as(c_int, 21525);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_RESET = @as(c_int, 21526);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_NORMALSTATE = @as(c_int, 21527);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_EXPIRATIONDATE = @as(c_int, 21528);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_EXPIRATIONLIMIT = @as(c_int, 21529);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_CERTIFICATETYPE = @as(c_int, 21530);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_CERTIFICATE = @as(c_int, 21531);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE = @as(c_int, 21532);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_EVENTID = @as(c_int, 21533);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_EVENTTYPE = @as(c_int, 21534);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SOURCENODE = @as(c_int, 21535);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SOURCENAME = @as(c_int, 21536);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_TIME = @as(c_int, 21537);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_RECEIVETIME = @as(c_int, 21538);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_LOCALTIME = @as(c_int, 21539);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_MESSAGE = @as(c_int, 21540);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SEVERITY = @as(c_int, 21541);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_CONDITIONCLASSID = @as(c_int, 21542);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_CONDITIONCLASSNAME = @as(c_int, 21543);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSID = @as(c_int, 21544);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSNAME = @as(c_int, 21545);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_CONDITIONNAME = @as(c_int, 21546);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_BRANCHID = @as(c_int, 21547);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_RETAIN = @as(c_int, 21548);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ENABLEDSTATE = @as(c_int, 21549);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ENABLEDSTATE_ID = @as(c_int, 21550);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NAME = @as(c_int, 21551);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NUMBER = @as(c_int, 21552);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21553);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 21554);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21555);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRUESTATE = @as(c_int, 21556);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ENABLEDSTATE_FALSESTATE = @as(c_int, 21557);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_QUALITY = @as(c_int, 21558);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_QUALITY_SOURCETIMESTAMP = @as(c_int, 21559);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_LASTSEVERITY = @as(c_int, 21560);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 21561);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_COMMENT = @as(c_int, 21562);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_COMMENT_SOURCETIMESTAMP = @as(c_int, 21563);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_CLIENTUSERID = @as(c_int, 21564);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_DISABLE = @as(c_int, 21565);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ENABLE = @as(c_int, 21566);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ADDCOMMENT = @as(c_int, 21567);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 21568);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ACKEDSTATE = @as(c_int, 21569);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ACKEDSTATE_ID = @as(c_int, 21570);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ACKEDSTATE_NAME = @as(c_int, 21571);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ACKEDSTATE_NUMBER = @as(c_int, 21572);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21573);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 21574);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21575);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRUESTATE = @as(c_int, 21576);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ACKEDSTATE_FALSESTATE = @as(c_int, 21577);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE = @as(c_int, 21578);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_ID = @as(c_int, 21579);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NAME = @as(c_int, 21580);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NUMBER = @as(c_int, 21581);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21582);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 21583);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21584);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 21585);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 21586);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ACKNOWLEDGE = @as(c_int, 21587);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 21588);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_CONFIRM = @as(c_int, 21589);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_CONFIRM_INPUTARGUMENTS = @as(c_int, 21590);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ACTIVESTATE = @as(c_int, 21591);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ACTIVESTATE_ID = @as(c_int, 21592);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ACTIVESTATE_NAME = @as(c_int, 21593);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ACTIVESTATE_NUMBER = @as(c_int, 21594);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21595);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 21596);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21597);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRUESTATE = @as(c_int, 21598);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ACTIVESTATE_FALSESTATE = @as(c_int, 21599);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_INPUTNODE = @as(c_int, 21600);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE = @as(c_int, 21601);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_ID = @as(c_int, 21602);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NAME = @as(c_int, 21603);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 21604);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21605);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 21606);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21607);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 21608);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 21609);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE = @as(c_int, 21610);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_ID = @as(c_int, 21611);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NAME = @as(c_int, 21612);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 21613);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21614);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 21615);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21616);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 21617);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 21618);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SHELVINGSTATE = @as(c_int, 21619);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 21620);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 21621);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 21622);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 21623);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21624);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 21625);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 21626);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 21627);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 21628);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 21629);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 21630);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 21631);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 21632);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 21633);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 21634);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 21635);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE = @as(c_int, 21636);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 21637);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SUPPRESSEDORSHELVED = @as(c_int, 21638);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_MAXTIMESHELVED = @as(c_int, 21639);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_AUDIBLEENABLED = @as(c_int, 21640);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_AUDIBLESOUND = @as(c_int, 21641);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_AUDIBLESOUND_LISTID = @as(c_int, 21642);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_AUDIBLESOUND_AGENCYID = @as(c_int, 21643);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_AUDIBLESOUND_VERSIONID = @as(c_int, 21644);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SILENCESTATE = @as(c_int, 21645);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SILENCESTATE_ID = @as(c_int, 21646);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SILENCESTATE_NAME = @as(c_int, 21647);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SILENCESTATE_NUMBER = @as(c_int, 21648);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21649);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 21650);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21651);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SILENCESTATE_TRUESTATE = @as(c_int, 21652);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SILENCESTATE_FALSESTATE = @as(c_int, 21653);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_ONDELAY = @as(c_int, 21654);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_OFFDELAY = @as(c_int, 21655);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_FIRSTINGROUPFLAG = @as(c_int, 21656);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_FIRSTINGROUP = @as(c_int, 21657);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_LATCHEDSTATE = @as(c_int, 21658);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_LATCHEDSTATE_ID = @as(c_int, 21659);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NAME = @as(c_int, 21660);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NUMBER = @as(c_int, 21661);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21662);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 21663);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21664);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRUESTATE = @as(c_int, 21665);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_LATCHEDSTATE_FALSESTATE = @as(c_int, 21666);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_REALARMTIME = @as(c_int, 21667);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_REALARMREPEATCOUNT = @as(c_int, 21668);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SILENCE = @as(c_int, 21669);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SUPPRESS = @as(c_int, 21670);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_UNSUPPRESS = @as(c_int, 21671);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE = @as(c_int, 21672);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_PLACEINSERVICE = @as(c_int, 21673);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_RESET = @as(c_int, 21674);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_NORMALSTATE = @as(c_int, 21675);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_TRUSTLISTID = @as(c_int, 21676);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_LASTUPDATETIME = @as(c_int, 21677);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_UPDATEFREQUENCY = @as(c_int, 21678);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_UPDATEFREQUENCY = @as(c_int, 21679);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED = @as(c_int, 21680);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_EVENTID = @as(c_int, 21681);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_EVENTTYPE = @as(c_int, 21682);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SOURCENODE = @as(c_int, 21683);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SOURCENAME = @as(c_int, 21684);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_TIME = @as(c_int, 21685);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RECEIVETIME = @as(c_int, 21686);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LOCALTIME = @as(c_int, 21687);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_MESSAGE = @as(c_int, 21688);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SEVERITY = @as(c_int, 21689);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSID = @as(c_int, 21690);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSNAME = @as(c_int, 21691);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSID = @as(c_int, 21692);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSNAME = @as(c_int, 21693);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONNAME = @as(c_int, 21694);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_BRANCHID = @as(c_int, 21695);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RETAIN = @as(c_int, 21696);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE = @as(c_int, 21697);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_ID = @as(c_int, 21698);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NAME = @as(c_int, 21699);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NUMBER = @as(c_int, 21700);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21701);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 21702);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21703);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRUESTATE = @as(c_int, 21704);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_FALSESTATE = @as(c_int, 21705);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_QUALITY = @as(c_int, 21706);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_QUALITY_SOURCETIMESTAMP = @as(c_int, 21707);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LASTSEVERITY = @as(c_int, 21708);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 21709);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_COMMENT = @as(c_int, 21710);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_COMMENT_SOURCETIMESTAMP = @as(c_int, 21711);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CLIENTUSERID = @as(c_int, 21712);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_DISABLE = @as(c_int, 21713);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLE = @as(c_int, 21714);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ADDCOMMENT = @as(c_int, 21715);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 21716);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE = @as(c_int, 21717);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_ID = @as(c_int, 21718);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NAME = @as(c_int, 21719);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NUMBER = @as(c_int, 21720);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21721);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 21722);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21723);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRUESTATE = @as(c_int, 21724);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_FALSESTATE = @as(c_int, 21725);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE = @as(c_int, 21726);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_ID = @as(c_int, 21727);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NAME = @as(c_int, 21728);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NUMBER = @as(c_int, 21729);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21730);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 21731);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21732);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 21733);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 21734);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE = @as(c_int, 21735);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 21736);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRM = @as(c_int, 21737);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRM_INPUTARGUMENTS = @as(c_int, 21738);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE = @as(c_int, 21739);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_ID = @as(c_int, 21740);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NAME = @as(c_int, 21741);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NUMBER = @as(c_int, 21742);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21743);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 21744);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21745);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRUESTATE = @as(c_int, 21746);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_FALSESTATE = @as(c_int, 21747);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_INPUTNODE = @as(c_int, 21748);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE = @as(c_int, 21749);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_ID = @as(c_int, 21750);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NAME = @as(c_int, 21751);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NUMBER = @as(c_int, 21752);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21753);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 21754);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21755);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 21756);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 21757);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE = @as(c_int, 21758);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_ID = @as(c_int, 21759);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NAME = @as(c_int, 21760);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NUMBER = @as(c_int, 21761);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21762);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 21763);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21764);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 21765);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 21766);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE = @as(c_int, 21767);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 21768);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 21769);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 21770);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 21771);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21772);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 21773);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 21774);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 21775);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 21776);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 21777);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 21778);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 21779);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 21780);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 21781);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 21782);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 21783);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE = @as(c_int, 21784);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 21785);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDORSHELVED = @as(c_int, 21786);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_MAXTIMESHELVED = @as(c_int, 21787);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLEENABLED = @as(c_int, 21788);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND = @as(c_int, 21789);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_LISTID = @as(c_int, 21790);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_AGENCYID = @as(c_int, 21791);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_VERSIONID = @as(c_int, 21792);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE = @as(c_int, 21793);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_ID = @as(c_int, 21794);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NAME = @as(c_int, 21795);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NUMBER = @as(c_int, 21796);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21797);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRANSITIONTIME = @as(c_int, 21798);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21799);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRUESTATE = @as(c_int, 21800);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_FALSESTATE = @as(c_int, 21801);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ONDELAY = @as(c_int, 21802);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OFFDELAY = @as(c_int, 21803);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_FIRSTINGROUPFLAG = @as(c_int, 21804);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_FIRSTINGROUP = @as(c_int, 21805);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE = @as(c_int, 21806);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_ID = @as(c_int, 21807);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NAME = @as(c_int, 21808);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NUMBER = @as(c_int, 21809);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21810);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 21811);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21812);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRUESTATE = @as(c_int, 21813);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_FALSESTATE = @as(c_int, 21814);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REALARMTIME = @as(c_int, 21815);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REALARMREPEATCOUNT = @as(c_int, 21816);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCE = @as(c_int, 21817);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESS = @as(c_int, 21818);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_UNSUPPRESS = @as(c_int, 21819);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE = @as(c_int, 21820);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE = @as(c_int, 21821);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RESET = @as(c_int, 21822);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_NORMALSTATE = @as(c_int, 21823);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_EXPIRATIONDATE = @as(c_int, 21824);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_EXPIRATIONLIMIT = @as(c_int, 21825);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CERTIFICATETYPE = @as(c_int, 21826);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CERTIFICATE = @as(c_int, 21827);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE = @as(c_int, 21828);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_EVENTID = @as(c_int, 21829);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_EVENTTYPE = @as(c_int, 21830);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SOURCENODE = @as(c_int, 21831);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SOURCENAME = @as(c_int, 21832);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_TIME = @as(c_int, 21833);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RECEIVETIME = @as(c_int, 21834);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LOCALTIME = @as(c_int, 21835);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_MESSAGE = @as(c_int, 21836);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SEVERITY = @as(c_int, 21837);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSID = @as(c_int, 21838);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSNAME = @as(c_int, 21839);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSID = @as(c_int, 21840);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSNAME = @as(c_int, 21841);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONNAME = @as(c_int, 21842);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_BRANCHID = @as(c_int, 21843);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RETAIN = @as(c_int, 21844);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE = @as(c_int, 21845);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_ID = @as(c_int, 21846);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NAME = @as(c_int, 21847);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NUMBER = @as(c_int, 21848);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21849);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 21850);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21851);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRUESTATE = @as(c_int, 21852);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_FALSESTATE = @as(c_int, 21853);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_QUALITY = @as(c_int, 21854);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_QUALITY_SOURCETIMESTAMP = @as(c_int, 21855);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY = @as(c_int, 21856);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 21857);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_COMMENT = @as(c_int, 21858);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_COMMENT_SOURCETIMESTAMP = @as(c_int, 21859);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CLIENTUSERID = @as(c_int, 21860);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_DISABLE = @as(c_int, 21861);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLE = @as(c_int, 21862);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT = @as(c_int, 21863);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 21864);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE = @as(c_int, 21865);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_ID = @as(c_int, 21866);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NAME = @as(c_int, 21867);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NUMBER = @as(c_int, 21868);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21869);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 21870);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21871);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRUESTATE = @as(c_int, 21872);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_FALSESTATE = @as(c_int, 21873);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE = @as(c_int, 21874);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_ID = @as(c_int, 21875);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NAME = @as(c_int, 21876);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NUMBER = @as(c_int, 21877);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21878);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 21879);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21880);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 21881);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 21882);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE = @as(c_int, 21883);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 21884);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRM = @as(c_int, 21885);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRM_INPUTARGUMENTS = @as(c_int, 21886);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE = @as(c_int, 21887);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_ID = @as(c_int, 21888);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NAME = @as(c_int, 21889);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NUMBER = @as(c_int, 21890);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21891);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 21892);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21893);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRUESTATE = @as(c_int, 21894);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_FALSESTATE = @as(c_int, 21895);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_INPUTNODE = @as(c_int, 21896);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE = @as(c_int, 21897);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_ID = @as(c_int, 21898);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NAME = @as(c_int, 21899);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 21900);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21901);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 21902);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21903);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 21904);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 21905);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE = @as(c_int, 21906);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_ID = @as(c_int, 21907);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NAME = @as(c_int, 21908);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 21909);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21910);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 21911);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21912);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 21913);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 21914);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE = @as(c_int, 21915);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 21916);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 21917);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 21918);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 21919);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21920);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 21921);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 21922);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 21923);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 21924);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 21925);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 21926);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 21927);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 21928);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 21929);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 21930);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 21931);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE = @as(c_int, 21932);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 21933);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDORSHELVED = @as(c_int, 21934);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_MAXTIMESHELVED = @as(c_int, 21935);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLEENABLED = @as(c_int, 21936);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND = @as(c_int, 21937);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_LISTID = @as(c_int, 21938);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_AGENCYID = @as(c_int, 21939);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_VERSIONID = @as(c_int, 21940);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE = @as(c_int, 21941);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_ID = @as(c_int, 21942);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NAME = @as(c_int, 21943);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NUMBER = @as(c_int, 21944);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21945);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 21946);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21947);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRUESTATE = @as(c_int, 21948);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_FALSESTATE = @as(c_int, 21949);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ONDELAY = @as(c_int, 21950);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OFFDELAY = @as(c_int, 21951);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUPFLAG = @as(c_int, 21952);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUP = @as(c_int, 21953);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE = @as(c_int, 21954);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_ID = @as(c_int, 21955);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NAME = @as(c_int, 21956);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NUMBER = @as(c_int, 21957);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21958);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 21959);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21960);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRUESTATE = @as(c_int, 21961);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_FALSESTATE = @as(c_int, 21962);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REALARMTIME = @as(c_int, 21963);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REALARMREPEATCOUNT = @as(c_int, 21964);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCE = @as(c_int, 21965);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESS = @as(c_int, 21966);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS = @as(c_int, 21967);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE = @as(c_int, 21968);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE = @as(c_int, 21969);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RESET = @as(c_int, 21970);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_NORMALSTATE = @as(c_int, 21971);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_TRUSTLISTID = @as(c_int, 21972);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LASTUPDATETIME = @as(c_int, 21973);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_UPDATEFREQUENCY = @as(c_int, 21974);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_UPDATEFREQUENCY = @as(c_int, 21975);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED = @as(c_int, 21976);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_EVENTID = @as(c_int, 21977);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_EVENTTYPE = @as(c_int, 21978);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SOURCENODE = @as(c_int, 21979);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SOURCENAME = @as(c_int, 21980);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_TIME = @as(c_int, 21981);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RECEIVETIME = @as(c_int, 21982);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LOCALTIME = @as(c_int, 21983);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_MESSAGE = @as(c_int, 21984);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SEVERITY = @as(c_int, 21985);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSID = @as(c_int, 21986);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSNAME = @as(c_int, 21987);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSID = @as(c_int, 21988);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSNAME = @as(c_int, 21989);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONNAME = @as(c_int, 21990);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_BRANCHID = @as(c_int, 21991);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RETAIN = @as(c_int, 21992);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE = @as(c_int, 21993);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_ID = @as(c_int, 21994);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NAME = @as(c_int, 21995);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NUMBER = @as(c_int, 21996);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 21997);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 21998);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 21999);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRUESTATE = @as(c_int, 22000);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_FALSESTATE = @as(c_int, 22001);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_QUALITY = @as(c_int, 22002);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_QUALITY_SOURCETIMESTAMP = @as(c_int, 22003);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LASTSEVERITY = @as(c_int, 22004);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 22005);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_COMMENT = @as(c_int, 22006);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_COMMENT_SOURCETIMESTAMP = @as(c_int, 22007);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CLIENTUSERID = @as(c_int, 22008);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_DISABLE = @as(c_int, 22009);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLE = @as(c_int, 22010);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ADDCOMMENT = @as(c_int, 22011);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 22012);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE = @as(c_int, 22013);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_ID = @as(c_int, 22014);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NAME = @as(c_int, 22015);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NUMBER = @as(c_int, 22016);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22017);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 22018);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22019);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRUESTATE = @as(c_int, 22020);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_FALSESTATE = @as(c_int, 22021);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE = @as(c_int, 22022);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_ID = @as(c_int, 22023);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NAME = @as(c_int, 22024);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NUMBER = @as(c_int, 22025);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22026);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 22027);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22028);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 22029);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 22030);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE = @as(c_int, 22031);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 22032);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRM = @as(c_int, 22033);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRM_INPUTARGUMENTS = @as(c_int, 22034);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE = @as(c_int, 22035);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_ID = @as(c_int, 22036);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NAME = @as(c_int, 22037);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NUMBER = @as(c_int, 22038);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22039);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 22040);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22041);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRUESTATE = @as(c_int, 22042);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_FALSESTATE = @as(c_int, 22043);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_INPUTNODE = @as(c_int, 22044);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE = @as(c_int, 22045);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_ID = @as(c_int, 22046);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NAME = @as(c_int, 22047);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NUMBER = @as(c_int, 22048);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22049);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 22050);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22051);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 22052);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 22053);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE = @as(c_int, 22054);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_ID = @as(c_int, 22055);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NAME = @as(c_int, 22056);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NUMBER = @as(c_int, 22057);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22058);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 22059);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22060);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 22061);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 22062);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE = @as(c_int, 22063);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 22064);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 22065);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 22066);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 22067);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22068);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 22069);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 22070);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 22071);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 22072);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 22073);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 22074);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 22075);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 22076);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 22077);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 22078);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 22079);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE = @as(c_int, 22080);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 22081);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDORSHELVED = @as(c_int, 22082);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_MAXTIMESHELVED = @as(c_int, 22083);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLEENABLED = @as(c_int, 22084);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND = @as(c_int, 22085);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_LISTID = @as(c_int, 22086);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_AGENCYID = @as(c_int, 22087);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_VERSIONID = @as(c_int, 22088);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE = @as(c_int, 22089);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_ID = @as(c_int, 22090);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NAME = @as(c_int, 22091);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NUMBER = @as(c_int, 22092);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22093);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRANSITIONTIME = @as(c_int, 22094);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22095);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRUESTATE = @as(c_int, 22096);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_FALSESTATE = @as(c_int, 22097);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ONDELAY = @as(c_int, 22098);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OFFDELAY = @as(c_int, 22099);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_FIRSTINGROUPFLAG = @as(c_int, 22100);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_FIRSTINGROUP = @as(c_int, 22101);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE = @as(c_int, 22102);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_ID = @as(c_int, 22103);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NAME = @as(c_int, 22104);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NUMBER = @as(c_int, 22105);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22106);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 22107);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22108);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRUESTATE = @as(c_int, 22109);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_FALSESTATE = @as(c_int, 22110);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REALARMTIME = @as(c_int, 22111);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REALARMREPEATCOUNT = @as(c_int, 22112);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCE = @as(c_int, 22113);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESS = @as(c_int, 22114);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_UNSUPPRESS = @as(c_int, 22115);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE = @as(c_int, 22116);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE = @as(c_int, 22117);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RESET = @as(c_int, 22118);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_NORMALSTATE = @as(c_int, 22119);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_EXPIRATIONDATE = @as(c_int, 22120);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_EXPIRATIONLIMIT = @as(c_int, 22121);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CERTIFICATETYPE = @as(c_int, 22122);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CERTIFICATE = @as(c_int, 22123);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE = @as(c_int, 22124);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_EVENTID = @as(c_int, 22125);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_EVENTTYPE = @as(c_int, 22126);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SOURCENODE = @as(c_int, 22127);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SOURCENAME = @as(c_int, 22128);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_TIME = @as(c_int, 22129);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RECEIVETIME = @as(c_int, 22130);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LOCALTIME = @as(c_int, 22131);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_MESSAGE = @as(c_int, 22132);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SEVERITY = @as(c_int, 22133);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSID = @as(c_int, 22134);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSNAME = @as(c_int, 22135);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSID = @as(c_int, 22136);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSNAME = @as(c_int, 22137);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONNAME = @as(c_int, 22138);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_BRANCHID = @as(c_int, 22139);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RETAIN = @as(c_int, 22140);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE = @as(c_int, 22141);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_ID = @as(c_int, 22142);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NAME = @as(c_int, 22143);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NUMBER = @as(c_int, 22144);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22145);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 22146);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22147);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRUESTATE = @as(c_int, 22148);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_FALSESTATE = @as(c_int, 22149);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_QUALITY = @as(c_int, 22150);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_QUALITY_SOURCETIMESTAMP = @as(c_int, 22151);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY = @as(c_int, 22152);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 22153);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_COMMENT = @as(c_int, 22154);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_COMMENT_SOURCETIMESTAMP = @as(c_int, 22155);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CLIENTUSERID = @as(c_int, 22156);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_DISABLE = @as(c_int, 22157);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLE = @as(c_int, 22158);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT = @as(c_int, 22159);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 22160);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE = @as(c_int, 22161);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_ID = @as(c_int, 22162);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NAME = @as(c_int, 22163);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NUMBER = @as(c_int, 22164);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22165);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 22166);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22167);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRUESTATE = @as(c_int, 22168);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_FALSESTATE = @as(c_int, 22169);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE = @as(c_int, 22170);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_ID = @as(c_int, 22171);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NAME = @as(c_int, 22172);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NUMBER = @as(c_int, 22173);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22174);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 22175);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22176);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 22177);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 22178);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE = @as(c_int, 22179);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 22180);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRM = @as(c_int, 22181);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRM_INPUTARGUMENTS = @as(c_int, 22182);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE = @as(c_int, 22183);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_ID = @as(c_int, 22184);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NAME = @as(c_int, 22185);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NUMBER = @as(c_int, 22186);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22187);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 22188);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22189);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRUESTATE = @as(c_int, 22190);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_FALSESTATE = @as(c_int, 22191);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_INPUTNODE = @as(c_int, 22192);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE = @as(c_int, 22193);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_ID = @as(c_int, 22194);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NAME = @as(c_int, 22195);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 22196);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22197);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 22198);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22199);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 22200);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 22201);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE = @as(c_int, 22202);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_ID = @as(c_int, 22203);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NAME = @as(c_int, 22204);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 22205);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22206);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 22207);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22208);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 22209);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 22210);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE = @as(c_int, 22211);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 22212);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 22213);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 22214);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 22215);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22216);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 22217);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 22218);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 22219);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 22220);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 22221);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 22222);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 22223);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 22224);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 22225);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 22226);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 22227);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE = @as(c_int, 22228);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 22229);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDORSHELVED = @as(c_int, 22230);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_MAXTIMESHELVED = @as(c_int, 22231);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLEENABLED = @as(c_int, 22232);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND = @as(c_int, 22233);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_LISTID = @as(c_int, 22234);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_AGENCYID = @as(c_int, 22235);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_VERSIONID = @as(c_int, 22236);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE = @as(c_int, 22237);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_ID = @as(c_int, 22238);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NAME = @as(c_int, 22239);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NUMBER = @as(c_int, 22240);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22241);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 22242);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22243);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRUESTATE = @as(c_int, 22244);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_FALSESTATE = @as(c_int, 22245);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ONDELAY = @as(c_int, 22246);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OFFDELAY = @as(c_int, 22247);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUPFLAG = @as(c_int, 22248);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUP = @as(c_int, 22249);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE = @as(c_int, 22250);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_ID = @as(c_int, 22251);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NAME = @as(c_int, 22252);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NUMBER = @as(c_int, 22253);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22254);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 22255);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22256);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRUESTATE = @as(c_int, 22257);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_FALSESTATE = @as(c_int, 22258);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REALARMTIME = @as(c_int, 22259);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REALARMREPEATCOUNT = @as(c_int, 22260);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCE = @as(c_int, 22261);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESS = @as(c_int, 22262);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS = @as(c_int, 22263);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE = @as(c_int, 22264);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE = @as(c_int, 22265);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RESET = @as(c_int, 22266);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_NORMALSTATE = @as(c_int, 22267);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_TRUSTLISTID = @as(c_int, 22268);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LASTUPDATETIME = @as(c_int, 22269);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_UPDATEFREQUENCY = @as(c_int, 22270);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_UPDATEFREQUENCY = @as(c_int, 22271);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED = @as(c_int, 22272);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_EVENTID = @as(c_int, 22273);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_EVENTTYPE = @as(c_int, 22274);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SOURCENODE = @as(c_int, 22275);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SOURCENAME = @as(c_int, 22276);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_TIME = @as(c_int, 22277);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RECEIVETIME = @as(c_int, 22278);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LOCALTIME = @as(c_int, 22279);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_MESSAGE = @as(c_int, 22280);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SEVERITY = @as(c_int, 22281);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSID = @as(c_int, 22282);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSNAME = @as(c_int, 22283);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSID = @as(c_int, 22284);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSNAME = @as(c_int, 22285);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONNAME = @as(c_int, 22286);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_BRANCHID = @as(c_int, 22287);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RETAIN = @as(c_int, 22288);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE = @as(c_int, 22289);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_ID = @as(c_int, 22290);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NAME = @as(c_int, 22291);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NUMBER = @as(c_int, 22292);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22293);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 22294);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22295);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRUESTATE = @as(c_int, 22296);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_FALSESTATE = @as(c_int, 22297);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_QUALITY = @as(c_int, 22298);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_QUALITY_SOURCETIMESTAMP = @as(c_int, 22299);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LASTSEVERITY = @as(c_int, 22300);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 22301);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_COMMENT = @as(c_int, 22302);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_COMMENT_SOURCETIMESTAMP = @as(c_int, 22303);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CLIENTUSERID = @as(c_int, 22304);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_DISABLE = @as(c_int, 22305);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLE = @as(c_int, 22306);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ADDCOMMENT = @as(c_int, 22307);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 22308);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE = @as(c_int, 22309);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_ID = @as(c_int, 22310);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NAME = @as(c_int, 22311);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NUMBER = @as(c_int, 22312);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22313);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 22314);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22315);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRUESTATE = @as(c_int, 22316);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_FALSESTATE = @as(c_int, 22317);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE = @as(c_int, 22318);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_ID = @as(c_int, 22319);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NAME = @as(c_int, 22320);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NUMBER = @as(c_int, 22321);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22322);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 22323);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22324);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 22325);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 22326);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE = @as(c_int, 22327);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 22328);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRM = @as(c_int, 22329);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRM_INPUTARGUMENTS = @as(c_int, 22330);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE = @as(c_int, 22331);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_ID = @as(c_int, 22332);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NAME = @as(c_int, 22333);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NUMBER = @as(c_int, 22334);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22335);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 22336);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22337);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRUESTATE = @as(c_int, 22338);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_FALSESTATE = @as(c_int, 22339);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_INPUTNODE = @as(c_int, 22340);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE = @as(c_int, 22341);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_ID = @as(c_int, 22342);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NAME = @as(c_int, 22343);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NUMBER = @as(c_int, 22344);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22345);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 22346);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22347);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 22348);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 22349);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE = @as(c_int, 22350);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_ID = @as(c_int, 22351);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NAME = @as(c_int, 22352);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NUMBER = @as(c_int, 22353);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22354);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 22355);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22356);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 22357);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 22358);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE = @as(c_int, 22359);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 22360);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 22361);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 22362);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 22363);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22364);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 22365);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 22366);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 22367);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 22368);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 22369);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 22370);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 22371);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 22372);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 22373);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 22374);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 22375);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE = @as(c_int, 22376);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 22377);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDORSHELVED = @as(c_int, 22378);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_MAXTIMESHELVED = @as(c_int, 22379);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLEENABLED = @as(c_int, 22380);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND = @as(c_int, 22381);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_LISTID = @as(c_int, 22382);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_AGENCYID = @as(c_int, 22383);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_VERSIONID = @as(c_int, 22384);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE = @as(c_int, 22385);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_ID = @as(c_int, 22386);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NAME = @as(c_int, 22387);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NUMBER = @as(c_int, 22388);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22389);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRANSITIONTIME = @as(c_int, 22390);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22391);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRUESTATE = @as(c_int, 22392);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_FALSESTATE = @as(c_int, 22393);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ONDELAY = @as(c_int, 22394);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OFFDELAY = @as(c_int, 22395);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_FIRSTINGROUPFLAG = @as(c_int, 22396);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_FIRSTINGROUP = @as(c_int, 22397);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE = @as(c_int, 22398);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_ID = @as(c_int, 22399);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NAME = @as(c_int, 22400);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NUMBER = @as(c_int, 22401);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22402);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 22403);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22404);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRUESTATE = @as(c_int, 22405);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_FALSESTATE = @as(c_int, 22406);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REALARMTIME = @as(c_int, 22407);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REALARMREPEATCOUNT = @as(c_int, 22408);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCE = @as(c_int, 22409);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESS = @as(c_int, 22410);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_UNSUPPRESS = @as(c_int, 22411);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE = @as(c_int, 22412);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE = @as(c_int, 22413);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RESET = @as(c_int, 22414);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_NORMALSTATE = @as(c_int, 22415);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_EXPIRATIONDATE = @as(c_int, 22416);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_EXPIRATIONLIMIT = @as(c_int, 22417);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CERTIFICATETYPE = @as(c_int, 22418);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CERTIFICATE = @as(c_int, 22419);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE = @as(c_int, 22420);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_EVENTID = @as(c_int, 22421);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_EVENTTYPE = @as(c_int, 22422);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SOURCENODE = @as(c_int, 22423);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SOURCENAME = @as(c_int, 22424);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_TIME = @as(c_int, 22425);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RECEIVETIME = @as(c_int, 22426);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LOCALTIME = @as(c_int, 22427);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_MESSAGE = @as(c_int, 22428);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SEVERITY = @as(c_int, 22429);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSID = @as(c_int, 22430);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSNAME = @as(c_int, 22431);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSID = @as(c_int, 22432);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSNAME = @as(c_int, 22433);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONNAME = @as(c_int, 22434);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_BRANCHID = @as(c_int, 22435);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RETAIN = @as(c_int, 22436);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE = @as(c_int, 22437);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_ID = @as(c_int, 22438);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NAME = @as(c_int, 22439);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NUMBER = @as(c_int, 22440);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22441);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 22442);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22443);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRUESTATE = @as(c_int, 22444);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_FALSESTATE = @as(c_int, 22445);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_QUALITY = @as(c_int, 22446);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_QUALITY_SOURCETIMESTAMP = @as(c_int, 22447);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY = @as(c_int, 22448);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 22449);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_COMMENT = @as(c_int, 22450);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_COMMENT_SOURCETIMESTAMP = @as(c_int, 22451);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CLIENTUSERID = @as(c_int, 22452);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_DISABLE = @as(c_int, 22453);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLE = @as(c_int, 22454);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT = @as(c_int, 22455);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 22456);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE = @as(c_int, 22457);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_ID = @as(c_int, 22458);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NAME = @as(c_int, 22459);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NUMBER = @as(c_int, 22460);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22461);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 22462);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22463);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRUESTATE = @as(c_int, 22464);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_FALSESTATE = @as(c_int, 22465);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE = @as(c_int, 22466);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_ID = @as(c_int, 22467);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NAME = @as(c_int, 22468);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NUMBER = @as(c_int, 22469);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22470);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 22471);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22472);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 22473);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 22474);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE = @as(c_int, 22475);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 22476);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRM = @as(c_int, 22477);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRM_INPUTARGUMENTS = @as(c_int, 22478);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE = @as(c_int, 22479);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_ID = @as(c_int, 22480);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NAME = @as(c_int, 22481);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NUMBER = @as(c_int, 22482);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22483);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 22484);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22485);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRUESTATE = @as(c_int, 22486);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_FALSESTATE = @as(c_int, 22487);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_INPUTNODE = @as(c_int, 22488);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE = @as(c_int, 22489);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_ID = @as(c_int, 22490);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NAME = @as(c_int, 22491);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 22492);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22493);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 22494);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22495);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 22496);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 22497);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE = @as(c_int, 22498);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_ID = @as(c_int, 22499);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NAME = @as(c_int, 22500);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 22501);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22502);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 22503);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22504);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 22505);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 22506);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE = @as(c_int, 22507);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 22508);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 22509);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 22510);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 22511);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22512);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 22513);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 22514);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 22515);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 22516);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 22517);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 22518);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 22519);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 22520);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 22521);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 22522);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 22523);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE = @as(c_int, 22524);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 22525);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDORSHELVED = @as(c_int, 22526);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_MAXTIMESHELVED = @as(c_int, 22527);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLEENABLED = @as(c_int, 22528);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND = @as(c_int, 22529);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_LISTID = @as(c_int, 22530);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_AGENCYID = @as(c_int, 22531);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_VERSIONID = @as(c_int, 22532);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE = @as(c_int, 22533);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_ID = @as(c_int, 22534);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NAME = @as(c_int, 22535);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NUMBER = @as(c_int, 22536);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22537);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 22538);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22539);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRUESTATE = @as(c_int, 22540);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_FALSESTATE = @as(c_int, 22541);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ONDELAY = @as(c_int, 22542);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OFFDELAY = @as(c_int, 22543);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUPFLAG = @as(c_int, 22544);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUP = @as(c_int, 22545);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE = @as(c_int, 22546);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_ID = @as(c_int, 22547);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NAME = @as(c_int, 22548);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NUMBER = @as(c_int, 22549);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22550);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 22551);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22552);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRUESTATE = @as(c_int, 22553);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_FALSESTATE = @as(c_int, 22554);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REALARMTIME = @as(c_int, 22555);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REALARMREPEATCOUNT = @as(c_int, 22556);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCE = @as(c_int, 22557);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESS = @as(c_int, 22558);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS = @as(c_int, 22559);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE = @as(c_int, 22560);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE = @as(c_int, 22561);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RESET = @as(c_int, 22562);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_NORMALSTATE = @as(c_int, 22563);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_TRUSTLISTID = @as(c_int, 22564);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LASTUPDATETIME = @as(c_int, 22565);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_UPDATEFREQUENCY = @as(c_int, 22566);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_UPDATEFREQUENCY = @as(c_int, 22567);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED = @as(c_int, 22568);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_EVENTID = @as(c_int, 22569);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_EVENTTYPE = @as(c_int, 22570);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SOURCENODE = @as(c_int, 22571);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SOURCENAME = @as(c_int, 22572);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_TIME = @as(c_int, 22573);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RECEIVETIME = @as(c_int, 22574);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LOCALTIME = @as(c_int, 22575);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_MESSAGE = @as(c_int, 22576);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SEVERITY = @as(c_int, 22577);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSID = @as(c_int, 22578);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSNAME = @as(c_int, 22579);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSID = @as(c_int, 22580);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSNAME = @as(c_int, 22581);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONNAME = @as(c_int, 22582);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_BRANCHID = @as(c_int, 22583);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RETAIN = @as(c_int, 22584);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE = @as(c_int, 22585);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_ID = @as(c_int, 22586);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NAME = @as(c_int, 22587);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NUMBER = @as(c_int, 22588);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22589);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 22590);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22591);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRUESTATE = @as(c_int, 22592);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_FALSESTATE = @as(c_int, 22593);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_QUALITY = @as(c_int, 22594);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_QUALITY_SOURCETIMESTAMP = @as(c_int, 22595);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LASTSEVERITY = @as(c_int, 22596);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 22597);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_COMMENT = @as(c_int, 22598);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_COMMENT_SOURCETIMESTAMP = @as(c_int, 22599);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CLIENTUSERID = @as(c_int, 22600);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_DISABLE = @as(c_int, 22601);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLE = @as(c_int, 22602);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ADDCOMMENT = @as(c_int, 22603);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 22604);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE = @as(c_int, 22605);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_ID = @as(c_int, 22606);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NAME = @as(c_int, 22607);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NUMBER = @as(c_int, 22608);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22609);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 22610);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22611);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRUESTATE = @as(c_int, 22612);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_FALSESTATE = @as(c_int, 22613);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE = @as(c_int, 22614);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_ID = @as(c_int, 22615);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NAME = @as(c_int, 22616);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NUMBER = @as(c_int, 22617);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22618);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 22619);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22620);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 22621);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 22622);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE = @as(c_int, 22623);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 22624);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRM = @as(c_int, 22625);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRM_INPUTARGUMENTS = @as(c_int, 22626);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE = @as(c_int, 22627);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_ID = @as(c_int, 22628);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NAME = @as(c_int, 22629);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NUMBER = @as(c_int, 22630);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22631);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 22632);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22633);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRUESTATE = @as(c_int, 22634);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_FALSESTATE = @as(c_int, 22635);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_INPUTNODE = @as(c_int, 22636);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE = @as(c_int, 22637);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_ID = @as(c_int, 22638);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NAME = @as(c_int, 22639);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NUMBER = @as(c_int, 22640);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22641);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 22642);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22643);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 22644);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 22645);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE = @as(c_int, 22646);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_ID = @as(c_int, 22647);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NAME = @as(c_int, 22648);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NUMBER = @as(c_int, 22649);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22650);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 22651);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22652);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 22653);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 22654);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE = @as(c_int, 22655);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 22656);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 22657);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 22658);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 22659);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22660);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 22661);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 22662);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 22663);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 22664);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 22665);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 22666);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 22667);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 22668);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 22669);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 22670);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 22671);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE = @as(c_int, 22672);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 22673);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDORSHELVED = @as(c_int, 22674);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_MAXTIMESHELVED = @as(c_int, 22675);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLEENABLED = @as(c_int, 22676);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND = @as(c_int, 22677);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_LISTID = @as(c_int, 22678);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_AGENCYID = @as(c_int, 22679);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_VERSIONID = @as(c_int, 22680);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE = @as(c_int, 22681);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_ID = @as(c_int, 22682);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NAME = @as(c_int, 22683);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NUMBER = @as(c_int, 22684);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22685);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRANSITIONTIME = @as(c_int, 22686);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22687);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRUESTATE = @as(c_int, 22688);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_FALSESTATE = @as(c_int, 22689);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ONDELAY = @as(c_int, 22690);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OFFDELAY = @as(c_int, 22691);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_FIRSTINGROUPFLAG = @as(c_int, 22692);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_FIRSTINGROUP = @as(c_int, 22693);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE = @as(c_int, 22694);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_ID = @as(c_int, 22695);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NAME = @as(c_int, 22696);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NUMBER = @as(c_int, 22697);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22698);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 22699);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22700);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRUESTATE = @as(c_int, 22701);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_FALSESTATE = @as(c_int, 22702);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REALARMTIME = @as(c_int, 22703);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REALARMREPEATCOUNT = @as(c_int, 22704);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCE = @as(c_int, 22705);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESS = @as(c_int, 22706);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_UNSUPPRESS = @as(c_int, 22707);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE = @as(c_int, 22708);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE = @as(c_int, 22709);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RESET = @as(c_int, 22710);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_NORMALSTATE = @as(c_int, 22711);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_EXPIRATIONDATE = @as(c_int, 22712);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_EXPIRATIONLIMIT = @as(c_int, 22713);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CERTIFICATETYPE = @as(c_int, 22714);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CERTIFICATE = @as(c_int, 22715);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE = @as(c_int, 22716);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_EVENTID = @as(c_int, 22717);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_EVENTTYPE = @as(c_int, 22718);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SOURCENODE = @as(c_int, 22719);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SOURCENAME = @as(c_int, 22720);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_TIME = @as(c_int, 22721);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RECEIVETIME = @as(c_int, 22722);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LOCALTIME = @as(c_int, 22723);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_MESSAGE = @as(c_int, 22724);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SEVERITY = @as(c_int, 22725);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSID = @as(c_int, 22726);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSNAME = @as(c_int, 22727);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSID = @as(c_int, 22728);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSNAME = @as(c_int, 22729);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONNAME = @as(c_int, 22730);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_BRANCHID = @as(c_int, 22731);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RETAIN = @as(c_int, 22732);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE = @as(c_int, 22733);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_ID = @as(c_int, 22734);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NAME = @as(c_int, 22735);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NUMBER = @as(c_int, 22736);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22737);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 22738);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22739);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRUESTATE = @as(c_int, 22740);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_FALSESTATE = @as(c_int, 22741);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_QUALITY = @as(c_int, 22742);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_QUALITY_SOURCETIMESTAMP = @as(c_int, 22743);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY = @as(c_int, 22744);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 22745);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_COMMENT = @as(c_int, 22746);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_COMMENT_SOURCETIMESTAMP = @as(c_int, 22747);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CLIENTUSERID = @as(c_int, 22748);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_DISABLE = @as(c_int, 22749);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLE = @as(c_int, 22750);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT = @as(c_int, 22751);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 22752);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE = @as(c_int, 22753);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_ID = @as(c_int, 22754);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NAME = @as(c_int, 22755);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NUMBER = @as(c_int, 22756);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22757);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 22758);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22759);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRUESTATE = @as(c_int, 22760);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_FALSESTATE = @as(c_int, 22761);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE = @as(c_int, 22762);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_ID = @as(c_int, 22763);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NAME = @as(c_int, 22764);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NUMBER = @as(c_int, 22765);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22766);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 22767);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22768);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 22769);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 22770);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE = @as(c_int, 22771);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 22772);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRM = @as(c_int, 22773);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRM_INPUTARGUMENTS = @as(c_int, 22774);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE = @as(c_int, 22775);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_ID = @as(c_int, 22776);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NAME = @as(c_int, 22777);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NUMBER = @as(c_int, 22778);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22779);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 22780);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22781);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRUESTATE = @as(c_int, 22782);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_FALSESTATE = @as(c_int, 22783);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_INPUTNODE = @as(c_int, 22784);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE = @as(c_int, 22785);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_ID = @as(c_int, 22786);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NAME = @as(c_int, 22787);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 22788);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22789);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 22790);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22791);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 22792);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 22793);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE = @as(c_int, 22794);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_ID = @as(c_int, 22795);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NAME = @as(c_int, 22796);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 22797);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22798);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 22799);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22800);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 22801);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 22802);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE = @as(c_int, 22803);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 22804);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 22805);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 22806);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 22807);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22808);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 22809);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 22810);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 22811);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 22812);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 22813);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 22814);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 22815);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 22816);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 22817);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 22818);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 22819);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE = @as(c_int, 22820);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 22821);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDORSHELVED = @as(c_int, 22822);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_MAXTIMESHELVED = @as(c_int, 22823);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLEENABLED = @as(c_int, 22824);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND = @as(c_int, 22825);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_LISTID = @as(c_int, 22826);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_AGENCYID = @as(c_int, 22827);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_VERSIONID = @as(c_int, 22828);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE = @as(c_int, 22829);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_ID = @as(c_int, 22830);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NAME = @as(c_int, 22831);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NUMBER = @as(c_int, 22832);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22833);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 22834);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22835);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRUESTATE = @as(c_int, 22836);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_FALSESTATE = @as(c_int, 22837);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ONDELAY = @as(c_int, 22838);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OFFDELAY = @as(c_int, 22839);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUPFLAG = @as(c_int, 22840);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUP = @as(c_int, 22841);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE = @as(c_int, 22842);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_ID = @as(c_int, 22843);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NAME = @as(c_int, 22844);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NUMBER = @as(c_int, 22845);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22846);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 22847);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22848);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRUESTATE = @as(c_int, 22849);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_FALSESTATE = @as(c_int, 22850);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REALARMTIME = @as(c_int, 22851);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REALARMREPEATCOUNT = @as(c_int, 22852);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCE = @as(c_int, 22853);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESS = @as(c_int, 22854);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS = @as(c_int, 22855);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE = @as(c_int, 22856);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE = @as(c_int, 22857);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RESET = @as(c_int, 22858);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_NORMALSTATE = @as(c_int, 22859);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_TRUSTLISTID = @as(c_int, 22860);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LASTUPDATETIME = @as(c_int, 22861);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_UPDATEFREQUENCY = @as(c_int, 22862);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_UPDATEFREQUENCY = @as(c_int, 22863);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED = @as(c_int, 22864);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_EVENTID = @as(c_int, 22865);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_EVENTTYPE = @as(c_int, 22866);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SOURCENODE = @as(c_int, 22867);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SOURCENAME = @as(c_int, 22868);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_TIME = @as(c_int, 22869);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RECEIVETIME = @as(c_int, 22870);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LOCALTIME = @as(c_int, 22871);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_MESSAGE = @as(c_int, 22872);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SEVERITY = @as(c_int, 22873);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSID = @as(c_int, 22874);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSNAME = @as(c_int, 22875);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSID = @as(c_int, 22876);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSNAME = @as(c_int, 22877);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONNAME = @as(c_int, 22878);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_BRANCHID = @as(c_int, 22879);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RETAIN = @as(c_int, 22880);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE = @as(c_int, 22881);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_ID = @as(c_int, 22882);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NAME = @as(c_int, 22883);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NUMBER = @as(c_int, 22884);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22885);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 22886);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22887);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRUESTATE = @as(c_int, 22888);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_FALSESTATE = @as(c_int, 22889);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_QUALITY = @as(c_int, 22890);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_QUALITY_SOURCETIMESTAMP = @as(c_int, 22891);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LASTSEVERITY = @as(c_int, 22892);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 22893);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_COMMENT = @as(c_int, 22894);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_COMMENT_SOURCETIMESTAMP = @as(c_int, 22895);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CLIENTUSERID = @as(c_int, 22896);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_DISABLE = @as(c_int, 22897);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLE = @as(c_int, 22898);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ADDCOMMENT = @as(c_int, 22899);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 22900);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE = @as(c_int, 22901);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_ID = @as(c_int, 22902);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NAME = @as(c_int, 22903);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NUMBER = @as(c_int, 22904);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22905);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 22906);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22907);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRUESTATE = @as(c_int, 22908);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_FALSESTATE = @as(c_int, 22909);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE = @as(c_int, 22910);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_ID = @as(c_int, 22911);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NAME = @as(c_int, 22912);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NUMBER = @as(c_int, 22913);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22914);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 22915);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22916);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 22917);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 22918);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE = @as(c_int, 22919);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 22920);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRM = @as(c_int, 22921);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRM_INPUTARGUMENTS = @as(c_int, 22922);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE = @as(c_int, 22923);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_ID = @as(c_int, 22924);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NAME = @as(c_int, 22925);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NUMBER = @as(c_int, 22926);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22927);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 22928);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22929);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRUESTATE = @as(c_int, 22930);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_FALSESTATE = @as(c_int, 22931);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_INPUTNODE = @as(c_int, 22932);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE = @as(c_int, 22933);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_ID = @as(c_int, 22934);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NAME = @as(c_int, 22935);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NUMBER = @as(c_int, 22936);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22937);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 22938);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22939);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 22940);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 22941);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE = @as(c_int, 22942);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_ID = @as(c_int, 22943);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NAME = @as(c_int, 22944);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NUMBER = @as(c_int, 22945);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22946);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 22947);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22948);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 22949);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 22950);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE = @as(c_int, 22951);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 22952);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 22953);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 22954);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 22955);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22956);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 22957);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 22958);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 22959);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 22960);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 22961);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 22962);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 22963);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 22964);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 22965);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 22966);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 22967);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE = @as(c_int, 22968);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 22969);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDORSHELVED = @as(c_int, 22970);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_MAXTIMESHELVED = @as(c_int, 22971);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLEENABLED = @as(c_int, 22972);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND = @as(c_int, 22973);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_LISTID = @as(c_int, 22974);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_AGENCYID = @as(c_int, 22975);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_VERSIONID = @as(c_int, 22976);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE = @as(c_int, 22977);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_ID = @as(c_int, 22978);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NAME = @as(c_int, 22979);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NUMBER = @as(c_int, 22980);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22981);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRANSITIONTIME = @as(c_int, 22982);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22983);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRUESTATE = @as(c_int, 22984);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_FALSESTATE = @as(c_int, 22985);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ONDELAY = @as(c_int, 22986);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OFFDELAY = @as(c_int, 22987);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_FIRSTINGROUPFLAG = @as(c_int, 22988);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_FIRSTINGROUP = @as(c_int, 22989);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE = @as(c_int, 22990);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_ID = @as(c_int, 22991);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NAME = @as(c_int, 22992);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NUMBER = @as(c_int, 22993);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 22994);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 22995);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 22996);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRUESTATE = @as(c_int, 22997);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_FALSESTATE = @as(c_int, 22998);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REALARMTIME = @as(c_int, 22999);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REALARMREPEATCOUNT = @as(c_int, 23000);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCE = @as(c_int, 23001);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESS = @as(c_int, 23002);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_UNSUPPRESS = @as(c_int, 23003);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE = @as(c_int, 23004);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE = @as(c_int, 23005);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RESET = @as(c_int, 23006);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_NORMALSTATE = @as(c_int, 23007);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_EXPIRATIONDATE = @as(c_int, 23008);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_EXPIRATIONLIMIT = @as(c_int, 23009);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CERTIFICATETYPE = @as(c_int, 23010);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CERTIFICATE = @as(c_int, 23011);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE = @as(c_int, 23012);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_EVENTID = @as(c_int, 23013);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_EVENTTYPE = @as(c_int, 23014);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SOURCENODE = @as(c_int, 23015);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SOURCENAME = @as(c_int, 23016);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_TIME = @as(c_int, 23017);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RECEIVETIME = @as(c_int, 23018);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LOCALTIME = @as(c_int, 23019);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_MESSAGE = @as(c_int, 23020);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SEVERITY = @as(c_int, 23021);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSID = @as(c_int, 23022);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSNAME = @as(c_int, 23023);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSID = @as(c_int, 23024);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSNAME = @as(c_int, 23025);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONNAME = @as(c_int, 23026);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_BRANCHID = @as(c_int, 23027);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RETAIN = @as(c_int, 23028);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE = @as(c_int, 23029);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_ID = @as(c_int, 23030);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NAME = @as(c_int, 23031);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NUMBER = @as(c_int, 23032);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23033);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 23034);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 23035);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRUESTATE = @as(c_int, 23036);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_FALSESTATE = @as(c_int, 23037);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_QUALITY = @as(c_int, 23038);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_QUALITY_SOURCETIMESTAMP = @as(c_int, 23039);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY = @as(c_int, 23040);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 23041);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_COMMENT = @as(c_int, 23042);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_COMMENT_SOURCETIMESTAMP = @as(c_int, 23043);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CLIENTUSERID = @as(c_int, 23044);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_DISABLE = @as(c_int, 23045);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLE = @as(c_int, 23046);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT = @as(c_int, 23047);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 23048);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE = @as(c_int, 23049);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_ID = @as(c_int, 23050);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NAME = @as(c_int, 23051);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NUMBER = @as(c_int, 23052);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23053);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 23054);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 23055);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRUESTATE = @as(c_int, 23056);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_FALSESTATE = @as(c_int, 23057);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE = @as(c_int, 23058);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_ID = @as(c_int, 23059);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NAME = @as(c_int, 23060);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NUMBER = @as(c_int, 23061);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23062);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 23063);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 23064);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 23065);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 23066);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE = @as(c_int, 23067);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 23068);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRM = @as(c_int, 23069);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRM_INPUTARGUMENTS = @as(c_int, 23070);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE = @as(c_int, 23071);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_ID = @as(c_int, 23072);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NAME = @as(c_int, 23073);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NUMBER = @as(c_int, 23074);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23075);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 23076);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 23077);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRUESTATE = @as(c_int, 23078);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_FALSESTATE = @as(c_int, 23079);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_INPUTNODE = @as(c_int, 23080);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE = @as(c_int, 23081);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_ID = @as(c_int, 23082);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NAME = @as(c_int, 23083);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 23084);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23085);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 23086);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 23087);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 23088);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 23089);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE = @as(c_int, 23090);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_ID = @as(c_int, 23091);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NAME = @as(c_int, 23092);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 23093);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23094);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 23095);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 23096);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 23097);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 23098);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE = @as(c_int, 23099);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 23100);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 23101);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 23102);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 23103);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23104);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 23105);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 23106);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 23107);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 23108);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 23109);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 23110);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 23111);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 23112);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 23113);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 23114);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 23115);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE = @as(c_int, 23116);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 23117);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDORSHELVED = @as(c_int, 23118);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_MAXTIMESHELVED = @as(c_int, 23119);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLEENABLED = @as(c_int, 23120);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND = @as(c_int, 23121);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_LISTID = @as(c_int, 23122);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_AGENCYID = @as(c_int, 23123);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_VERSIONID = @as(c_int, 23124);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE = @as(c_int, 23125);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_ID = @as(c_int, 23126);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NAME = @as(c_int, 23127);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NUMBER = @as(c_int, 23128);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23129);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 23130);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 23131);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRUESTATE = @as(c_int, 23132);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_FALSESTATE = @as(c_int, 23133);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ONDELAY = @as(c_int, 23134);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OFFDELAY = @as(c_int, 23135);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUPFLAG = @as(c_int, 23136);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUP = @as(c_int, 23137);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE = @as(c_int, 23138);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_ID = @as(c_int, 23139);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NAME = @as(c_int, 23140);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NUMBER = @as(c_int, 23141);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23142);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 23143);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 23144);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRUESTATE = @as(c_int, 23145);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_FALSESTATE = @as(c_int, 23146);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REALARMTIME = @as(c_int, 23147);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REALARMREPEATCOUNT = @as(c_int, 23148);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCE = @as(c_int, 23149);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESS = @as(c_int, 23150);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS = @as(c_int, 23151);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE = @as(c_int, 23152);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE = @as(c_int, 23153);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RESET = @as(c_int, 23154);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_NORMALSTATE = @as(c_int, 23155);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_TRUSTLISTID = @as(c_int, 23156);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LASTUPDATETIME = @as(c_int, 23157);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_UPDATEFREQUENCY = @as(c_int, 23158);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_UPDATEFREQUENCY = @as(c_int, 23159);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED = @as(c_int, 23160);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_EVENTID = @as(c_int, 23161);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_EVENTTYPE = @as(c_int, 23162);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SOURCENODE = @as(c_int, 23163);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SOURCENAME = @as(c_int, 23164);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_TIME = @as(c_int, 23165);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RECEIVETIME = @as(c_int, 23166);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LOCALTIME = @as(c_int, 23167);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_MESSAGE = @as(c_int, 23168);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SEVERITY = @as(c_int, 23169);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSID = @as(c_int, 23170);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSNAME = @as(c_int, 23171);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSID = @as(c_int, 23172);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSNAME = @as(c_int, 23173);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONNAME = @as(c_int, 23174);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_BRANCHID = @as(c_int, 23175);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RETAIN = @as(c_int, 23176);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE = @as(c_int, 23177);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_ID = @as(c_int, 23178);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NAME = @as(c_int, 23179);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NUMBER = @as(c_int, 23180);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23181);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 23182);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 23183);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRUESTATE = @as(c_int, 23184);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_FALSESTATE = @as(c_int, 23185);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_QUALITY = @as(c_int, 23186);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_QUALITY_SOURCETIMESTAMP = @as(c_int, 23187);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LASTSEVERITY = @as(c_int, 23188);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 23189);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_COMMENT = @as(c_int, 23190);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_COMMENT_SOURCETIMESTAMP = @as(c_int, 23191);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CLIENTUSERID = @as(c_int, 23192);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_DISABLE = @as(c_int, 23193);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLE = @as(c_int, 23194);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ADDCOMMENT = @as(c_int, 23195);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 23196);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE = @as(c_int, 23197);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_ID = @as(c_int, 23198);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NAME = @as(c_int, 23199);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NUMBER = @as(c_int, 23200);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23201);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 23202);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 23203);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRUESTATE = @as(c_int, 23204);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_FALSESTATE = @as(c_int, 23205);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE = @as(c_int, 23206);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_ID = @as(c_int, 23207);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NAME = @as(c_int, 23208);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NUMBER = @as(c_int, 23209);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23210);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 23211);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 23212);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 23213);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 23214);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE = @as(c_int, 23215);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 23216);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRM = @as(c_int, 23217);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRM_INPUTARGUMENTS = @as(c_int, 23218);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE = @as(c_int, 23219);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_ID = @as(c_int, 23220);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NAME = @as(c_int, 23221);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NUMBER = @as(c_int, 23222);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23223);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 23224);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 23225);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRUESTATE = @as(c_int, 23226);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_FALSESTATE = @as(c_int, 23227);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_INPUTNODE = @as(c_int, 23228);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE = @as(c_int, 23229);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_ID = @as(c_int, 23230);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NAME = @as(c_int, 23231);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NUMBER = @as(c_int, 23232);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23233);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 23234);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 23235);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 23236);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 23237);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE = @as(c_int, 23238);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_ID = @as(c_int, 23239);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NAME = @as(c_int, 23240);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NUMBER = @as(c_int, 23241);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23242);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 23243);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 23244);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 23245);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 23246);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE = @as(c_int, 23247);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 23248);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 23249);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 23250);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 23251);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23252);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 23253);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 23254);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 23255);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 23256);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 23257);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 23258);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 23259);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 23260);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 23261);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 23262);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 23263);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE = @as(c_int, 23264);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 23265);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDORSHELVED = @as(c_int, 23266);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_MAXTIMESHELVED = @as(c_int, 23267);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLEENABLED = @as(c_int, 23268);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND = @as(c_int, 23269);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_LISTID = @as(c_int, 23270);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_AGENCYID = @as(c_int, 23271);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_VERSIONID = @as(c_int, 23272);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE = @as(c_int, 23273);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_ID = @as(c_int, 23274);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NAME = @as(c_int, 23275);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NUMBER = @as(c_int, 23276);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23277);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRANSITIONTIME = @as(c_int, 23278);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 23279);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRUESTATE = @as(c_int, 23280);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_FALSESTATE = @as(c_int, 23281);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ONDELAY = @as(c_int, 23282);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OFFDELAY = @as(c_int, 23283);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_FIRSTINGROUPFLAG = @as(c_int, 23284);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_FIRSTINGROUP = @as(c_int, 23285);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE = @as(c_int, 23286);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_ID = @as(c_int, 23287);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NAME = @as(c_int, 23288);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NUMBER = @as(c_int, 23289);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23290);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 23291);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 23292);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRUESTATE = @as(c_int, 23293);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_FALSESTATE = @as(c_int, 23294);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REALARMTIME = @as(c_int, 23295);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REALARMREPEATCOUNT = @as(c_int, 23296);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCE = @as(c_int, 23297);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESS = @as(c_int, 23298);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_UNSUPPRESS = @as(c_int, 23299);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE = @as(c_int, 23300);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE = @as(c_int, 23301);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RESET = @as(c_int, 23302);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_NORMALSTATE = @as(c_int, 23303);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_EXPIRATIONDATE = @as(c_int, 23304);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_EXPIRATIONLIMIT = @as(c_int, 23305);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CERTIFICATETYPE = @as(c_int, 23306);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CERTIFICATE = @as(c_int, 23307);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE = @as(c_int, 23308);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_EVENTID = @as(c_int, 23309);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_EVENTTYPE = @as(c_int, 23310);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SOURCENODE = @as(c_int, 23311);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SOURCENAME = @as(c_int, 23312);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_TIME = @as(c_int, 23313);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RECEIVETIME = @as(c_int, 23314);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LOCALTIME = @as(c_int, 23315);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_MESSAGE = @as(c_int, 23316);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SEVERITY = @as(c_int, 23317);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSID = @as(c_int, 23318);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSNAME = @as(c_int, 23319);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSID = @as(c_int, 23320);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSNAME = @as(c_int, 23321);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONNAME = @as(c_int, 23322);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_BRANCHID = @as(c_int, 23323);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RETAIN = @as(c_int, 23324);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE = @as(c_int, 23325);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_ID = @as(c_int, 23326);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NAME = @as(c_int, 23327);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NUMBER = @as(c_int, 23328);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23329);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 23330);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 23331);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRUESTATE = @as(c_int, 23332);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_FALSESTATE = @as(c_int, 23333);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_QUALITY = @as(c_int, 23334);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_QUALITY_SOURCETIMESTAMP = @as(c_int, 23335);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY = @as(c_int, 23336);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 23337);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_COMMENT = @as(c_int, 23338);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_COMMENT_SOURCETIMESTAMP = @as(c_int, 23339);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CLIENTUSERID = @as(c_int, 23340);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_DISABLE = @as(c_int, 23341);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLE = @as(c_int, 23342);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT = @as(c_int, 23343);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 23344);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE = @as(c_int, 23345);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_ID = @as(c_int, 23346);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NAME = @as(c_int, 23347);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NUMBER = @as(c_int, 23348);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23349);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 23350);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 23351);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRUESTATE = @as(c_int, 23352);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_FALSESTATE = @as(c_int, 23353);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE = @as(c_int, 23354);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_ID = @as(c_int, 23355);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NAME = @as(c_int, 23356);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NUMBER = @as(c_int, 23357);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23358);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 23359);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 23360);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 23361);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 23362);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE = @as(c_int, 23363);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 23364);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRM = @as(c_int, 23365);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRM_INPUTARGUMENTS = @as(c_int, 23366);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE = @as(c_int, 23367);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_ID = @as(c_int, 23368);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NAME = @as(c_int, 23369);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NUMBER = @as(c_int, 23370);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23371);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 23372);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 23373);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRUESTATE = @as(c_int, 23374);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_FALSESTATE = @as(c_int, 23375);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_INPUTNODE = @as(c_int, 23376);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE = @as(c_int, 23377);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_ID = @as(c_int, 23378);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NAME = @as(c_int, 23379);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 23380);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23381);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 23382);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 23383);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 23384);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 23385);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE = @as(c_int, 23386);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_ID = @as(c_int, 23387);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NAME = @as(c_int, 23388);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 23389);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23390);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 23391);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 23392);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 23393);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 23394);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE = @as(c_int, 23395);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 23396);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 23397);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 23398);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 23399);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23400);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 23401);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 23402);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 23403);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 23404);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 23405);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 23406);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 23407);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 23408);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 23409);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 23410);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 23411);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE = @as(c_int, 23412);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 23413);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDORSHELVED = @as(c_int, 23414);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_MAXTIMESHELVED = @as(c_int, 23415);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLEENABLED = @as(c_int, 23416);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND = @as(c_int, 23417);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_LISTID = @as(c_int, 23418);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_AGENCYID = @as(c_int, 23419);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_VERSIONID = @as(c_int, 23420);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE = @as(c_int, 23421);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_ID = @as(c_int, 23422);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NAME = @as(c_int, 23423);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NUMBER = @as(c_int, 23424);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23425);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 23426);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 23427);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRUESTATE = @as(c_int, 23428);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_FALSESTATE = @as(c_int, 23429);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ONDELAY = @as(c_int, 23430);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OFFDELAY = @as(c_int, 23431);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUPFLAG = @as(c_int, 23432);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUP = @as(c_int, 23433);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE = @as(c_int, 23434);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_ID = @as(c_int, 23435);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NAME = @as(c_int, 23436);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NUMBER = @as(c_int, 23437);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 23438);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 23439);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 23440);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRUESTATE = @as(c_int, 23441);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_FALSESTATE = @as(c_int, 23442);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REALARMTIME = @as(c_int, 23443);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REALARMREPEATCOUNT = @as(c_int, 23444);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCE = @as(c_int, 23445);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESS = @as(c_int, 23446);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS = @as(c_int, 23447);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE = @as(c_int, 23448);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE = @as(c_int, 23449);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RESET = @as(c_int, 23450);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_NORMALSTATE = @as(c_int, 23451);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_TRUSTLISTID = @as(c_int, 23452);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LASTUPDATETIME = @as(c_int, 23453);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_UPDATEFREQUENCY = @as(c_int, 23454);
pub const UA_NS0ID_ALIASNAMETYPE = @as(c_int, 23455);
pub const UA_NS0ID_ALIASNAMECATEGORYTYPE = @as(c_int, 23456);
pub const UA_NS0ID_ALIASNAMECATEGORYTYPE_ALIAS_PLACEHOLDER = @as(c_int, 23457);
pub const UA_NS0ID_ALIASNAMECATEGORYTYPE_SUBALIASNAMECATEGORIES_PLACEHOLDER = @as(c_int, 23458);
pub const UA_NS0ID_ALIASNAMECATEGORYTYPE_SUBALIASNAMECATEGORIES_PLACEHOLDER_FINDALIAS = @as(c_int, 23459);
pub const UA_NS0ID_ALIASNAMECATEGORYTYPE_SUBALIASNAMECATEGORIES_PLACEHOLDER_FINDALIAS_INPUTARGUMENTS = @as(c_int, 23460);
pub const UA_NS0ID_ALIASNAMECATEGORYTYPE_SUBALIASNAMECATEGORIES_PLACEHOLDER_FINDALIAS_OUTPUTARGUMENTS = @as(c_int, 23461);
pub const UA_NS0ID_ALIASNAMECATEGORYTYPE_FINDALIAS = @as(c_int, 23462);
pub const UA_NS0ID_ALIASNAMECATEGORYTYPE_FINDALIAS_INPUTARGUMENTS = @as(c_int, 23463);
pub const UA_NS0ID_ALIASNAMECATEGORYTYPE_FINDALIAS_OUTPUTARGUMENTS = @as(c_int, 23464);
pub const UA_NS0ID_FINDALIASMETHODTYPE = @as(c_int, 23465);
pub const UA_NS0ID_FINDALIASMETHODTYPE_INPUTARGUMENTS = @as(c_int, 23466);
pub const UA_NS0ID_FINDALIASMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 23467);
pub const UA_NS0ID_ALIASNAMEDATATYPE = @as(c_int, 23468);
pub const UA_NS0ID_ALIASFOR = @as(c_int, 23469);
pub const UA_NS0ID_ALIASES = @as(c_int, 23470);
pub const UA_NS0ID_ALIASES_ALIAS_PLACEHOLDER = @as(c_int, 23471);
pub const UA_NS0ID_ALIASES_SUBALIASNAMECATEGORIES_PLACEHOLDER = @as(c_int, 23472);
pub const UA_NS0ID_ALIASES_SUBALIASNAMECATEGORIES_PLACEHOLDER_FINDALIAS = @as(c_int, 23473);
pub const UA_NS0ID_ALIASES_SUBALIASNAMECATEGORIES_PLACEHOLDER_FINDALIAS_INPUTARGUMENTS = @as(c_int, 23474);
pub const UA_NS0ID_ALIASES_SUBALIASNAMECATEGORIES_PLACEHOLDER_FINDALIAS_OUTPUTARGUMENTS = @as(c_int, 23475);
pub const UA_NS0ID_ALIASES_FINDALIAS = @as(c_int, 23476);
pub const UA_NS0ID_ALIASES_FINDALIAS_INPUTARGUMENTS = @as(c_int, 23477);
pub const UA_NS0ID_ALIASES_FINDALIAS_OUTPUTARGUMENTS = @as(c_int, 23478);
pub const UA_NS0ID_TAGVARIABLES = @as(c_int, 23479);
pub const UA_NS0ID_TAGVARIABLES_ALIAS_PLACEHOLDER = @as(c_int, 23480);
pub const UA_NS0ID_TAGVARIABLES_SUBALIASNAMECATEGORIES_PLACEHOLDER = @as(c_int, 23481);
pub const UA_NS0ID_TAGVARIABLES_SUBALIASNAMECATEGORIES_PLACEHOLDER_FINDALIAS = @as(c_int, 23482);
pub const UA_NS0ID_TAGVARIABLES_SUBALIASNAMECATEGORIES_PLACEHOLDER_FINDALIAS_INPUTARGUMENTS = @as(c_int, 23483);
pub const UA_NS0ID_TAGVARIABLES_SUBALIASNAMECATEGORIES_PLACEHOLDER_FINDALIAS_OUTPUTARGUMENTS = @as(c_int, 23484);
pub const UA_NS0ID_TAGVARIABLES_FINDALIAS = @as(c_int, 23485);
pub const UA_NS0ID_TAGVARIABLES_FINDALIAS_INPUTARGUMENTS = @as(c_int, 23486);
pub const UA_NS0ID_TAGVARIABLES_FINDALIAS_OUTPUTARGUMENTS = @as(c_int, 23487);
pub const UA_NS0ID_TOPICS = @as(c_int, 23488);
pub const UA_NS0ID_TOPICS_ALIAS_PLACEHOLDER = @as(c_int, 23489);
pub const UA_NS0ID_TOPICS_SUBALIASNAMECATEGORIES_PLACEHOLDER = @as(c_int, 23490);
pub const UA_NS0ID_TOPICS_SUBALIASNAMECATEGORIES_PLACEHOLDER_FINDALIAS = @as(c_int, 23491);
pub const UA_NS0ID_TOPICS_SUBALIASNAMECATEGORIES_PLACEHOLDER_FINDALIAS_INPUTARGUMENTS = @as(c_int, 23492);
pub const UA_NS0ID_TOPICS_SUBALIASNAMECATEGORIES_PLACEHOLDER_FINDALIAS_OUTPUTARGUMENTS = @as(c_int, 23493);
pub const UA_NS0ID_TOPICS_FINDALIAS = @as(c_int, 23494);
pub const UA_NS0ID_TOPICS_FINDALIAS_INPUTARGUMENTS = @as(c_int, 23495);
pub const UA_NS0ID_TOPICS_FINDALIAS_OUTPUTARGUMENTS = @as(c_int, 23496);
pub const UA_NS0ID_READANNOTATIONDATADETAILS = @as(c_int, 23497);
pub const UA_NS0ID_CURRENCYUNITTYPE = @as(c_int, 23498);
pub const UA_NS0ID_ALIASNAMEDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 23499);
pub const UA_NS0ID_READANNOTATIONDATADETAILS_ENCODING_DEFAULTBINARY = @as(c_int, 23500);
pub const UA_NS0ID_CURRENCYUNIT = @as(c_int, 23501);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ALIASNAMEDATATYPE = @as(c_int, 23502);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ALIASNAMEDATATYPE_DATATYPEVERSION = @as(c_int, 23503);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_ALIASNAMEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 23504);
pub const UA_NS0ID_ALIASNAMEDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 23505);
pub const UA_NS0ID_READANNOTATIONDATADETAILS_ENCODING_DEFAULTXML = @as(c_int, 23506);
pub const UA_NS0ID_CURRENCYUNITTYPE_ENCODING_DEFAULTBINARY = @as(c_int, 23507);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ALIASNAMEDATATYPE = @as(c_int, 23508);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ALIASNAMEDATATYPE_DATATYPEVERSION = @as(c_int, 23509);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_ALIASNAMEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 23510);
pub const UA_NS0ID_ALIASNAMEDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 23511);
pub const UA_NS0ID_READANNOTATIONDATADETAILS_ENCODING_DEFAULTJSON = @as(c_int, 23512);
pub const UA_NS0ID_IORDEREDOBJECTTYPE = @as(c_int, 23513);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_CURRENCYUNITTYPE = @as(c_int, 23514);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_CURRENCYUNITTYPE_DATATYPEVERSION = @as(c_int, 23515);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_CURRENCYUNITTYPE_DICTIONARYFRAGMENT = @as(c_int, 23516);
pub const UA_NS0ID_IORDEREDOBJECTTYPE_NUMBERINLIST = @as(c_int, 23517);
pub const UA_NS0ID_ORDEREDLISTTYPE = @as(c_int, 23518);
pub const UA_NS0ID_ORDEREDLISTTYPE_ORDEREDOBJECT_PLACEHOLDER = @as(c_int, 23519);
pub const UA_NS0ID_CURRENCYUNITTYPE_ENCODING_DEFAULTXML = @as(c_int, 23520);
pub const UA_NS0ID_ORDEREDLISTTYPE_ORDEREDOBJECT_PLACEHOLDER_NUMBERINLIST = @as(c_int, 23521);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_CURRENCYUNITTYPE = @as(c_int, 23522);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_CURRENCYUNITTYPE_DATATYPEVERSION = @as(c_int, 23523);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_CURRENCYUNITTYPE_DICTIONARYFRAGMENT = @as(c_int, 23524);
pub const UA_NS0ID_ORDEREDLISTTYPE_NODEVERSION = @as(c_int, 23525);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_GETREJECTEDLIST = @as(c_int, 23526);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_GETREJECTEDLIST_OUTPUTARGUMENTS = @as(c_int, 23527);
pub const UA_NS0ID_CURRENCYUNITTYPE_ENCODING_DEFAULTJSON = @as(c_int, 23528);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_GETREJECTEDLIST = @as(c_int, 23529);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_GETREJECTEDLIST_OUTPUTARGUMENTS = @as(c_int, 23530);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_GETREJECTEDLIST = @as(c_int, 23531);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_GETREJECTEDLIST_OUTPUTARGUMENTS = @as(c_int, 23532);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_GETREJECTEDLIST = @as(c_int, 23533);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_GETREJECTEDLIST_OUTPUTARGUMENTS = @as(c_int, 23534);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_GETREJECTEDLIST = @as(c_int, 23535);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_GETREJECTEDLIST_OUTPUTARGUMENTS = @as(c_int, 23536);
pub const UA_NS0ID_ECCAPPLICATIONCERTIFICATETYPE = @as(c_int, 23537);
pub const UA_NS0ID_ECCNISTP256APPLICATIONCERTIFICATETYPE = @as(c_int, 23538);
pub const UA_NS0ID_ECCNISTP384APPLICATIONCERTIFICATETYPE = @as(c_int, 23539);
pub const UA_NS0ID_ECCBRAINPOOLP256R1APPLICATIONCERTIFICATETYPE = @as(c_int, 23540);
pub const UA_NS0ID_ECCBRAINPOOLP384R1APPLICATIONCERTIFICATETYPE = @as(c_int, 23541);
pub const UA_NS0ID_ECCCURVE25519APPLICATIONCERTIFICATETYPE = @as(c_int, 23542);
pub const UA_NS0ID_ECCCURVE448APPLICATIONCERTIFICATETYPE = @as(c_int, 23543);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_GETREJECTEDLIST = @as(c_int, 23544);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_GETREJECTEDLIST_OUTPUTARGUMENTS = @as(c_int, 23545);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_GETREJECTEDLIST = @as(c_int, 23546);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_GETREJECTEDLIST_OUTPUTARGUMENTS = @as(c_int, 23547);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_GETREJECTEDLIST = @as(c_int, 23548);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_GETREJECTEDLIST_OUTPUTARGUMENTS = @as(c_int, 23549);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_GETREJECTEDLIST = @as(c_int, 23550);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_GETREJECTEDLIST_OUTPUTARGUMENTS = @as(c_int, 23551);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_GETREJECTEDLIST = @as(c_int, 23552);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_GETREJECTEDLIST_OUTPUTARGUMENTS = @as(c_int, 23553);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_GETREJECTEDLIST = @as(c_int, 23554);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_GETREJECTEDLIST_OUTPUTARGUMENTS = @as(c_int, 23555);
pub const UA_NS0ID_AUTHORIZATIONSERVICESCONFIGURATIONFOLDERTYPE = @as(c_int, 23556);
pub const UA_NS0ID_AUTHORIZATIONSERVICESCONFIGURATIONFOLDERTYPE_SERVICENAME_PLACEHOLDER = @as(c_int, 23557);
pub const UA_NS0ID_AUTHORIZATIONSERVICESCONFIGURATIONFOLDERTYPE_SERVICENAME_PLACEHOLDER_SERVICEURI = @as(c_int, 23558);
pub const UA_NS0ID_AUTHORIZATIONSERVICESCONFIGURATIONFOLDERTYPE_SERVICENAME_PLACEHOLDER_SERVICECERTIFICATE = @as(c_int, 23559);
pub const UA_NS0ID_AUTHORIZATIONSERVICESCONFIGURATIONFOLDERTYPE_SERVICENAME_PLACEHOLDER_ISSUERENDPOINTURL = @as(c_int, 23560);
pub const UA_NS0ID_ISDEPRECATED = @as(c_int, 23562);
pub const UA_NS0ID_TRUSTLISTTYPE_DEFAULTVALIDATIONOPTIONS = @as(c_int, 23563);
pub const UA_NS0ID_TRUSTLISTVALIDATIONOPTIONS = @as(c_int, 23564);
pub const UA_NS0ID_TRUSTLISTVALIDATIONOPTIONS_OPTIONSETVALUES = @as(c_int, 23565);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_DEFAULTVALIDATIONOPTIONS = @as(c_int, 23566);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_DEFAULTVALIDATIONOPTIONS = @as(c_int, 23567);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_DEFAULTVALIDATIONOPTIONS = @as(c_int, 23568);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_DEFAULTVALIDATIONOPTIONS = @as(c_int, 23569);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_DEFAULTVALIDATIONOPTIONS = @as(c_int, 23570);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_DEFAULTVALIDATIONOPTIONS = @as(c_int, 23571);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_DEFAULTVALIDATIONOPTIONS = @as(c_int, 23572);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_DEFAULTVALIDATIONOPTIONS = @as(c_int, 23573);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_DEFAULTVALIDATIONOPTIONS = @as(c_int, 23574);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_DEFAULTVALIDATIONOPTIONS = @as(c_int, 23575);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_DEFAULTVALIDATIONOPTIONS = @as(c_int, 23576);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_HASSECUREELEMENT = @as(c_int, 23593);
pub const UA_NS0ID_SERVERCONFIGURATION_HASSECUREELEMENT = @as(c_int, 23597);
pub const UA_NS0ID_STANDALONESUBSCRIBEDDATASETREFDATATYPE = @as(c_int, 23599);
pub const UA_NS0ID_STANDALONESUBSCRIBEDDATASETDATATYPE = @as(c_int, 23600);
pub const UA_NS0ID_SECURITYGROUPDATATYPE = @as(c_int, 23601);
pub const UA_NS0ID_PUBSUBCONFIGURATION2DATATYPE = @as(c_int, 23602);
pub const UA_NS0ID_QOSDATATYPE = @as(c_int, 23603);
pub const UA_NS0ID_TRANSMITQOSDATATYPE = @as(c_int, 23604);
pub const UA_NS0ID_TRANSMITQOSPRIORITYDATATYPE = @as(c_int, 23605);
pub const UA_NS0ID_AUDITCLIENTEVENTTYPE = @as(c_int, 23606);
pub const UA_NS0ID_AUDITCLIENTEVENTTYPE_EVENTID = @as(c_int, 23607);
pub const UA_NS0ID_RECEIVEQOSDATATYPE = @as(c_int, 23608);
pub const UA_NS0ID_RECEIVEQOSPRIORITYDATATYPE = @as(c_int, 23609);
pub const UA_NS0ID_AUDITCLIENTEVENTTYPE_EVENTTYPE = @as(c_int, 23610);
pub const UA_NS0ID_AUDITCLIENTEVENTTYPE_SOURCENODE = @as(c_int, 23611);
pub const UA_NS0ID_DATAGRAMCONNECTIONTRANSPORT2DATATYPE = @as(c_int, 23612);
pub const UA_NS0ID_DATAGRAMWRITERGROUPTRANSPORT2DATATYPE = @as(c_int, 23613);
pub const UA_NS0ID_DATAGRAMDATASETREADERTRANSPORTDATATYPE = @as(c_int, 23614);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_SUBSCRIBEDDATASETS = @as(c_int, 23622);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_SUBSCRIBEDDATASETS_ADDDATASETFOLDER = @as(c_int, 23637);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_SUBSCRIBEDDATASETS_ADDDATASETFOLDER_INPUTARGUMENTS = @as(c_int, 23638);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_SUBSCRIBEDDATASETS_ADDDATASETFOLDER_OUTPUTARGUMENTS = @as(c_int, 23639);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_SUBSCRIBEDDATASETS_REMOVEDATASETFOLDER = @as(c_int, 23640);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_SUBSCRIBEDDATASETS_REMOVEDATASETFOLDER_INPUTARGUMENTS = @as(c_int, 23641);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCAPABLITIES = @as(c_int, 23642);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCAPABLITIES_MAXPUBSUBCONNECTIONS = @as(c_int, 23643);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCAPABLITIES_MAXWRITERGROUPS = @as(c_int, 23644);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCAPABLITIES_MAXREADERGROUPS = @as(c_int, 23645);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCAPABLITIES_MAXDATASETWRITERS = @as(c_int, 23646);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCAPABLITIES_MAXDATASETREADERS = @as(c_int, 23647);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCAPABLITIES_MAXFIELDSPERDATASET = @as(c_int, 23648);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DATASETCLASSES = @as(c_int, 23649);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_SUBSCRIBEDDATASETS = @as(c_int, 23658);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_SUBSCRIBEDDATASETS_ADDDATASETFOLDER = @as(c_int, 23673);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_SUBSCRIBEDDATASETS_ADDDATASETFOLDER_INPUTARGUMENTS = @as(c_int, 23674);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_SUBSCRIBEDDATASETS_ADDDATASETFOLDER_OUTPUTARGUMENTS = @as(c_int, 23675);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_SUBSCRIBEDDATASETS_REMOVEDATASETFOLDER = @as(c_int, 23676);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_SUBSCRIBEDDATASETS_REMOVEDATASETFOLDER_INPUTARGUMENTS = @as(c_int, 23677);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCAPABLITIES = @as(c_int, 23678);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCAPABLITIES_MAXPUBSUBCONNECTIONS = @as(c_int, 23679);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCAPABLITIES_MAXWRITERGROUPS = @as(c_int, 23680);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCAPABLITIES_MAXREADERGROUPS = @as(c_int, 23681);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCAPABLITIES_MAXDATASETWRITERS = @as(c_int, 23682);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCAPABLITIES_MAXDATASETREADERS = @as(c_int, 23683);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCAPABLITIES_MAXFIELDSPERDATASET = @as(c_int, 23684);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DATASETCLASSES = @as(c_int, 23685);
pub const UA_NS0ID_GETCONNECTIONMETHODTYPE = @as(c_int, 23726);
pub const UA_NS0ID_GETCONNECTIONMETHODTYPE_INPUTARGUMENTS = @as(c_int, 23727);
pub const UA_NS0ID_GETCONNECTIONMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 23728);
pub const UA_NS0ID_MODIFYCONNECTIONMETHODTYPE = @as(c_int, 23729);
pub const UA_NS0ID_MODIFYCONNECTIONMETHODTYPE_INPUTARGUMENTS = @as(c_int, 23730);
pub const UA_NS0ID_MODIFYCONNECTIONMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 23731);
pub const UA_NS0ID_GETWRITERGROUPMETHODTYPE = @as(c_int, 23745);
pub const UA_NS0ID_GETWRITERGROUPMETHODTYPE_INPUTARGUMENTS = @as(c_int, 23746);
pub const UA_NS0ID_GETWRITERGROUPMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 23747);
pub const UA_NS0ID_MODIFYWRITERGROUPMETHODTYPE = @as(c_int, 23748);
pub const UA_NS0ID_MODIFYWRITERGROUPMETHODTYPE_INPUTARGUMENTS = @as(c_int, 23749);
pub const UA_NS0ID_MODIFYWRITERGROUPMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 23750);
pub const UA_NS0ID_URISTRING = @as(c_int, 23751);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_MAXSESSIONS = @as(c_int, 23752);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_MAXSUBSCRIPTIONS = @as(c_int, 23753);
pub const UA_NS0ID_GETREADERGROUPMETHODTYPE = @as(c_int, 23767);
pub const UA_NS0ID_GETREADERGROUPMETHODTYPE_INPUTARGUMENTS = @as(c_int, 23768);
pub const UA_NS0ID_GETREADERGROUPMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 23769);
pub const UA_NS0ID_MODIFYREADERGROUPMETHODTYPE = @as(c_int, 23770);
pub const UA_NS0ID_MODIFYREADERGROUPMETHODTYPE_INPUTARGUMENTS = @as(c_int, 23771);
pub const UA_NS0ID_MODIFYREADERGROUPMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 23772);
pub const UA_NS0ID_GETDATASETWRITERMETHODTYPE = @as(c_int, 23779);
pub const UA_NS0ID_GETDATASETWRITERMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 23780);
pub const UA_NS0ID_MODIFYDATASETWRITERMETHODTYPE = @as(c_int, 23781);
pub const UA_NS0ID_MODIFYDATASETWRITERMETHODTYPE_INPUTARGUMENTS = @as(c_int, 23782);
pub const UA_NS0ID_MODIFYDATASETWRITERMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 23783);
pub const UA_NS0ID_GETDATASETREADERMETHODTYPE = @as(c_int, 23790);
pub const UA_NS0ID_GETDATASETREADERMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 23791);
pub const UA_NS0ID_MODIFYDATASETREADERMETHODTYPE = @as(c_int, 23792);
pub const UA_NS0ID_MODIFYDATASETREADERMETHODTYPE_INPUTARGUMENTS = @as(c_int, 23793);
pub const UA_NS0ID_MODIFYDATASETREADERMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 23794);
pub const UA_NS0ID_SUBSCRIBEDDATASETFOLDERTYPE = @as(c_int, 23795);
pub const UA_NS0ID_SUBSCRIBEDDATASETFOLDERTYPE_SUBSCRIBEDDATASETFOLDERNAME_PLACEHOLDER = @as(c_int, 23796);
pub const UA_NS0ID_SUBSCRIBEDDATASETFOLDERTYPE_SUBSCRIBEDDATASETFOLDERNAME_PLACEHOLDER_ADDSUBSCRIBEDDATASET = @as(c_int, 23797);
pub const UA_NS0ID_SUBSCRIBEDDATASETFOLDERTYPE_SUBSCRIBEDDATASETFOLDERNAME_PLACEHOLDER_ADDSUBSCRIBEDDATASET_INPUTARGUMENTS = @as(c_int, 23798);
pub const UA_NS0ID_SUBSCRIBEDDATASETFOLDERTYPE_SUBSCRIBEDDATASETFOLDERNAME_PLACEHOLDER_ADDSUBSCRIBEDDATASET_OUTPUTARGUMENTS = @as(c_int, 23799);
pub const UA_NS0ID_SUBSCRIBEDDATASETFOLDERTYPE_SUBSCRIBEDDATASETFOLDERNAME_PLACEHOLDER_REMOVESUBSCRIBEDDATASET = @as(c_int, 23800);
pub const UA_NS0ID_SUBSCRIBEDDATASETFOLDERTYPE_SUBSCRIBEDDATASETFOLDERNAME_PLACEHOLDER_REMOVESUBSCRIBEDDATASET_INPUTARGUMENTS = @as(c_int, 23801);
pub const UA_NS0ID_SUBSCRIBEDDATASETFOLDERTYPE_SUBSCRIBEDDATASETFOLDERNAME_PLACEHOLDER_ADDDATASETFOLDER = @as(c_int, 23802);
pub const UA_NS0ID_SUBSCRIBEDDATASETFOLDERTYPE_SUBSCRIBEDDATASETFOLDERNAME_PLACEHOLDER_ADDDATASETFOLDER_INPUTARGUMENTS = @as(c_int, 23803);
pub const UA_NS0ID_SUBSCRIBEDDATASETFOLDERTYPE_SUBSCRIBEDDATASETFOLDERNAME_PLACEHOLDER_ADDDATASETFOLDER_OUTPUTARGUMENTS = @as(c_int, 23804);
pub const UA_NS0ID_SUBSCRIBEDDATASETFOLDERTYPE_SUBSCRIBEDDATASETFOLDERNAME_PLACEHOLDER_REMOVEDATASETFOLDER = @as(c_int, 23805);
pub const UA_NS0ID_SUBSCRIBEDDATASETFOLDERTYPE_SUBSCRIBEDDATASETFOLDERNAME_PLACEHOLDER_REMOVEDATASETFOLDER_INPUTARGUMENTS = @as(c_int, 23806);
pub const UA_NS0ID_SUBSCRIBEDDATASETFOLDERTYPE_STANDALONESUBSCRIBEDDATASETNAME_PLACEHOLDER = @as(c_int, 23807);
pub const UA_NS0ID_SUBSCRIBEDDATASETFOLDERTYPE_STANDALONESUBSCRIBEDDATASETNAME_PLACEHOLDER_SUBSCRIBEDDATASET = @as(c_int, 23808);
pub const UA_NS0ID_SUBSCRIBEDDATASETFOLDERTYPE_STANDALONESUBSCRIBEDDATASETNAME_PLACEHOLDER_DATASETMETADATA = @as(c_int, 23809);
pub const UA_NS0ID_SUBSCRIBEDDATASETFOLDERTYPE_STANDALONESUBSCRIBEDDATASETNAME_PLACEHOLDER_ISCONNECTED = @as(c_int, 23810);
pub const UA_NS0ID_SUBSCRIBEDDATASETFOLDERTYPE_ADDSUBSCRIBEDDATASET = @as(c_int, 23811);
pub const UA_NS0ID_SUBSCRIBEDDATASETFOLDERTYPE_ADDSUBSCRIBEDDATASET_INPUTARGUMENTS = @as(c_int, 23812);
pub const UA_NS0ID_SUBSCRIBEDDATASETFOLDERTYPE_ADDSUBSCRIBEDDATASET_OUTPUTARGUMENTS = @as(c_int, 23813);
pub const UA_NS0ID_SUBSCRIBEDDATASETFOLDERTYPE_REMOVESUBSCRIBEDDATASET = @as(c_int, 23814);
pub const UA_NS0ID_SUBSCRIBEDDATASETFOLDERTYPE_REMOVESUBSCRIBEDDATASET_INPUTARGUMENTS = @as(c_int, 23815);
pub const UA_NS0ID_SUBSCRIBEDDATASETFOLDERTYPE_ADDDATASETFOLDER = @as(c_int, 23816);
pub const UA_NS0ID_SUBSCRIBEDDATASETFOLDERTYPE_ADDDATASETFOLDER_INPUTARGUMENTS = @as(c_int, 23817);
pub const UA_NS0ID_SUBSCRIBEDDATASETFOLDERTYPE_ADDDATASETFOLDER_OUTPUTARGUMENTS = @as(c_int, 23818);
pub const UA_NS0ID_SUBSCRIBEDDATASETFOLDERTYPE_REMOVEDATASETFOLDER = @as(c_int, 23819);
pub const UA_NS0ID_SUBSCRIBEDDATASETFOLDERTYPE_REMOVEDATASETFOLDER_INPUTARGUMENTS = @as(c_int, 23820);
pub const UA_NS0ID_ADDSUBSCRIBEDDATASETMETHODTYPE = @as(c_int, 23821);
pub const UA_NS0ID_ADDSUBSCRIBEDDATASETMETHODTYPE_INPUTARGUMENTS = @as(c_int, 23822);
pub const UA_NS0ID_ADDSUBSCRIBEDDATASETMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 23823);
pub const UA_NS0ID_REMOVESUBSCRIBEDDATASETMETHODTYPE = @as(c_int, 23824);
pub const UA_NS0ID_REMOVESUBSCRIBEDDATASETMETHODTYPE_INPUTARGUMENTS = @as(c_int, 23825);
pub const UA_NS0ID_STANDALONESUBSCRIBEDDATASETTYPE = @as(c_int, 23828);
pub const UA_NS0ID_STANDALONESUBSCRIBEDDATASETTYPE_SUBSCRIBEDDATASET = @as(c_int, 23829);
pub const UA_NS0ID_STANDALONESUBSCRIBEDDATASETTYPE_DATASETMETADATA = @as(c_int, 23830);
pub const UA_NS0ID_STANDALONESUBSCRIBEDDATASETTYPE_ISCONNECTED = @as(c_int, 23831);
pub const UA_NS0ID_PUBSUBCAPABILITIESTYPE = @as(c_int, 23832);
pub const UA_NS0ID_PUBSUBCAPABILITIESTYPE_MAXPUBSUBCONNECTIONS = @as(c_int, 23833);
pub const UA_NS0ID_PUBSUBCAPABILITIESTYPE_MAXWRITERGROUPS = @as(c_int, 23834);
pub const UA_NS0ID_PUBSUBCAPABILITIESTYPE_MAXREADERGROUPS = @as(c_int, 23835);
pub const UA_NS0ID_PUBSUBCAPABILITIESTYPE_MAXDATASETWRITERS = @as(c_int, 23836);
pub const UA_NS0ID_PUBSUBCAPABILITIESTYPE_MAXDATASETREADERS = @as(c_int, 23837);
pub const UA_NS0ID_PUBSUBCAPABILITIESTYPE_MAXFIELDSPERDATASET = @as(c_int, 23838);
pub const UA_NS0ID_DATAGRAMCONNECTIONTRANSPORTTYPE_DISCOVERYANNOUNCERATE = @as(c_int, 23839);
pub const UA_NS0ID_DATAGRAMCONNECTIONTRANSPORTTYPE_DISCOVERYMAXMESSAGESIZE = @as(c_int, 23840);
pub const UA_NS0ID_DATAGRAMWRITERGROUPTRANSPORTTYPE_ADDRESS = @as(c_int, 23842);
pub const UA_NS0ID_DATAGRAMWRITERGROUPTRANSPORTTYPE_ADDRESS_NETWORKINTERFACE = @as(c_int, 23843);
pub const UA_NS0ID_DATAGRAMWRITERGROUPTRANSPORTTYPE_ADDRESS_NETWORKINTERFACE_SELECTIONS = @as(c_int, 23844);
pub const UA_NS0ID_DATAGRAMWRITERGROUPTRANSPORTTYPE_ADDRESS_NETWORKINTERFACE_SELECTIONDESCRIPTIONS = @as(c_int, 23845);
pub const UA_NS0ID_DATAGRAMWRITERGROUPTRANSPORTTYPE_ADDRESS_NETWORKINTERFACE_RESTRICTTOLIST = @as(c_int, 23846);
pub const UA_NS0ID_DATAGRAMWRITERGROUPTRANSPORTTYPE_DATAGRAMQOS = @as(c_int, 23847);
pub const UA_NS0ID_DATAGRAMWRITERGROUPTRANSPORTTYPE_DISCOVERYANNOUNCERATE = @as(c_int, 23848);
pub const UA_NS0ID_DATAGRAMWRITERGROUPTRANSPORTTYPE_TOPIC = @as(c_int, 23849);
pub const UA_NS0ID_STANDALONESUBSCRIBEDDATASETREFDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 23851);
pub const UA_NS0ID_STANDALONESUBSCRIBEDDATASETDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 23852);
pub const UA_NS0ID_SECURITYGROUPDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 23853);
pub const UA_NS0ID_PUBSUBCONFIGURATION2DATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 23854);
pub const UA_NS0ID_QOSDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 23855);
pub const UA_NS0ID_TRANSMITQOSDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 23856);
pub const UA_NS0ID_TRANSMITQOSPRIORITYDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 23857);
pub const UA_NS0ID_RECEIVEQOSDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 23860);
pub const UA_NS0ID_RECEIVEQOSPRIORITYDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 23861);
pub const UA_NS0ID_DATAGRAMCONNECTIONTRANSPORT2DATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 23864);
pub const UA_NS0ID_DATAGRAMWRITERGROUPTRANSPORT2DATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 23865);
pub const UA_NS0ID_DATAGRAMDATASETREADERTRANSPORTDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 23866);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_STANDALONESUBSCRIBEDDATASETREFDATATYPE = @as(c_int, 23870);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_STANDALONESUBSCRIBEDDATASETREFDATATYPE_DATATYPEVERSION = @as(c_int, 23871);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_STANDALONESUBSCRIBEDDATASETREFDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 23872);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_STANDALONESUBSCRIBEDDATASETDATATYPE = @as(c_int, 23873);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_STANDALONESUBSCRIBEDDATASETDATATYPE_DATATYPEVERSION = @as(c_int, 23874);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_STANDALONESUBSCRIBEDDATASETDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 23875);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SECURITYGROUPDATATYPE = @as(c_int, 23876);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SECURITYGROUPDATATYPE_DATATYPEVERSION = @as(c_int, 23877);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_SECURITYGROUPDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 23878);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBSUBCONFIGURATION2DATATYPE = @as(c_int, 23879);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBSUBCONFIGURATION2DATATYPE_DATATYPEVERSION = @as(c_int, 23880);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBSUBCONFIGURATION2DATATYPE_DICTIONARYFRAGMENT = @as(c_int, 23881);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_QOSDATATYPE = @as(c_int, 23882);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_QOSDATATYPE_DATATYPEVERSION = @as(c_int, 23883);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_QOSDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 23884);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_TRANSMITQOSDATATYPE = @as(c_int, 23885);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_TRANSMITQOSDATATYPE_DATATYPEVERSION = @as(c_int, 23886);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_TRANSMITQOSDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 23887);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_TRANSMITQOSPRIORITYDATATYPE = @as(c_int, 23888);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_TRANSMITQOSPRIORITYDATATYPE_DATATYPEVERSION = @as(c_int, 23889);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_TRANSMITQOSPRIORITYDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 23890);
pub const UA_NS0ID_AUDITCLIENTEVENTTYPE_SOURCENAME = @as(c_int, 23891);
pub const UA_NS0ID_AUDITCLIENTEVENTTYPE_TIME = @as(c_int, 23892);
pub const UA_NS0ID_AUDITCLIENTEVENTTYPE_RECEIVETIME = @as(c_int, 23893);
pub const UA_NS0ID_AUDITCLIENTEVENTTYPE_LOCALTIME = @as(c_int, 23894);
pub const UA_NS0ID_AUDITCLIENTEVENTTYPE_MESSAGE = @as(c_int, 23895);
pub const UA_NS0ID_AUDITCLIENTEVENTTYPE_SEVERITY = @as(c_int, 23896);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_RECEIVEQOSDATATYPE = @as(c_int, 23897);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_RECEIVEQOSDATATYPE_DATATYPEVERSION = @as(c_int, 23898);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_RECEIVEQOSDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 23899);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_RECEIVEQOSPRIORITYDATATYPE = @as(c_int, 23900);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_RECEIVEQOSPRIORITYDATATYPE_DATATYPEVERSION = @as(c_int, 23901);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_RECEIVEQOSPRIORITYDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 23902);
pub const UA_NS0ID_AUDITCLIENTEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 23903);
pub const UA_NS0ID_AUDITCLIENTEVENTTYPE_STATUS = @as(c_int, 23904);
pub const UA_NS0ID_AUDITCLIENTEVENTTYPE_SERVERID = @as(c_int, 23905);
pub const UA_NS0ID_AUDITCLIENTEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 23906);
pub const UA_NS0ID_AUDITCLIENTEVENTTYPE_CLIENTUSERID = @as(c_int, 23907);
pub const UA_NS0ID_AUDITCLIENTEVENTTYPE_SERVERURI = @as(c_int, 23908);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATAGRAMCONNECTIONTRANSPORT2DATATYPE = @as(c_int, 23909);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATAGRAMCONNECTIONTRANSPORT2DATATYPE_DATATYPEVERSION = @as(c_int, 23910);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATAGRAMCONNECTIONTRANSPORT2DATATYPE_DICTIONARYFRAGMENT = @as(c_int, 23911);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATAGRAMWRITERGROUPTRANSPORT2DATATYPE = @as(c_int, 23912);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATAGRAMWRITERGROUPTRANSPORT2DATATYPE_DATATYPEVERSION = @as(c_int, 23913);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATAGRAMWRITERGROUPTRANSPORT2DATATYPE_DICTIONARYFRAGMENT = @as(c_int, 23914);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATAGRAMDATASETREADERTRANSPORTDATATYPE = @as(c_int, 23915);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATAGRAMDATASETREADERTRANSPORTDATATYPE_DATATYPEVERSION = @as(c_int, 23916);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_DATAGRAMDATASETREADERTRANSPORTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 23917);
pub const UA_NS0ID_STANDALONESUBSCRIBEDDATASETREFDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 23919);
pub const UA_NS0ID_STANDALONESUBSCRIBEDDATASETDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 23920);
pub const UA_NS0ID_SECURITYGROUPDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 23921);
pub const UA_NS0ID_PUBSUBCONFIGURATION2DATATYPE_ENCODING_DEFAULTXML = @as(c_int, 23922);
pub const UA_NS0ID_QOSDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 23923);
pub const UA_NS0ID_TRANSMITQOSDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 23924);
pub const UA_NS0ID_TRANSMITQOSPRIORITYDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 23925);
pub const UA_NS0ID_AUDITCLIENTUPDATEMETHODRESULTEVENTTYPE = @as(c_int, 23926);
pub const UA_NS0ID_AUDITCLIENTUPDATEMETHODRESULTEVENTTYPE_EVENTID = @as(c_int, 23927);
pub const UA_NS0ID_RECEIVEQOSDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 23928);
pub const UA_NS0ID_RECEIVEQOSPRIORITYDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 23929);
pub const UA_NS0ID_AUDITCLIENTUPDATEMETHODRESULTEVENTTYPE_EVENTTYPE = @as(c_int, 23930);
pub const UA_NS0ID_AUDITCLIENTUPDATEMETHODRESULTEVENTTYPE_SOURCENODE = @as(c_int, 23931);
pub const UA_NS0ID_DATAGRAMCONNECTIONTRANSPORT2DATATYPE_ENCODING_DEFAULTXML = @as(c_int, 23932);
pub const UA_NS0ID_DATAGRAMWRITERGROUPTRANSPORT2DATATYPE_ENCODING_DEFAULTXML = @as(c_int, 23933);
pub const UA_NS0ID_DATAGRAMDATASETREADERTRANSPORTDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 23934);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_STANDALONESUBSCRIBEDDATASETREFDATATYPE = @as(c_int, 23938);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_STANDALONESUBSCRIBEDDATASETREFDATATYPE_DATATYPEVERSION = @as(c_int, 23939);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_STANDALONESUBSCRIBEDDATASETREFDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 23940);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_STANDALONESUBSCRIBEDDATASETDATATYPE = @as(c_int, 23941);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_STANDALONESUBSCRIBEDDATASETDATATYPE_DATATYPEVERSION = @as(c_int, 23942);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_STANDALONESUBSCRIBEDDATASETDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 23943);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SECURITYGROUPDATATYPE = @as(c_int, 23944);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SECURITYGROUPDATATYPE_DATATYPEVERSION = @as(c_int, 23945);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_SECURITYGROUPDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 23946);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBSUBCONFIGURATION2DATATYPE = @as(c_int, 23947);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBSUBCONFIGURATION2DATATYPE_DATATYPEVERSION = @as(c_int, 23948);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBSUBCONFIGURATION2DATATYPE_DICTIONARYFRAGMENT = @as(c_int, 23949);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_QOSDATATYPE = @as(c_int, 23950);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_QOSDATATYPE_DATATYPEVERSION = @as(c_int, 23951);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_QOSDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 23952);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_TRANSMITQOSDATATYPE = @as(c_int, 23953);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_TRANSMITQOSDATATYPE_DATATYPEVERSION = @as(c_int, 23954);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_TRANSMITQOSDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 23955);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_TRANSMITQOSPRIORITYDATATYPE = @as(c_int, 23956);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_TRANSMITQOSPRIORITYDATATYPE_DATATYPEVERSION = @as(c_int, 23957);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_TRANSMITQOSPRIORITYDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 23958);
pub const UA_NS0ID_AUDITCLIENTUPDATEMETHODRESULTEVENTTYPE_SOURCENAME = @as(c_int, 23959);
pub const UA_NS0ID_AUDITCLIENTUPDATEMETHODRESULTEVENTTYPE_TIME = @as(c_int, 23960);
pub const UA_NS0ID_AUDITCLIENTUPDATEMETHODRESULTEVENTTYPE_RECEIVETIME = @as(c_int, 23961);
pub const UA_NS0ID_AUDITCLIENTUPDATEMETHODRESULTEVENTTYPE_LOCALTIME = @as(c_int, 23962);
pub const UA_NS0ID_AUDITCLIENTUPDATEMETHODRESULTEVENTTYPE_MESSAGE = @as(c_int, 23963);
pub const UA_NS0ID_AUDITCLIENTUPDATEMETHODRESULTEVENTTYPE_SEVERITY = @as(c_int, 23964);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_RECEIVEQOSDATATYPE = @as(c_int, 23965);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_RECEIVEQOSDATATYPE_DATATYPEVERSION = @as(c_int, 23966);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_RECEIVEQOSDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 23967);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_RECEIVEQOSPRIORITYDATATYPE = @as(c_int, 23968);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_RECEIVEQOSPRIORITYDATATYPE_DATATYPEVERSION = @as(c_int, 23969);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_RECEIVEQOSPRIORITYDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 23970);
pub const UA_NS0ID_AUDITCLIENTUPDATEMETHODRESULTEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 23971);
pub const UA_NS0ID_AUDITCLIENTUPDATEMETHODRESULTEVENTTYPE_STATUS = @as(c_int, 23972);
pub const UA_NS0ID_AUDITCLIENTUPDATEMETHODRESULTEVENTTYPE_SERVERID = @as(c_int, 23973);
pub const UA_NS0ID_AUDITCLIENTUPDATEMETHODRESULTEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 23974);
pub const UA_NS0ID_AUDITCLIENTUPDATEMETHODRESULTEVENTTYPE_CLIENTUSERID = @as(c_int, 23975);
pub const UA_NS0ID_AUDITCLIENTUPDATEMETHODRESULTEVENTTYPE_SERVERURI = @as(c_int, 23976);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATAGRAMCONNECTIONTRANSPORT2DATATYPE = @as(c_int, 23977);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATAGRAMCONNECTIONTRANSPORT2DATATYPE_DATATYPEVERSION = @as(c_int, 23978);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATAGRAMCONNECTIONTRANSPORT2DATATYPE_DICTIONARYFRAGMENT = @as(c_int, 23979);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATAGRAMWRITERGROUPTRANSPORT2DATATYPE = @as(c_int, 23980);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATAGRAMWRITERGROUPTRANSPORT2DATATYPE_DATATYPEVERSION = @as(c_int, 23981);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATAGRAMWRITERGROUPTRANSPORT2DATATYPE_DICTIONARYFRAGMENT = @as(c_int, 23982);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATAGRAMDATASETREADERTRANSPORTDATATYPE = @as(c_int, 23983);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATAGRAMDATASETREADERTRANSPORTDATATYPE_DATATYPEVERSION = @as(c_int, 23984);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_DATAGRAMDATASETREADERTRANSPORTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 23985);
pub const UA_NS0ID_STANDALONESUBSCRIBEDDATASETREFDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 23987);
pub const UA_NS0ID_STANDALONESUBSCRIBEDDATASETDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 23988);
pub const UA_NS0ID_SECURITYGROUPDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 23989);
pub const UA_NS0ID_PUBSUBCONFIGURATION2DATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 23990);
pub const UA_NS0ID_QOSDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 23991);
pub const UA_NS0ID_TRANSMITQOSDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 23992);
pub const UA_NS0ID_TRANSMITQOSPRIORITYDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 23993);
pub const UA_NS0ID_AUDITCLIENTUPDATEMETHODRESULTEVENTTYPE_OBJECTID = @as(c_int, 23994);
pub const UA_NS0ID_AUDITCLIENTUPDATEMETHODRESULTEVENTTYPE_METHODID = @as(c_int, 23995);
pub const UA_NS0ID_RECEIVEQOSDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 23996);
pub const UA_NS0ID_RECEIVEQOSPRIORITYDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 23997);
pub const UA_NS0ID_AUDITCLIENTUPDATEMETHODRESULTEVENTTYPE_STATUSCODEID = @as(c_int, 23998);
pub const UA_NS0ID_AUDITCLIENTUPDATEMETHODRESULTEVENTTYPE_INPUTARGUMENTS = @as(c_int, 23999);
pub const UA_NS0ID_DATAGRAMCONNECTIONTRANSPORT2DATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 24000);
pub const UA_NS0ID_DATAGRAMWRITERGROUPTRANSPORT2DATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 24001);
pub const UA_NS0ID_DATAGRAMDATASETREADERTRANSPORTDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 24002);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_SUBSCRIBEDDATASETS_ADDSUBSCRIBEDDATASET = @as(c_int, 24004);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_SUBSCRIBEDDATASETS_ADDSUBSCRIBEDDATASET_INPUTARGUMENTS = @as(c_int, 24005);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_SUBSCRIBEDDATASETS_ADDSUBSCRIBEDDATASET_OUTPUTARGUMENTS = @as(c_int, 24006);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_SUBSCRIBEDDATASETS_REMOVESUBSCRIBEDDATASET = @as(c_int, 24007);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_SUBSCRIBEDDATASETS_REMOVESUBSCRIBEDDATASET_INPUTARGUMENTS = @as(c_int, 24008);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DATASETCLASSES_DATASETNAME_PLACEHOLDER = @as(c_int, 24009);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_SUBSCRIBEDDATASETS_ADDSUBSCRIBEDDATASET = @as(c_int, 24010);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_SUBSCRIBEDDATASETS_ADDSUBSCRIBEDDATASET_INPUTARGUMENTS = @as(c_int, 24011);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_SUBSCRIBEDDATASETS_ADDSUBSCRIBEDDATASET_OUTPUTARGUMENTS = @as(c_int, 24012);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_SUBSCRIBEDDATASETS_REMOVESUBSCRIBEDDATASET = @as(c_int, 24013);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_SUBSCRIBEDDATASETS_REMOVESUBSCRIBEDDATASET_INPUTARGUMENTS = @as(c_int, 24014);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DATASETCLASSES_DATASETNAME_PLACEHOLDER = @as(c_int, 24015);
pub const UA_NS0ID_DATAGRAMDATASETREADERTRANSPORTTYPE = @as(c_int, 24016);
pub const UA_NS0ID_DATAGRAMDATASETREADERTRANSPORTTYPE_ADDRESS = @as(c_int, 24017);
pub const UA_NS0ID_DATAGRAMDATASETREADERTRANSPORTTYPE_ADDRESS_NETWORKINTERFACE = @as(c_int, 24018);
pub const UA_NS0ID_DATAGRAMDATASETREADERTRANSPORTTYPE_ADDRESS_NETWORKINTERFACE_SELECTIONS = @as(c_int, 24019);
pub const UA_NS0ID_DATAGRAMDATASETREADERTRANSPORTTYPE_ADDRESS_NETWORKINTERFACE_SELECTIONDESCRIPTIONS = @as(c_int, 24020);
pub const UA_NS0ID_DATAGRAMDATASETREADERTRANSPORTTYPE_ADDRESS_NETWORKINTERFACE_RESTRICTTOLIST = @as(c_int, 24021);
pub const UA_NS0ID_DATAGRAMDATASETREADERTRANSPORTTYPE_DATAGRAMQOS = @as(c_int, 24022);
pub const UA_NS0ID_DATAGRAMDATASETREADERTRANSPORTTYPE_TOPIC = @as(c_int, 24023);
pub const UA_NS0ID_PROGRAMDIAGNOSTIC2DATATYPE = @as(c_int, 24033);
pub const UA_NS0ID_PROGRAMDIAGNOSTIC2DATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 24034);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PROGRAMDIAGNOSTIC2DATATYPE = @as(c_int, 24035);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PROGRAMDIAGNOSTIC2DATATYPE_DATATYPEVERSION = @as(c_int, 24036);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PROGRAMDIAGNOSTIC2DATATYPE_DICTIONARYFRAGMENT = @as(c_int, 24037);
pub const UA_NS0ID_PROGRAMDIAGNOSTIC2DATATYPE_ENCODING_DEFAULTXML = @as(c_int, 24038);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PROGRAMDIAGNOSTIC2DATATYPE = @as(c_int, 24039);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PROGRAMDIAGNOSTIC2DATATYPE_DATATYPEVERSION = @as(c_int, 24040);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PROGRAMDIAGNOSTIC2DATATYPE_DICTIONARYFRAGMENT = @as(c_int, 24041);
pub const UA_NS0ID_PROGRAMDIAGNOSTIC2DATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 24042);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_MAXMONITOREDITEMS = @as(c_int, 24083);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_MAXSUBSCRIPTIONSPERSESSION = @as(c_int, 24084);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_MAXSELECTCLAUSEPARAMETERS = @as(c_int, 24085);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_MAXWHERECLAUSEPARAMETERS = @as(c_int, 24086);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_CONFORMANCEUNITS = @as(c_int, 24087);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_MAXSESSIONS = @as(c_int, 24088);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_MAXSUBSCRIPTIONS = @as(c_int, 24089);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_MAXMONITOREDITEMS = @as(c_int, 24090);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_MAXSUBSCRIPTIONSPERSESSION = @as(c_int, 24091);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_MAXSELECTCLAUSEPARAMETERS = @as(c_int, 24092);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_MAXWHERECLAUSEPARAMETERS = @as(c_int, 24093);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_CONFORMANCEUNITS = @as(c_int, 24094);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_MAXSESSIONS = @as(c_int, 24095);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_MAXSUBSCRIPTIONS = @as(c_int, 24096);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_MAXMONITOREDITEMS = @as(c_int, 24097);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_MAXSUBSCRIPTIONSPERSESSION = @as(c_int, 24098);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_MAXSELECTCLAUSEPARAMETERS = @as(c_int, 24099);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_MAXWHERECLAUSEPARAMETERS = @as(c_int, 24100);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_CONFORMANCEUNITS = @as(c_int, 24101);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_MAXMONITOREDITEMSPERSUBSCRIPTION = @as(c_int, 24102);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_MAXMONITOREDITEMSPERSUBSCRIPTION = @as(c_int, 24103);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_MAXMONITOREDITEMSPERSUBSCRIPTION = @as(c_int, 24104);
pub const UA_NS0ID_PORTABLEQUALIFIEDNAME = @as(c_int, 24105);
pub const UA_NS0ID_PORTABLENODEID = @as(c_int, 24106);
pub const UA_NS0ID_UNSIGNEDRATIONALNUMBER = @as(c_int, 24107);
pub const UA_NS0ID_PORTABLEQUALIFIEDNAME_ENCODING_DEFAULTBINARY = @as(c_int, 24108);
pub const UA_NS0ID_PORTABLENODEID_ENCODING_DEFAULTBINARY = @as(c_int, 24109);
pub const UA_NS0ID_UNSIGNEDRATIONALNUMBER_ENCODING_DEFAULTBINARY = @as(c_int, 24110);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PORTABLEQUALIFIEDNAME = @as(c_int, 24111);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PORTABLEQUALIFIEDNAME_DATATYPEVERSION = @as(c_int, 24112);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PORTABLEQUALIFIEDNAME_DICTIONARYFRAGMENT = @as(c_int, 24113);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PORTABLENODEID = @as(c_int, 24114);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PORTABLENODEID_DATATYPEVERSION = @as(c_int, 24115);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PORTABLENODEID_DICTIONARYFRAGMENT = @as(c_int, 24116);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_UNSIGNEDRATIONALNUMBER = @as(c_int, 24117);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_UNSIGNEDRATIONALNUMBER_DATATYPEVERSION = @as(c_int, 24118);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_UNSIGNEDRATIONALNUMBER_DICTIONARYFRAGMENT = @as(c_int, 24119);
pub const UA_NS0ID_PORTABLEQUALIFIEDNAME_ENCODING_DEFAULTXML = @as(c_int, 24120);
pub const UA_NS0ID_PORTABLENODEID_ENCODING_DEFAULTXML = @as(c_int, 24121);
pub const UA_NS0ID_UNSIGNEDRATIONALNUMBER_ENCODING_DEFAULTXML = @as(c_int, 24122);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PORTABLEQUALIFIEDNAME = @as(c_int, 24123);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PORTABLEQUALIFIEDNAME_DATATYPEVERSION = @as(c_int, 24124);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PORTABLEQUALIFIEDNAME_DICTIONARYFRAGMENT = @as(c_int, 24125);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PORTABLENODEID = @as(c_int, 24126);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PORTABLENODEID_DATATYPEVERSION = @as(c_int, 24127);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PORTABLENODEID_DICTIONARYFRAGMENT = @as(c_int, 24128);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_UNSIGNEDRATIONALNUMBER = @as(c_int, 24129);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_UNSIGNEDRATIONALNUMBER_DATATYPEVERSION = @as(c_int, 24130);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_UNSIGNEDRATIONALNUMBER_DICTIONARYFRAGMENT = @as(c_int, 24131);
pub const UA_NS0ID_PORTABLEQUALIFIEDNAME_ENCODING_DEFAULTJSON = @as(c_int, 24132);
pub const UA_NS0ID_PORTABLENODEID_ENCODING_DEFAULTJSON = @as(c_int, 24133);
pub const UA_NS0ID_UNSIGNEDRATIONALNUMBER_ENCODING_DEFAULTJSON = @as(c_int, 24134);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_CERTIFICATEERROREVENTID = @as(c_int, 24135);
pub const UA_NS0ID_HASSTRUCTUREDCOMPONENT = @as(c_int, 24136);
pub const UA_NS0ID_ASSOCIATEDWITH = @as(c_int, 24137);
pub const UA_NS0ID_ROLESETTYPE_ROLENAME_PLACEHOLDER_CUSTOMCONFIGURATION = @as(c_int, 24138);
pub const UA_NS0ID_ROLETYPE_CUSTOMCONFIGURATION = @as(c_int, 24139);
pub const UA_NS0ID_WELLKNOWNROLE_ANONYMOUS_CUSTOMCONFIGURATION = @as(c_int, 24140);
pub const UA_NS0ID_WELLKNOWNROLE_AUTHENTICATEDUSER_CUSTOMCONFIGURATION = @as(c_int, 24141);
pub const UA_NS0ID_WELLKNOWNROLE_OBSERVER_CUSTOMCONFIGURATION = @as(c_int, 24142);
pub const UA_NS0ID_WELLKNOWNROLE_OPERATOR_CUSTOMCONFIGURATION = @as(c_int, 24143);
pub const UA_NS0ID_WELLKNOWNROLE_ENGINEER_CUSTOMCONFIGURATION = @as(c_int, 24144);
pub const UA_NS0ID_WELLKNOWNROLE_SUPERVISOR_CUSTOMCONFIGURATION = @as(c_int, 24145);
pub const UA_NS0ID_WELLKNOWNROLE_CONFIGUREADMIN_CUSTOMCONFIGURATION = @as(c_int, 24146);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYADMIN_CUSTOMCONFIGURATION = @as(c_int, 24147);
pub const UA_NS0ID_IIETFBASENETWORKINTERFACETYPE = @as(c_int, 24148);
pub const UA_NS0ID_IIETFBASENETWORKINTERFACETYPE_ADMINSTATUS = @as(c_int, 24149);
pub const UA_NS0ID_IIETFBASENETWORKINTERFACETYPE_OPERSTATUS = @as(c_int, 24150);
pub const UA_NS0ID_IIETFBASENETWORKINTERFACETYPE_PHYSADDRESS = @as(c_int, 24151);
pub const UA_NS0ID_IIETFBASENETWORKINTERFACETYPE_SPEED = @as(c_int, 24152);
pub const UA_NS0ID_IIETFBASENETWORKINTERFACETYPE_SPEED_DEFINITION = @as(c_int, 24153);
pub const UA_NS0ID_IIETFBASENETWORKINTERFACETYPE_SPEED_VALUEPRECISION = @as(c_int, 24154);
pub const UA_NS0ID_IIETFBASENETWORKINTERFACETYPE_SPEED_INSTRUMENTRANGE = @as(c_int, 24155);
pub const UA_NS0ID_IIETFBASENETWORKINTERFACETYPE_SPEED_EURANGE = @as(c_int, 24156);
pub const UA_NS0ID_IIETFBASENETWORKINTERFACETYPE_SPEED_ENGINEERINGUNITS = @as(c_int, 24157);
pub const UA_NS0ID_IIEEEBASEETHERNETPORTTYPE = @as(c_int, 24158);
pub const UA_NS0ID_IIEEEBASEETHERNETPORTTYPE_SPEED = @as(c_int, 24159);
pub const UA_NS0ID_IIEEEBASEETHERNETPORTTYPE_SPEED_DEFINITION = @as(c_int, 24160);
pub const UA_NS0ID_IIEEEBASEETHERNETPORTTYPE_SPEED_VALUEPRECISION = @as(c_int, 24161);
pub const UA_NS0ID_IIEEEBASEETHERNETPORTTYPE_SPEED_INSTRUMENTRANGE = @as(c_int, 24162);
pub const UA_NS0ID_IIEEEBASEETHERNETPORTTYPE_SPEED_EURANGE = @as(c_int, 24163);
pub const UA_NS0ID_IIEEEBASEETHERNETPORTTYPE_SPEED_ENGINEERINGUNITS = @as(c_int, 24164);
pub const UA_NS0ID_IIEEEBASEETHERNETPORTTYPE_DUPLEX = @as(c_int, 24165);
pub const UA_NS0ID_IIEEEBASEETHERNETPORTTYPE_MAXFRAMELENGTH = @as(c_int, 24166);
pub const UA_NS0ID_IBASEETHERNETCAPABILITIESTYPE = @as(c_int, 24167);
pub const UA_NS0ID_IBASEETHERNETCAPABILITIESTYPE_VLANTAGCAPABLE = @as(c_int, 24168);
pub const UA_NS0ID_ISRCLASSTYPE = @as(c_int, 24169);
pub const UA_NS0ID_ISRCLASSTYPE_ID = @as(c_int, 24170);
pub const UA_NS0ID_ISRCLASSTYPE_PRIORITY = @as(c_int, 24171);
pub const UA_NS0ID_ISRCLASSTYPE_VID = @as(c_int, 24172);
pub const UA_NS0ID_IIEEEBASETSNSTREAMTYPE = @as(c_int, 24173);
pub const UA_NS0ID_IIEEEBASETSNSTREAMTYPE_STREAMID = @as(c_int, 24174);
pub const UA_NS0ID_IIEEEBASETSNSTREAMTYPE_STREAMNAME = @as(c_int, 24175);
pub const UA_NS0ID_IIEEEBASETSNSTREAMTYPE_STATE = @as(c_int, 24176);
pub const UA_NS0ID_IIEEEBASETSNSTREAMTYPE_ACCUMULATEDLATENCY = @as(c_int, 24177);
pub const UA_NS0ID_IIEEEBASETSNSTREAMTYPE_SRCLASSID = @as(c_int, 24178);
pub const UA_NS0ID_IIEEEBASETSNTRAFFICSPECIFICATIONTYPE = @as(c_int, 24179);
pub const UA_NS0ID_IIEEEBASETSNTRAFFICSPECIFICATIONTYPE_MAXINTERVALFRAMES = @as(c_int, 24180);
pub const UA_NS0ID_IIEEEBASETSNTRAFFICSPECIFICATIONTYPE_MAXFRAMESIZE = @as(c_int, 24181);
pub const UA_NS0ID_IIEEEBASETSNTRAFFICSPECIFICATIONTYPE_INTERVAL = @as(c_int, 24182);
pub const UA_NS0ID_IIEEEBASETSNSTATUSSTREAMTYPE = @as(c_int, 24183);
pub const UA_NS0ID_IIEEEBASETSNSTATUSSTREAMTYPE_TALKERSTATUS = @as(c_int, 24184);
pub const UA_NS0ID_IIEEEBASETSNSTATUSSTREAMTYPE_LISTENERSTATUS = @as(c_int, 24185);
pub const UA_NS0ID_IIEEEBASETSNSTATUSSTREAMTYPE_FAILURECODE = @as(c_int, 24186);
pub const UA_NS0ID_IIEEEBASETSNSTATUSSTREAMTYPE_FAILURESYSTEMIDENTIFIER = @as(c_int, 24187);
pub const UA_NS0ID_IIEEETSNINTERFACECONFIGURATIONTYPE = @as(c_int, 24188);
pub const UA_NS0ID_IIEEETSNINTERFACECONFIGURATIONTYPE_MACADDRESS = @as(c_int, 24189);
pub const UA_NS0ID_IIEEETSNINTERFACECONFIGURATIONTYPE_INTERFACENAME = @as(c_int, 24190);
pub const UA_NS0ID_IIEEETSNINTERFACECONFIGURATIONTALKERTYPE = @as(c_int, 24191);
pub const UA_NS0ID_IIEEETSNINTERFACECONFIGURATIONTALKERTYPE_MACADDRESS = @as(c_int, 24192);
pub const UA_NS0ID_IIEEETSNINTERFACECONFIGURATIONTALKERTYPE_INTERFACENAME = @as(c_int, 24193);
pub const UA_NS0ID_IIEEETSNINTERFACECONFIGURATIONTALKERTYPE_TIMEAWAREOFFSET = @as(c_int, 24194);
pub const UA_NS0ID_IIEEETSNINTERFACECONFIGURATIONLISTENERTYPE = @as(c_int, 24195);
pub const UA_NS0ID_IIEEETSNINTERFACECONFIGURATIONLISTENERTYPE_MACADDRESS = @as(c_int, 24196);
pub const UA_NS0ID_IIEEETSNINTERFACECONFIGURATIONLISTENERTYPE_INTERFACENAME = @as(c_int, 24197);
pub const UA_NS0ID_IIEEETSNINTERFACECONFIGURATIONLISTENERTYPE_RECEIVEOFFSET = @as(c_int, 24198);
pub const UA_NS0ID_IIEEETSNMACADDRESSTYPE = @as(c_int, 24199);
pub const UA_NS0ID_IIEEETSNMACADDRESSTYPE_DESTINATIONADDRESS = @as(c_int, 24200);
pub const UA_NS0ID_IIEEETSNMACADDRESSTYPE_SOURCEADDRESS = @as(c_int, 24201);
pub const UA_NS0ID_IIEEETSNVLANTAGTYPE = @as(c_int, 24202);
pub const UA_NS0ID_IIEEETSNVLANTAGTYPE_VLANID = @as(c_int, 24203);
pub const UA_NS0ID_IIEEETSNVLANTAGTYPE_PRIORITYCODEPOINT = @as(c_int, 24204);
pub const UA_NS0ID_IPRIORITYMAPPINGENTRYTYPE = @as(c_int, 24205);
pub const UA_NS0ID_IPRIORITYMAPPINGENTRYTYPE_MAPPINGURI = @as(c_int, 24206);
pub const UA_NS0ID_IPRIORITYMAPPINGENTRYTYPE_PRIORITYLABEL = @as(c_int, 24207);
pub const UA_NS0ID_IPRIORITYMAPPINGENTRYTYPE_PRIORITYVALUE_PCP = @as(c_int, 24208);
pub const UA_NS0ID_IPRIORITYMAPPINGENTRYTYPE_PRIORITYVALUE_DSCP = @as(c_int, 24209);
pub const UA_NS0ID_DUPLEX = @as(c_int, 24210);
pub const UA_NS0ID_INTERFACEADMINSTATUS = @as(c_int, 24212);
pub const UA_NS0ID_INTERFACEOPERSTATUS = @as(c_int, 24214);
pub const UA_NS0ID_NEGOTIATIONSTATUS = @as(c_int, 24216);
pub const UA_NS0ID_TSNFAILURECODE = @as(c_int, 24218);
pub const UA_NS0ID_TSNSTREAMSTATE = @as(c_int, 24220);
pub const UA_NS0ID_TSNTALKERSTATUS = @as(c_int, 24222);
pub const UA_NS0ID_TSNLISTENERSTATUS = @as(c_int, 24224);
pub const UA_NS0ID_RESOURCES = @as(c_int, 24226);
pub const UA_NS0ID_COMMUNICATION = @as(c_int, 24227);
pub const UA_NS0ID_MAPPINGTABLES = @as(c_int, 24228);
pub const UA_NS0ID_NETWORKINTERFACES = @as(c_int, 24229);
pub const UA_NS0ID_STREAMS = @as(c_int, 24230);
pub const UA_NS0ID_TALKERSTREAMS = @as(c_int, 24231);
pub const UA_NS0ID_LISTENERSTREAMS = @as(c_int, 24232);
pub const UA_NS0ID_IIEEEAUTONEGOTIATIONSTATUSTYPE = @as(c_int, 24233);
pub const UA_NS0ID_IIEEEAUTONEGOTIATIONSTATUSTYPE_NEGOTIATIONSTATUS = @as(c_int, 24234);
pub const UA_NS0ID_DUPLEX_ENUMVALUES = @as(c_int, 24235);
pub const UA_NS0ID_INTERFACEADMINSTATUS_ENUMVALUES = @as(c_int, 24236);
pub const UA_NS0ID_INTERFACEOPERSTATUS_ENUMVALUES = @as(c_int, 24237);
pub const UA_NS0ID_NEGOTIATIONSTATUS_ENUMVALUES = @as(c_int, 24238);
pub const UA_NS0ID_TSNFAILURECODE_ENUMVALUES = @as(c_int, 24239);
pub const UA_NS0ID_TSNSTREAMSTATE_ENUMVALUES = @as(c_int, 24240);
pub const UA_NS0ID_TSNTALKERSTATUS_ENUMVALUES = @as(c_int, 24241);
pub const UA_NS0ID_TSNLISTENERSTATUS_ENUMVALUES = @as(c_int, 24242);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEFILE_MAXBYTESTRINGLENGTH = @as(c_int, 24243);
pub const UA_NS0ID_FILETYPE_MAXBYTESTRINGLENGTH = @as(c_int, 24244);
pub const UA_NS0ID_ADDRESSSPACEFILETYPE_MAXBYTESTRINGLENGTH = @as(c_int, 24245);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEFILE_MAXBYTESTRINGLENGTH = @as(c_int, 24246);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEFILE_MAXBYTESTRINGLENGTH = @as(c_int, 24247);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILENAME_PLACEHOLDER_MAXBYTESTRINGLENGTH = @as(c_int, 24248);
pub const UA_NS0ID_FILESYSTEM_FILENAME_PLACEHOLDER_MAXBYTESTRINGLENGTH = @as(c_int, 24249);
pub const UA_NS0ID_TRUSTLISTTYPE_MAXBYTESTRINGLENGTH = @as(c_int, 24250);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_MAXBYTESTRINGLENGTH = @as(c_int, 24251);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_MAXBYTESTRINGLENGTH = @as(c_int, 24252);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_MAXBYTESTRINGLENGTH = @as(c_int, 24253);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_MAXBYTESTRINGLENGTH = @as(c_int, 24254);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_MAXBYTESTRINGLENGTH = @as(c_int, 24255);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_MAXBYTESTRINGLENGTH = @as(c_int, 24256);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_MAXBYTESTRINGLENGTH = @as(c_int, 24257);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_MAXBYTESTRINGLENGTH = @as(c_int, 24258);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_MAXBYTESTRINGLENGTH = @as(c_int, 24259);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_MAXBYTESTRINGLENGTH = @as(c_int, 24260);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_MAXBYTESTRINGLENGTH = @as(c_int, 24261);
pub const UA_NS0ID_SEMANTICVERSIONSTRING = @as(c_int, 24263);
pub const UA_NS0ID_USERMANAGEMENTTYPE = @as(c_int, 24264);
pub const UA_NS0ID_USERMANAGEMENTTYPE_USERS = @as(c_int, 24265);
pub const UA_NS0ID_USERMANAGEMENTTYPE_PASSWORDLENGTH = @as(c_int, 24266);
pub const UA_NS0ID_USERMANAGEMENTTYPE_PASSWORDOPTIONS = @as(c_int, 24267);
pub const UA_NS0ID_USERMANAGEMENTTYPE_PASSWORDRESTRICTIONS = @as(c_int, 24268);
pub const UA_NS0ID_USERMANAGEMENTTYPE_ADDUSER = @as(c_int, 24269);
pub const UA_NS0ID_USERMANAGEMENTTYPE_ADDUSER_INPUTARGUMENTS = @as(c_int, 24270);
pub const UA_NS0ID_USERMANAGEMENTTYPE_MODIFYUSER = @as(c_int, 24271);
pub const UA_NS0ID_USERMANAGEMENTTYPE_MODIFYUSER_INPUTARGUMENTS = @as(c_int, 24272);
pub const UA_NS0ID_USERMANAGEMENTTYPE_REMOVEUSER = @as(c_int, 24273);
pub const UA_NS0ID_USERMANAGEMENTTYPE_REMOVEUSER_INPUTARGUMENTS = @as(c_int, 24274);
pub const UA_NS0ID_USERMANAGEMENTTYPE_CHANGEPASSWORD = @as(c_int, 24275);
pub const UA_NS0ID_USERMANAGEMENTTYPE_CHANGEPASSWORD_INPUTARGUMENTS = @as(c_int, 24276);
pub const UA_NS0ID_PASSWORDOPTIONSMASK = @as(c_int, 24277);
pub const UA_NS0ID_PASSWORDOPTIONSMASK_OPTIONSETVALUES = @as(c_int, 24278);
pub const UA_NS0ID_USERCONFIGURATIONMASK = @as(c_int, 24279);
pub const UA_NS0ID_USERCONFIGURATIONMASK_OPTIONSETVALUES = @as(c_int, 24280);
pub const UA_NS0ID_USERMANAGEMENTDATATYPE = @as(c_int, 24281);
pub const UA_NS0ID_ADDUSERMETHODTYPE = @as(c_int, 24282);
pub const UA_NS0ID_ADDUSERMETHODTYPE_INPUTARGUMENTS = @as(c_int, 24283);
pub const UA_NS0ID_MODIFYUSERMETHODTYPE = @as(c_int, 24284);
pub const UA_NS0ID_MODIFYUSERMETHODTYPE_INPUTARGUMENTS = @as(c_int, 24285);
pub const UA_NS0ID_REMOVEUSERMETHODTYPE = @as(c_int, 24286);
pub const UA_NS0ID_REMOVEUSERMETHODTYPE_INPUTARGUMENTS = @as(c_int, 24287);
pub const UA_NS0ID_CHANGEPASSWORDMETHODTYPE = @as(c_int, 24288);
pub const UA_NS0ID_CHANGEPASSWORDMETHODTYPE_INPUTARGUMENTS = @as(c_int, 24289);
pub const UA_NS0ID_USERMANAGEMENT = @as(c_int, 24290);
pub const UA_NS0ID_USERMANAGEMENT_PASSWORDRESTRICTIONS = @as(c_int, 24291);
pub const UA_NS0ID_USERMANAGEMENTDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 24292);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_USERMANAGEMENTDATATYPE = @as(c_int, 24293);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_USERMANAGEMENTDATATYPE_DATATYPEVERSION = @as(c_int, 24294);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_USERMANAGEMENTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 24295);
pub const UA_NS0ID_USERMANAGEMENTDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 24296);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_USERMANAGEMENTDATATYPE = @as(c_int, 24297);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_USERMANAGEMENTDATATYPE_DATATYPEVERSION = @as(c_int, 24298);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_USERMANAGEMENTDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 24299);
pub const UA_NS0ID_USERMANAGEMENTDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 24300);
pub const UA_NS0ID_USERMANAGEMENT_USERS = @as(c_int, 24301);
pub const UA_NS0ID_USERMANAGEMENT_PASSWORDLENGTH = @as(c_int, 24302);
pub const UA_NS0ID_USERMANAGEMENT_PASSWORDOPTIONS = @as(c_int, 24303);
pub const UA_NS0ID_USERMANAGEMENT_ADDUSER = @as(c_int, 24304);
pub const UA_NS0ID_USERMANAGEMENT_ADDUSER_INPUTARGUMENTS = @as(c_int, 24305);
pub const UA_NS0ID_USERMANAGEMENT_MODIFYUSER = @as(c_int, 24306);
pub const UA_NS0ID_USERMANAGEMENT_MODIFYUSER_INPUTARGUMENTS = @as(c_int, 24307);
pub const UA_NS0ID_USERMANAGEMENT_REMOVEUSER = @as(c_int, 24308);
pub const UA_NS0ID_USERMANAGEMENT_REMOVEUSER_INPUTARGUMENTS = @as(c_int, 24309);
pub const UA_NS0ID_USERMANAGEMENT_CHANGEPASSWORD = @as(c_int, 24310);
pub const UA_NS0ID_USERMANAGEMENT_CHANGEPASSWORD_INPUTARGUMENTS = @as(c_int, 24311);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_RESPOND2 = @as(c_int, 24312);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_RESPOND2_INPUTARGUMENTS = @as(c_int, 24313);
pub const UA_NS0ID_DIALOGRESPONSE2METHODTYPE = @as(c_int, 24314);
pub const UA_NS0ID_DIALOGRESPONSE2METHODTYPE_INPUTARGUMENTS = @as(c_int, 24315);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SUPPRESS2 = @as(c_int, 24316);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24317);
pub const UA_NS0ID_ALARMCONDITIONTYPE_UNSUPPRESS2 = @as(c_int, 24318);
pub const UA_NS0ID_ALARMCONDITIONTYPE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24319);
pub const UA_NS0ID_ALARMCONDITIONTYPE_REMOVEFROMSERVICE2 = @as(c_int, 24320);
pub const UA_NS0ID_ALARMCONDITIONTYPE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24321);
pub const UA_NS0ID_ALARMCONDITIONTYPE_PLACEINSERVICE2 = @as(c_int, 24322);
pub const UA_NS0ID_ALARMCONDITIONTYPE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24323);
pub const UA_NS0ID_ALARMCONDITIONTYPE_RESET2 = @as(c_int, 24324);
pub const UA_NS0ID_ALARMCONDITIONTYPE_RESET2_INPUTARGUMENTS = @as(c_int, 24325);
pub const UA_NS0ID_WITHCOMMENTMETHODTYPE = @as(c_int, 24326);
pub const UA_NS0ID_WITHCOMMENTMETHODTYPE_INPUTARGUMENTS = @as(c_int, 24327);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SUPPRESS2 = @as(c_int, 24328);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24329);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_UNSUPPRESS2 = @as(c_int, 24330);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24331);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_REMOVEFROMSERVICE2 = @as(c_int, 24332);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24333);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_PLACEINSERVICE2 = @as(c_int, 24334);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24335);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_RESET2 = @as(c_int, 24336);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_RESET2_INPUTARGUMENTS = @as(c_int, 24337);
pub const UA_NS0ID_LIMITALARMTYPE_SUPPRESS2 = @as(c_int, 24338);
pub const UA_NS0ID_LIMITALARMTYPE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24339);
pub const UA_NS0ID_LIMITALARMTYPE_UNSUPPRESS2 = @as(c_int, 24340);
pub const UA_NS0ID_LIMITALARMTYPE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24341);
pub const UA_NS0ID_LIMITALARMTYPE_REMOVEFROMSERVICE2 = @as(c_int, 24342);
pub const UA_NS0ID_LIMITALARMTYPE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24343);
pub const UA_NS0ID_LIMITALARMTYPE_PLACEINSERVICE2 = @as(c_int, 24344);
pub const UA_NS0ID_LIMITALARMTYPE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24345);
pub const UA_NS0ID_LIMITALARMTYPE_RESET2 = @as(c_int, 24346);
pub const UA_NS0ID_LIMITALARMTYPE_RESET2_INPUTARGUMENTS = @as(c_int, 24347);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SUPPRESS2 = @as(c_int, 24348);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24349);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_UNSUPPRESS2 = @as(c_int, 24350);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24351);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_REMOVEFROMSERVICE2 = @as(c_int, 24352);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24353);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_PLACEINSERVICE2 = @as(c_int, 24354);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24355);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_RESET2 = @as(c_int, 24356);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_RESET2_INPUTARGUMENTS = @as(c_int, 24357);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SUPPRESS2 = @as(c_int, 24358);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24359);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_UNSUPPRESS2 = @as(c_int, 24360);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24361);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_REMOVEFROMSERVICE2 = @as(c_int, 24362);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24363);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_PLACEINSERVICE2 = @as(c_int, 24364);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24365);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_RESET2 = @as(c_int, 24366);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_RESET2_INPUTARGUMENTS = @as(c_int, 24367);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SUPPRESS2 = @as(c_int, 24368);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24369);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_UNSUPPRESS2 = @as(c_int, 24370);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24371);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_REMOVEFROMSERVICE2 = @as(c_int, 24372);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24373);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_PLACEINSERVICE2 = @as(c_int, 24374);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24375);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_RESET2 = @as(c_int, 24376);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_RESET2_INPUTARGUMENTS = @as(c_int, 24377);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SUPPRESS2 = @as(c_int, 24378);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24379);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_UNSUPPRESS2 = @as(c_int, 24380);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24381);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_REMOVEFROMSERVICE2 = @as(c_int, 24382);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24383);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_PLACEINSERVICE2 = @as(c_int, 24384);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24385);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_RESET2 = @as(c_int, 24386);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_RESET2_INPUTARGUMENTS = @as(c_int, 24387);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SUPPRESS2 = @as(c_int, 24388);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24389);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_UNSUPPRESS2 = @as(c_int, 24390);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24391);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_REMOVEFROMSERVICE2 = @as(c_int, 24392);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24393);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_PLACEINSERVICE2 = @as(c_int, 24394);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24395);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_RESET2 = @as(c_int, 24396);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_RESET2_INPUTARGUMENTS = @as(c_int, 24397);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SUPPRESS2 = @as(c_int, 24398);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24399);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_UNSUPPRESS2 = @as(c_int, 24400);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24401);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_REMOVEFROMSERVICE2 = @as(c_int, 24402);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24403);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_PLACEINSERVICE2 = @as(c_int, 24404);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24405);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_RESET2 = @as(c_int, 24406);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_RESET2_INPUTARGUMENTS = @as(c_int, 24407);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SUPPRESS2 = @as(c_int, 24408);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24409);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_UNSUPPRESS2 = @as(c_int, 24410);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24411);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_REMOVEFROMSERVICE2 = @as(c_int, 24412);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24413);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_PLACEINSERVICE2 = @as(c_int, 24414);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24415);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_RESET2 = @as(c_int, 24416);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_RESET2_INPUTARGUMENTS = @as(c_int, 24417);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SUPPRESS2 = @as(c_int, 24418);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24419);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_UNSUPPRESS2 = @as(c_int, 24420);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24421);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_REMOVEFROMSERVICE2 = @as(c_int, 24422);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24423);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_PLACEINSERVICE2 = @as(c_int, 24424);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24425);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_RESET2 = @as(c_int, 24426);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_RESET2_INPUTARGUMENTS = @as(c_int, 24427);
pub const UA_NS0ID_DISCRETEALARMTYPE_SUPPRESS2 = @as(c_int, 24428);
pub const UA_NS0ID_DISCRETEALARMTYPE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24429);
pub const UA_NS0ID_DISCRETEALARMTYPE_UNSUPPRESS2 = @as(c_int, 24430);
pub const UA_NS0ID_DISCRETEALARMTYPE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24431);
pub const UA_NS0ID_DISCRETEALARMTYPE_REMOVEFROMSERVICE2 = @as(c_int, 24432);
pub const UA_NS0ID_DISCRETEALARMTYPE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24433);
pub const UA_NS0ID_DISCRETEALARMTYPE_PLACEINSERVICE2 = @as(c_int, 24434);
pub const UA_NS0ID_DISCRETEALARMTYPE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24435);
pub const UA_NS0ID_DISCRETEALARMTYPE_RESET2 = @as(c_int, 24436);
pub const UA_NS0ID_DISCRETEALARMTYPE_RESET2_INPUTARGUMENTS = @as(c_int, 24437);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SUPPRESS2 = @as(c_int, 24438);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24439);
pub const UA_NS0ID_OFFNORMALALARMTYPE_UNSUPPRESS2 = @as(c_int, 24440);
pub const UA_NS0ID_OFFNORMALALARMTYPE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24441);
pub const UA_NS0ID_OFFNORMALALARMTYPE_REMOVEFROMSERVICE2 = @as(c_int, 24442);
pub const UA_NS0ID_OFFNORMALALARMTYPE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24443);
pub const UA_NS0ID_OFFNORMALALARMTYPE_PLACEINSERVICE2 = @as(c_int, 24444);
pub const UA_NS0ID_OFFNORMALALARMTYPE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24445);
pub const UA_NS0ID_OFFNORMALALARMTYPE_RESET2 = @as(c_int, 24446);
pub const UA_NS0ID_OFFNORMALALARMTYPE_RESET2_INPUTARGUMENTS = @as(c_int, 24447);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SUPPRESS2 = @as(c_int, 24448);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24449);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_UNSUPPRESS2 = @as(c_int, 24450);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24451);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_REMOVEFROMSERVICE2 = @as(c_int, 24452);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24453);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_PLACEINSERVICE2 = @as(c_int, 24454);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24455);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_RESET2 = @as(c_int, 24456);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_RESET2_INPUTARGUMENTS = @as(c_int, 24457);
pub const UA_NS0ID_TRIPALARMTYPE_SUPPRESS2 = @as(c_int, 24458);
pub const UA_NS0ID_TRIPALARMTYPE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24459);
pub const UA_NS0ID_TRIPALARMTYPE_UNSUPPRESS2 = @as(c_int, 24460);
pub const UA_NS0ID_TRIPALARMTYPE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24461);
pub const UA_NS0ID_TRIPALARMTYPE_REMOVEFROMSERVICE2 = @as(c_int, 24462);
pub const UA_NS0ID_TRIPALARMTYPE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24463);
pub const UA_NS0ID_TRIPALARMTYPE_PLACEINSERVICE2 = @as(c_int, 24464);
pub const UA_NS0ID_TRIPALARMTYPE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24465);
pub const UA_NS0ID_TRIPALARMTYPE_RESET2 = @as(c_int, 24466);
pub const UA_NS0ID_TRIPALARMTYPE_RESET2_INPUTARGUMENTS = @as(c_int, 24467);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SUPPRESS2 = @as(c_int, 24468);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24469);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_UNSUPPRESS2 = @as(c_int, 24470);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24471);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_REMOVEFROMSERVICE2 = @as(c_int, 24472);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24473);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_PLACEINSERVICE2 = @as(c_int, 24474);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24475);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_RESET2 = @as(c_int, 24476);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_RESET2_INPUTARGUMENTS = @as(c_int, 24477);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SUPPRESS2 = @as(c_int, 24478);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24479);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_UNSUPPRESS2 = @as(c_int, 24480);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24481);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_REMOVEFROMSERVICE2 = @as(c_int, 24482);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24483);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_PLACEINSERVICE2 = @as(c_int, 24484);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24485);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_RESET2 = @as(c_int, 24486);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_RESET2_INPUTARGUMENTS = @as(c_int, 24487);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SUPPRESS2 = @as(c_int, 24488);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24489);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_UNSUPPRESS2 = @as(c_int, 24490);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24491);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_REMOVEFROMSERVICE2 = @as(c_int, 24492);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24493);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_PLACEINSERVICE2 = @as(c_int, 24494);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24495);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_RESET2 = @as(c_int, 24496);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_RESET2_INPUTARGUMENTS = @as(c_int, 24497);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SUPPRESS2 = @as(c_int, 24498);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24499);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_UNSUPPRESS2 = @as(c_int, 24500);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24501);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_REMOVEFROMSERVICE2 = @as(c_int, 24502);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24503);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_PLACEINSERVICE2 = @as(c_int, 24504);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24505);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_RESET2 = @as(c_int, 24506);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_RESET2_INPUTARGUMENTS = @as(c_int, 24507);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SUPPRESS2 = @as(c_int, 24508);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24509);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_UNSUPPRESS2 = @as(c_int, 24510);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24511);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_REMOVEFROMSERVICE2 = @as(c_int, 24512);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24513);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_PLACEINSERVICE2 = @as(c_int, 24514);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24515);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_RESET2 = @as(c_int, 24516);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_RESET2_INPUTARGUMENTS = @as(c_int, 24517);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SUPPRESS2 = @as(c_int, 24518);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24519);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_UNSUPPRESS2 = @as(c_int, 24520);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24521);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2 = @as(c_int, 24522);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24523);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_PLACEINSERVICE2 = @as(c_int, 24524);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24525);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_RESET2 = @as(c_int, 24526);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_RESET2_INPUTARGUMENTS = @as(c_int, 24527);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SUPPRESS2 = @as(c_int, 24528);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24529);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_UNSUPPRESS2 = @as(c_int, 24530);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24531);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2 = @as(c_int, 24532);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24533);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_PLACEINSERVICE2 = @as(c_int, 24534);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24535);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_RESET2 = @as(c_int, 24536);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_RESET2_INPUTARGUMENTS = @as(c_int, 24537);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESS2 = @as(c_int, 24538);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24539);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2 = @as(c_int, 24540);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24541);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2 = @as(c_int, 24542);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24543);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2 = @as(c_int, 24544);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24545);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RESET2 = @as(c_int, 24546);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RESET2_INPUTARGUMENTS = @as(c_int, 24547);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2 = @as(c_int, 24548);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24549);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2 = @as(c_int, 24550);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24551);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2 = @as(c_int, 24552);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24553);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2 = @as(c_int, 24554);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24555);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RESET2 = @as(c_int, 24556);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RESET2_INPUTARGUMENTS = @as(c_int, 24557);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESS2 = @as(c_int, 24558);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24559);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2 = @as(c_int, 24560);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24561);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2 = @as(c_int, 24562);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24563);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2 = @as(c_int, 24564);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24565);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RESET2 = @as(c_int, 24566);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RESET2_INPUTARGUMENTS = @as(c_int, 24567);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2 = @as(c_int, 24568);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24569);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2 = @as(c_int, 24570);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24571);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2 = @as(c_int, 24572);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24573);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2 = @as(c_int, 24574);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24575);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RESET2 = @as(c_int, 24576);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RESET2_INPUTARGUMENTS = @as(c_int, 24577);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESS2 = @as(c_int, 24578);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24579);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2 = @as(c_int, 24580);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24581);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2 = @as(c_int, 24582);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24583);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2 = @as(c_int, 24584);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24585);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RESET2 = @as(c_int, 24586);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RESET2_INPUTARGUMENTS = @as(c_int, 24587);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2 = @as(c_int, 24588);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24589);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2 = @as(c_int, 24590);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24591);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2 = @as(c_int, 24592);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24593);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2 = @as(c_int, 24594);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24595);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RESET2 = @as(c_int, 24596);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RESET2_INPUTARGUMENTS = @as(c_int, 24597);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SUPPRESS2 = @as(c_int, 24598);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24599);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_UNSUPPRESS2 = @as(c_int, 24600);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24601);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2 = @as(c_int, 24602);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24603);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_PLACEINSERVICE2 = @as(c_int, 24604);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24605);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_RESET2 = @as(c_int, 24606);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_RESET2_INPUTARGUMENTS = @as(c_int, 24607);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SUPPRESS2 = @as(c_int, 24608);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24609);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_UNSUPPRESS2 = @as(c_int, 24610);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24611);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2 = @as(c_int, 24612);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24613);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_PLACEINSERVICE2 = @as(c_int, 24614);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24615);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_RESET2 = @as(c_int, 24616);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_RESET2_INPUTARGUMENTS = @as(c_int, 24617);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESS2 = @as(c_int, 24618);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24619);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2 = @as(c_int, 24620);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24621);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2 = @as(c_int, 24622);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24623);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2 = @as(c_int, 24624);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24625);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RESET2 = @as(c_int, 24626);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RESET2_INPUTARGUMENTS = @as(c_int, 24627);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2 = @as(c_int, 24628);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24629);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2 = @as(c_int, 24630);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24631);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2 = @as(c_int, 24632);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24633);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2 = @as(c_int, 24634);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24635);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RESET2 = @as(c_int, 24636);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RESET2_INPUTARGUMENTS = @as(c_int, 24637);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESS2 = @as(c_int, 24638);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24639);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2 = @as(c_int, 24640);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24641);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2 = @as(c_int, 24642);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24643);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2 = @as(c_int, 24644);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24645);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RESET2 = @as(c_int, 24646);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RESET2_INPUTARGUMENTS = @as(c_int, 24647);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2 = @as(c_int, 24648);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24649);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2 = @as(c_int, 24650);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24651);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2 = @as(c_int, 24652);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24653);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2 = @as(c_int, 24654);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24655);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RESET2 = @as(c_int, 24656);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RESET2_INPUTARGUMENTS = @as(c_int, 24657);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESS2 = @as(c_int, 24658);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24659);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2 = @as(c_int, 24660);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24661);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2 = @as(c_int, 24662);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24663);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2 = @as(c_int, 24664);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24665);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RESET2 = @as(c_int, 24666);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RESET2_INPUTARGUMENTS = @as(c_int, 24667);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2 = @as(c_int, 24668);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24669);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2 = @as(c_int, 24670);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24671);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2 = @as(c_int, 24672);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24673);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2 = @as(c_int, 24674);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24675);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RESET2 = @as(c_int, 24676);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RESET2_INPUTARGUMENTS = @as(c_int, 24677);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESS2 = @as(c_int, 24678);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24679);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2 = @as(c_int, 24680);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24681);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2 = @as(c_int, 24682);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24683);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2 = @as(c_int, 24684);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24685);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RESET2 = @as(c_int, 24686);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RESET2_INPUTARGUMENTS = @as(c_int, 24687);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2 = @as(c_int, 24688);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24689);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2 = @as(c_int, 24690);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24691);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2 = @as(c_int, 24692);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24693);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2 = @as(c_int, 24694);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24695);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RESET2 = @as(c_int, 24696);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RESET2_INPUTARGUMENTS = @as(c_int, 24697);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESS2 = @as(c_int, 24698);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24699);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2 = @as(c_int, 24700);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24701);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2 = @as(c_int, 24702);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24703);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2 = @as(c_int, 24704);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24705);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RESET2 = @as(c_int, 24706);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RESET2_INPUTARGUMENTS = @as(c_int, 24707);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2 = @as(c_int, 24708);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24709);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2 = @as(c_int, 24710);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24711);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2 = @as(c_int, 24712);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24713);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2 = @as(c_int, 24714);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24715);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RESET2 = @as(c_int, 24716);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RESET2_INPUTARGUMENTS = @as(c_int, 24717);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESS2 = @as(c_int, 24718);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24719);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2 = @as(c_int, 24720);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24721);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2 = @as(c_int, 24722);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24723);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2 = @as(c_int, 24724);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24725);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RESET2 = @as(c_int, 24726);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RESET2_INPUTARGUMENTS = @as(c_int, 24727);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2 = @as(c_int, 24728);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 24729);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2 = @as(c_int, 24730);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 24731);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2 = @as(c_int, 24732);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 24733);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2 = @as(c_int, 24734);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 24735);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RESET2 = @as(c_int, 24736);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RESET2_INPUTARGUMENTS = @as(c_int, 24737);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 24738);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 24739);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 24740);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 24741);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 24742);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 24743);
pub const UA_NS0ID_ALARMCONDITIONTYPE_GETGROUPMEMBERSHIPS = @as(c_int, 24744);
pub const UA_NS0ID_GETGROUPMEMBERSHIPSMETHODTYPE = @as(c_int, 24746);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 24748);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 24749);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 24750);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 24751);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 24752);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 24753);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_GETGROUPMEMBERSHIPS = @as(c_int, 24754);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_TIMEDSHELVE2 = @as(c_int, 24756);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 24757);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_UNSHELVE2 = @as(c_int, 24758);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 24759);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_ONESHOTSHELVE2 = @as(c_int, 24760);
pub const UA_NS0ID_SHELVEDSTATEMACHINETYPE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 24761);
pub const UA_NS0ID_LIMITALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 24762);
pub const UA_NS0ID_LIMITALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 24763);
pub const UA_NS0ID_LIMITALARMTYPE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 24764);
pub const UA_NS0ID_LIMITALARMTYPE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 24765);
pub const UA_NS0ID_LIMITALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 24766);
pub const UA_NS0ID_LIMITALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 24767);
pub const UA_NS0ID_LIMITALARMTYPE_GETGROUPMEMBERSHIPS = @as(c_int, 24768);
pub const UA_NS0ID_LIMITALARMTYPE_SEVERITYHIGHHIGH = @as(c_int, 24770);
pub const UA_NS0ID_LIMITALARMTYPE_SEVERITYHIGH = @as(c_int, 24771);
pub const UA_NS0ID_LIMITALARMTYPE_SEVERITYLOW = @as(c_int, 24772);
pub const UA_NS0ID_LIMITALARMTYPE_SEVERITYLOWLOW = @as(c_int, 24773);
pub const UA_NS0ID_LIMITALARMTYPE_HIGHHIGHDEADBAND = @as(c_int, 24774);
pub const UA_NS0ID_LIMITALARMTYPE_HIGHDEADBAND = @as(c_int, 24775);
pub const UA_NS0ID_LIMITALARMTYPE_LOWDEADBAND = @as(c_int, 24776);
pub const UA_NS0ID_LIMITALARMTYPE_LOWLOWDEADBAND = @as(c_int, 24777);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 24778);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 24779);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 24780);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 24781);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 24782);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 24783);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_GETGROUPMEMBERSHIPS = @as(c_int, 24784);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SEVERITYHIGHHIGH = @as(c_int, 24786);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SEVERITYHIGH = @as(c_int, 24787);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SEVERITYLOW = @as(c_int, 24788);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SEVERITYLOWLOW = @as(c_int, 24789);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_HIGHHIGHDEADBAND = @as(c_int, 24790);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_HIGHDEADBAND = @as(c_int, 24791);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LOWDEADBAND = @as(c_int, 24792);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_LOWLOWDEADBAND = @as(c_int, 24793);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 24794);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 24795);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 24796);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 24797);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 24798);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 24799);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_GETGROUPMEMBERSHIPS = @as(c_int, 24800);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SEVERITYHIGHHIGH = @as(c_int, 24802);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SEVERITYHIGH = @as(c_int, 24803);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SEVERITYLOW = @as(c_int, 24804);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SEVERITYLOWLOW = @as(c_int, 24805);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_HIGHHIGHDEADBAND = @as(c_int, 24806);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_HIGHDEADBAND = @as(c_int, 24807);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LOWDEADBAND = @as(c_int, 24808);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_LOWLOWDEADBAND = @as(c_int, 24809);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 24810);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 24811);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 24812);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 24813);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 24814);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 24815);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_GETGROUPMEMBERSHIPS = @as(c_int, 24816);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SEVERITYHIGHHIGH = @as(c_int, 24818);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SEVERITYHIGH = @as(c_int, 24819);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SEVERITYLOW = @as(c_int, 24820);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SEVERITYLOWLOW = @as(c_int, 24821);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_HIGHHIGHDEADBAND = @as(c_int, 24822);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_HIGHDEADBAND = @as(c_int, 24823);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LOWDEADBAND = @as(c_int, 24824);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_LOWLOWDEADBAND = @as(c_int, 24825);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 24826);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 24827);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 24828);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 24829);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 24830);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 24831);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_GETGROUPMEMBERSHIPS = @as(c_int, 24832);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SEVERITYHIGHHIGH = @as(c_int, 24834);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SEVERITYHIGH = @as(c_int, 24835);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SEVERITYLOW = @as(c_int, 24836);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SEVERITYLOWLOW = @as(c_int, 24837);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_HIGHHIGHDEADBAND = @as(c_int, 24838);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_HIGHDEADBAND = @as(c_int, 24839);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LOWDEADBAND = @as(c_int, 24840);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_LOWLOWDEADBAND = @as(c_int, 24841);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 24842);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 24843);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 24844);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 24845);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 24846);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 24847);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_GETGROUPMEMBERSHIPS = @as(c_int, 24848);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SEVERITYHIGHHIGH = @as(c_int, 24850);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SEVERITYHIGH = @as(c_int, 24851);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SEVERITYLOW = @as(c_int, 24852);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SEVERITYLOWLOW = @as(c_int, 24853);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_HIGHHIGHDEADBAND = @as(c_int, 24854);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_HIGHDEADBAND = @as(c_int, 24855);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LOWDEADBAND = @as(c_int, 24856);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_LOWLOWDEADBAND = @as(c_int, 24857);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 24858);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 24859);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 24860);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 24861);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 24862);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 24863);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_GETGROUPMEMBERSHIPS = @as(c_int, 24864);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SEVERITYHIGHHIGH = @as(c_int, 24866);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SEVERITYHIGH = @as(c_int, 24867);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SEVERITYLOW = @as(c_int, 24868);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SEVERITYLOWLOW = @as(c_int, 24869);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_HIGHHIGHDEADBAND = @as(c_int, 24870);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_HIGHDEADBAND = @as(c_int, 24871);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LOWDEADBAND = @as(c_int, 24872);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_LOWLOWDEADBAND = @as(c_int, 24873);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 24874);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 24875);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 24876);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 24877);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 24878);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 24879);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_GETGROUPMEMBERSHIPS = @as(c_int, 24880);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SEVERITYHIGHHIGH = @as(c_int, 24882);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SEVERITYHIGH = @as(c_int, 24883);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SEVERITYLOW = @as(c_int, 24884);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SEVERITYLOWLOW = @as(c_int, 24885);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_HIGHHIGHDEADBAND = @as(c_int, 24886);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_HIGHDEADBAND = @as(c_int, 24887);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LOWDEADBAND = @as(c_int, 24888);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_LOWLOWDEADBAND = @as(c_int, 24889);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 24890);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 24891);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 24892);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 24893);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 24894);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 24895);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_GETGROUPMEMBERSHIPS = @as(c_int, 24896);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SEVERITYHIGHHIGH = @as(c_int, 24898);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SEVERITYHIGH = @as(c_int, 24899);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SEVERITYLOW = @as(c_int, 24900);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SEVERITYLOWLOW = @as(c_int, 24901);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_HIGHHIGHDEADBAND = @as(c_int, 24902);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_HIGHDEADBAND = @as(c_int, 24903);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LOWDEADBAND = @as(c_int, 24904);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_LOWLOWDEADBAND = @as(c_int, 24905);
pub const UA_NS0ID_DISCRETEALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 24906);
pub const UA_NS0ID_DISCRETEALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 24907);
pub const UA_NS0ID_DISCRETEALARMTYPE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 24908);
pub const UA_NS0ID_DISCRETEALARMTYPE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 24909);
pub const UA_NS0ID_DISCRETEALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 24910);
pub const UA_NS0ID_DISCRETEALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 24911);
pub const UA_NS0ID_DISCRETEALARMTYPE_GETGROUPMEMBERSHIPS = @as(c_int, 24912);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 24914);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 24915);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 24916);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 24917);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 24918);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 24919);
pub const UA_NS0ID_OFFNORMALALARMTYPE_GETGROUPMEMBERSHIPS = @as(c_int, 24920);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 24922);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 24923);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 24924);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 24925);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 24926);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 24927);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_GETGROUPMEMBERSHIPS = @as(c_int, 24928);
pub const UA_NS0ID_TRIPALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 24930);
pub const UA_NS0ID_TRIPALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 24931);
pub const UA_NS0ID_TRIPALARMTYPE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 24932);
pub const UA_NS0ID_TRIPALARMTYPE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 24933);
pub const UA_NS0ID_TRIPALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 24934);
pub const UA_NS0ID_TRIPALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 24935);
pub const UA_NS0ID_TRIPALARMTYPE_GETGROUPMEMBERSHIPS = @as(c_int, 24936);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 24938);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 24939);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 24940);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 24941);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 24942);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 24943);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_GETGROUPMEMBERSHIPS = @as(c_int, 24944);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 24946);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 24947);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 24948);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 24949);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 24950);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 24951);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_GETGROUPMEMBERSHIPS = @as(c_int, 24952);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 24954);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 24955);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 24956);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 24957);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 24958);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 24959);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_GETGROUPMEMBERSHIPS = @as(c_int, 24960);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 24962);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 24963);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 24964);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 24965);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 24966);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 24967);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_GETGROUPMEMBERSHIPS = @as(c_int, 24968);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 24970);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 24971);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 24972);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 24973);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 24974);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 24975);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_GETGROUPMEMBERSHIPS = @as(c_int, 24976);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 24978);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 24979);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 24980);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 24981);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 24982);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 24983);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS = @as(c_int, 24984);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 24986);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 24987);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 24988);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 24989);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 24990);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 24991);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS = @as(c_int, 24992);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 24994);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 24995);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 24996);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 24997);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 24998);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 24999);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS = @as(c_int, 25000);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 25002);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 25003);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 25004);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 25005);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 25006);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 25007);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS = @as(c_int, 25008);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 25010);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 25011);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 25012);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 25013);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 25014);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 25015);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS = @as(c_int, 25016);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 25018);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 25019);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 25020);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 25021);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 25022);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 25023);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS = @as(c_int, 25024);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 25026);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 25027);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 25028);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 25029);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 25030);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 25031);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS = @as(c_int, 25032);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 25034);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 25035);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 25036);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 25037);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 25038);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 25039);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS = @as(c_int, 25040);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 25042);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 25043);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 25044);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 25045);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 25046);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 25047);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS = @as(c_int, 25048);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 25050);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 25051);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 25052);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 25053);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 25054);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 25055);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS = @as(c_int, 25056);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 25058);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 25059);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 25060);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 25061);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 25062);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 25063);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS = @as(c_int, 25064);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 25066);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 25067);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 25068);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 25069);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 25070);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 25071);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS = @as(c_int, 25072);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 25074);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 25075);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 25076);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 25077);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 25078);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 25079);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS = @as(c_int, 25080);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 25082);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 25083);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 25084);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 25085);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 25086);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 25087);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS = @as(c_int, 25088);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 25090);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 25091);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 25092);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 25093);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 25094);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 25095);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS = @as(c_int, 25096);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 25098);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 25099);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 25100);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 25101);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 25102);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 25103);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS = @as(c_int, 25104);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 25106);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 25107);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 25108);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 25109);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 25110);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 25111);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS = @as(c_int, 25112);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 25114);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 25115);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 25116);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 25117);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 25118);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 25119);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS = @as(c_int, 25120);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 25122);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 25123);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 25124);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 25125);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 25126);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 25127);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS = @as(c_int, 25128);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 25130);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 25131);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 25132);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 25133);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 25134);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 25135);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS = @as(c_int, 25136);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 25138);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 25139);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 25140);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 25141);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 25142);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 25143);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS = @as(c_int, 25144);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 25146);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 25147);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 25148);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 25149);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 25150);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 25151);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS = @as(c_int, 25152);
pub const UA_NS0ID_ALARMCONDITIONTYPE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25154);
pub const UA_NS0ID_GETGROUPMEMBERSHIPSMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 25155);
pub const UA_NS0ID_ALARMGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25156);
pub const UA_NS0ID_TIMEDSHELVE2METHODTYPE = @as(c_int, 25157);
pub const UA_NS0ID_TIMEDSHELVE2METHODTYPE_INPUTARGUMENTS = @as(c_int, 25158);
pub const UA_NS0ID_LIMITALARMTYPE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25159);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25160);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25161);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25162);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25163);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25164);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25165);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25166);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25167);
pub const UA_NS0ID_DISCRETEALARMTYPE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25168);
pub const UA_NS0ID_OFFNORMALALARMTYPE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25169);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25170);
pub const UA_NS0ID_TRIPALARMTYPE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25171);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25172);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25173);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25174);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25175);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25176);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25177);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25178);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25179);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25180);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25181);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25182);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25183);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25184);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25185);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25186);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25187);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25188);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25189);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25190);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25191);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25192);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25193);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25194);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25195);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25196);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25197);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25198);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_NAMESPACEFILE_LASTMODIFIEDTIME = @as(c_int, 25199);
pub const UA_NS0ID_FILETYPE_LASTMODIFIEDTIME = @as(c_int, 25200);
pub const UA_NS0ID_ADDRESSSPACEFILETYPE_LASTMODIFIEDTIME = @as(c_int, 25201);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_NAMESPACEFILE_LASTMODIFIEDTIME = @as(c_int, 25202);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_NAMESPACEFILE_LASTMODIFIEDTIME = @as(c_int, 25203);
pub const UA_NS0ID_FILEDIRECTORYTYPE_FILENAME_PLACEHOLDER_LASTMODIFIEDTIME = @as(c_int, 25204);
pub const UA_NS0ID_FILESYSTEM_FILENAME_PLACEHOLDER_LASTMODIFIEDTIME = @as(c_int, 25205);
pub const UA_NS0ID_TRUSTLISTTYPE_LASTMODIFIEDTIME = @as(c_int, 25206);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_LASTMODIFIEDTIME = @as(c_int, 25207);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_LASTMODIFIEDTIME = @as(c_int, 25208);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_LASTMODIFIEDTIME = @as(c_int, 25209);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_LASTMODIFIEDTIME = @as(c_int, 25210);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_LASTMODIFIEDTIME = @as(c_int, 25211);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_LASTMODIFIEDTIME = @as(c_int, 25212);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_LASTMODIFIEDTIME = @as(c_int, 25213);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_LASTMODIFIEDTIME = @as(c_int, 25214);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_LASTMODIFIEDTIME = @as(c_int, 25215);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_LASTMODIFIEDTIME = @as(c_int, 25216);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_LASTMODIFIEDTIME = @as(c_int, 25217);
pub const UA_NS0ID_IVLANIDTYPE = @as(c_int, 25218);
pub const UA_NS0ID_IVLANIDTYPE_VLANID = @as(c_int, 25219);
pub const UA_NS0ID_PRIORITYMAPPINGENTRYTYPE = @as(c_int, 25220);
pub const UA_NS0ID_IETFBASENETWORKINTERFACETYPE = @as(c_int, 25221);
pub const UA_NS0ID_IETFBASENETWORKINTERFACETYPE_ADMINSTATUS = @as(c_int, 25222);
pub const UA_NS0ID_IETFBASENETWORKINTERFACETYPE_OPERSTATUS = @as(c_int, 25223);
pub const UA_NS0ID_IETFBASENETWORKINTERFACETYPE_PHYSADDRESS = @as(c_int, 25224);
pub const UA_NS0ID_IETFBASENETWORKINTERFACETYPE_SPEED = @as(c_int, 25225);
pub const UA_NS0ID_IETFBASENETWORKINTERFACETYPE_INTERFACENAME_PLACEHOLDER = @as(c_int, 25226);
pub const UA_NS0ID_PRIORITYMAPPINGTABLETYPE = @as(c_int, 25227);
pub const UA_NS0ID_PRIORITYMAPPINGTABLETYPE_PRIORITYMAPPPINGENTRIES = @as(c_int, 25228);
pub const UA_NS0ID_PRIORITYMAPPINGTABLETYPE_ADDPRIORITYMAPPINGENTRY = @as(c_int, 25229);
pub const UA_NS0ID_PRIORITYMAPPINGTABLETYPE_ADDPRIORITYMAPPINGENTRY_INPUTARGUMENTS = @as(c_int, 25230);
pub const UA_NS0ID_PRIORITYMAPPINGTABLETYPE_DELETEPRIORITYMAPPINGENTRY = @as(c_int, 25231);
pub const UA_NS0ID_PRIORITYMAPPINGTABLETYPE_DELETEPRIORITYMAPPINGENTRY_INPUTARGUMENTS = @as(c_int, 25232);
pub const UA_NS0ID_ADDPRIORITYMAPPINGENTRYMETHODTYPE = @as(c_int, 25233);
pub const UA_NS0ID_ADDPRIORITYMAPPINGENTRYMETHODTYPE_INPUTARGUMENTS = @as(c_int, 25234);
pub const UA_NS0ID_DELETEPRIORITYMAPPINGENTRYMETHODTYPE = @as(c_int, 25235);
pub const UA_NS0ID_DELETEPRIORITYMAPPINGENTRYMETHODTYPE_INPUTARGUMENTS = @as(c_int, 25236);
pub const UA_NS0ID_USESPRIORITYMAPPINGTABLE = @as(c_int, 25237);
pub const UA_NS0ID_HASLOWERLAYERINTERFACE = @as(c_int, 25238);
pub const UA_NS0ID_PRIORITYMAPPINGENTRYTYPE_ENCODING_DEFAULTBINARY = @as(c_int, 25239);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PRIORITYMAPPINGENTRYTYPE = @as(c_int, 25240);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PRIORITYMAPPINGENTRYTYPE_DATATYPEVERSION = @as(c_int, 25241);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PRIORITYMAPPINGENTRYTYPE_DICTIONARYFRAGMENT = @as(c_int, 25242);
pub const UA_NS0ID_PRIORITYMAPPINGENTRYTYPE_ENCODING_DEFAULTXML = @as(c_int, 25243);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PRIORITYMAPPINGENTRYTYPE = @as(c_int, 25244);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PRIORITYMAPPINGENTRYTYPE_DATATYPEVERSION = @as(c_int, 25245);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PRIORITYMAPPINGENTRYTYPE_DICTIONARYFRAGMENT = @as(c_int, 25246);
pub const UA_NS0ID_PRIORITYMAPPINGENTRYTYPE_ENCODING_DEFAULTJSON = @as(c_int, 25247);
pub const UA_NS0ID_IETFBASENETWORKINTERFACETYPE_SPEED_DEFINITION = @as(c_int, 25248);
pub const UA_NS0ID_IETFBASENETWORKINTERFACETYPE_SPEED_VALUEPRECISION = @as(c_int, 25249);
pub const UA_NS0ID_IETFBASENETWORKINTERFACETYPE_SPEED_INSTRUMENTRANGE = @as(c_int, 25250);
pub const UA_NS0ID_IETFBASENETWORKINTERFACETYPE_SPEED_EURANGE = @as(c_int, 25251);
pub const UA_NS0ID_IETFBASENETWORKINTERFACETYPE_SPEED_ENGINEERINGUNITS = @as(c_int, 25252);
pub const UA_NS0ID_ISEXECUTABLEON = @as(c_int, 25253);
pub const UA_NS0ID_CONTROLS = @as(c_int, 25254);
pub const UA_NS0ID_UTILIZES = @as(c_int, 25255);
pub const UA_NS0ID_REQUIRES = @as(c_int, 25256);
pub const UA_NS0ID_ISPHYSICALLYCONNECTEDTO = @as(c_int, 25257);
pub const UA_NS0ID_REPRESENTSSAMEENTITYAS = @as(c_int, 25258);
pub const UA_NS0ID_REPRESENTSSAMEHARDWAREAS = @as(c_int, 25259);
pub const UA_NS0ID_REPRESENTSSAMEFUNCTIONALITYAS = @as(c_int, 25260);
pub const UA_NS0ID_ISHOSTEDBY = @as(c_int, 25261);
pub const UA_NS0ID_HASPHYSICALCOMPONENT = @as(c_int, 25262);
pub const UA_NS0ID_HASCONTAINEDCOMPONENT = @as(c_int, 25263);
pub const UA_NS0ID_HASATTACHEDCOMPONENT = @as(c_int, 25264);
pub const UA_NS0ID_ISEXECUTINGON = @as(c_int, 25265);
pub const UA_NS0ID_OPCUANAMESPACEMETADATA_CONFIGURATIONVERSION = @as(c_int, 25266);
pub const UA_NS0ID_NAMESPACEMETADATATYPE_CONFIGURATIONVERSION = @as(c_int, 25267);
pub const UA_NS0ID_NAMESPACESTYPE_NAMESPACEIDENTIFIER_PLACEHOLDER_CONFIGURATIONVERSION = @as(c_int, 25268);
pub const UA_NS0ID_PUBLISHEDDATASETCUSTOMSOURCEDATATYPE = @as(c_int, 25269);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETDATATYPE = @as(c_int, 25270);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_SECURITYGROUPS_ADDSECURITYGROUPFOLDER = @as(c_int, 25271);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_SECURITYGROUPS_ADDSECURITYGROUPFOLDER_INPUTARGUMENTS = @as(c_int, 25272);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_SECURITYGROUPS_ADDSECURITYGROUPFOLDER_OUTPUTARGUMENTS = @as(c_int, 25273);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_SECURITYGROUPS_REMOVESECURITYGROUPFOLDER = @as(c_int, 25274);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_SECURITYGROUPS_REMOVESECURITYGROUPFOLDER_INPUTARGUMENTS = @as(c_int, 25275);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_SECURITYGROUPS_SUPPORTEDSECURITYPOLICYURIS = @as(c_int, 25276);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_KEYPUSHTARGETS = @as(c_int, 25277);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_KEYPUSHTARGETS_ADDPUSHTARGET = @as(c_int, 25278);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_KEYPUSHTARGETS_ADDPUSHTARGET_INPUTARGUMENTS = @as(c_int, 25279);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_KEYPUSHTARGETS_ADDPUSHTARGET_OUTPUTARGUMENTS = @as(c_int, 25280);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_KEYPUSHTARGETS_REMOVEPUSHTARGET = @as(c_int, 25281);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_KEYPUSHTARGETS_REMOVEPUSHTARGET_INPUTARGUMENTS = @as(c_int, 25282);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_KEYPUSHTARGETS_ADDPUSHTARGETFOLDER = @as(c_int, 25283);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_KEYPUSHTARGETS_ADDPUSHTARGETFOLDER_INPUTARGUMENTS = @as(c_int, 25284);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_KEYPUSHTARGETS_ADDPUSHTARGETFOLDER_OUTPUTARGUMENTS = @as(c_int, 25285);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_KEYPUSHTARGETS_REMOVEPUSHTARGETFOLDER = @as(c_int, 25286);
pub const UA_NS0ID_PUBSUBKEYSERVICETYPE_KEYPUSHTARGETS_REMOVEPUSHTARGETFOLDER_INPUTARGUMENTS = @as(c_int, 25287);
pub const UA_NS0ID_ADDSECURITYGROUPFOLDERMETHODTYPE = @as(c_int, 25288);
pub const UA_NS0ID_ADDSECURITYGROUPFOLDERMETHODTYPE_INPUTARGUMENTS = @as(c_int, 25289);
pub const UA_NS0ID_ADDSECURITYGROUPFOLDERMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 25290);
pub const UA_NS0ID_REMOVESECURITYGROUPFOLDERMETHODTYPE = @as(c_int, 25291);
pub const UA_NS0ID_REMOVESECURITYGROUPFOLDERMETHODTYPE_INPUTARGUMENTS = @as(c_int, 25292);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_SECURITYGROUPFOLDERNAME_PLACEHOLDER_ADDSECURITYGROUPFOLDER = @as(c_int, 25293);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_SECURITYGROUPFOLDERNAME_PLACEHOLDER_ADDSECURITYGROUPFOLDER_INPUTARGUMENTS = @as(c_int, 25294);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_SECURITYGROUPFOLDERNAME_PLACEHOLDER_ADDSECURITYGROUPFOLDER_OUTPUTARGUMENTS = @as(c_int, 25295);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_SECURITYGROUPFOLDERNAME_PLACEHOLDER_REMOVESECURITYGROUPFOLDER = @as(c_int, 25296);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_SECURITYGROUPFOLDERNAME_PLACEHOLDER_REMOVESECURITYGROUPFOLDER_INPUTARGUMENTS = @as(c_int, 25297);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_SECURITYGROUPFOLDERNAME_PLACEHOLDER_SUPPORTEDSECURITYPOLICYURIS = @as(c_int, 25298);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_ADDSECURITYGROUPFOLDER = @as(c_int, 25312);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_ADDSECURITYGROUPFOLDER_INPUTARGUMENTS = @as(c_int, 25313);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_ADDSECURITYGROUPFOLDER_OUTPUTARGUMENTS = @as(c_int, 25314);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_REMOVESECURITYGROUPFOLDER = @as(c_int, 25315);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_REMOVESECURITYGROUPFOLDER_INPUTARGUMENTS = @as(c_int, 25316);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_SUPPORTEDSECURITYPOLICYURIS = @as(c_int, 25317);
pub const UA_NS0ID_CONNECTSECURITYGROUPSMETHODTYPE = @as(c_int, 25331);
pub const UA_NS0ID_CONNECTSECURITYGROUPSMETHODTYPE_INPUTARGUMENTS = @as(c_int, 25332);
pub const UA_NS0ID_CONNECTSECURITYGROUPSMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 25333);
pub const UA_NS0ID_DISCONNECTSECURITYGROUPSMETHODTYPE = @as(c_int, 25334);
pub const UA_NS0ID_DISCONNECTSECURITYGROUPSMETHODTYPE_INPUTARGUMENTS = @as(c_int, 25335);
pub const UA_NS0ID_DISCONNECTSECURITYGROUPSMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 25336);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETTYPE = @as(c_int, 25337);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETTYPE_SECURITYPOLICYURI = @as(c_int, 25340);
pub const UA_NS0ID_HASPUSHEDSECURITYGROUP = @as(c_int, 25345);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE = @as(c_int, 25346);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETFOLDERNAME_PLACEHOLDER = @as(c_int, 25347);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETFOLDERNAME_PLACEHOLDER_ADDPUSHTARGET = @as(c_int, 25348);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETFOLDERNAME_PLACEHOLDER_ADDPUSHTARGET_INPUTARGUMENTS = @as(c_int, 25349);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETFOLDERNAME_PLACEHOLDER_ADDPUSHTARGET_OUTPUTARGUMENTS = @as(c_int, 25350);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETFOLDERNAME_PLACEHOLDER_REMOVEPUSHTARGET = @as(c_int, 25351);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETFOLDERNAME_PLACEHOLDER_REMOVEPUSHTARGET_INPUTARGUMENTS = @as(c_int, 25352);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETFOLDERNAME_PLACEHOLDER_ADDPUSHTARGETFOLDER = @as(c_int, 25353);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETFOLDERNAME_PLACEHOLDER_ADDPUSHTARGETFOLDER_INPUTARGUMENTS = @as(c_int, 25354);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETFOLDERNAME_PLACEHOLDER_ADDPUSHTARGETFOLDER_OUTPUTARGUMENTS = @as(c_int, 25355);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETFOLDERNAME_PLACEHOLDER_REMOVEPUSHTARGETFOLDER = @as(c_int, 25356);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETFOLDERNAME_PLACEHOLDER_REMOVEPUSHTARGETFOLDER_INPUTARGUMENTS = @as(c_int, 25357);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETNAME_PLACEHOLDER = @as(c_int, 25358);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETNAME_PLACEHOLDER_SECURITYPOLICYURI = @as(c_int, 25361);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_ADDPUSHTARGET = @as(c_int, 25366);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_ADDPUSHTARGET_INPUTARGUMENTS = @as(c_int, 25367);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_ADDPUSHTARGET_OUTPUTARGUMENTS = @as(c_int, 25368);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_REMOVEPUSHTARGET = @as(c_int, 25369);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_REMOVEPUSHTARGET_INPUTARGUMENTS = @as(c_int, 25370);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_ADDPUSHTARGETFOLDER = @as(c_int, 25371);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_ADDPUSHTARGETFOLDER_INPUTARGUMENTS = @as(c_int, 25372);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_ADDPUSHTARGETFOLDER_OUTPUTARGUMENTS = @as(c_int, 25373);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_REMOVEPUSHTARGETFOLDER = @as(c_int, 25374);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_REMOVEPUSHTARGETFOLDER_INPUTARGUMENTS = @as(c_int, 25375);
pub const UA_NS0ID_ADDPUSHTARGETMETHODTYPE = @as(c_int, 25376);
pub const UA_NS0ID_ADDPUSHTARGETMETHODTYPE_INPUTARGUMENTS = @as(c_int, 25377);
pub const UA_NS0ID_ADDPUSHTARGETMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 25378);
pub const UA_NS0ID_REMOVEPUSHTARGETMETHODTYPE = @as(c_int, 25379);
pub const UA_NS0ID_REMOVEPUSHTARGETMETHODTYPE_INPUTARGUMENTS = @as(c_int, 25380);
pub const UA_NS0ID_ADDPUSHTARGETFOLDERMETHODTYPE = @as(c_int, 25381);
pub const UA_NS0ID_ADDPUSHTARGETFOLDERMETHODTYPE_INPUTARGUMENTS = @as(c_int, 25382);
pub const UA_NS0ID_ADDPUSHTARGETFOLDERMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 25383);
pub const UA_NS0ID_REMOVEPUSHTARGETFOLDERMETHODTYPE = @as(c_int, 25384);
pub const UA_NS0ID_REMOVEPUSHTARGETFOLDERMETHODTYPE_INPUTARGUMENTS = @as(c_int, 25385);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_SECURITYGROUPS_ADDSECURITYGROUPFOLDER = @as(c_int, 25386);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_SECURITYGROUPS_ADDSECURITYGROUPFOLDER_INPUTARGUMENTS = @as(c_int, 25387);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_SECURITYGROUPS_ADDSECURITYGROUPFOLDER_OUTPUTARGUMENTS = @as(c_int, 25388);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_SECURITYGROUPS_REMOVESECURITYGROUPFOLDER = @as(c_int, 25389);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_SECURITYGROUPS_REMOVESECURITYGROUPFOLDER_INPUTARGUMENTS = @as(c_int, 25390);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_SECURITYGROUPS_SUPPORTEDSECURITYPOLICYURIS = @as(c_int, 25391);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_KEYPUSHTARGETS = @as(c_int, 25392);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_KEYPUSHTARGETS_ADDPUSHTARGET = @as(c_int, 25393);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_KEYPUSHTARGETS_ADDPUSHTARGET_INPUTARGUMENTS = @as(c_int, 25394);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_KEYPUSHTARGETS_ADDPUSHTARGET_OUTPUTARGUMENTS = @as(c_int, 25395);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_KEYPUSHTARGETS_REMOVEPUSHTARGET = @as(c_int, 25396);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_KEYPUSHTARGETS_REMOVEPUSHTARGET_INPUTARGUMENTS = @as(c_int, 25397);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_KEYPUSHTARGETS_ADDPUSHTARGETFOLDER = @as(c_int, 25398);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_KEYPUSHTARGETS_ADDPUSHTARGETFOLDER_INPUTARGUMENTS = @as(c_int, 25399);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_KEYPUSHTARGETS_ADDPUSHTARGETFOLDER_OUTPUTARGUMENTS = @as(c_int, 25400);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_KEYPUSHTARGETS_REMOVEPUSHTARGETFOLDER = @as(c_int, 25401);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_KEYPUSHTARGETS_REMOVEPUSHTARGETFOLDER_INPUTARGUMENTS = @as(c_int, 25402);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION = @as(c_int, 25403);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_SIZE = @as(c_int, 25404);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_WRITABLE = @as(c_int, 25405);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_USERWRITABLE = @as(c_int, 25406);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_OPENCOUNT = @as(c_int, 25407);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_MIMETYPE = @as(c_int, 25408);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_MAXBYTESTRINGLENGTH = @as(c_int, 25409);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_LASTMODIFIEDTIME = @as(c_int, 25410);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_OPEN = @as(c_int, 25411);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_OPEN_INPUTARGUMENTS = @as(c_int, 25412);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_OPEN_OUTPUTARGUMENTS = @as(c_int, 25413);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_CLOSE = @as(c_int, 25414);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_CLOSE_INPUTARGUMENTS = @as(c_int, 25415);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_READ = @as(c_int, 25416);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_READ_INPUTARGUMENTS = @as(c_int, 25417);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_READ_OUTPUTARGUMENTS = @as(c_int, 25418);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_WRITE = @as(c_int, 25419);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_WRITE_INPUTARGUMENTS = @as(c_int, 25420);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_GETPOSITION = @as(c_int, 25421);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_GETPOSITION_INPUTARGUMENTS = @as(c_int, 25422);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 25423);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_SETPOSITION = @as(c_int, 25424);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_SETPOSITION_INPUTARGUMENTS = @as(c_int, 25425);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_RESERVEIDS = @as(c_int, 25426);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_RESERVEIDS_INPUTARGUMENTS = @as(c_int, 25427);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_RESERVEIDS_OUTPUTARGUMENTS = @as(c_int, 25428);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_CLOSEANDUPDATE = @as(c_int, 25429);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_CLOSEANDUPDATE_INPUTARGUMENTS = @as(c_int, 25430);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCONFIGURATION_CLOSEANDUPDATE_OUTPUTARGUMENTS = @as(c_int, 25431);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DEFAULTDATAGRAMPUBLISHERID = @as(c_int, 25432);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONFIGURATIONVERSION = @as(c_int, 25433);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_SECURITYGROUPS_ADDSECURITYGROUPFOLDER = @as(c_int, 25434);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_SECURITYGROUPS_ADDSECURITYGROUPFOLDER_INPUTARGUMENTS = @as(c_int, 25435);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_SECURITYGROUPS_ADDSECURITYGROUPFOLDER_OUTPUTARGUMENTS = @as(c_int, 25436);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_SECURITYGROUPS_REMOVESECURITYGROUPFOLDER = @as(c_int, 25437);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_SECURITYGROUPS_REMOVESECURITYGROUPFOLDER_INPUTARGUMENTS = @as(c_int, 25438);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_SECURITYGROUPS_SUPPORTEDSECURITYPOLICYURIS = @as(c_int, 25439);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_KEYPUSHTARGETS = @as(c_int, 25440);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_KEYPUSHTARGETS_ADDPUSHTARGET = @as(c_int, 25441);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_KEYPUSHTARGETS_ADDPUSHTARGET_INPUTARGUMENTS = @as(c_int, 25442);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_KEYPUSHTARGETS_ADDPUSHTARGET_OUTPUTARGUMENTS = @as(c_int, 25443);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_KEYPUSHTARGETS_REMOVEPUSHTARGET = @as(c_int, 25444);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_KEYPUSHTARGETS_REMOVEPUSHTARGET_INPUTARGUMENTS = @as(c_int, 25445);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_KEYPUSHTARGETS_ADDPUSHTARGETFOLDER = @as(c_int, 25446);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_KEYPUSHTARGETS_ADDPUSHTARGETFOLDER_INPUTARGUMENTS = @as(c_int, 25447);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_KEYPUSHTARGETS_ADDPUSHTARGETFOLDER_OUTPUTARGUMENTS = @as(c_int, 25448);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_KEYPUSHTARGETS_REMOVEPUSHTARGETFOLDER = @as(c_int, 25449);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_KEYPUSHTARGETS_REMOVEPUSHTARGETFOLDER_INPUTARGUMENTS = @as(c_int, 25450);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION = @as(c_int, 25451);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_SIZE = @as(c_int, 25452);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_WRITABLE = @as(c_int, 25453);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_USERWRITABLE = @as(c_int, 25454);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_OPENCOUNT = @as(c_int, 25455);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_MIMETYPE = @as(c_int, 25456);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_MAXBYTESTRINGLENGTH = @as(c_int, 25457);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_LASTMODIFIEDTIME = @as(c_int, 25458);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_OPEN = @as(c_int, 25459);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_OPEN_INPUTARGUMENTS = @as(c_int, 25460);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_OPEN_OUTPUTARGUMENTS = @as(c_int, 25461);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_CLOSE = @as(c_int, 25462);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_CLOSE_INPUTARGUMENTS = @as(c_int, 25463);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_READ = @as(c_int, 25464);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_READ_INPUTARGUMENTS = @as(c_int, 25465);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_READ_OUTPUTARGUMENTS = @as(c_int, 25466);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_WRITE = @as(c_int, 25467);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_WRITE_INPUTARGUMENTS = @as(c_int, 25468);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_GETPOSITION = @as(c_int, 25469);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_GETPOSITION_INPUTARGUMENTS = @as(c_int, 25470);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 25471);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_SETPOSITION = @as(c_int, 25472);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_SETPOSITION_INPUTARGUMENTS = @as(c_int, 25473);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_RESERVEIDS = @as(c_int, 25474);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_RESERVEIDS_INPUTARGUMENTS = @as(c_int, 25475);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_RESERVEIDS_OUTPUTARGUMENTS = @as(c_int, 25476);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_CLOSEANDUPDATE = @as(c_int, 25477);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_CLOSEANDUPDATE_INPUTARGUMENTS = @as(c_int, 25478);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCONFIGURATION_CLOSEANDUPDATE_OUTPUTARGUMENTS = @as(c_int, 25479);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DEFAULTDATAGRAMPUBLISHERID = @as(c_int, 25480);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONFIGURATIONVERSION = @as(c_int, 25481);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE = @as(c_int, 25482);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_SIZE = @as(c_int, 25483);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_WRITABLE = @as(c_int, 25484);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_USERWRITABLE = @as(c_int, 25485);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_OPENCOUNT = @as(c_int, 25486);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_MIMETYPE = @as(c_int, 25487);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_MAXBYTESTRINGLENGTH = @as(c_int, 25488);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_LASTMODIFIEDTIME = @as(c_int, 25489);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_OPEN = @as(c_int, 25490);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_OPEN_INPUTARGUMENTS = @as(c_int, 25491);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_OPEN_OUTPUTARGUMENTS = @as(c_int, 25492);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_CLOSE = @as(c_int, 25493);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_CLOSE_INPUTARGUMENTS = @as(c_int, 25494);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_READ = @as(c_int, 25495);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_READ_INPUTARGUMENTS = @as(c_int, 25496);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_READ_OUTPUTARGUMENTS = @as(c_int, 25497);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_WRITE = @as(c_int, 25498);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_WRITE_INPUTARGUMENTS = @as(c_int, 25499);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_GETPOSITION = @as(c_int, 25500);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_GETPOSITION_INPUTARGUMENTS = @as(c_int, 25501);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 25502);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_SETPOSITION = @as(c_int, 25503);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_SETPOSITION_INPUTARGUMENTS = @as(c_int, 25504);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_RESERVEIDS = @as(c_int, 25505);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_RESERVEIDS_INPUTARGUMENTS = @as(c_int, 25506);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_RESERVEIDS_OUTPUTARGUMENTS = @as(c_int, 25507);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_CLOSEANDUPDATE = @as(c_int, 25508);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_CLOSEANDUPDATE_INPUTARGUMENTS = @as(c_int, 25509);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPE_CLOSEANDUPDATE_OUTPUTARGUMENTS = @as(c_int, 25510);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPERESERVEIDSMETHODTYPE = @as(c_int, 25511);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPERESERVEIDSMETHODTYPE_INPUTARGUMENTS = @as(c_int, 25512);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPERESERVEIDSMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 25513);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPECLOSEANDUPDATEMETHODTYPE = @as(c_int, 25514);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPECLOSEANDUPDATEMETHODTYPE_INPUTARGUMENTS = @as(c_int, 25515);
pub const UA_NS0ID_PUBSUBCONFIGURATIONTYPECLOSEANDUPDATEMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 25516);
pub const UA_NS0ID_PUBSUBCONFIGURATIONREFMASK = @as(c_int, 25517);
pub const UA_NS0ID_PUBSUBCONFIGURATIONREFMASK_OPTIONSETVALUES = @as(c_int, 25518);
pub const UA_NS0ID_PUBSUBCONFIGURATIONREFDATATYPE = @as(c_int, 25519);
pub const UA_NS0ID_PUBSUBCONFIGURATIONVALUEDATATYPE = @as(c_int, 25520);
pub const UA_NS0ID_PUBLISHEDDATASETTYPE_CYCLICDATASET = @as(c_int, 25521);
pub const UA_NS0ID_PUBLISHEDDATAITEMSTYPE_CYCLICDATASET = @as(c_int, 25522);
pub const UA_NS0ID_PUBLISHEDEVENTSTYPE_CYCLICDATASET = @as(c_int, 25523);
pub const UA_NS0ID_DATASETFOLDERTYPE_PUBLISHEDDATASETNAME_PLACEHOLDER_CYCLICDATASET = @as(c_int, 25524);
pub const UA_NS0ID_DATAGRAMCONNECTIONTRANSPORTTYPE_QOSCATEGORY = @as(c_int, 25525);
pub const UA_NS0ID_DATAGRAMCONNECTIONTRANSPORTTYPE_DATAGRAMQOS = @as(c_int, 25526);
pub const UA_NS0ID_DATAGRAMWRITERGROUPTRANSPORTTYPE_QOSCATEGORY = @as(c_int, 25527);
pub const UA_NS0ID_DATAGRAMDATASETREADERTRANSPORTTYPE_QOSCATEGORY = @as(c_int, 25528);
pub const UA_NS0ID_PUBLISHEDDATASETCUSTOMSOURCEDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 25529);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 25530);
pub const UA_NS0ID_PUBSUBCONFIGURATIONREFDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 25531);
pub const UA_NS0ID_PUBSUBCONFIGURATIONVALUEDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 25532);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBLISHEDDATASETCUSTOMSOURCEDATATYPE = @as(c_int, 25533);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBLISHEDDATASETCUSTOMSOURCEDATATYPE_DATATYPEVERSION = @as(c_int, 25534);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBLISHEDDATASETCUSTOMSOURCEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 25535);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBSUBKEYPUSHTARGETDATATYPE = @as(c_int, 25536);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBSUBKEYPUSHTARGETDATATYPE_DATATYPEVERSION = @as(c_int, 25537);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBSUBKEYPUSHTARGETDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 25538);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBSUBCONFIGURATIONREFDATATYPE = @as(c_int, 25539);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBSUBCONFIGURATIONREFDATATYPE_DATATYPEVERSION = @as(c_int, 25540);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBSUBCONFIGURATIONREFDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 25541);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBSUBCONFIGURATIONVALUEDATATYPE = @as(c_int, 25542);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBSUBCONFIGURATIONVALUEDATATYPE_DATATYPEVERSION = @as(c_int, 25543);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_PUBSUBCONFIGURATIONVALUEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 25544);
pub const UA_NS0ID_PUBLISHEDDATASETCUSTOMSOURCEDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 25545);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 25546);
pub const UA_NS0ID_PUBSUBCONFIGURATIONREFDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 25547);
pub const UA_NS0ID_PUBSUBCONFIGURATIONVALUEDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 25548);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBLISHEDDATASETCUSTOMSOURCEDATATYPE = @as(c_int, 25549);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBLISHEDDATASETCUSTOMSOURCEDATATYPE_DATATYPEVERSION = @as(c_int, 25550);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBLISHEDDATASETCUSTOMSOURCEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 25551);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBSUBKEYPUSHTARGETDATATYPE = @as(c_int, 25552);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBSUBKEYPUSHTARGETDATATYPE_DATATYPEVERSION = @as(c_int, 25553);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBSUBKEYPUSHTARGETDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 25554);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBSUBCONFIGURATIONREFDATATYPE = @as(c_int, 25555);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBSUBCONFIGURATIONREFDATATYPE_DATATYPEVERSION = @as(c_int, 25556);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBSUBCONFIGURATIONREFDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 25557);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBSUBCONFIGURATIONVALUEDATATYPE = @as(c_int, 25558);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBSUBCONFIGURATIONVALUEDATATYPE_DATATYPEVERSION = @as(c_int, 25559);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_PUBSUBCONFIGURATIONVALUEDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 25560);
pub const UA_NS0ID_PUBLISHEDDATASETCUSTOMSOURCEDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 25561);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 25562);
pub const UA_NS0ID_PUBSUBCONFIGURATIONREFDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 25563);
pub const UA_NS0ID_PUBSUBCONFIGURATIONVALUEDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 25564);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERADMIN = @as(c_int, 25565);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERADMIN_IDENTITIES = @as(c_int, 25566);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERADMIN_APPLICATIONSEXCLUDE = @as(c_int, 25567);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERADMIN_APPLICATIONS = @as(c_int, 25568);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERADMIN_ENDPOINTSEXCLUDE = @as(c_int, 25569);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERADMIN_ENDPOINTS = @as(c_int, 25570);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERADMIN_CUSTOMCONFIGURATION = @as(c_int, 25571);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERADMIN_ADDIDENTITY = @as(c_int, 25572);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERADMIN_ADDIDENTITY_INPUTARGUMENTS = @as(c_int, 25573);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERADMIN_REMOVEIDENTITY = @as(c_int, 25574);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERADMIN_REMOVEIDENTITY_INPUTARGUMENTS = @as(c_int, 25575);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERADMIN_ADDAPPLICATION = @as(c_int, 25576);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERADMIN_ADDAPPLICATION_INPUTARGUMENTS = @as(c_int, 25577);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERADMIN_REMOVEAPPLICATION = @as(c_int, 25578);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERADMIN_REMOVEAPPLICATION_INPUTARGUMENTS = @as(c_int, 25579);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERADMIN_ADDENDPOINT = @as(c_int, 25580);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERADMIN_ADDENDPOINT_INPUTARGUMENTS = @as(c_int, 25581);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERADMIN_REMOVEENDPOINT = @as(c_int, 25582);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERADMIN_REMOVEENDPOINT_INPUTARGUMENTS = @as(c_int, 25583);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERPUSH = @as(c_int, 25584);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERPUSH_IDENTITIES = @as(c_int, 25585);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERPUSH_APPLICATIONSEXCLUDE = @as(c_int, 25586);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERPUSH_APPLICATIONS = @as(c_int, 25587);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERPUSH_ENDPOINTSEXCLUDE = @as(c_int, 25588);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERPUSH_ENDPOINTS = @as(c_int, 25589);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERPUSH_CUSTOMCONFIGURATION = @as(c_int, 25590);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERPUSH_ADDIDENTITY = @as(c_int, 25591);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERPUSH_ADDIDENTITY_INPUTARGUMENTS = @as(c_int, 25592);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERPUSH_REMOVEIDENTITY = @as(c_int, 25593);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERPUSH_REMOVEIDENTITY_INPUTARGUMENTS = @as(c_int, 25594);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERPUSH_ADDAPPLICATION = @as(c_int, 25595);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERPUSH_ADDAPPLICATION_INPUTARGUMENTS = @as(c_int, 25596);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERPUSH_REMOVEAPPLICATION = @as(c_int, 25597);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERPUSH_REMOVEAPPLICATION_INPUTARGUMENTS = @as(c_int, 25598);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERPUSH_ADDENDPOINT = @as(c_int, 25599);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERPUSH_ADDENDPOINT_INPUTARGUMENTS = @as(c_int, 25600);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERPUSH_REMOVEENDPOINT = @as(c_int, 25601);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERPUSH_REMOVEENDPOINT_INPUTARGUMENTS = @as(c_int, 25602);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERACCESS = @as(c_int, 25603);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERACCESS_IDENTITIES = @as(c_int, 25604);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERACCESS_APPLICATIONSEXCLUDE = @as(c_int, 25605);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERACCESS_APPLICATIONS = @as(c_int, 25606);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERACCESS_ENDPOINTSEXCLUDE = @as(c_int, 25607);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERACCESS_ENDPOINTS = @as(c_int, 25608);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERACCESS_CUSTOMCONFIGURATION = @as(c_int, 25609);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERACCESS_ADDIDENTITY = @as(c_int, 25610);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERACCESS_ADDIDENTITY_INPUTARGUMENTS = @as(c_int, 25611);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERACCESS_REMOVEIDENTITY = @as(c_int, 25612);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERACCESS_REMOVEIDENTITY_INPUTARGUMENTS = @as(c_int, 25613);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERACCESS_ADDAPPLICATION = @as(c_int, 25614);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERACCESS_ADDAPPLICATION_INPUTARGUMENTS = @as(c_int, 25615);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERACCESS_REMOVEAPPLICATION = @as(c_int, 25616);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERACCESS_REMOVEAPPLICATION_INPUTARGUMENTS = @as(c_int, 25617);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERACCESS_ADDENDPOINT = @as(c_int, 25618);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERACCESS_ADDENDPOINT_INPUTARGUMENTS = @as(c_int, 25619);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERACCESS_REMOVEENDPOINT = @as(c_int, 25620);
pub const UA_NS0ID_WELLKNOWNROLE_SECURITYKEYSERVERACCESS_REMOVEENDPOINT_INPUTARGUMENTS = @as(c_int, 25621);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_SECURITYGROUPNAME_PLACEHOLDER_INVALIDATEKEYS = @as(c_int, 25622);
pub const UA_NS0ID_SECURITYGROUPFOLDERTYPE_SECURITYGROUPNAME_PLACEHOLDER_FORCEKEYROTATION = @as(c_int, 25623);
pub const UA_NS0ID_SECURITYGROUPTYPE_INVALIDATEKEYS = @as(c_int, 25624);
pub const UA_NS0ID_SECURITYGROUPTYPE_FORCEKEYROTATION = @as(c_int, 25625);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETTYPE_SECURITYGROUPNAME_PLACEHOLDER = @as(c_int, 25626);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETTYPE_SECURITYGROUPNAME_PLACEHOLDER_SECURITYGROUPID = @as(c_int, 25627);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETTYPE_SECURITYGROUPNAME_PLACEHOLDER_KEYLIFETIME = @as(c_int, 25628);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETTYPE_SECURITYGROUPNAME_PLACEHOLDER_SECURITYPOLICYURI = @as(c_int, 25629);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETTYPE_SECURITYGROUPNAME_PLACEHOLDER_MAXFUTUREKEYCOUNT = @as(c_int, 25630);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETTYPE_SECURITYGROUPNAME_PLACEHOLDER_MAXPASTKEYCOUNT = @as(c_int, 25631);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETTYPE_SECURITYGROUPNAME_PLACEHOLDER_INVALIDATEKEYS = @as(c_int, 25632);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETTYPE_SECURITYGROUPNAME_PLACEHOLDER_FORCEKEYROTATION = @as(c_int, 25633);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETTYPE_APPLICATIONURI = @as(c_int, 25634);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETTYPE_ENDPOINTURL = @as(c_int, 25635);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETTYPE_USERTOKENTYPE = @as(c_int, 25636);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETTYPE_REQUESTEDKEYCOUNT = @as(c_int, 25637);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETTYPE_RETRYINTERVAL = @as(c_int, 25638);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETTYPE_LASTPUSHEXECUTIONTIME = @as(c_int, 25639);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETTYPE_LASTPUSHERRORTIME = @as(c_int, 25640);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETTYPE_CONNECTSECURITYGROUPS = @as(c_int, 25641);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETTYPE_CONNECTSECURITYGROUPS_INPUTARGUMENTS = @as(c_int, 25642);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETTYPE_CONNECTSECURITYGROUPS_OUTPUTARGUMENTS = @as(c_int, 25643);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETTYPE_DISCONNECTSECURITYGROUPS = @as(c_int, 25644);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETTYPE_DISCONNECTSECURITYGROUPS_INPUTARGUMENTS = @as(c_int, 25645);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETTYPE_DISCONNECTSECURITYGROUPS_OUTPUTARGUMENTS = @as(c_int, 25646);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETTYPE_TRIGGERKEYUPDATE = @as(c_int, 25647);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETNAME_PLACEHOLDER_APPLICATIONURI = @as(c_int, 25648);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETNAME_PLACEHOLDER_ENDPOINTURL = @as(c_int, 25649);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETNAME_PLACEHOLDER_USERTOKENTYPE = @as(c_int, 25650);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETNAME_PLACEHOLDER_REQUESTEDKEYCOUNT = @as(c_int, 25651);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETNAME_PLACEHOLDER_RETRYINTERVAL = @as(c_int, 25652);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETNAME_PLACEHOLDER_LASTPUSHEXECUTIONTIME = @as(c_int, 25653);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETNAME_PLACEHOLDER_LASTPUSHERRORTIME = @as(c_int, 25654);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETNAME_PLACEHOLDER_CONNECTSECURITYGROUPS = @as(c_int, 25655);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETNAME_PLACEHOLDER_CONNECTSECURITYGROUPS_INPUTARGUMENTS = @as(c_int, 25656);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETNAME_PLACEHOLDER_CONNECTSECURITYGROUPS_OUTPUTARGUMENTS = @as(c_int, 25657);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETNAME_PLACEHOLDER_DISCONNECTSECURITYGROUPS = @as(c_int, 25658);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETNAME_PLACEHOLDER_DISCONNECTSECURITYGROUPS_INPUTARGUMENTS = @as(c_int, 25659);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETNAME_PLACEHOLDER_DISCONNECTSECURITYGROUPS_OUTPUTARGUMENTS = @as(c_int, 25660);
pub const UA_NS0ID_PUBSUBKEYPUSHTARGETFOLDERTYPE_PUSHTARGETNAME_PLACEHOLDER_TRIGGERKEYUPDATE = @as(c_int, 25661);
pub const UA_NS0ID_AUDITCLIENTUPDATEMETHODRESULTEVENTTYPE_OUTPUTARGUMENTS = @as(c_int, 25684);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_APPLICATIONURI = @as(c_int, 25696);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_APPLICATIONTYPE = @as(c_int, 25697);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CANCELCHANGES = @as(c_int, 25698);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_RESETTOSERVERDEFAULTS = @as(c_int, 25699);
pub const UA_NS0ID_SERVERCONFIGURATION_APPLICATIONURI = @as(c_int, 25706);
pub const UA_NS0ID_SERVERCONFIGURATION_APPLICATIONTYPE = @as(c_int, 25707);
pub const UA_NS0ID_SERVERCONFIGURATION_CANCELCHANGES = @as(c_int, 25708);
pub const UA_NS0ID_SERVERCONFIGURATION_RESETTOSERVERDEFAULTS = @as(c_int, 25709);
pub const UA_NS0ID_SERVERCONFIGURATION_SETADMINPASSWORD = @as(c_int, 25710);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_PRODUCTURI = @as(c_int, 25724);
pub const UA_NS0ID_SERVERCONFIGURATION_PRODUCTURI = @as(c_int, 25725);
pub const UA_NS0ID_ENCODEDTICKET = @as(c_int, 25726);
pub const UA_NS0ID_REQUESTTICKETSMETHODTYPE = @as(c_int, 25727);
pub const UA_NS0ID_REQUESTTICKETSMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 25728);
pub const UA_NS0ID_SETREGISTRARENDPOINTSMETHODTYPE = @as(c_int, 25729);
pub const UA_NS0ID_SETREGISTRARENDPOINTSMETHODTYPE_INPUTARGUMENTS = @as(c_int, 25730);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE = @as(c_int, 25731);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS = @as(c_int, 25732);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP = @as(c_int, 25733);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST = @as(c_int, 25734);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_SIZE = @as(c_int, 25735);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_WRITABLE = @as(c_int, 25736);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_USERWRITABLE = @as(c_int, 25737);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPENCOUNT = @as(c_int, 25738);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_MIMETYPE = @as(c_int, 25739);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_MAXBYTESTRINGLENGTH = @as(c_int, 25740);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_LASTMODIFIEDTIME = @as(c_int, 25741);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPEN = @as(c_int, 25742);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPEN_INPUTARGUMENTS = @as(c_int, 25743);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPEN_OUTPUTARGUMENTS = @as(c_int, 25744);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSE = @as(c_int, 25745);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSE_INPUTARGUMENTS = @as(c_int, 25746);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_READ = @as(c_int, 25747);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_READ_INPUTARGUMENTS = @as(c_int, 25748);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_READ_OUTPUTARGUMENTS = @as(c_int, 25749);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_WRITE = @as(c_int, 25750);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_WRITE_INPUTARGUMENTS = @as(c_int, 25751);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_GETPOSITION = @as(c_int, 25752);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_GETPOSITION_INPUTARGUMENTS = @as(c_int, 25753);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 25754);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_SETPOSITION = @as(c_int, 25755);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_SETPOSITION_INPUTARGUMENTS = @as(c_int, 25756);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_LASTUPDATETIME = @as(c_int, 25757);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_UPDATEFREQUENCY = @as(c_int, 25758);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_DEFAULTVALIDATIONOPTIONS = @as(c_int, 25759);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPENWITHMASKS = @as(c_int, 25760);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPENWITHMASKS_INPUTARGUMENTS = @as(c_int, 25761);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPENWITHMASKS_OUTPUTARGUMENTS = @as(c_int, 25762);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSEANDUPDATE = @as(c_int, 25763);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSEANDUPDATE_INPUTARGUMENTS = @as(c_int, 25764);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSEANDUPDATE_OUTPUTARGUMENTS = @as(c_int, 25765);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_ADDCERTIFICATE = @as(c_int, 25766);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_ADDCERTIFICATE_INPUTARGUMENTS = @as(c_int, 25767);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_REMOVECERTIFICATE = @as(c_int, 25768);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_REMOVECERTIFICATE_INPUTARGUMENTS = @as(c_int, 25769);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATETYPES = @as(c_int, 25770);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_GETREJECTEDLIST = @as(c_int, 25772);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_GETREJECTEDLIST_OUTPUTARGUMENTS = @as(c_int, 25773);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED = @as(c_int, 25774);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_EVENTID = @as(c_int, 25775);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_EVENTTYPE = @as(c_int, 25776);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SOURCENODE = @as(c_int, 25777);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SOURCENAME = @as(c_int, 25778);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_TIME = @as(c_int, 25779);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RECEIVETIME = @as(c_int, 25780);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LOCALTIME = @as(c_int, 25781);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_MESSAGE = @as(c_int, 25782);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SEVERITY = @as(c_int, 25783);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSID = @as(c_int, 25784);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSNAME = @as(c_int, 25785);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSID = @as(c_int, 25786);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSNAME = @as(c_int, 25787);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONNAME = @as(c_int, 25788);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_BRANCHID = @as(c_int, 25789);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RETAIN = @as(c_int, 25790);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE = @as(c_int, 25791);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_ID = @as(c_int, 25792);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NAME = @as(c_int, 25793);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NUMBER = @as(c_int, 25794);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 25795);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 25796);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 25797);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRUESTATE = @as(c_int, 25798);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_FALSESTATE = @as(c_int, 25799);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_QUALITY = @as(c_int, 25800);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_QUALITY_SOURCETIMESTAMP = @as(c_int, 25801);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LASTSEVERITY = @as(c_int, 25802);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 25803);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_COMMENT = @as(c_int, 25804);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_COMMENT_SOURCETIMESTAMP = @as(c_int, 25805);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CLIENTUSERID = @as(c_int, 25806);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_DISABLE = @as(c_int, 25807);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLE = @as(c_int, 25808);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ADDCOMMENT = @as(c_int, 25809);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 25810);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE = @as(c_int, 25811);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_ID = @as(c_int, 25812);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NAME = @as(c_int, 25813);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NUMBER = @as(c_int, 25814);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 25815);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 25816);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 25817);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRUESTATE = @as(c_int, 25818);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_FALSESTATE = @as(c_int, 25819);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE = @as(c_int, 25820);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_ID = @as(c_int, 25821);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NAME = @as(c_int, 25822);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NUMBER = @as(c_int, 25823);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 25824);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 25825);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 25826);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 25827);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 25828);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE = @as(c_int, 25829);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 25830);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRM = @as(c_int, 25831);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRM_INPUTARGUMENTS = @as(c_int, 25832);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE = @as(c_int, 25833);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_ID = @as(c_int, 25834);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NAME = @as(c_int, 25835);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NUMBER = @as(c_int, 25836);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 25837);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 25838);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 25839);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRUESTATE = @as(c_int, 25840);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_FALSESTATE = @as(c_int, 25841);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_INPUTNODE = @as(c_int, 25842);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE = @as(c_int, 25843);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_ID = @as(c_int, 25844);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NAME = @as(c_int, 25845);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NUMBER = @as(c_int, 25846);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 25847);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 25848);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 25849);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 25850);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 25851);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE = @as(c_int, 25852);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_ID = @as(c_int, 25853);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NAME = @as(c_int, 25854);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NUMBER = @as(c_int, 25855);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 25856);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 25857);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 25858);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 25859);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 25860);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE = @as(c_int, 25861);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 25862);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 25863);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 25864);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 25865);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 25866);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 25867);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 25868);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 25869);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 25870);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 25871);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 25872);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 25873);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 25874);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 25875);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 25876);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 25877);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 25878);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 25879);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE = @as(c_int, 25880);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 25881);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 25882);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 25883);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 25884);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 25885);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDORSHELVED = @as(c_int, 25886);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_MAXTIMESHELVED = @as(c_int, 25887);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLEENABLED = @as(c_int, 25888);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND = @as(c_int, 25889);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_LISTID = @as(c_int, 25890);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_AGENCYID = @as(c_int, 25891);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_VERSIONID = @as(c_int, 25892);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE = @as(c_int, 25893);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_ID = @as(c_int, 25894);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NAME = @as(c_int, 25895);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NUMBER = @as(c_int, 25896);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 25897);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRANSITIONTIME = @as(c_int, 25898);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 25899);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRUESTATE = @as(c_int, 25900);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_FALSESTATE = @as(c_int, 25901);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ONDELAY = @as(c_int, 25902);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OFFDELAY = @as(c_int, 25903);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_FIRSTINGROUPFLAG = @as(c_int, 25904);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_FIRSTINGROUP = @as(c_int, 25905);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE = @as(c_int, 25906);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_ID = @as(c_int, 25907);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NAME = @as(c_int, 25908);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NUMBER = @as(c_int, 25909);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 25910);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 25911);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 25912);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRUESTATE = @as(c_int, 25913);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_FALSESTATE = @as(c_int, 25914);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REALARMTIME = @as(c_int, 25915);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REALARMREPEATCOUNT = @as(c_int, 25916);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCE = @as(c_int, 25917);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESS = @as(c_int, 25918);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESS2 = @as(c_int, 25919);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 25920);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_UNSUPPRESS = @as(c_int, 25921);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2 = @as(c_int, 25922);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 25923);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE = @as(c_int, 25924);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2 = @as(c_int, 25925);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 25926);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE = @as(c_int, 25927);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2 = @as(c_int, 25928);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 25929);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RESET = @as(c_int, 25930);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RESET2 = @as(c_int, 25931);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RESET2_INPUTARGUMENTS = @as(c_int, 25932);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS = @as(c_int, 25933);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 25934);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_NORMALSTATE = @as(c_int, 25935);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_EXPIRATIONDATE = @as(c_int, 25936);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_EXPIRATIONLIMIT = @as(c_int, 25937);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CERTIFICATETYPE = @as(c_int, 25938);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CERTIFICATE = @as(c_int, 25939);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE = @as(c_int, 25940);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_EVENTID = @as(c_int, 25941);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_EVENTTYPE = @as(c_int, 25942);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SOURCENODE = @as(c_int, 25943);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SOURCENAME = @as(c_int, 25944);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_TIME = @as(c_int, 25945);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RECEIVETIME = @as(c_int, 25946);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LOCALTIME = @as(c_int, 25947);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_MESSAGE = @as(c_int, 25948);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SEVERITY = @as(c_int, 25949);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSID = @as(c_int, 25950);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSNAME = @as(c_int, 25951);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSID = @as(c_int, 25952);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSNAME = @as(c_int, 25953);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONNAME = @as(c_int, 25954);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_BRANCHID = @as(c_int, 25955);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RETAIN = @as(c_int, 25956);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE = @as(c_int, 25957);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_ID = @as(c_int, 25958);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NAME = @as(c_int, 25959);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NUMBER = @as(c_int, 25960);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 25961);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 25962);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 25963);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRUESTATE = @as(c_int, 25964);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_FALSESTATE = @as(c_int, 25965);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_QUALITY = @as(c_int, 25966);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_QUALITY_SOURCETIMESTAMP = @as(c_int, 25967);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY = @as(c_int, 25968);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 25969);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_COMMENT = @as(c_int, 25970);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_COMMENT_SOURCETIMESTAMP = @as(c_int, 25971);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CLIENTUSERID = @as(c_int, 25972);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_DISABLE = @as(c_int, 25973);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLE = @as(c_int, 25974);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT = @as(c_int, 25975);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 25976);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE = @as(c_int, 25977);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_ID = @as(c_int, 25978);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NAME = @as(c_int, 25979);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NUMBER = @as(c_int, 25980);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 25981);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 25982);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 25983);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRUESTATE = @as(c_int, 25984);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_FALSESTATE = @as(c_int, 25985);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE = @as(c_int, 25986);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_ID = @as(c_int, 25987);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NAME = @as(c_int, 25988);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NUMBER = @as(c_int, 25989);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 25990);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 25991);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 25992);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 25993);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 25994);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE = @as(c_int, 25995);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 25996);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRM = @as(c_int, 25997);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRM_INPUTARGUMENTS = @as(c_int, 25998);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE = @as(c_int, 25999);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_ID = @as(c_int, 26000);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NAME = @as(c_int, 26001);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NUMBER = @as(c_int, 26002);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26003);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 26004);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26005);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRUESTATE = @as(c_int, 26006);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_FALSESTATE = @as(c_int, 26007);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_INPUTNODE = @as(c_int, 26008);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE = @as(c_int, 26009);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_ID = @as(c_int, 26010);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NAME = @as(c_int, 26011);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 26012);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26013);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 26014);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26015);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 26016);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 26017);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE = @as(c_int, 26018);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_ID = @as(c_int, 26019);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NAME = @as(c_int, 26020);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 26021);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26022);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 26023);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26024);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 26025);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 26026);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE = @as(c_int, 26027);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 26028);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 26029);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 26030);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 26031);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26032);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 26033);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 26034);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 26035);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 26036);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 26037);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 26038);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 26039);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 26040);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 26041);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 26042);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 26043);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 26044);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 26045);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE = @as(c_int, 26046);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 26047);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 26048);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 26049);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 26050);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 26051);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDORSHELVED = @as(c_int, 26052);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_MAXTIMESHELVED = @as(c_int, 26053);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLEENABLED = @as(c_int, 26054);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND = @as(c_int, 26055);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_LISTID = @as(c_int, 26056);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_AGENCYID = @as(c_int, 26057);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_VERSIONID = @as(c_int, 26058);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE = @as(c_int, 26059);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_ID = @as(c_int, 26060);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NAME = @as(c_int, 26061);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NUMBER = @as(c_int, 26062);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26063);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 26064);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26065);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRUESTATE = @as(c_int, 26066);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_FALSESTATE = @as(c_int, 26067);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ONDELAY = @as(c_int, 26068);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OFFDELAY = @as(c_int, 26069);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUPFLAG = @as(c_int, 26070);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUP = @as(c_int, 26071);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE = @as(c_int, 26072);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_ID = @as(c_int, 26073);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NAME = @as(c_int, 26074);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NUMBER = @as(c_int, 26075);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26076);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 26077);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26078);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRUESTATE = @as(c_int, 26079);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_FALSESTATE = @as(c_int, 26080);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REALARMTIME = @as(c_int, 26081);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REALARMREPEATCOUNT = @as(c_int, 26082);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCE = @as(c_int, 26083);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESS = @as(c_int, 26084);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2 = @as(c_int, 26085);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 26086);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS = @as(c_int, 26087);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2 = @as(c_int, 26088);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 26089);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE = @as(c_int, 26090);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2 = @as(c_int, 26091);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 26092);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE = @as(c_int, 26093);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2 = @as(c_int, 26094);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 26095);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RESET = @as(c_int, 26096);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RESET2 = @as(c_int, 26097);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RESET2_INPUTARGUMENTS = @as(c_int, 26098);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS = @as(c_int, 26099);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 26100);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_NORMALSTATE = @as(c_int, 26101);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_TRUSTLISTID = @as(c_int, 26102);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LASTUPDATETIME = @as(c_int, 26103);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_UPDATEFREQUENCY = @as(c_int, 26104);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP = @as(c_int, 26105);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST = @as(c_int, 26106);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_SIZE = @as(c_int, 26107);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_WRITABLE = @as(c_int, 26108);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_USERWRITABLE = @as(c_int, 26109);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPENCOUNT = @as(c_int, 26110);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_MIMETYPE = @as(c_int, 26111);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_MAXBYTESTRINGLENGTH = @as(c_int, 26112);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_LASTMODIFIEDTIME = @as(c_int, 26113);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPEN = @as(c_int, 26114);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPEN_INPUTARGUMENTS = @as(c_int, 26115);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPEN_OUTPUTARGUMENTS = @as(c_int, 26116);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSE = @as(c_int, 26117);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSE_INPUTARGUMENTS = @as(c_int, 26118);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_READ = @as(c_int, 26119);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_READ_INPUTARGUMENTS = @as(c_int, 26120);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_READ_OUTPUTARGUMENTS = @as(c_int, 26121);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_WRITE = @as(c_int, 26122);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_WRITE_INPUTARGUMENTS = @as(c_int, 26123);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_GETPOSITION = @as(c_int, 26124);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_GETPOSITION_INPUTARGUMENTS = @as(c_int, 26125);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 26126);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_SETPOSITION = @as(c_int, 26127);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_SETPOSITION_INPUTARGUMENTS = @as(c_int, 26128);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_LASTUPDATETIME = @as(c_int, 26129);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_UPDATEFREQUENCY = @as(c_int, 26130);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_DEFAULTVALIDATIONOPTIONS = @as(c_int, 26131);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPENWITHMASKS = @as(c_int, 26132);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPENWITHMASKS_INPUTARGUMENTS = @as(c_int, 26133);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPENWITHMASKS_OUTPUTARGUMENTS = @as(c_int, 26134);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSEANDUPDATE = @as(c_int, 26135);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSEANDUPDATE_INPUTARGUMENTS = @as(c_int, 26136);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSEANDUPDATE_OUTPUTARGUMENTS = @as(c_int, 26137);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_ADDCERTIFICATE = @as(c_int, 26138);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_ADDCERTIFICATE_INPUTARGUMENTS = @as(c_int, 26139);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_REMOVECERTIFICATE = @as(c_int, 26140);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_REMOVECERTIFICATE_INPUTARGUMENTS = @as(c_int, 26141);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATETYPES = @as(c_int, 26142);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_GETREJECTEDLIST = @as(c_int, 26144);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_GETREJECTEDLIST_OUTPUTARGUMENTS = @as(c_int, 26145);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED = @as(c_int, 26146);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_EVENTID = @as(c_int, 26147);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_EVENTTYPE = @as(c_int, 26148);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SOURCENODE = @as(c_int, 26149);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SOURCENAME = @as(c_int, 26150);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_TIME = @as(c_int, 26151);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RECEIVETIME = @as(c_int, 26152);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LOCALTIME = @as(c_int, 26153);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_MESSAGE = @as(c_int, 26154);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SEVERITY = @as(c_int, 26155);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSID = @as(c_int, 26156);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSNAME = @as(c_int, 26157);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSID = @as(c_int, 26158);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSNAME = @as(c_int, 26159);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONNAME = @as(c_int, 26160);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_BRANCHID = @as(c_int, 26161);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RETAIN = @as(c_int, 26162);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE = @as(c_int, 26163);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_ID = @as(c_int, 26164);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NAME = @as(c_int, 26165);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NUMBER = @as(c_int, 26166);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26167);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 26168);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26169);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRUESTATE = @as(c_int, 26170);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_FALSESTATE = @as(c_int, 26171);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_QUALITY = @as(c_int, 26172);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_QUALITY_SOURCETIMESTAMP = @as(c_int, 26173);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LASTSEVERITY = @as(c_int, 26174);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 26175);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_COMMENT = @as(c_int, 26176);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_COMMENT_SOURCETIMESTAMP = @as(c_int, 26177);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CLIENTUSERID = @as(c_int, 26178);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_DISABLE = @as(c_int, 26179);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLE = @as(c_int, 26180);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ADDCOMMENT = @as(c_int, 26181);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 26182);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE = @as(c_int, 26183);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_ID = @as(c_int, 26184);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NAME = @as(c_int, 26185);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NUMBER = @as(c_int, 26186);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26187);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 26188);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26189);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRUESTATE = @as(c_int, 26190);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_FALSESTATE = @as(c_int, 26191);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE = @as(c_int, 26192);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_ID = @as(c_int, 26193);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NAME = @as(c_int, 26194);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NUMBER = @as(c_int, 26195);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26196);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 26197);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26198);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 26199);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 26200);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE = @as(c_int, 26201);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 26202);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRM = @as(c_int, 26203);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRM_INPUTARGUMENTS = @as(c_int, 26204);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE = @as(c_int, 26205);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_ID = @as(c_int, 26206);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NAME = @as(c_int, 26207);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NUMBER = @as(c_int, 26208);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26209);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 26210);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26211);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRUESTATE = @as(c_int, 26212);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_FALSESTATE = @as(c_int, 26213);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_INPUTNODE = @as(c_int, 26214);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE = @as(c_int, 26215);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_ID = @as(c_int, 26216);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NAME = @as(c_int, 26217);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NUMBER = @as(c_int, 26218);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26219);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 26220);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26221);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 26222);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 26223);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE = @as(c_int, 26224);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_ID = @as(c_int, 26225);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NAME = @as(c_int, 26226);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NUMBER = @as(c_int, 26227);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26228);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 26229);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26230);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 26231);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 26232);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE = @as(c_int, 26233);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 26234);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 26235);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 26236);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 26237);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26238);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 26239);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 26240);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 26241);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 26242);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 26243);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 26244);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 26245);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 26246);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 26247);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 26248);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 26249);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 26250);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 26251);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE = @as(c_int, 26252);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 26253);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 26254);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 26255);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 26256);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 26257);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDORSHELVED = @as(c_int, 26258);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_MAXTIMESHELVED = @as(c_int, 26259);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLEENABLED = @as(c_int, 26260);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND = @as(c_int, 26261);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_LISTID = @as(c_int, 26262);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_AGENCYID = @as(c_int, 26263);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_VERSIONID = @as(c_int, 26264);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE = @as(c_int, 26265);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_ID = @as(c_int, 26266);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NAME = @as(c_int, 26267);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NUMBER = @as(c_int, 26268);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26269);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRANSITIONTIME = @as(c_int, 26270);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26271);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRUESTATE = @as(c_int, 26272);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_FALSESTATE = @as(c_int, 26273);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ONDELAY = @as(c_int, 26274);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OFFDELAY = @as(c_int, 26275);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_FIRSTINGROUPFLAG = @as(c_int, 26276);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_FIRSTINGROUP = @as(c_int, 26277);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE = @as(c_int, 26278);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_ID = @as(c_int, 26279);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NAME = @as(c_int, 26280);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NUMBER = @as(c_int, 26281);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26282);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 26283);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26284);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRUESTATE = @as(c_int, 26285);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_FALSESTATE = @as(c_int, 26286);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REALARMTIME = @as(c_int, 26287);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REALARMREPEATCOUNT = @as(c_int, 26288);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCE = @as(c_int, 26289);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESS = @as(c_int, 26290);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESS2 = @as(c_int, 26291);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 26292);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_UNSUPPRESS = @as(c_int, 26293);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2 = @as(c_int, 26294);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 26295);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE = @as(c_int, 26296);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2 = @as(c_int, 26297);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 26298);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE = @as(c_int, 26299);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2 = @as(c_int, 26300);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 26301);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RESET = @as(c_int, 26302);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RESET2 = @as(c_int, 26303);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RESET2_INPUTARGUMENTS = @as(c_int, 26304);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS = @as(c_int, 26305);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 26306);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_NORMALSTATE = @as(c_int, 26307);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_EXPIRATIONDATE = @as(c_int, 26308);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_EXPIRATIONLIMIT = @as(c_int, 26309);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CERTIFICATETYPE = @as(c_int, 26310);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CERTIFICATE = @as(c_int, 26311);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE = @as(c_int, 26312);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_EVENTID = @as(c_int, 26313);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_EVENTTYPE = @as(c_int, 26314);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SOURCENODE = @as(c_int, 26315);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SOURCENAME = @as(c_int, 26316);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_TIME = @as(c_int, 26317);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RECEIVETIME = @as(c_int, 26318);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LOCALTIME = @as(c_int, 26319);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_MESSAGE = @as(c_int, 26320);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SEVERITY = @as(c_int, 26321);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSID = @as(c_int, 26322);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSNAME = @as(c_int, 26323);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSID = @as(c_int, 26324);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSNAME = @as(c_int, 26325);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONNAME = @as(c_int, 26326);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_BRANCHID = @as(c_int, 26327);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RETAIN = @as(c_int, 26328);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE = @as(c_int, 26329);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_ID = @as(c_int, 26330);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NAME = @as(c_int, 26331);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NUMBER = @as(c_int, 26332);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26333);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 26334);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26335);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRUESTATE = @as(c_int, 26336);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_FALSESTATE = @as(c_int, 26337);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_QUALITY = @as(c_int, 26338);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_QUALITY_SOURCETIMESTAMP = @as(c_int, 26339);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY = @as(c_int, 26340);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 26341);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_COMMENT = @as(c_int, 26342);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_COMMENT_SOURCETIMESTAMP = @as(c_int, 26343);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CLIENTUSERID = @as(c_int, 26344);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_DISABLE = @as(c_int, 26345);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLE = @as(c_int, 26346);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT = @as(c_int, 26347);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 26348);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE = @as(c_int, 26349);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_ID = @as(c_int, 26350);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NAME = @as(c_int, 26351);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NUMBER = @as(c_int, 26352);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26353);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 26354);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26355);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRUESTATE = @as(c_int, 26356);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_FALSESTATE = @as(c_int, 26357);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE = @as(c_int, 26358);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_ID = @as(c_int, 26359);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NAME = @as(c_int, 26360);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NUMBER = @as(c_int, 26361);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26362);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 26363);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26364);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 26365);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 26366);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE = @as(c_int, 26367);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 26368);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRM = @as(c_int, 26369);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRM_INPUTARGUMENTS = @as(c_int, 26370);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE = @as(c_int, 26371);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_ID = @as(c_int, 26372);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NAME = @as(c_int, 26373);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NUMBER = @as(c_int, 26374);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26375);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 26376);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26377);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRUESTATE = @as(c_int, 26378);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_FALSESTATE = @as(c_int, 26379);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_INPUTNODE = @as(c_int, 26380);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE = @as(c_int, 26381);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_ID = @as(c_int, 26382);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NAME = @as(c_int, 26383);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 26384);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26385);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 26386);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26387);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 26388);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 26389);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE = @as(c_int, 26390);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_ID = @as(c_int, 26391);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NAME = @as(c_int, 26392);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 26393);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26394);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 26395);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26396);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 26397);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 26398);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE = @as(c_int, 26399);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 26400);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 26401);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 26402);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 26403);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26404);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 26405);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 26406);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 26407);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 26408);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 26409);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 26410);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 26411);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 26412);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 26413);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 26414);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 26415);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 26416);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 26417);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE = @as(c_int, 26418);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 26419);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 26420);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 26421);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 26422);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 26423);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDORSHELVED = @as(c_int, 26424);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_MAXTIMESHELVED = @as(c_int, 26425);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLEENABLED = @as(c_int, 26426);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND = @as(c_int, 26427);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_LISTID = @as(c_int, 26428);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_AGENCYID = @as(c_int, 26429);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_VERSIONID = @as(c_int, 26430);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE = @as(c_int, 26431);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_ID = @as(c_int, 26432);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NAME = @as(c_int, 26433);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NUMBER = @as(c_int, 26434);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26435);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 26436);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26437);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRUESTATE = @as(c_int, 26438);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_FALSESTATE = @as(c_int, 26439);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ONDELAY = @as(c_int, 26440);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OFFDELAY = @as(c_int, 26441);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUPFLAG = @as(c_int, 26442);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUP = @as(c_int, 26443);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE = @as(c_int, 26444);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_ID = @as(c_int, 26445);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NAME = @as(c_int, 26446);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NUMBER = @as(c_int, 26447);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26448);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 26449);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26450);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRUESTATE = @as(c_int, 26451);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_FALSESTATE = @as(c_int, 26452);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REALARMTIME = @as(c_int, 26453);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REALARMREPEATCOUNT = @as(c_int, 26454);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCE = @as(c_int, 26455);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESS = @as(c_int, 26456);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2 = @as(c_int, 26457);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 26458);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS = @as(c_int, 26459);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2 = @as(c_int, 26460);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 26461);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE = @as(c_int, 26462);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2 = @as(c_int, 26463);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 26464);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE = @as(c_int, 26465);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2 = @as(c_int, 26466);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 26467);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RESET = @as(c_int, 26468);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RESET2 = @as(c_int, 26469);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RESET2_INPUTARGUMENTS = @as(c_int, 26470);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS = @as(c_int, 26471);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 26472);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_NORMALSTATE = @as(c_int, 26473);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_TRUSTLISTID = @as(c_int, 26474);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LASTUPDATETIME = @as(c_int, 26475);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_UPDATEFREQUENCY = @as(c_int, 26476);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP = @as(c_int, 26477);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST = @as(c_int, 26478);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_SIZE = @as(c_int, 26479);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_WRITABLE = @as(c_int, 26480);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_USERWRITABLE = @as(c_int, 26481);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPENCOUNT = @as(c_int, 26482);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_MIMETYPE = @as(c_int, 26483);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_MAXBYTESTRINGLENGTH = @as(c_int, 26484);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_LASTMODIFIEDTIME = @as(c_int, 26485);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPEN = @as(c_int, 26486);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPEN_INPUTARGUMENTS = @as(c_int, 26487);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPEN_OUTPUTARGUMENTS = @as(c_int, 26488);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSE = @as(c_int, 26489);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSE_INPUTARGUMENTS = @as(c_int, 26490);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_READ = @as(c_int, 26491);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_READ_INPUTARGUMENTS = @as(c_int, 26492);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_READ_OUTPUTARGUMENTS = @as(c_int, 26493);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_WRITE = @as(c_int, 26494);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_WRITE_INPUTARGUMENTS = @as(c_int, 26495);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_GETPOSITION = @as(c_int, 26496);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_GETPOSITION_INPUTARGUMENTS = @as(c_int, 26497);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 26498);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_SETPOSITION = @as(c_int, 26499);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_SETPOSITION_INPUTARGUMENTS = @as(c_int, 26500);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_LASTUPDATETIME = @as(c_int, 26501);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_UPDATEFREQUENCY = @as(c_int, 26502);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_DEFAULTVALIDATIONOPTIONS = @as(c_int, 26503);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPENWITHMASKS = @as(c_int, 26504);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPENWITHMASKS_INPUTARGUMENTS = @as(c_int, 26505);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPENWITHMASKS_OUTPUTARGUMENTS = @as(c_int, 26506);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSEANDUPDATE = @as(c_int, 26507);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSEANDUPDATE_INPUTARGUMENTS = @as(c_int, 26508);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSEANDUPDATE_OUTPUTARGUMENTS = @as(c_int, 26509);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_ADDCERTIFICATE = @as(c_int, 26510);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_ADDCERTIFICATE_INPUTARGUMENTS = @as(c_int, 26511);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_REMOVECERTIFICATE = @as(c_int, 26512);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_REMOVECERTIFICATE_INPUTARGUMENTS = @as(c_int, 26513);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATETYPES = @as(c_int, 26514);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_GETREJECTEDLIST = @as(c_int, 26516);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_GETREJECTEDLIST_OUTPUTARGUMENTS = @as(c_int, 26517);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED = @as(c_int, 26518);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_EVENTID = @as(c_int, 26519);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_EVENTTYPE = @as(c_int, 26520);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SOURCENODE = @as(c_int, 26521);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SOURCENAME = @as(c_int, 26522);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_TIME = @as(c_int, 26523);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RECEIVETIME = @as(c_int, 26524);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LOCALTIME = @as(c_int, 26525);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_MESSAGE = @as(c_int, 26526);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SEVERITY = @as(c_int, 26527);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSID = @as(c_int, 26528);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSNAME = @as(c_int, 26529);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSID = @as(c_int, 26530);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSNAME = @as(c_int, 26531);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONNAME = @as(c_int, 26532);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_BRANCHID = @as(c_int, 26533);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RETAIN = @as(c_int, 26534);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE = @as(c_int, 26535);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_ID = @as(c_int, 26536);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NAME = @as(c_int, 26537);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NUMBER = @as(c_int, 26538);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26539);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 26540);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26541);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRUESTATE = @as(c_int, 26542);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_FALSESTATE = @as(c_int, 26543);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_QUALITY = @as(c_int, 26544);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_QUALITY_SOURCETIMESTAMP = @as(c_int, 26545);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LASTSEVERITY = @as(c_int, 26546);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 26547);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_COMMENT = @as(c_int, 26548);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_COMMENT_SOURCETIMESTAMP = @as(c_int, 26549);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CLIENTUSERID = @as(c_int, 26550);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_DISABLE = @as(c_int, 26551);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLE = @as(c_int, 26552);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ADDCOMMENT = @as(c_int, 26553);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 26554);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE = @as(c_int, 26555);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_ID = @as(c_int, 26556);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NAME = @as(c_int, 26557);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NUMBER = @as(c_int, 26558);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26559);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 26560);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26561);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRUESTATE = @as(c_int, 26562);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_FALSESTATE = @as(c_int, 26563);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE = @as(c_int, 26564);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_ID = @as(c_int, 26565);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NAME = @as(c_int, 26566);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NUMBER = @as(c_int, 26567);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26568);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 26569);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26570);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 26571);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 26572);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE = @as(c_int, 26573);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 26574);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRM = @as(c_int, 26575);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRM_INPUTARGUMENTS = @as(c_int, 26576);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE = @as(c_int, 26577);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_ID = @as(c_int, 26578);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NAME = @as(c_int, 26579);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NUMBER = @as(c_int, 26580);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26581);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 26582);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26583);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRUESTATE = @as(c_int, 26584);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_FALSESTATE = @as(c_int, 26585);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_INPUTNODE = @as(c_int, 26586);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE = @as(c_int, 26587);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_ID = @as(c_int, 26588);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NAME = @as(c_int, 26589);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NUMBER = @as(c_int, 26590);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26591);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 26592);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26593);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 26594);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 26595);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE = @as(c_int, 26596);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_ID = @as(c_int, 26597);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NAME = @as(c_int, 26598);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NUMBER = @as(c_int, 26599);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26600);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 26601);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26602);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 26603);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 26604);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE = @as(c_int, 26605);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 26606);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 26607);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 26608);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 26609);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26610);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 26611);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 26612);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 26613);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 26614);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 26615);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 26616);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 26617);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 26618);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 26619);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 26620);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 26621);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 26622);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 26623);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE = @as(c_int, 26624);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 26625);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 26626);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 26627);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 26628);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 26629);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDORSHELVED = @as(c_int, 26630);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_MAXTIMESHELVED = @as(c_int, 26631);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLEENABLED = @as(c_int, 26632);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND = @as(c_int, 26633);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_LISTID = @as(c_int, 26634);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_AGENCYID = @as(c_int, 26635);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_VERSIONID = @as(c_int, 26636);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE = @as(c_int, 26637);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_ID = @as(c_int, 26638);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NAME = @as(c_int, 26639);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NUMBER = @as(c_int, 26640);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26641);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRANSITIONTIME = @as(c_int, 26642);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26643);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRUESTATE = @as(c_int, 26644);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_FALSESTATE = @as(c_int, 26645);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ONDELAY = @as(c_int, 26646);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OFFDELAY = @as(c_int, 26647);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_FIRSTINGROUPFLAG = @as(c_int, 26648);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_FIRSTINGROUP = @as(c_int, 26649);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE = @as(c_int, 26650);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_ID = @as(c_int, 26651);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NAME = @as(c_int, 26652);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NUMBER = @as(c_int, 26653);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26654);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 26655);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26656);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRUESTATE = @as(c_int, 26657);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_FALSESTATE = @as(c_int, 26658);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REALARMTIME = @as(c_int, 26659);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REALARMREPEATCOUNT = @as(c_int, 26660);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCE = @as(c_int, 26661);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESS = @as(c_int, 26662);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESS2 = @as(c_int, 26663);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 26664);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_UNSUPPRESS = @as(c_int, 26665);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2 = @as(c_int, 26666);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 26667);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE = @as(c_int, 26668);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2 = @as(c_int, 26669);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 26670);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE = @as(c_int, 26671);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2 = @as(c_int, 26672);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 26673);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RESET = @as(c_int, 26674);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RESET2 = @as(c_int, 26675);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RESET2_INPUTARGUMENTS = @as(c_int, 26676);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS = @as(c_int, 26677);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 26678);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_NORMALSTATE = @as(c_int, 26679);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_EXPIRATIONDATE = @as(c_int, 26680);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_EXPIRATIONLIMIT = @as(c_int, 26681);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CERTIFICATETYPE = @as(c_int, 26682);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CERTIFICATE = @as(c_int, 26683);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE = @as(c_int, 26684);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_EVENTID = @as(c_int, 26685);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_EVENTTYPE = @as(c_int, 26686);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SOURCENODE = @as(c_int, 26687);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SOURCENAME = @as(c_int, 26688);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_TIME = @as(c_int, 26689);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RECEIVETIME = @as(c_int, 26690);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LOCALTIME = @as(c_int, 26691);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_MESSAGE = @as(c_int, 26692);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SEVERITY = @as(c_int, 26693);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSID = @as(c_int, 26694);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSNAME = @as(c_int, 26695);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSID = @as(c_int, 26696);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSNAME = @as(c_int, 26697);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONNAME = @as(c_int, 26698);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_BRANCHID = @as(c_int, 26699);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RETAIN = @as(c_int, 26700);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE = @as(c_int, 26701);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_ID = @as(c_int, 26702);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NAME = @as(c_int, 26703);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NUMBER = @as(c_int, 26704);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26705);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 26706);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26707);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRUESTATE = @as(c_int, 26708);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_FALSESTATE = @as(c_int, 26709);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_QUALITY = @as(c_int, 26710);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_QUALITY_SOURCETIMESTAMP = @as(c_int, 26711);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY = @as(c_int, 26712);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 26713);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_COMMENT = @as(c_int, 26714);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_COMMENT_SOURCETIMESTAMP = @as(c_int, 26715);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CLIENTUSERID = @as(c_int, 26716);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_DISABLE = @as(c_int, 26717);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLE = @as(c_int, 26718);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT = @as(c_int, 26719);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 26720);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE = @as(c_int, 26721);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_ID = @as(c_int, 26722);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NAME = @as(c_int, 26723);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NUMBER = @as(c_int, 26724);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26725);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 26726);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26727);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRUESTATE = @as(c_int, 26728);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_FALSESTATE = @as(c_int, 26729);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE = @as(c_int, 26730);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_ID = @as(c_int, 26731);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NAME = @as(c_int, 26732);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NUMBER = @as(c_int, 26733);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26734);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 26735);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26736);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 26737);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 26738);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE = @as(c_int, 26739);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 26740);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRM = @as(c_int, 26741);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRM_INPUTARGUMENTS = @as(c_int, 26742);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE = @as(c_int, 26743);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_ID = @as(c_int, 26744);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NAME = @as(c_int, 26745);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NUMBER = @as(c_int, 26746);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26747);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 26748);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26749);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRUESTATE = @as(c_int, 26750);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_FALSESTATE = @as(c_int, 26751);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_INPUTNODE = @as(c_int, 26752);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE = @as(c_int, 26753);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_ID = @as(c_int, 26754);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NAME = @as(c_int, 26755);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 26756);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26757);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 26758);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26759);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 26760);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 26761);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE = @as(c_int, 26762);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_ID = @as(c_int, 26763);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NAME = @as(c_int, 26764);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 26765);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26766);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 26767);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26768);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 26769);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 26770);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE = @as(c_int, 26771);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 26772);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 26773);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 26774);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 26775);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26776);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 26777);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 26778);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 26779);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 26780);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 26781);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 26782);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 26783);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 26784);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 26785);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 26786);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 26787);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 26788);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 26789);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE = @as(c_int, 26790);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 26791);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 26792);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 26793);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 26794);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 26795);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDORSHELVED = @as(c_int, 26796);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_MAXTIMESHELVED = @as(c_int, 26797);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLEENABLED = @as(c_int, 26798);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND = @as(c_int, 26799);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_LISTID = @as(c_int, 26800);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_AGENCYID = @as(c_int, 26801);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_VERSIONID = @as(c_int, 26802);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE = @as(c_int, 26803);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_ID = @as(c_int, 26804);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NAME = @as(c_int, 26805);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NUMBER = @as(c_int, 26806);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26807);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 26808);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26809);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRUESTATE = @as(c_int, 26810);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_FALSESTATE = @as(c_int, 26811);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ONDELAY = @as(c_int, 26812);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OFFDELAY = @as(c_int, 26813);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUPFLAG = @as(c_int, 26814);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUP = @as(c_int, 26815);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE = @as(c_int, 26816);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_ID = @as(c_int, 26817);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NAME = @as(c_int, 26818);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NUMBER = @as(c_int, 26819);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26820);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 26821);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26822);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRUESTATE = @as(c_int, 26823);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_FALSESTATE = @as(c_int, 26824);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REALARMTIME = @as(c_int, 26825);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REALARMREPEATCOUNT = @as(c_int, 26826);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCE = @as(c_int, 26827);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESS = @as(c_int, 26828);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2 = @as(c_int, 26829);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 26830);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS = @as(c_int, 26831);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2 = @as(c_int, 26832);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 26833);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE = @as(c_int, 26834);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2 = @as(c_int, 26835);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 26836);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE = @as(c_int, 26837);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2 = @as(c_int, 26838);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 26839);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RESET = @as(c_int, 26840);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RESET2 = @as(c_int, 26841);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RESET2_INPUTARGUMENTS = @as(c_int, 26842);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS = @as(c_int, 26843);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 26844);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_NORMALSTATE = @as(c_int, 26845);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_TRUSTLISTID = @as(c_int, 26846);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LASTUPDATETIME = @as(c_int, 26847);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_UPDATEFREQUENCY = @as(c_int, 26848);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_ENABLED = @as(c_int, 26849);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_APPLICATIONURI = @as(c_int, 26850);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_PRODUCTURI = @as(c_int, 26851);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_APPLICATIONTYPE = @as(c_int, 26852);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_SERVERCAPABILITIES = @as(c_int, 26853);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_SUPPORTEDPRIVATEKEYFORMATS = @as(c_int, 26854);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_MAXTRUSTLISTSIZE = @as(c_int, 26855);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_MULTICASTDNSENABLED = @as(c_int, 26856);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_HASSECUREELEMENT = @as(c_int, 26857);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_UPDATECERTIFICATE = @as(c_int, 26858);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_UPDATECERTIFICATE_INPUTARGUMENTS = @as(c_int, 26859);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_UPDATECERTIFICATE_OUTPUTARGUMENTS = @as(c_int, 26860);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_APPLYCHANGES = @as(c_int, 26861);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CANCELCHANGES = @as(c_int, 26862);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CREATESIGNINGREQUEST = @as(c_int, 26863);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CREATESIGNINGREQUEST_INPUTARGUMENTS = @as(c_int, 26864);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CREATESIGNINGREQUEST_OUTPUTARGUMENTS = @as(c_int, 26865);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_GETREJECTEDLIST = @as(c_int, 26866);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_GETREJECTEDLIST_OUTPUTARGUMENTS = @as(c_int, 26867);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_RESETTOSERVERDEFAULTS = @as(c_int, 26868);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE = @as(c_int, 26871);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_ISSINGLETON = @as(c_int, 26872);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_REQUESTTICKETS = @as(c_int, 26873);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_REQUESTTICKETS_OUTPUTARGUMENTS = @as(c_int, 26874);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_SETREGISTRARENDPOINTS = @as(c_int, 26875);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_SETREGISTRARENDPOINTS_INPUTARGUMENTS = @as(c_int, 26876);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER = @as(c_int, 26878);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS = @as(c_int, 26879);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP = @as(c_int, 26880);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST = @as(c_int, 26881);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_SIZE = @as(c_int, 26882);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_WRITABLE = @as(c_int, 26883);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_USERWRITABLE = @as(c_int, 26884);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPENCOUNT = @as(c_int, 26885);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_MIMETYPE = @as(c_int, 26886);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_MAXBYTESTRINGLENGTH = @as(c_int, 26887);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_LASTMODIFIEDTIME = @as(c_int, 26888);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPEN = @as(c_int, 26889);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPEN_INPUTARGUMENTS = @as(c_int, 26890);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPEN_OUTPUTARGUMENTS = @as(c_int, 26891);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSE = @as(c_int, 26892);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSE_INPUTARGUMENTS = @as(c_int, 26893);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_READ = @as(c_int, 26894);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_READ_INPUTARGUMENTS = @as(c_int, 26895);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_READ_OUTPUTARGUMENTS = @as(c_int, 26896);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_WRITE = @as(c_int, 26897);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_WRITE_INPUTARGUMENTS = @as(c_int, 26898);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_GETPOSITION = @as(c_int, 26899);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_GETPOSITION_INPUTARGUMENTS = @as(c_int, 26900);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 26901);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_SETPOSITION = @as(c_int, 26902);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_SETPOSITION_INPUTARGUMENTS = @as(c_int, 26903);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_LASTUPDATETIME = @as(c_int, 26904);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_UPDATEFREQUENCY = @as(c_int, 26905);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_DEFAULTVALIDATIONOPTIONS = @as(c_int, 26906);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPENWITHMASKS = @as(c_int, 26907);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPENWITHMASKS_INPUTARGUMENTS = @as(c_int, 26908);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPENWITHMASKS_OUTPUTARGUMENTS = @as(c_int, 26909);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSEANDUPDATE = @as(c_int, 26910);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSEANDUPDATE_INPUTARGUMENTS = @as(c_int, 26911);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSEANDUPDATE_OUTPUTARGUMENTS = @as(c_int, 26912);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_ADDCERTIFICATE = @as(c_int, 26913);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_ADDCERTIFICATE_INPUTARGUMENTS = @as(c_int, 26914);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_REMOVECERTIFICATE = @as(c_int, 26915);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_REMOVECERTIFICATE_INPUTARGUMENTS = @as(c_int, 26916);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATETYPES = @as(c_int, 26917);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_GETREJECTEDLIST = @as(c_int, 26919);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_GETREJECTEDLIST_OUTPUTARGUMENTS = @as(c_int, 26920);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED = @as(c_int, 26921);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_EVENTID = @as(c_int, 26922);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_EVENTTYPE = @as(c_int, 26923);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SOURCENODE = @as(c_int, 26924);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SOURCENAME = @as(c_int, 26925);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_TIME = @as(c_int, 26926);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RECEIVETIME = @as(c_int, 26927);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LOCALTIME = @as(c_int, 26928);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_MESSAGE = @as(c_int, 26929);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SEVERITY = @as(c_int, 26930);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSID = @as(c_int, 26931);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSNAME = @as(c_int, 26932);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSID = @as(c_int, 26933);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSNAME = @as(c_int, 26934);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONNAME = @as(c_int, 26935);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_BRANCHID = @as(c_int, 26936);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RETAIN = @as(c_int, 26937);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE = @as(c_int, 26938);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_ID = @as(c_int, 26939);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NAME = @as(c_int, 26940);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NUMBER = @as(c_int, 26941);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26942);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 26943);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26944);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRUESTATE = @as(c_int, 26945);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_FALSESTATE = @as(c_int, 26946);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_QUALITY = @as(c_int, 26947);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_QUALITY_SOURCETIMESTAMP = @as(c_int, 26948);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LASTSEVERITY = @as(c_int, 26949);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 26950);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_COMMENT = @as(c_int, 26951);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_COMMENT_SOURCETIMESTAMP = @as(c_int, 26952);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CLIENTUSERID = @as(c_int, 26953);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_DISABLE = @as(c_int, 26954);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLE = @as(c_int, 26955);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ADDCOMMENT = @as(c_int, 26956);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 26957);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE = @as(c_int, 26958);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_ID = @as(c_int, 26959);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NAME = @as(c_int, 26960);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NUMBER = @as(c_int, 26961);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26962);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 26963);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26964);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRUESTATE = @as(c_int, 26965);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_FALSESTATE = @as(c_int, 26966);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE = @as(c_int, 26967);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_ID = @as(c_int, 26968);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NAME = @as(c_int, 26969);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NUMBER = @as(c_int, 26970);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26971);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 26972);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26973);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 26974);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 26975);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE = @as(c_int, 26976);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 26977);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRM = @as(c_int, 26978);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRM_INPUTARGUMENTS = @as(c_int, 26979);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE = @as(c_int, 26980);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_ID = @as(c_int, 26981);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NAME = @as(c_int, 26982);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NUMBER = @as(c_int, 26983);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26984);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 26985);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26986);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRUESTATE = @as(c_int, 26987);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_FALSESTATE = @as(c_int, 26988);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_INPUTNODE = @as(c_int, 26989);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE = @as(c_int, 26990);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_ID = @as(c_int, 26991);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NAME = @as(c_int, 26992);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NUMBER = @as(c_int, 26993);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 26994);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 26995);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 26996);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 26997);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 26998);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE = @as(c_int, 26999);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_ID = @as(c_int, 27000);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NAME = @as(c_int, 27001);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NUMBER = @as(c_int, 27002);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27003);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 27004);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27005);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 27006);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 27007);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE = @as(c_int, 27008);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 27009);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 27010);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 27011);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 27012);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27013);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 27014);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 27015);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 27016);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 27017);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 27018);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 27019);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 27020);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 27021);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 27022);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 27023);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 27024);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 27025);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 27026);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE = @as(c_int, 27027);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 27028);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 27029);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 27030);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 27031);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 27032);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDORSHELVED = @as(c_int, 27033);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_MAXTIMESHELVED = @as(c_int, 27034);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLEENABLED = @as(c_int, 27035);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND = @as(c_int, 27036);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_LISTID = @as(c_int, 27037);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_AGENCYID = @as(c_int, 27038);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_VERSIONID = @as(c_int, 27039);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE = @as(c_int, 27040);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_ID = @as(c_int, 27041);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NAME = @as(c_int, 27042);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NUMBER = @as(c_int, 27043);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27044);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRANSITIONTIME = @as(c_int, 27045);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27046);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRUESTATE = @as(c_int, 27047);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_FALSESTATE = @as(c_int, 27048);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ONDELAY = @as(c_int, 27049);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OFFDELAY = @as(c_int, 27050);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_FIRSTINGROUPFLAG = @as(c_int, 27051);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_FIRSTINGROUP = @as(c_int, 27052);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE = @as(c_int, 27053);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_ID = @as(c_int, 27054);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NAME = @as(c_int, 27055);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NUMBER = @as(c_int, 27056);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27057);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 27058);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27059);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRUESTATE = @as(c_int, 27060);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_FALSESTATE = @as(c_int, 27061);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REALARMTIME = @as(c_int, 27062);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REALARMREPEATCOUNT = @as(c_int, 27063);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCE = @as(c_int, 27064);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESS = @as(c_int, 27065);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESS2 = @as(c_int, 27066);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 27067);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_UNSUPPRESS = @as(c_int, 27068);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2 = @as(c_int, 27069);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 27070);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE = @as(c_int, 27071);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2 = @as(c_int, 27072);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 27073);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE = @as(c_int, 27074);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2 = @as(c_int, 27075);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 27076);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RESET = @as(c_int, 27077);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RESET2 = @as(c_int, 27078);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RESET2_INPUTARGUMENTS = @as(c_int, 27079);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS = @as(c_int, 27080);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 27081);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_NORMALSTATE = @as(c_int, 27082);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_EXPIRATIONDATE = @as(c_int, 27083);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_EXPIRATIONLIMIT = @as(c_int, 27084);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CERTIFICATETYPE = @as(c_int, 27085);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CERTIFICATE = @as(c_int, 27086);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE = @as(c_int, 27087);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_EVENTID = @as(c_int, 27088);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_EVENTTYPE = @as(c_int, 27089);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SOURCENODE = @as(c_int, 27090);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SOURCENAME = @as(c_int, 27091);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_TIME = @as(c_int, 27092);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RECEIVETIME = @as(c_int, 27093);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LOCALTIME = @as(c_int, 27094);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_MESSAGE = @as(c_int, 27095);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SEVERITY = @as(c_int, 27096);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSID = @as(c_int, 27097);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSNAME = @as(c_int, 27098);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSID = @as(c_int, 27099);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSNAME = @as(c_int, 27100);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONNAME = @as(c_int, 27101);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_BRANCHID = @as(c_int, 27102);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RETAIN = @as(c_int, 27103);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE = @as(c_int, 27104);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_ID = @as(c_int, 27105);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NAME = @as(c_int, 27106);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NUMBER = @as(c_int, 27107);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27108);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 27109);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27110);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRUESTATE = @as(c_int, 27111);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_FALSESTATE = @as(c_int, 27112);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_QUALITY = @as(c_int, 27113);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_QUALITY_SOURCETIMESTAMP = @as(c_int, 27114);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY = @as(c_int, 27115);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 27116);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_COMMENT = @as(c_int, 27117);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_COMMENT_SOURCETIMESTAMP = @as(c_int, 27118);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CLIENTUSERID = @as(c_int, 27119);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_DISABLE = @as(c_int, 27120);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLE = @as(c_int, 27121);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT = @as(c_int, 27122);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 27123);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE = @as(c_int, 27124);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_ID = @as(c_int, 27125);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NAME = @as(c_int, 27126);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NUMBER = @as(c_int, 27127);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27128);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 27129);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27130);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRUESTATE = @as(c_int, 27131);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_FALSESTATE = @as(c_int, 27132);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE = @as(c_int, 27133);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_ID = @as(c_int, 27134);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NAME = @as(c_int, 27135);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NUMBER = @as(c_int, 27136);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27137);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 27138);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27139);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 27140);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 27141);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE = @as(c_int, 27142);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 27143);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRM = @as(c_int, 27144);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRM_INPUTARGUMENTS = @as(c_int, 27145);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE = @as(c_int, 27146);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_ID = @as(c_int, 27147);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NAME = @as(c_int, 27148);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NUMBER = @as(c_int, 27149);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27150);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 27151);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27152);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRUESTATE = @as(c_int, 27153);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_FALSESTATE = @as(c_int, 27154);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_INPUTNODE = @as(c_int, 27155);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE = @as(c_int, 27156);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_ID = @as(c_int, 27157);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NAME = @as(c_int, 27158);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 27159);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27160);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 27161);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27162);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 27163);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 27164);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE = @as(c_int, 27165);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_ID = @as(c_int, 27166);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NAME = @as(c_int, 27167);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 27168);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27169);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 27170);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27171);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 27172);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 27173);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE = @as(c_int, 27174);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 27175);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 27176);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 27177);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 27178);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27179);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 27180);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 27181);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 27182);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 27183);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 27184);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 27185);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 27186);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 27187);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 27188);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 27189);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 27190);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 27191);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 27192);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE = @as(c_int, 27193);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 27194);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 27195);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 27196);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 27197);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 27198);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDORSHELVED = @as(c_int, 27199);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_MAXTIMESHELVED = @as(c_int, 27200);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLEENABLED = @as(c_int, 27201);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND = @as(c_int, 27202);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_LISTID = @as(c_int, 27203);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_AGENCYID = @as(c_int, 27204);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_VERSIONID = @as(c_int, 27205);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE = @as(c_int, 27206);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_ID = @as(c_int, 27207);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NAME = @as(c_int, 27208);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NUMBER = @as(c_int, 27209);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27210);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 27211);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27212);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRUESTATE = @as(c_int, 27213);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_FALSESTATE = @as(c_int, 27214);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ONDELAY = @as(c_int, 27215);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OFFDELAY = @as(c_int, 27216);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUPFLAG = @as(c_int, 27217);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUP = @as(c_int, 27218);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE = @as(c_int, 27219);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_ID = @as(c_int, 27220);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NAME = @as(c_int, 27221);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NUMBER = @as(c_int, 27222);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27223);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 27224);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27225);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRUESTATE = @as(c_int, 27226);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_FALSESTATE = @as(c_int, 27227);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REALARMTIME = @as(c_int, 27228);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REALARMREPEATCOUNT = @as(c_int, 27229);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCE = @as(c_int, 27230);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESS = @as(c_int, 27231);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2 = @as(c_int, 27232);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 27233);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS = @as(c_int, 27234);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2 = @as(c_int, 27235);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 27236);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE = @as(c_int, 27237);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2 = @as(c_int, 27238);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 27239);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE = @as(c_int, 27240);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2 = @as(c_int, 27241);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 27242);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RESET = @as(c_int, 27243);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RESET2 = @as(c_int, 27244);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RESET2_INPUTARGUMENTS = @as(c_int, 27245);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS = @as(c_int, 27246);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 27247);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_NORMALSTATE = @as(c_int, 27248);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_TRUSTLISTID = @as(c_int, 27249);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LASTUPDATETIME = @as(c_int, 27250);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_UPDATEFREQUENCY = @as(c_int, 27251);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP = @as(c_int, 27252);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST = @as(c_int, 27253);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_SIZE = @as(c_int, 27254);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_WRITABLE = @as(c_int, 27255);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_USERWRITABLE = @as(c_int, 27256);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPENCOUNT = @as(c_int, 27257);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_MIMETYPE = @as(c_int, 27258);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_MAXBYTESTRINGLENGTH = @as(c_int, 27259);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_LASTMODIFIEDTIME = @as(c_int, 27260);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPEN = @as(c_int, 27261);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPEN_INPUTARGUMENTS = @as(c_int, 27262);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPEN_OUTPUTARGUMENTS = @as(c_int, 27263);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSE = @as(c_int, 27264);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSE_INPUTARGUMENTS = @as(c_int, 27265);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_READ = @as(c_int, 27266);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_READ_INPUTARGUMENTS = @as(c_int, 27267);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_READ_OUTPUTARGUMENTS = @as(c_int, 27268);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_WRITE = @as(c_int, 27269);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_WRITE_INPUTARGUMENTS = @as(c_int, 27270);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_GETPOSITION = @as(c_int, 27271);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_GETPOSITION_INPUTARGUMENTS = @as(c_int, 27272);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 27273);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_SETPOSITION = @as(c_int, 27274);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_SETPOSITION_INPUTARGUMENTS = @as(c_int, 27275);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_LASTUPDATETIME = @as(c_int, 27276);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_UPDATEFREQUENCY = @as(c_int, 27277);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_DEFAULTVALIDATIONOPTIONS = @as(c_int, 27278);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPENWITHMASKS = @as(c_int, 27279);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPENWITHMASKS_INPUTARGUMENTS = @as(c_int, 27280);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPENWITHMASKS_OUTPUTARGUMENTS = @as(c_int, 27281);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSEANDUPDATE = @as(c_int, 27282);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSEANDUPDATE_INPUTARGUMENTS = @as(c_int, 27283);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSEANDUPDATE_OUTPUTARGUMENTS = @as(c_int, 27284);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_ADDCERTIFICATE = @as(c_int, 27285);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_ADDCERTIFICATE_INPUTARGUMENTS = @as(c_int, 27286);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_REMOVECERTIFICATE = @as(c_int, 27287);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_REMOVECERTIFICATE_INPUTARGUMENTS = @as(c_int, 27288);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATETYPES = @as(c_int, 27289);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_GETREJECTEDLIST = @as(c_int, 27291);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_GETREJECTEDLIST_OUTPUTARGUMENTS = @as(c_int, 27292);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED = @as(c_int, 27293);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_EVENTID = @as(c_int, 27294);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_EVENTTYPE = @as(c_int, 27295);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SOURCENODE = @as(c_int, 27296);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SOURCENAME = @as(c_int, 27297);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_TIME = @as(c_int, 27298);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RECEIVETIME = @as(c_int, 27299);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LOCALTIME = @as(c_int, 27300);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_MESSAGE = @as(c_int, 27301);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SEVERITY = @as(c_int, 27302);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSID = @as(c_int, 27303);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSNAME = @as(c_int, 27304);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSID = @as(c_int, 27305);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSNAME = @as(c_int, 27306);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONNAME = @as(c_int, 27307);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_BRANCHID = @as(c_int, 27308);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RETAIN = @as(c_int, 27309);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE = @as(c_int, 27310);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_ID = @as(c_int, 27311);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NAME = @as(c_int, 27312);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NUMBER = @as(c_int, 27313);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27314);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 27315);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27316);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRUESTATE = @as(c_int, 27317);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_FALSESTATE = @as(c_int, 27318);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_QUALITY = @as(c_int, 27319);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_QUALITY_SOURCETIMESTAMP = @as(c_int, 27320);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LASTSEVERITY = @as(c_int, 27321);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 27322);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_COMMENT = @as(c_int, 27323);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_COMMENT_SOURCETIMESTAMP = @as(c_int, 27324);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CLIENTUSERID = @as(c_int, 27325);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_DISABLE = @as(c_int, 27326);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLE = @as(c_int, 27327);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ADDCOMMENT = @as(c_int, 27328);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 27329);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE = @as(c_int, 27330);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_ID = @as(c_int, 27331);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NAME = @as(c_int, 27332);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NUMBER = @as(c_int, 27333);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27334);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 27335);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27336);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRUESTATE = @as(c_int, 27337);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_FALSESTATE = @as(c_int, 27338);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE = @as(c_int, 27339);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_ID = @as(c_int, 27340);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NAME = @as(c_int, 27341);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NUMBER = @as(c_int, 27342);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27343);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 27344);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27345);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 27346);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 27347);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE = @as(c_int, 27348);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 27349);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRM = @as(c_int, 27350);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRM_INPUTARGUMENTS = @as(c_int, 27351);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE = @as(c_int, 27352);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_ID = @as(c_int, 27353);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NAME = @as(c_int, 27354);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NUMBER = @as(c_int, 27355);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27356);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 27357);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27358);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRUESTATE = @as(c_int, 27359);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_FALSESTATE = @as(c_int, 27360);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_INPUTNODE = @as(c_int, 27361);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE = @as(c_int, 27362);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_ID = @as(c_int, 27363);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NAME = @as(c_int, 27364);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NUMBER = @as(c_int, 27365);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27366);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 27367);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27368);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 27369);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 27370);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE = @as(c_int, 27371);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_ID = @as(c_int, 27372);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NAME = @as(c_int, 27373);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NUMBER = @as(c_int, 27374);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27375);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 27376);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27377);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 27378);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 27379);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE = @as(c_int, 27380);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 27381);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 27382);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 27383);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 27384);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27385);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 27386);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 27387);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 27388);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 27389);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 27390);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 27391);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 27392);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 27393);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 27394);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 27395);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 27396);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 27397);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 27398);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE = @as(c_int, 27399);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 27400);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 27401);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 27402);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 27403);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 27404);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDORSHELVED = @as(c_int, 27405);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_MAXTIMESHELVED = @as(c_int, 27406);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLEENABLED = @as(c_int, 27407);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND = @as(c_int, 27408);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_LISTID = @as(c_int, 27409);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_AGENCYID = @as(c_int, 27410);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_VERSIONID = @as(c_int, 27411);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE = @as(c_int, 27412);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_ID = @as(c_int, 27413);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NAME = @as(c_int, 27414);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NUMBER = @as(c_int, 27415);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27416);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRANSITIONTIME = @as(c_int, 27417);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27418);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRUESTATE = @as(c_int, 27419);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_FALSESTATE = @as(c_int, 27420);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ONDELAY = @as(c_int, 27421);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OFFDELAY = @as(c_int, 27422);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_FIRSTINGROUPFLAG = @as(c_int, 27423);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_FIRSTINGROUP = @as(c_int, 27424);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE = @as(c_int, 27425);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_ID = @as(c_int, 27426);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NAME = @as(c_int, 27427);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NUMBER = @as(c_int, 27428);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27429);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 27430);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27431);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRUESTATE = @as(c_int, 27432);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_FALSESTATE = @as(c_int, 27433);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REALARMTIME = @as(c_int, 27434);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REALARMREPEATCOUNT = @as(c_int, 27435);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCE = @as(c_int, 27436);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESS = @as(c_int, 27437);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESS2 = @as(c_int, 27438);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 27439);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_UNSUPPRESS = @as(c_int, 27440);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2 = @as(c_int, 27441);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 27442);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE = @as(c_int, 27443);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2 = @as(c_int, 27444);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 27445);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE = @as(c_int, 27446);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2 = @as(c_int, 27447);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 27448);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RESET = @as(c_int, 27449);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RESET2 = @as(c_int, 27450);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RESET2_INPUTARGUMENTS = @as(c_int, 27451);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS = @as(c_int, 27452);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 27453);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_NORMALSTATE = @as(c_int, 27454);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_EXPIRATIONDATE = @as(c_int, 27455);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_EXPIRATIONLIMIT = @as(c_int, 27456);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CERTIFICATETYPE = @as(c_int, 27457);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CERTIFICATE = @as(c_int, 27458);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE = @as(c_int, 27459);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_EVENTID = @as(c_int, 27460);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_EVENTTYPE = @as(c_int, 27461);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SOURCENODE = @as(c_int, 27462);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SOURCENAME = @as(c_int, 27463);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_TIME = @as(c_int, 27464);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RECEIVETIME = @as(c_int, 27465);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LOCALTIME = @as(c_int, 27466);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_MESSAGE = @as(c_int, 27467);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SEVERITY = @as(c_int, 27468);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSID = @as(c_int, 27469);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSNAME = @as(c_int, 27470);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSID = @as(c_int, 27471);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSNAME = @as(c_int, 27472);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONNAME = @as(c_int, 27473);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_BRANCHID = @as(c_int, 27474);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RETAIN = @as(c_int, 27475);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE = @as(c_int, 27476);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_ID = @as(c_int, 27477);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NAME = @as(c_int, 27478);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NUMBER = @as(c_int, 27479);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27480);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 27481);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27482);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRUESTATE = @as(c_int, 27483);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_FALSESTATE = @as(c_int, 27484);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_QUALITY = @as(c_int, 27485);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_QUALITY_SOURCETIMESTAMP = @as(c_int, 27486);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY = @as(c_int, 27487);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 27488);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_COMMENT = @as(c_int, 27489);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_COMMENT_SOURCETIMESTAMP = @as(c_int, 27490);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CLIENTUSERID = @as(c_int, 27491);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_DISABLE = @as(c_int, 27492);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLE = @as(c_int, 27493);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT = @as(c_int, 27494);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 27495);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE = @as(c_int, 27496);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_ID = @as(c_int, 27497);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NAME = @as(c_int, 27498);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NUMBER = @as(c_int, 27499);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27500);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 27501);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27502);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRUESTATE = @as(c_int, 27503);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_FALSESTATE = @as(c_int, 27504);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE = @as(c_int, 27505);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_ID = @as(c_int, 27506);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NAME = @as(c_int, 27507);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NUMBER = @as(c_int, 27508);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27509);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 27510);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27511);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 27512);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 27513);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE = @as(c_int, 27514);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 27515);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRM = @as(c_int, 27516);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRM_INPUTARGUMENTS = @as(c_int, 27517);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE = @as(c_int, 27518);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_ID = @as(c_int, 27519);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NAME = @as(c_int, 27520);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NUMBER = @as(c_int, 27521);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27522);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 27523);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27524);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRUESTATE = @as(c_int, 27525);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_FALSESTATE = @as(c_int, 27526);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_INPUTNODE = @as(c_int, 27527);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE = @as(c_int, 27528);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_ID = @as(c_int, 27529);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NAME = @as(c_int, 27530);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 27531);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27532);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 27533);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27534);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 27535);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 27536);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE = @as(c_int, 27537);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_ID = @as(c_int, 27538);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NAME = @as(c_int, 27539);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 27540);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27541);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 27542);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27543);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 27544);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 27545);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE = @as(c_int, 27546);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 27547);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 27548);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 27549);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 27550);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27551);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 27552);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 27553);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 27554);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 27555);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 27556);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 27557);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 27558);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 27559);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 27560);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 27561);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 27562);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 27563);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 27564);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE = @as(c_int, 27565);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 27566);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 27567);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 27568);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 27569);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 27570);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDORSHELVED = @as(c_int, 27571);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_MAXTIMESHELVED = @as(c_int, 27572);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLEENABLED = @as(c_int, 27573);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND = @as(c_int, 27574);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_LISTID = @as(c_int, 27575);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_AGENCYID = @as(c_int, 27576);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_VERSIONID = @as(c_int, 27577);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE = @as(c_int, 27578);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_ID = @as(c_int, 27579);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NAME = @as(c_int, 27580);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NUMBER = @as(c_int, 27581);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27582);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 27583);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27584);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRUESTATE = @as(c_int, 27585);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_FALSESTATE = @as(c_int, 27586);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ONDELAY = @as(c_int, 27587);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OFFDELAY = @as(c_int, 27588);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUPFLAG = @as(c_int, 27589);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUP = @as(c_int, 27590);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE = @as(c_int, 27591);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_ID = @as(c_int, 27592);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NAME = @as(c_int, 27593);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NUMBER = @as(c_int, 27594);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27595);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 27596);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27597);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRUESTATE = @as(c_int, 27598);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_FALSESTATE = @as(c_int, 27599);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REALARMTIME = @as(c_int, 27600);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REALARMREPEATCOUNT = @as(c_int, 27601);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCE = @as(c_int, 27602);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESS = @as(c_int, 27603);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2 = @as(c_int, 27604);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 27605);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS = @as(c_int, 27606);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2 = @as(c_int, 27607);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 27608);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE = @as(c_int, 27609);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2 = @as(c_int, 27610);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 27611);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE = @as(c_int, 27612);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2 = @as(c_int, 27613);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 27614);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RESET = @as(c_int, 27615);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RESET2 = @as(c_int, 27616);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RESET2_INPUTARGUMENTS = @as(c_int, 27617);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS = @as(c_int, 27618);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 27619);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_NORMALSTATE = @as(c_int, 27620);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_TRUSTLISTID = @as(c_int, 27621);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LASTUPDATETIME = @as(c_int, 27622);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_UPDATEFREQUENCY = @as(c_int, 27623);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP = @as(c_int, 27624);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST = @as(c_int, 27625);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_SIZE = @as(c_int, 27626);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_WRITABLE = @as(c_int, 27627);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_USERWRITABLE = @as(c_int, 27628);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPENCOUNT = @as(c_int, 27629);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_MIMETYPE = @as(c_int, 27630);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_MAXBYTESTRINGLENGTH = @as(c_int, 27631);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_LASTMODIFIEDTIME = @as(c_int, 27632);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPEN = @as(c_int, 27633);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPEN_INPUTARGUMENTS = @as(c_int, 27634);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPEN_OUTPUTARGUMENTS = @as(c_int, 27635);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSE = @as(c_int, 27636);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSE_INPUTARGUMENTS = @as(c_int, 27637);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_READ = @as(c_int, 27638);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_READ_INPUTARGUMENTS = @as(c_int, 27639);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_READ_OUTPUTARGUMENTS = @as(c_int, 27640);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_WRITE = @as(c_int, 27641);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_WRITE_INPUTARGUMENTS = @as(c_int, 27642);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_GETPOSITION = @as(c_int, 27643);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_GETPOSITION_INPUTARGUMENTS = @as(c_int, 27644);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 27645);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_SETPOSITION = @as(c_int, 27646);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_SETPOSITION_INPUTARGUMENTS = @as(c_int, 27647);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_LASTUPDATETIME = @as(c_int, 27648);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_UPDATEFREQUENCY = @as(c_int, 27649);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_DEFAULTVALIDATIONOPTIONS = @as(c_int, 27650);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPENWITHMASKS = @as(c_int, 27651);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPENWITHMASKS_INPUTARGUMENTS = @as(c_int, 27652);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPENWITHMASKS_OUTPUTARGUMENTS = @as(c_int, 27653);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSEANDUPDATE = @as(c_int, 27654);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSEANDUPDATE_INPUTARGUMENTS = @as(c_int, 27655);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSEANDUPDATE_OUTPUTARGUMENTS = @as(c_int, 27656);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_ADDCERTIFICATE = @as(c_int, 27657);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_ADDCERTIFICATE_INPUTARGUMENTS = @as(c_int, 27658);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_REMOVECERTIFICATE = @as(c_int, 27659);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_REMOVECERTIFICATE_INPUTARGUMENTS = @as(c_int, 27660);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATETYPES = @as(c_int, 27661);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_GETREJECTEDLIST = @as(c_int, 27663);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_GETREJECTEDLIST_OUTPUTARGUMENTS = @as(c_int, 27664);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED = @as(c_int, 27665);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_EVENTID = @as(c_int, 27666);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_EVENTTYPE = @as(c_int, 27667);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SOURCENODE = @as(c_int, 27668);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SOURCENAME = @as(c_int, 27669);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_TIME = @as(c_int, 27670);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RECEIVETIME = @as(c_int, 27671);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LOCALTIME = @as(c_int, 27672);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_MESSAGE = @as(c_int, 27673);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SEVERITY = @as(c_int, 27674);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSID = @as(c_int, 27675);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSNAME = @as(c_int, 27676);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSID = @as(c_int, 27677);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSNAME = @as(c_int, 27678);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONNAME = @as(c_int, 27679);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_BRANCHID = @as(c_int, 27680);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RETAIN = @as(c_int, 27681);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE = @as(c_int, 27682);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_ID = @as(c_int, 27683);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NAME = @as(c_int, 27684);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NUMBER = @as(c_int, 27685);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27686);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 27687);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27688);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRUESTATE = @as(c_int, 27689);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_FALSESTATE = @as(c_int, 27690);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_QUALITY = @as(c_int, 27691);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_QUALITY_SOURCETIMESTAMP = @as(c_int, 27692);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LASTSEVERITY = @as(c_int, 27693);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 27694);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_COMMENT = @as(c_int, 27695);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_COMMENT_SOURCETIMESTAMP = @as(c_int, 27696);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CLIENTUSERID = @as(c_int, 27697);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_DISABLE = @as(c_int, 27698);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLE = @as(c_int, 27699);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ADDCOMMENT = @as(c_int, 27700);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 27701);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE = @as(c_int, 27702);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_ID = @as(c_int, 27703);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NAME = @as(c_int, 27704);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NUMBER = @as(c_int, 27705);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27706);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 27707);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27708);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRUESTATE = @as(c_int, 27709);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_FALSESTATE = @as(c_int, 27710);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE = @as(c_int, 27711);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_ID = @as(c_int, 27712);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NAME = @as(c_int, 27713);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NUMBER = @as(c_int, 27714);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27715);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 27716);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27717);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 27718);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 27719);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE = @as(c_int, 27720);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 27721);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRM = @as(c_int, 27722);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRM_INPUTARGUMENTS = @as(c_int, 27723);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE = @as(c_int, 27724);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_ID = @as(c_int, 27725);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NAME = @as(c_int, 27726);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NUMBER = @as(c_int, 27727);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27728);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 27729);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27730);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRUESTATE = @as(c_int, 27731);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_FALSESTATE = @as(c_int, 27732);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_INPUTNODE = @as(c_int, 27733);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE = @as(c_int, 27734);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_ID = @as(c_int, 27735);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NAME = @as(c_int, 27736);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NUMBER = @as(c_int, 27737);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27738);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 27739);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27740);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 27741);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 27742);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE = @as(c_int, 27743);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_ID = @as(c_int, 27744);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NAME = @as(c_int, 27745);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NUMBER = @as(c_int, 27746);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27747);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 27748);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27749);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 27750);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 27751);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE = @as(c_int, 27752);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 27753);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 27754);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 27755);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 27756);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27757);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 27758);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 27759);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 27760);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 27761);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 27762);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 27763);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 27764);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 27765);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 27766);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 27767);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 27768);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 27769);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 27770);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE = @as(c_int, 27771);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 27772);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 27773);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 27774);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 27775);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 27776);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDORSHELVED = @as(c_int, 27777);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_MAXTIMESHELVED = @as(c_int, 27778);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLEENABLED = @as(c_int, 27779);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND = @as(c_int, 27780);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_LISTID = @as(c_int, 27781);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_AGENCYID = @as(c_int, 27782);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_VERSIONID = @as(c_int, 27783);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE = @as(c_int, 27784);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_ID = @as(c_int, 27785);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NAME = @as(c_int, 27786);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NUMBER = @as(c_int, 27787);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27788);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRANSITIONTIME = @as(c_int, 27789);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27790);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRUESTATE = @as(c_int, 27791);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_FALSESTATE = @as(c_int, 27792);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ONDELAY = @as(c_int, 27793);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OFFDELAY = @as(c_int, 27794);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_FIRSTINGROUPFLAG = @as(c_int, 27795);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_FIRSTINGROUP = @as(c_int, 27796);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE = @as(c_int, 27797);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_ID = @as(c_int, 27798);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NAME = @as(c_int, 27799);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NUMBER = @as(c_int, 27800);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27801);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 27802);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27803);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRUESTATE = @as(c_int, 27804);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_FALSESTATE = @as(c_int, 27805);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REALARMTIME = @as(c_int, 27806);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REALARMREPEATCOUNT = @as(c_int, 27807);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCE = @as(c_int, 27808);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESS = @as(c_int, 27809);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESS2 = @as(c_int, 27810);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 27811);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_UNSUPPRESS = @as(c_int, 27812);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2 = @as(c_int, 27813);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 27814);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE = @as(c_int, 27815);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2 = @as(c_int, 27816);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 27817);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE = @as(c_int, 27818);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2 = @as(c_int, 27819);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 27820);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RESET = @as(c_int, 27821);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RESET2 = @as(c_int, 27822);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RESET2_INPUTARGUMENTS = @as(c_int, 27823);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS = @as(c_int, 27824);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 27825);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_NORMALSTATE = @as(c_int, 27826);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_EXPIRATIONDATE = @as(c_int, 27827);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_EXPIRATIONLIMIT = @as(c_int, 27828);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CERTIFICATETYPE = @as(c_int, 27829);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CERTIFICATE = @as(c_int, 27830);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE = @as(c_int, 27831);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_EVENTID = @as(c_int, 27832);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_EVENTTYPE = @as(c_int, 27833);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SOURCENODE = @as(c_int, 27834);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SOURCENAME = @as(c_int, 27835);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_TIME = @as(c_int, 27836);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RECEIVETIME = @as(c_int, 27837);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LOCALTIME = @as(c_int, 27838);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_MESSAGE = @as(c_int, 27839);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SEVERITY = @as(c_int, 27840);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSID = @as(c_int, 27841);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSNAME = @as(c_int, 27842);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSID = @as(c_int, 27843);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSNAME = @as(c_int, 27844);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONNAME = @as(c_int, 27845);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_BRANCHID = @as(c_int, 27846);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RETAIN = @as(c_int, 27847);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE = @as(c_int, 27848);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_ID = @as(c_int, 27849);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NAME = @as(c_int, 27850);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NUMBER = @as(c_int, 27851);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27852);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 27853);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27854);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRUESTATE = @as(c_int, 27855);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_FALSESTATE = @as(c_int, 27856);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_QUALITY = @as(c_int, 27857);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_QUALITY_SOURCETIMESTAMP = @as(c_int, 27858);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY = @as(c_int, 27859);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 27860);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_COMMENT = @as(c_int, 27861);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_COMMENT_SOURCETIMESTAMP = @as(c_int, 27862);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CLIENTUSERID = @as(c_int, 27863);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_DISABLE = @as(c_int, 27864);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLE = @as(c_int, 27865);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT = @as(c_int, 27866);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 27867);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE = @as(c_int, 27868);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_ID = @as(c_int, 27869);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NAME = @as(c_int, 27870);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NUMBER = @as(c_int, 27871);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27872);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 27873);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27874);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRUESTATE = @as(c_int, 27875);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_FALSESTATE = @as(c_int, 27876);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE = @as(c_int, 27877);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_ID = @as(c_int, 27878);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NAME = @as(c_int, 27879);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NUMBER = @as(c_int, 27880);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27881);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 27882);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27883);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 27884);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 27885);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE = @as(c_int, 27886);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 27887);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRM = @as(c_int, 27888);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRM_INPUTARGUMENTS = @as(c_int, 27889);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE = @as(c_int, 27890);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_ID = @as(c_int, 27891);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NAME = @as(c_int, 27892);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NUMBER = @as(c_int, 27893);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27894);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 27895);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27896);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRUESTATE = @as(c_int, 27897);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_FALSESTATE = @as(c_int, 27898);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_INPUTNODE = @as(c_int, 27899);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE = @as(c_int, 27900);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_ID = @as(c_int, 27901);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NAME = @as(c_int, 27902);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 27903);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27904);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 27905);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27906);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 27907);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 27908);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE = @as(c_int, 27909);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_ID = @as(c_int, 27910);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NAME = @as(c_int, 27911);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 27912);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27913);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 27914);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27915);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 27916);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 27917);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE = @as(c_int, 27918);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 27919);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 27920);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 27921);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 27922);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27923);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 27924);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 27925);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 27926);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 27927);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 27928);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 27929);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 27930);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 27931);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 27932);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 27933);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 27934);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 27935);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 27936);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE = @as(c_int, 27937);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 27938);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 27939);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 27940);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 27941);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 27942);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDORSHELVED = @as(c_int, 27943);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_MAXTIMESHELVED = @as(c_int, 27944);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLEENABLED = @as(c_int, 27945);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND = @as(c_int, 27946);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_LISTID = @as(c_int, 27947);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_AGENCYID = @as(c_int, 27948);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_VERSIONID = @as(c_int, 27949);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE = @as(c_int, 27950);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_ID = @as(c_int, 27951);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NAME = @as(c_int, 27952);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NUMBER = @as(c_int, 27953);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27954);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 27955);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27956);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRUESTATE = @as(c_int, 27957);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_FALSESTATE = @as(c_int, 27958);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ONDELAY = @as(c_int, 27959);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OFFDELAY = @as(c_int, 27960);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUPFLAG = @as(c_int, 27961);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUP = @as(c_int, 27962);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE = @as(c_int, 27963);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_ID = @as(c_int, 27964);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NAME = @as(c_int, 27965);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NUMBER = @as(c_int, 27966);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 27967);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 27968);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 27969);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRUESTATE = @as(c_int, 27970);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_FALSESTATE = @as(c_int, 27971);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REALARMTIME = @as(c_int, 27972);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REALARMREPEATCOUNT = @as(c_int, 27973);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCE = @as(c_int, 27974);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESS = @as(c_int, 27975);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2 = @as(c_int, 27976);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 27977);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS = @as(c_int, 27978);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2 = @as(c_int, 27979);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 27980);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE = @as(c_int, 27981);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2 = @as(c_int, 27982);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 27983);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE = @as(c_int, 27984);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2 = @as(c_int, 27985);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 27986);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RESET = @as(c_int, 27987);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RESET2 = @as(c_int, 27988);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RESET2_INPUTARGUMENTS = @as(c_int, 27989);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS = @as(c_int, 27990);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 27991);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_NORMALSTATE = @as(c_int, 27992);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_TRUSTLISTID = @as(c_int, 27993);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LASTUPDATETIME = @as(c_int, 27994);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_UPDATEFREQUENCY = @as(c_int, 27995);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_ENABLED = @as(c_int, 27996);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_APPLICATIONURI = @as(c_int, 27997);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_PRODUCTURI = @as(c_int, 27998);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_APPLICATIONTYPE = @as(c_int, 27999);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_SERVERCAPABILITIES = @as(c_int, 28000);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_SUPPORTEDPRIVATEKEYFORMATS = @as(c_int, 28001);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_MAXTRUSTLISTSIZE = @as(c_int, 28002);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_MULTICASTDNSENABLED = @as(c_int, 28003);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_HASSECUREELEMENT = @as(c_int, 28004);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_UPDATECERTIFICATE = @as(c_int, 28005);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_UPDATECERTIFICATE_INPUTARGUMENTS = @as(c_int, 28006);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_UPDATECERTIFICATE_OUTPUTARGUMENTS = @as(c_int, 28007);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_APPLYCHANGES = @as(c_int, 28008);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CANCELCHANGES = @as(c_int, 28009);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CREATESIGNINGREQUEST = @as(c_int, 28010);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CREATESIGNINGREQUEST_INPUTARGUMENTS = @as(c_int, 28011);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CREATESIGNINGREQUEST_OUTPUTARGUMENTS = @as(c_int, 28012);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_GETREJECTEDLIST = @as(c_int, 28013);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_GETREJECTEDLIST_OUTPUTARGUMENTS = @as(c_int, 28014);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_RESETTOSERVERDEFAULTS = @as(c_int, 28015);
pub const UA_NS0ID_PROVISIONABLEDEVICE = @as(c_int, 29878);
pub const UA_NS0ID_PROVISIONABLEDEVICE_ISSINGLETON = @as(c_int, 29879);
pub const UA_NS0ID_PROVISIONABLEDEVICE_REQUESTTICKETS = @as(c_int, 29880);
pub const UA_NS0ID_PROVISIONABLEDEVICE_REQUESTTICKETS_OUTPUTARGUMENTS = @as(c_int, 29881);
pub const UA_NS0ID_PROVISIONABLEDEVICE_SETREGISTRARENDPOINTS = @as(c_int, 29882);
pub const UA_NS0ID_PROVISIONABLEDEVICE_SETREGISTRARENDPOINTS_INPUTARGUMENTS = @as(c_int, 29883);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER = @as(c_int, 29885);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS = @as(c_int, 29886);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP = @as(c_int, 29887);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST = @as(c_int, 29888);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_SIZE = @as(c_int, 29889);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_WRITABLE = @as(c_int, 29890);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_USERWRITABLE = @as(c_int, 29891);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPENCOUNT = @as(c_int, 29892);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_MIMETYPE = @as(c_int, 29893);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_MAXBYTESTRINGLENGTH = @as(c_int, 29894);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_LASTMODIFIEDTIME = @as(c_int, 29895);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPEN = @as(c_int, 29896);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPEN_INPUTARGUMENTS = @as(c_int, 29897);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPEN_OUTPUTARGUMENTS = @as(c_int, 29898);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSE = @as(c_int, 29899);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSE_INPUTARGUMENTS = @as(c_int, 29900);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_READ = @as(c_int, 29901);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_READ_INPUTARGUMENTS = @as(c_int, 29902);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_READ_OUTPUTARGUMENTS = @as(c_int, 29903);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_WRITE = @as(c_int, 29904);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_WRITE_INPUTARGUMENTS = @as(c_int, 29905);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_GETPOSITION = @as(c_int, 29906);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_GETPOSITION_INPUTARGUMENTS = @as(c_int, 29907);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 29908);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_SETPOSITION = @as(c_int, 29909);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_SETPOSITION_INPUTARGUMENTS = @as(c_int, 29910);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_LASTUPDATETIME = @as(c_int, 29911);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_UPDATEFREQUENCY = @as(c_int, 29912);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_DEFAULTVALIDATIONOPTIONS = @as(c_int, 29913);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPENWITHMASKS = @as(c_int, 29914);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPENWITHMASKS_INPUTARGUMENTS = @as(c_int, 29915);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_OPENWITHMASKS_OUTPUTARGUMENTS = @as(c_int, 29916);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSEANDUPDATE = @as(c_int, 29917);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSEANDUPDATE_INPUTARGUMENTS = @as(c_int, 29918);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_CLOSEANDUPDATE_OUTPUTARGUMENTS = @as(c_int, 29919);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_ADDCERTIFICATE = @as(c_int, 29920);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_ADDCERTIFICATE_INPUTARGUMENTS = @as(c_int, 29921);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_REMOVECERTIFICATE = @as(c_int, 29922);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_REMOVECERTIFICATE_INPUTARGUMENTS = @as(c_int, 29923);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATETYPES = @as(c_int, 29924);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_GETREJECTEDLIST = @as(c_int, 29926);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_GETREJECTEDLIST_OUTPUTARGUMENTS = @as(c_int, 29927);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED = @as(c_int, 29928);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_EVENTID = @as(c_int, 29929);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_EVENTTYPE = @as(c_int, 29930);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SOURCENODE = @as(c_int, 29931);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SOURCENAME = @as(c_int, 29932);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_TIME = @as(c_int, 29933);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RECEIVETIME = @as(c_int, 29934);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LOCALTIME = @as(c_int, 29935);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_MESSAGE = @as(c_int, 29936);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SEVERITY = @as(c_int, 29937);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSID = @as(c_int, 29938);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSNAME = @as(c_int, 29939);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSID = @as(c_int, 29940);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSNAME = @as(c_int, 29941);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONDITIONNAME = @as(c_int, 29942);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_BRANCHID = @as(c_int, 29943);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RETAIN = @as(c_int, 29944);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE = @as(c_int, 29945);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_ID = @as(c_int, 29946);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NAME = @as(c_int, 29947);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NUMBER = @as(c_int, 29948);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 29949);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 29950);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 29951);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRUESTATE = @as(c_int, 29952);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_FALSESTATE = @as(c_int, 29953);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_QUALITY = @as(c_int, 29954);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_QUALITY_SOURCETIMESTAMP = @as(c_int, 29955);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LASTSEVERITY = @as(c_int, 29956);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 29957);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_COMMENT = @as(c_int, 29958);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_COMMENT_SOURCETIMESTAMP = @as(c_int, 29959);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CLIENTUSERID = @as(c_int, 29960);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_DISABLE = @as(c_int, 29961);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ENABLE = @as(c_int, 29962);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ADDCOMMENT = @as(c_int, 29963);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 29964);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE = @as(c_int, 29965);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_ID = @as(c_int, 29966);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NAME = @as(c_int, 29967);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NUMBER = @as(c_int, 29968);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 29969);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 29970);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 29971);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRUESTATE = @as(c_int, 29972);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_FALSESTATE = @as(c_int, 29973);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE = @as(c_int, 29974);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_ID = @as(c_int, 29975);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NAME = @as(c_int, 29976);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NUMBER = @as(c_int, 29977);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 29978);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 29979);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 29980);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 29981);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 29982);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE = @as(c_int, 29983);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 29984);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRM = @as(c_int, 29985);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CONFIRM_INPUTARGUMENTS = @as(c_int, 29986);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE = @as(c_int, 29987);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_ID = @as(c_int, 29988);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NAME = @as(c_int, 29989);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NUMBER = @as(c_int, 29990);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 29991);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 29992);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 29993);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRUESTATE = @as(c_int, 29994);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_FALSESTATE = @as(c_int, 29995);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_INPUTNODE = @as(c_int, 29996);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE = @as(c_int, 29997);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_ID = @as(c_int, 29998);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NAME = @as(c_int, 29999);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NUMBER = @as(c_int, 30000);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30001);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 30002);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30003);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 30004);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 30005);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE = @as(c_int, 30006);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_ID = @as(c_int, 30007);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NAME = @as(c_int, 30008);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NUMBER = @as(c_int, 30009);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30010);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 30011);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30012);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 30013);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 30014);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE = @as(c_int, 30015);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 30016);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 30017);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 30018);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 30019);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30020);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 30021);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 30022);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 30023);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 30024);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 30025);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 30026);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 30027);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 30028);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 30029);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 30030);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 30031);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 30032);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 30033);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE = @as(c_int, 30034);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 30035);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 30036);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 30037);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 30038);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 30039);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESSEDORSHELVED = @as(c_int, 30040);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_MAXTIMESHELVED = @as(c_int, 30041);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLEENABLED = @as(c_int, 30042);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND = @as(c_int, 30043);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_LISTID = @as(c_int, 30044);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_AGENCYID = @as(c_int, 30045);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_VERSIONID = @as(c_int, 30046);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE = @as(c_int, 30047);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_ID = @as(c_int, 30048);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NAME = @as(c_int, 30049);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NUMBER = @as(c_int, 30050);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30051);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRANSITIONTIME = @as(c_int, 30052);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30053);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRUESTATE = @as(c_int, 30054);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCESTATE_FALSESTATE = @as(c_int, 30055);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_ONDELAY = @as(c_int, 30056);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_OFFDELAY = @as(c_int, 30057);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_FIRSTINGROUPFLAG = @as(c_int, 30058);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_FIRSTINGROUP = @as(c_int, 30059);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE = @as(c_int, 30060);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_ID = @as(c_int, 30061);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NAME = @as(c_int, 30062);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NUMBER = @as(c_int, 30063);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30064);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 30065);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30066);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRUESTATE = @as(c_int, 30067);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_FALSESTATE = @as(c_int, 30068);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REALARMTIME = @as(c_int, 30069);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REALARMREPEATCOUNT = @as(c_int, 30070);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SILENCE = @as(c_int, 30071);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESS = @as(c_int, 30072);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESS2 = @as(c_int, 30073);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 30074);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_UNSUPPRESS = @as(c_int, 30075);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2 = @as(c_int, 30076);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 30077);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE = @as(c_int, 30078);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2 = @as(c_int, 30079);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 30080);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE = @as(c_int, 30081);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2 = @as(c_int, 30082);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 30083);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RESET = @as(c_int, 30084);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RESET2 = @as(c_int, 30085);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_RESET2_INPUTARGUMENTS = @as(c_int, 30086);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS = @as(c_int, 30087);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 30088);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_NORMALSTATE = @as(c_int, 30089);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_EXPIRATIONDATE = @as(c_int, 30090);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_EXPIRATIONLIMIT = @as(c_int, 30091);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CERTIFICATETYPE = @as(c_int, 30092);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_CERTIFICATEEXPIRED_CERTIFICATE = @as(c_int, 30093);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE = @as(c_int, 30094);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_EVENTID = @as(c_int, 30095);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_EVENTTYPE = @as(c_int, 30096);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SOURCENODE = @as(c_int, 30097);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SOURCENAME = @as(c_int, 30098);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_TIME = @as(c_int, 30099);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RECEIVETIME = @as(c_int, 30100);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LOCALTIME = @as(c_int, 30101);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_MESSAGE = @as(c_int, 30102);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SEVERITY = @as(c_int, 30103);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSID = @as(c_int, 30104);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSNAME = @as(c_int, 30105);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSID = @as(c_int, 30106);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSNAME = @as(c_int, 30107);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONDITIONNAME = @as(c_int, 30108);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_BRANCHID = @as(c_int, 30109);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RETAIN = @as(c_int, 30110);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE = @as(c_int, 30111);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_ID = @as(c_int, 30112);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NAME = @as(c_int, 30113);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NUMBER = @as(c_int, 30114);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30115);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 30116);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30117);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRUESTATE = @as(c_int, 30118);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_FALSESTATE = @as(c_int, 30119);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_QUALITY = @as(c_int, 30120);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_QUALITY_SOURCETIMESTAMP = @as(c_int, 30121);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY = @as(c_int, 30122);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 30123);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_COMMENT = @as(c_int, 30124);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_COMMENT_SOURCETIMESTAMP = @as(c_int, 30125);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CLIENTUSERID = @as(c_int, 30126);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_DISABLE = @as(c_int, 30127);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ENABLE = @as(c_int, 30128);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT = @as(c_int, 30129);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 30130);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE = @as(c_int, 30131);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_ID = @as(c_int, 30132);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NAME = @as(c_int, 30133);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NUMBER = @as(c_int, 30134);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30135);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 30136);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30137);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRUESTATE = @as(c_int, 30138);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_FALSESTATE = @as(c_int, 30139);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE = @as(c_int, 30140);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_ID = @as(c_int, 30141);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NAME = @as(c_int, 30142);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NUMBER = @as(c_int, 30143);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30144);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 30145);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30146);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 30147);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 30148);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE = @as(c_int, 30149);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 30150);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRM = @as(c_int, 30151);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_CONFIRM_INPUTARGUMENTS = @as(c_int, 30152);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE = @as(c_int, 30153);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_ID = @as(c_int, 30154);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NAME = @as(c_int, 30155);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NUMBER = @as(c_int, 30156);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30157);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 30158);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30159);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRUESTATE = @as(c_int, 30160);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_FALSESTATE = @as(c_int, 30161);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_INPUTNODE = @as(c_int, 30162);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE = @as(c_int, 30163);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_ID = @as(c_int, 30164);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NAME = @as(c_int, 30165);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 30166);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30167);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 30168);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30169);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 30170);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 30171);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE = @as(c_int, 30172);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_ID = @as(c_int, 30173);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NAME = @as(c_int, 30174);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 30175);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30176);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 30177);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30178);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 30179);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 30180);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE = @as(c_int, 30181);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 30182);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 30183);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 30184);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 30185);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30186);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 30187);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 30188);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 30189);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 30190);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 30191);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 30192);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 30193);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 30194);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 30195);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 30196);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 30197);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 30198);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 30199);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE = @as(c_int, 30200);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 30201);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 30202);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 30203);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 30204);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 30205);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDORSHELVED = @as(c_int, 30206);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_MAXTIMESHELVED = @as(c_int, 30207);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLEENABLED = @as(c_int, 30208);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND = @as(c_int, 30209);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_LISTID = @as(c_int, 30210);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_AGENCYID = @as(c_int, 30211);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_VERSIONID = @as(c_int, 30212);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE = @as(c_int, 30213);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_ID = @as(c_int, 30214);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NAME = @as(c_int, 30215);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NUMBER = @as(c_int, 30216);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30217);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 30218);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30219);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRUESTATE = @as(c_int, 30220);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_FALSESTATE = @as(c_int, 30221);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_ONDELAY = @as(c_int, 30222);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_OFFDELAY = @as(c_int, 30223);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUPFLAG = @as(c_int, 30224);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUP = @as(c_int, 30225);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE = @as(c_int, 30226);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_ID = @as(c_int, 30227);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NAME = @as(c_int, 30228);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NUMBER = @as(c_int, 30229);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30230);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 30231);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30232);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRUESTATE = @as(c_int, 30233);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_FALSESTATE = @as(c_int, 30234);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REALARMTIME = @as(c_int, 30235);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REALARMREPEATCOUNT = @as(c_int, 30236);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SILENCE = @as(c_int, 30237);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESS = @as(c_int, 30238);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2 = @as(c_int, 30239);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 30240);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS = @as(c_int, 30241);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2 = @as(c_int, 30242);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 30243);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE = @as(c_int, 30244);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2 = @as(c_int, 30245);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 30246);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE = @as(c_int, 30247);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2 = @as(c_int, 30248);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 30249);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RESET = @as(c_int, 30250);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RESET2 = @as(c_int, 30251);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_RESET2_INPUTARGUMENTS = @as(c_int, 30252);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS = @as(c_int, 30253);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 30254);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_NORMALSTATE = @as(c_int, 30255);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_TRUSTLISTID = @as(c_int, 30256);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_LASTUPDATETIME = @as(c_int, 30257);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLISTOUTOFDATE_UPDATEFREQUENCY = @as(c_int, 30258);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP = @as(c_int, 30259);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST = @as(c_int, 30260);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_SIZE = @as(c_int, 30261);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_WRITABLE = @as(c_int, 30262);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_USERWRITABLE = @as(c_int, 30263);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPENCOUNT = @as(c_int, 30264);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_MIMETYPE = @as(c_int, 30265);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_MAXBYTESTRINGLENGTH = @as(c_int, 30266);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_LASTMODIFIEDTIME = @as(c_int, 30267);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPEN = @as(c_int, 30268);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPEN_INPUTARGUMENTS = @as(c_int, 30269);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPEN_OUTPUTARGUMENTS = @as(c_int, 30270);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSE = @as(c_int, 30271);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSE_INPUTARGUMENTS = @as(c_int, 30272);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_READ = @as(c_int, 30273);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_READ_INPUTARGUMENTS = @as(c_int, 30274);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_READ_OUTPUTARGUMENTS = @as(c_int, 30275);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_WRITE = @as(c_int, 30276);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_WRITE_INPUTARGUMENTS = @as(c_int, 30277);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_GETPOSITION = @as(c_int, 30278);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_GETPOSITION_INPUTARGUMENTS = @as(c_int, 30279);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 30280);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_SETPOSITION = @as(c_int, 30281);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_SETPOSITION_INPUTARGUMENTS = @as(c_int, 30282);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_LASTUPDATETIME = @as(c_int, 30283);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_UPDATEFREQUENCY = @as(c_int, 30284);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_DEFAULTVALIDATIONOPTIONS = @as(c_int, 30285);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPENWITHMASKS = @as(c_int, 30286);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPENWITHMASKS_INPUTARGUMENTS = @as(c_int, 30287);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_OPENWITHMASKS_OUTPUTARGUMENTS = @as(c_int, 30288);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSEANDUPDATE = @as(c_int, 30289);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSEANDUPDATE_INPUTARGUMENTS = @as(c_int, 30290);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_CLOSEANDUPDATE_OUTPUTARGUMENTS = @as(c_int, 30291);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_ADDCERTIFICATE = @as(c_int, 30292);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_ADDCERTIFICATE_INPUTARGUMENTS = @as(c_int, 30293);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_REMOVECERTIFICATE = @as(c_int, 30294);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_REMOVECERTIFICATE_INPUTARGUMENTS = @as(c_int, 30295);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATETYPES = @as(c_int, 30296);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_GETREJECTEDLIST = @as(c_int, 30298);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_GETREJECTEDLIST_OUTPUTARGUMENTS = @as(c_int, 30299);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED = @as(c_int, 30300);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_EVENTID = @as(c_int, 30301);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_EVENTTYPE = @as(c_int, 30302);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SOURCENODE = @as(c_int, 30303);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SOURCENAME = @as(c_int, 30304);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_TIME = @as(c_int, 30305);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RECEIVETIME = @as(c_int, 30306);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LOCALTIME = @as(c_int, 30307);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_MESSAGE = @as(c_int, 30308);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SEVERITY = @as(c_int, 30309);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSID = @as(c_int, 30310);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSNAME = @as(c_int, 30311);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSID = @as(c_int, 30312);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSNAME = @as(c_int, 30313);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONDITIONNAME = @as(c_int, 30314);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_BRANCHID = @as(c_int, 30315);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RETAIN = @as(c_int, 30316);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE = @as(c_int, 30317);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_ID = @as(c_int, 30318);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NAME = @as(c_int, 30319);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NUMBER = @as(c_int, 30320);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30321);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 30322);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30323);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRUESTATE = @as(c_int, 30324);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_FALSESTATE = @as(c_int, 30325);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_QUALITY = @as(c_int, 30326);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_QUALITY_SOURCETIMESTAMP = @as(c_int, 30327);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LASTSEVERITY = @as(c_int, 30328);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 30329);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_COMMENT = @as(c_int, 30330);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_COMMENT_SOURCETIMESTAMP = @as(c_int, 30331);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CLIENTUSERID = @as(c_int, 30332);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_DISABLE = @as(c_int, 30333);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ENABLE = @as(c_int, 30334);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ADDCOMMENT = @as(c_int, 30335);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 30336);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE = @as(c_int, 30337);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_ID = @as(c_int, 30338);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NAME = @as(c_int, 30339);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NUMBER = @as(c_int, 30340);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30341);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 30342);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30343);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRUESTATE = @as(c_int, 30344);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_FALSESTATE = @as(c_int, 30345);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE = @as(c_int, 30346);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_ID = @as(c_int, 30347);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NAME = @as(c_int, 30348);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NUMBER = @as(c_int, 30349);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30350);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 30351);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30352);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 30353);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 30354);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE = @as(c_int, 30355);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 30356);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRM = @as(c_int, 30357);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CONFIRM_INPUTARGUMENTS = @as(c_int, 30358);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE = @as(c_int, 30359);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_ID = @as(c_int, 30360);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NAME = @as(c_int, 30361);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NUMBER = @as(c_int, 30362);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30363);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 30364);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30365);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRUESTATE = @as(c_int, 30366);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_FALSESTATE = @as(c_int, 30367);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_INPUTNODE = @as(c_int, 30368);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE = @as(c_int, 30369);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_ID = @as(c_int, 30370);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NAME = @as(c_int, 30371);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NUMBER = @as(c_int, 30372);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30373);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 30374);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30375);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 30376);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 30377);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE = @as(c_int, 30378);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_ID = @as(c_int, 30379);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NAME = @as(c_int, 30380);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NUMBER = @as(c_int, 30381);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30382);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 30383);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30384);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 30385);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 30386);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE = @as(c_int, 30387);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 30388);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 30389);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 30390);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 30391);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30392);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 30393);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 30394);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 30395);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 30396);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 30397);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 30398);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 30399);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 30400);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 30401);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 30402);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 30403);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 30404);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 30405);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE = @as(c_int, 30406);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 30407);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 30408);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 30409);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 30410);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 30411);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESSEDORSHELVED = @as(c_int, 30412);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_MAXTIMESHELVED = @as(c_int, 30413);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLEENABLED = @as(c_int, 30414);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND = @as(c_int, 30415);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_LISTID = @as(c_int, 30416);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_AGENCYID = @as(c_int, 30417);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_VERSIONID = @as(c_int, 30418);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE = @as(c_int, 30419);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_ID = @as(c_int, 30420);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NAME = @as(c_int, 30421);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NUMBER = @as(c_int, 30422);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30423);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRANSITIONTIME = @as(c_int, 30424);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30425);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRUESTATE = @as(c_int, 30426);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCESTATE_FALSESTATE = @as(c_int, 30427);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_ONDELAY = @as(c_int, 30428);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_OFFDELAY = @as(c_int, 30429);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_FIRSTINGROUPFLAG = @as(c_int, 30430);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_FIRSTINGROUP = @as(c_int, 30431);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE = @as(c_int, 30432);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_ID = @as(c_int, 30433);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NAME = @as(c_int, 30434);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NUMBER = @as(c_int, 30435);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30436);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 30437);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30438);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRUESTATE = @as(c_int, 30439);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_FALSESTATE = @as(c_int, 30440);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REALARMTIME = @as(c_int, 30441);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REALARMREPEATCOUNT = @as(c_int, 30442);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SILENCE = @as(c_int, 30443);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESS = @as(c_int, 30444);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESS2 = @as(c_int, 30445);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 30446);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_UNSUPPRESS = @as(c_int, 30447);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2 = @as(c_int, 30448);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 30449);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE = @as(c_int, 30450);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2 = @as(c_int, 30451);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 30452);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE = @as(c_int, 30453);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2 = @as(c_int, 30454);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 30455);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RESET = @as(c_int, 30456);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RESET2 = @as(c_int, 30457);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_RESET2_INPUTARGUMENTS = @as(c_int, 30458);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS = @as(c_int, 30459);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 30460);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_NORMALSTATE = @as(c_int, 30461);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_EXPIRATIONDATE = @as(c_int, 30462);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_EXPIRATIONLIMIT = @as(c_int, 30463);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CERTIFICATETYPE = @as(c_int, 30464);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_CERTIFICATEEXPIRED_CERTIFICATE = @as(c_int, 30465);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE = @as(c_int, 30466);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_EVENTID = @as(c_int, 30467);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_EVENTTYPE = @as(c_int, 30468);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SOURCENODE = @as(c_int, 30469);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SOURCENAME = @as(c_int, 30470);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_TIME = @as(c_int, 30471);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RECEIVETIME = @as(c_int, 30472);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LOCALTIME = @as(c_int, 30473);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_MESSAGE = @as(c_int, 30474);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SEVERITY = @as(c_int, 30475);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSID = @as(c_int, 30476);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSNAME = @as(c_int, 30477);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSID = @as(c_int, 30478);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSNAME = @as(c_int, 30479);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONDITIONNAME = @as(c_int, 30480);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_BRANCHID = @as(c_int, 30481);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RETAIN = @as(c_int, 30482);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE = @as(c_int, 30483);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_ID = @as(c_int, 30484);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NAME = @as(c_int, 30485);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NUMBER = @as(c_int, 30486);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30487);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 30488);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30489);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRUESTATE = @as(c_int, 30490);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_FALSESTATE = @as(c_int, 30491);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_QUALITY = @as(c_int, 30492);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_QUALITY_SOURCETIMESTAMP = @as(c_int, 30493);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY = @as(c_int, 30494);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 30495);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_COMMENT = @as(c_int, 30496);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_COMMENT_SOURCETIMESTAMP = @as(c_int, 30497);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CLIENTUSERID = @as(c_int, 30498);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_DISABLE = @as(c_int, 30499);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ENABLE = @as(c_int, 30500);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT = @as(c_int, 30501);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 30502);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE = @as(c_int, 30503);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_ID = @as(c_int, 30504);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NAME = @as(c_int, 30505);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NUMBER = @as(c_int, 30506);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30507);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 30508);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30509);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRUESTATE = @as(c_int, 30510);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_FALSESTATE = @as(c_int, 30511);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE = @as(c_int, 30512);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_ID = @as(c_int, 30513);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NAME = @as(c_int, 30514);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NUMBER = @as(c_int, 30515);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30516);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 30517);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30518);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 30519);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 30520);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE = @as(c_int, 30521);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 30522);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRM = @as(c_int, 30523);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_CONFIRM_INPUTARGUMENTS = @as(c_int, 30524);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE = @as(c_int, 30525);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_ID = @as(c_int, 30526);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NAME = @as(c_int, 30527);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NUMBER = @as(c_int, 30528);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30529);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 30530);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30531);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRUESTATE = @as(c_int, 30532);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_FALSESTATE = @as(c_int, 30533);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_INPUTNODE = @as(c_int, 30534);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE = @as(c_int, 30535);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_ID = @as(c_int, 30536);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NAME = @as(c_int, 30537);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 30538);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30539);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 30540);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30541);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 30542);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 30543);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE = @as(c_int, 30544);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_ID = @as(c_int, 30545);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NAME = @as(c_int, 30546);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 30547);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30548);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 30549);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30550);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 30551);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 30552);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE = @as(c_int, 30553);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 30554);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 30555);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 30556);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 30557);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30558);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 30559);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 30560);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 30561);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 30562);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 30563);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 30564);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 30565);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 30566);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 30567);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 30568);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 30569);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 30570);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 30571);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE = @as(c_int, 30572);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 30573);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 30574);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 30575);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 30576);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 30577);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDORSHELVED = @as(c_int, 30578);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_MAXTIMESHELVED = @as(c_int, 30579);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLEENABLED = @as(c_int, 30580);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND = @as(c_int, 30581);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_LISTID = @as(c_int, 30582);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_AGENCYID = @as(c_int, 30583);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_VERSIONID = @as(c_int, 30584);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE = @as(c_int, 30585);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_ID = @as(c_int, 30586);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NAME = @as(c_int, 30587);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NUMBER = @as(c_int, 30588);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30589);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 30590);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30591);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRUESTATE = @as(c_int, 30592);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_FALSESTATE = @as(c_int, 30593);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_ONDELAY = @as(c_int, 30594);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_OFFDELAY = @as(c_int, 30595);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUPFLAG = @as(c_int, 30596);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUP = @as(c_int, 30597);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE = @as(c_int, 30598);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_ID = @as(c_int, 30599);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NAME = @as(c_int, 30600);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NUMBER = @as(c_int, 30601);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30602);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 30603);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30604);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRUESTATE = @as(c_int, 30605);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_FALSESTATE = @as(c_int, 30606);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REALARMTIME = @as(c_int, 30607);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REALARMREPEATCOUNT = @as(c_int, 30608);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SILENCE = @as(c_int, 30609);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESS = @as(c_int, 30610);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2 = @as(c_int, 30611);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 30612);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS = @as(c_int, 30613);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2 = @as(c_int, 30614);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 30615);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE = @as(c_int, 30616);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2 = @as(c_int, 30617);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 30618);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE = @as(c_int, 30619);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2 = @as(c_int, 30620);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 30621);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RESET = @as(c_int, 30622);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RESET2 = @as(c_int, 30623);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_RESET2_INPUTARGUMENTS = @as(c_int, 30624);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS = @as(c_int, 30625);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 30626);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_NORMALSTATE = @as(c_int, 30627);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_TRUSTLISTID = @as(c_int, 30628);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_LASTUPDATETIME = @as(c_int, 30629);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLISTOUTOFDATE_UPDATEFREQUENCY = @as(c_int, 30630);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP = @as(c_int, 30631);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST = @as(c_int, 30632);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_SIZE = @as(c_int, 30633);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_WRITABLE = @as(c_int, 30634);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_USERWRITABLE = @as(c_int, 30635);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPENCOUNT = @as(c_int, 30636);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_MIMETYPE = @as(c_int, 30637);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_MAXBYTESTRINGLENGTH = @as(c_int, 30638);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_LASTMODIFIEDTIME = @as(c_int, 30639);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPEN = @as(c_int, 30640);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPEN_INPUTARGUMENTS = @as(c_int, 30641);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPEN_OUTPUTARGUMENTS = @as(c_int, 30642);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSE = @as(c_int, 30643);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSE_INPUTARGUMENTS = @as(c_int, 30644);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_READ = @as(c_int, 30645);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_READ_INPUTARGUMENTS = @as(c_int, 30646);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_READ_OUTPUTARGUMENTS = @as(c_int, 30647);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_WRITE = @as(c_int, 30648);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_WRITE_INPUTARGUMENTS = @as(c_int, 30649);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_GETPOSITION = @as(c_int, 30650);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_GETPOSITION_INPUTARGUMENTS = @as(c_int, 30651);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 30652);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_SETPOSITION = @as(c_int, 30653);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_SETPOSITION_INPUTARGUMENTS = @as(c_int, 30654);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_LASTUPDATETIME = @as(c_int, 30655);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_UPDATEFREQUENCY = @as(c_int, 30656);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_DEFAULTVALIDATIONOPTIONS = @as(c_int, 30657);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPENWITHMASKS = @as(c_int, 30658);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPENWITHMASKS_INPUTARGUMENTS = @as(c_int, 30659);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_OPENWITHMASKS_OUTPUTARGUMENTS = @as(c_int, 30660);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSEANDUPDATE = @as(c_int, 30661);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSEANDUPDATE_INPUTARGUMENTS = @as(c_int, 30662);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_CLOSEANDUPDATE_OUTPUTARGUMENTS = @as(c_int, 30663);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_ADDCERTIFICATE = @as(c_int, 30664);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_ADDCERTIFICATE_INPUTARGUMENTS = @as(c_int, 30665);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_REMOVECERTIFICATE = @as(c_int, 30666);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_REMOVECERTIFICATE_INPUTARGUMENTS = @as(c_int, 30667);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATETYPES = @as(c_int, 30668);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_GETREJECTEDLIST = @as(c_int, 30670);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_GETREJECTEDLIST_OUTPUTARGUMENTS = @as(c_int, 30671);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED = @as(c_int, 30672);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_EVENTID = @as(c_int, 30673);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_EVENTTYPE = @as(c_int, 30674);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SOURCENODE = @as(c_int, 30675);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SOURCENAME = @as(c_int, 30676);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_TIME = @as(c_int, 30677);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RECEIVETIME = @as(c_int, 30678);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LOCALTIME = @as(c_int, 30679);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_MESSAGE = @as(c_int, 30680);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SEVERITY = @as(c_int, 30681);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSID = @as(c_int, 30682);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONCLASSNAME = @as(c_int, 30683);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSID = @as(c_int, 30684);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONSUBCLASSNAME = @as(c_int, 30685);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONDITIONNAME = @as(c_int, 30686);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_BRANCHID = @as(c_int, 30687);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RETAIN = @as(c_int, 30688);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE = @as(c_int, 30689);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_ID = @as(c_int, 30690);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NAME = @as(c_int, 30691);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_NUMBER = @as(c_int, 30692);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30693);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 30694);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30695);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_TRUESTATE = @as(c_int, 30696);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLEDSTATE_FALSESTATE = @as(c_int, 30697);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_QUALITY = @as(c_int, 30698);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_QUALITY_SOURCETIMESTAMP = @as(c_int, 30699);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LASTSEVERITY = @as(c_int, 30700);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 30701);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_COMMENT = @as(c_int, 30702);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_COMMENT_SOURCETIMESTAMP = @as(c_int, 30703);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CLIENTUSERID = @as(c_int, 30704);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_DISABLE = @as(c_int, 30705);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ENABLE = @as(c_int, 30706);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ADDCOMMENT = @as(c_int, 30707);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 30708);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE = @as(c_int, 30709);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_ID = @as(c_int, 30710);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NAME = @as(c_int, 30711);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_NUMBER = @as(c_int, 30712);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30713);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 30714);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30715);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_TRUESTATE = @as(c_int, 30716);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKEDSTATE_FALSESTATE = @as(c_int, 30717);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE = @as(c_int, 30718);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_ID = @as(c_int, 30719);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NAME = @as(c_int, 30720);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_NUMBER = @as(c_int, 30721);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30722);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 30723);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30724);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 30725);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 30726);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE = @as(c_int, 30727);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 30728);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRM = @as(c_int, 30729);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CONFIRM_INPUTARGUMENTS = @as(c_int, 30730);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE = @as(c_int, 30731);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_ID = @as(c_int, 30732);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NAME = @as(c_int, 30733);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_NUMBER = @as(c_int, 30734);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30735);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 30736);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30737);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_TRUESTATE = @as(c_int, 30738);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ACTIVESTATE_FALSESTATE = @as(c_int, 30739);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_INPUTNODE = @as(c_int, 30740);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE = @as(c_int, 30741);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_ID = @as(c_int, 30742);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NAME = @as(c_int, 30743);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_NUMBER = @as(c_int, 30744);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30745);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 30746);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30747);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 30748);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 30749);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE = @as(c_int, 30750);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_ID = @as(c_int, 30751);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NAME = @as(c_int, 30752);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_NUMBER = @as(c_int, 30753);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30754);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 30755);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30756);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 30757);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 30758);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE = @as(c_int, 30759);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 30760);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 30761);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 30762);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 30763);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30764);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 30765);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 30766);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 30767);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 30768);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 30769);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 30770);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 30771);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 30772);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 30773);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 30774);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 30775);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 30776);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 30777);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE = @as(c_int, 30778);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 30779);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 30780);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 30781);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 30782);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 30783);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESSEDORSHELVED = @as(c_int, 30784);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_MAXTIMESHELVED = @as(c_int, 30785);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLEENABLED = @as(c_int, 30786);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND = @as(c_int, 30787);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_LISTID = @as(c_int, 30788);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_AGENCYID = @as(c_int, 30789);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_AUDIBLESOUND_VERSIONID = @as(c_int, 30790);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE = @as(c_int, 30791);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_ID = @as(c_int, 30792);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NAME = @as(c_int, 30793);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_NUMBER = @as(c_int, 30794);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30795);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRANSITIONTIME = @as(c_int, 30796);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30797);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_TRUESTATE = @as(c_int, 30798);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCESTATE_FALSESTATE = @as(c_int, 30799);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_ONDELAY = @as(c_int, 30800);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_OFFDELAY = @as(c_int, 30801);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_FIRSTINGROUPFLAG = @as(c_int, 30802);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_FIRSTINGROUP = @as(c_int, 30803);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE = @as(c_int, 30804);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_ID = @as(c_int, 30805);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NAME = @as(c_int, 30806);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_NUMBER = @as(c_int, 30807);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30808);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 30809);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30810);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_TRUESTATE = @as(c_int, 30811);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_LATCHEDSTATE_FALSESTATE = @as(c_int, 30812);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REALARMTIME = @as(c_int, 30813);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REALARMREPEATCOUNT = @as(c_int, 30814);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SILENCE = @as(c_int, 30815);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESS = @as(c_int, 30816);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESS2 = @as(c_int, 30817);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 30818);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_UNSUPPRESS = @as(c_int, 30819);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2 = @as(c_int, 30820);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 30821);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE = @as(c_int, 30822);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2 = @as(c_int, 30823);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 30824);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE = @as(c_int, 30825);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2 = @as(c_int, 30826);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 30827);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RESET = @as(c_int, 30828);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RESET2 = @as(c_int, 30829);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_RESET2_INPUTARGUMENTS = @as(c_int, 30830);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS = @as(c_int, 30831);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 30832);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_NORMALSTATE = @as(c_int, 30833);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_EXPIRATIONDATE = @as(c_int, 30834);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_EXPIRATIONLIMIT = @as(c_int, 30835);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CERTIFICATETYPE = @as(c_int, 30836);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_CERTIFICATEEXPIRED_CERTIFICATE = @as(c_int, 30837);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE = @as(c_int, 30838);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_EVENTID = @as(c_int, 30839);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_EVENTTYPE = @as(c_int, 30840);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SOURCENODE = @as(c_int, 30841);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SOURCENAME = @as(c_int, 30842);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_TIME = @as(c_int, 30843);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RECEIVETIME = @as(c_int, 30844);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LOCALTIME = @as(c_int, 30845);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_MESSAGE = @as(c_int, 30846);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SEVERITY = @as(c_int, 30847);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSID = @as(c_int, 30848);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONCLASSNAME = @as(c_int, 30849);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSID = @as(c_int, 30850);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONSUBCLASSNAME = @as(c_int, 30851);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONDITIONNAME = @as(c_int, 30852);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_BRANCHID = @as(c_int, 30853);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RETAIN = @as(c_int, 30854);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE = @as(c_int, 30855);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_ID = @as(c_int, 30856);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NAME = @as(c_int, 30857);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_NUMBER = @as(c_int, 30858);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30859);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 30860);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30861);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_TRUESTATE = @as(c_int, 30862);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLEDSTATE_FALSESTATE = @as(c_int, 30863);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_QUALITY = @as(c_int, 30864);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_QUALITY_SOURCETIMESTAMP = @as(c_int, 30865);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY = @as(c_int, 30866);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 30867);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_COMMENT = @as(c_int, 30868);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_COMMENT_SOURCETIMESTAMP = @as(c_int, 30869);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CLIENTUSERID = @as(c_int, 30870);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_DISABLE = @as(c_int, 30871);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ENABLE = @as(c_int, 30872);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT = @as(c_int, 30873);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 30874);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE = @as(c_int, 30875);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_ID = @as(c_int, 30876);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NAME = @as(c_int, 30877);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_NUMBER = @as(c_int, 30878);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30879);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 30880);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30881);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_TRUESTATE = @as(c_int, 30882);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKEDSTATE_FALSESTATE = @as(c_int, 30883);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE = @as(c_int, 30884);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_ID = @as(c_int, 30885);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NAME = @as(c_int, 30886);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_NUMBER = @as(c_int, 30887);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30888);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 30889);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30890);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 30891);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 30892);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE = @as(c_int, 30893);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 30894);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRM = @as(c_int, 30895);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_CONFIRM_INPUTARGUMENTS = @as(c_int, 30896);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE = @as(c_int, 30897);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_ID = @as(c_int, 30898);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NAME = @as(c_int, 30899);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_NUMBER = @as(c_int, 30900);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30901);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 30902);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30903);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_TRUESTATE = @as(c_int, 30904);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ACTIVESTATE_FALSESTATE = @as(c_int, 30905);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_INPUTNODE = @as(c_int, 30906);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE = @as(c_int, 30907);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_ID = @as(c_int, 30908);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NAME = @as(c_int, 30909);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_NUMBER = @as(c_int, 30910);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30911);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 30912);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30913);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 30914);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 30915);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE = @as(c_int, 30916);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_ID = @as(c_int, 30917);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NAME = @as(c_int, 30918);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_NUMBER = @as(c_int, 30919);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30920);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 30921);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30922);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 30923);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 30924);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE = @as(c_int, 30925);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 30926);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 30927);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 30928);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 30929);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30930);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 30931);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 30932);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 30933);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 30934);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 30935);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 30936);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 30937);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 30938);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 30939);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 30940);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 30941);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 30942);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 30943);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE = @as(c_int, 30944);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 30945);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 30946);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 30947);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 30948);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 30949);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESSEDORSHELVED = @as(c_int, 30950);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_MAXTIMESHELVED = @as(c_int, 30951);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLEENABLED = @as(c_int, 30952);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND = @as(c_int, 30953);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_LISTID = @as(c_int, 30954);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_AGENCYID = @as(c_int, 30955);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_AUDIBLESOUND_VERSIONID = @as(c_int, 30956);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE = @as(c_int, 30957);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_ID = @as(c_int, 30958);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NAME = @as(c_int, 30959);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_NUMBER = @as(c_int, 30960);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30961);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRANSITIONTIME = @as(c_int, 30962);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30963);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_TRUESTATE = @as(c_int, 30964);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCESTATE_FALSESTATE = @as(c_int, 30965);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_ONDELAY = @as(c_int, 30966);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_OFFDELAY = @as(c_int, 30967);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUPFLAG = @as(c_int, 30968);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_FIRSTINGROUP = @as(c_int, 30969);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE = @as(c_int, 30970);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_ID = @as(c_int, 30971);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NAME = @as(c_int, 30972);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_NUMBER = @as(c_int, 30973);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 30974);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 30975);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 30976);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_TRUESTATE = @as(c_int, 30977);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LATCHEDSTATE_FALSESTATE = @as(c_int, 30978);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REALARMTIME = @as(c_int, 30979);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REALARMREPEATCOUNT = @as(c_int, 30980);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SILENCE = @as(c_int, 30981);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESS = @as(c_int, 30982);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2 = @as(c_int, 30983);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 30984);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS = @as(c_int, 30985);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2 = @as(c_int, 30986);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 30987);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE = @as(c_int, 30988);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2 = @as(c_int, 30989);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 30990);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE = @as(c_int, 30991);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2 = @as(c_int, 30992);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 30993);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RESET = @as(c_int, 30994);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RESET2 = @as(c_int, 30995);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_RESET2_INPUTARGUMENTS = @as(c_int, 30996);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS = @as(c_int, 30997);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 30998);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_NORMALSTATE = @as(c_int, 30999);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_TRUSTLISTID = @as(c_int, 31000);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_LASTUPDATETIME = @as(c_int, 31001);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLISTOUTOFDATE_UPDATEFREQUENCY = @as(c_int, 31002);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_ENABLED = @as(c_int, 31375);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_APPLICATIONURI = @as(c_int, 31376);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_PRODUCTURI = @as(c_int, 31377);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_APPLICATIONTYPE = @as(c_int, 31378);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_SERVERCAPABILITIES = @as(c_int, 31379);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_SUPPORTEDPRIVATEKEYFORMATS = @as(c_int, 31380);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_MAXTRUSTLISTSIZE = @as(c_int, 31381);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_MULTICASTDNSENABLED = @as(c_int, 31382);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_HASSECUREELEMENT = @as(c_int, 31383);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_UPDATECERTIFICATE = @as(c_int, 31384);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_UPDATECERTIFICATE_INPUTARGUMENTS = @as(c_int, 31385);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_UPDATECERTIFICATE_OUTPUTARGUMENTS = @as(c_int, 31386);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_APPLYCHANGES = @as(c_int, 31387);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CANCELCHANGES = @as(c_int, 31388);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CREATESIGNINGREQUEST = @as(c_int, 31389);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CREATESIGNINGREQUEST_INPUTARGUMENTS = @as(c_int, 31390);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CREATESIGNINGREQUEST_OUTPUTARGUMENTS = @as(c_int, 31391);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_GETREJECTEDLIST = @as(c_int, 31392);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_GETREJECTEDLIST_OUTPUTARGUMENTS = @as(c_int, 31393);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_RESETTOSERVERDEFAULTS = @as(c_int, 31394);
pub const UA_NS0ID_SERVERTYPE_SERVERCAPABILITIES_MAXMONITOREDITEMSQUEUESIZE = @as(c_int, 31769);
pub const UA_NS0ID_SERVERCAPABILITIESTYPE_MAXMONITOREDITEMSQUEUESIZE = @as(c_int, 31770);
pub const UA_NS0ID_BASEEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31771);
pub const UA_NS0ID_BASEEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31772);
pub const UA_NS0ID_BASEEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31773);
pub const UA_NS0ID_BASEEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31774);
pub const UA_NS0ID_AUDITEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31775);
pub const UA_NS0ID_AUDITEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31776);
pub const UA_NS0ID_AUDITEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31777);
pub const UA_NS0ID_AUDITEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31778);
pub const UA_NS0ID_AUDITSECURITYEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31779);
pub const UA_NS0ID_AUDITSECURITYEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31780);
pub const UA_NS0ID_AUDITSECURITYEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31781);
pub const UA_NS0ID_AUDITSECURITYEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31782);
pub const UA_NS0ID_AUDITCHANNELEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31783);
pub const UA_NS0ID_AUDITCHANNELEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31784);
pub const UA_NS0ID_AUDITCHANNELEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31785);
pub const UA_NS0ID_AUDITCHANNELEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31786);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31787);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31788);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31789);
pub const UA_NS0ID_AUDITOPENSECURECHANNELEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31790);
pub const UA_NS0ID_AUDITSESSIONEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31791);
pub const UA_NS0ID_AUDITSESSIONEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31792);
pub const UA_NS0ID_AUDITSESSIONEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31793);
pub const UA_NS0ID_AUDITSESSIONEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31794);
pub const UA_NS0ID_AUDITCREATESESSIONEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31795);
pub const UA_NS0ID_AUDITCREATESESSIONEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31796);
pub const UA_NS0ID_AUDITCREATESESSIONEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31797);
pub const UA_NS0ID_AUDITCREATESESSIONEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31798);
pub const UA_NS0ID_AUDITURLMISMATCHEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31799);
pub const UA_NS0ID_AUDITURLMISMATCHEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31800);
pub const UA_NS0ID_AUDITURLMISMATCHEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31801);
pub const UA_NS0ID_AUDITURLMISMATCHEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31802);
pub const UA_NS0ID_AUDITACTIVATESESSIONEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31803);
pub const UA_NS0ID_AUDITACTIVATESESSIONEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31804);
pub const UA_NS0ID_AUDITACTIVATESESSIONEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31805);
pub const UA_NS0ID_AUDITACTIVATESESSIONEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31806);
pub const UA_NS0ID_AUDITCANCELEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31807);
pub const UA_NS0ID_AUDITCANCELEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31808);
pub const UA_NS0ID_AUDITCANCELEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31809);
pub const UA_NS0ID_AUDITCANCELEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31810);
pub const UA_NS0ID_AUDITCERTIFICATEEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31811);
pub const UA_NS0ID_AUDITCERTIFICATEEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31812);
pub const UA_NS0ID_AUDITCERTIFICATEEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31813);
pub const UA_NS0ID_AUDITCERTIFICATEEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31814);
pub const UA_NS0ID_AUDITCERTIFICATEDATAMISMATCHEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31815);
pub const UA_NS0ID_AUDITCERTIFICATEDATAMISMATCHEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31816);
pub const UA_NS0ID_AUDITCERTIFICATEDATAMISMATCHEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31817);
pub const UA_NS0ID_AUDITCERTIFICATEDATAMISMATCHEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31818);
pub const UA_NS0ID_AUDITCERTIFICATEEXPIREDEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31819);
pub const UA_NS0ID_AUDITCERTIFICATEEXPIREDEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31820);
pub const UA_NS0ID_AUDITCERTIFICATEEXPIREDEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31821);
pub const UA_NS0ID_AUDITCERTIFICATEEXPIREDEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31822);
pub const UA_NS0ID_AUDITCERTIFICATEINVALIDEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31823);
pub const UA_NS0ID_AUDITCERTIFICATEINVALIDEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31824);
pub const UA_NS0ID_AUDITCERTIFICATEINVALIDEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31825);
pub const UA_NS0ID_AUDITCERTIFICATEINVALIDEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31826);
pub const UA_NS0ID_AUDITCERTIFICATEUNTRUSTEDEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31827);
pub const UA_NS0ID_AUDITCERTIFICATEUNTRUSTEDEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31828);
pub const UA_NS0ID_AUDITCERTIFICATEUNTRUSTEDEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31829);
pub const UA_NS0ID_AUDITCERTIFICATEUNTRUSTEDEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31830);
pub const UA_NS0ID_AUDITCERTIFICATEREVOKEDEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31831);
pub const UA_NS0ID_AUDITCERTIFICATEREVOKEDEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31832);
pub const UA_NS0ID_AUDITCERTIFICATEREVOKEDEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31833);
pub const UA_NS0ID_AUDITCERTIFICATEREVOKEDEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31834);
pub const UA_NS0ID_AUDITCERTIFICATEMISMATCHEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31835);
pub const UA_NS0ID_AUDITCERTIFICATEMISMATCHEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31836);
pub const UA_NS0ID_AUDITCERTIFICATEMISMATCHEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31837);
pub const UA_NS0ID_AUDITCERTIFICATEMISMATCHEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31838);
pub const UA_NS0ID_AUDITNODEMANAGEMENTEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31839);
pub const UA_NS0ID_AUDITNODEMANAGEMENTEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31840);
pub const UA_NS0ID_AUDITNODEMANAGEMENTEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31841);
pub const UA_NS0ID_AUDITNODEMANAGEMENTEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31842);
pub const UA_NS0ID_AUDITADDNODESEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31843);
pub const UA_NS0ID_AUDITADDNODESEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31844);
pub const UA_NS0ID_AUDITADDNODESEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31845);
pub const UA_NS0ID_AUDITADDNODESEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31846);
pub const UA_NS0ID_AUDITDELETENODESEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31847);
pub const UA_NS0ID_AUDITDELETENODESEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31848);
pub const UA_NS0ID_AUDITDELETENODESEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31849);
pub const UA_NS0ID_AUDITDELETENODESEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31850);
pub const UA_NS0ID_AUDITADDREFERENCESEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31851);
pub const UA_NS0ID_AUDITADDREFERENCESEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31852);
pub const UA_NS0ID_AUDITADDREFERENCESEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31853);
pub const UA_NS0ID_AUDITADDREFERENCESEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31854);
pub const UA_NS0ID_AUDITDELETEREFERENCESEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31855);
pub const UA_NS0ID_AUDITDELETEREFERENCESEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31856);
pub const UA_NS0ID_AUDITDELETEREFERENCESEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31857);
pub const UA_NS0ID_AUDITDELETEREFERENCESEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31858);
pub const UA_NS0ID_AUDITUPDATEEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31859);
pub const UA_NS0ID_AUDITUPDATEEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31860);
pub const UA_NS0ID_AUDITUPDATEEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31861);
pub const UA_NS0ID_AUDITUPDATEEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31862);
pub const UA_NS0ID_AUDITWRITEUPDATEEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31863);
pub const UA_NS0ID_AUDITWRITEUPDATEEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31864);
pub const UA_NS0ID_AUDITWRITEUPDATEEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31865);
pub const UA_NS0ID_AUDITWRITEUPDATEEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31866);
pub const UA_NS0ID_AUDITHISTORYUPDATEEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31867);
pub const UA_NS0ID_AUDITHISTORYUPDATEEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31868);
pub const UA_NS0ID_AUDITHISTORYUPDATEEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31869);
pub const UA_NS0ID_AUDITHISTORYUPDATEEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31870);
pub const UA_NS0ID_AUDITUPDATEMETHODEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31871);
pub const UA_NS0ID_AUDITUPDATEMETHODEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31872);
pub const UA_NS0ID_AUDITUPDATEMETHODEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31873);
pub const UA_NS0ID_AUDITUPDATEMETHODEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31874);
pub const UA_NS0ID_SYSTEMEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31875);
pub const UA_NS0ID_SYSTEMEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31876);
pub const UA_NS0ID_SYSTEMEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31877);
pub const UA_NS0ID_SYSTEMEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31878);
pub const UA_NS0ID_DEVICEFAILUREEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31879);
pub const UA_NS0ID_DEVICEFAILUREEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31880);
pub const UA_NS0ID_DEVICEFAILUREEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31881);
pub const UA_NS0ID_DEVICEFAILUREEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31882);
pub const UA_NS0ID_SYSTEMSTATUSCHANGEEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31883);
pub const UA_NS0ID_SYSTEMSTATUSCHANGEEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31884);
pub const UA_NS0ID_SYSTEMSTATUSCHANGEEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31885);
pub const UA_NS0ID_SYSTEMSTATUSCHANGEEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31886);
pub const UA_NS0ID_BASEMODELCHANGEEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31887);
pub const UA_NS0ID_BASEMODELCHANGEEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31888);
pub const UA_NS0ID_BASEMODELCHANGEEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31889);
pub const UA_NS0ID_BASEMODELCHANGEEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31890);
pub const UA_NS0ID_GENERALMODELCHANGEEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31891);
pub const UA_NS0ID_GENERALMODELCHANGEEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31892);
pub const UA_NS0ID_GENERALMODELCHANGEEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31893);
pub const UA_NS0ID_GENERALMODELCHANGEEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31894);
pub const UA_NS0ID_SEMANTICCHANGEEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31895);
pub const UA_NS0ID_SEMANTICCHANGEEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31896);
pub const UA_NS0ID_SEMANTICCHANGEEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31897);
pub const UA_NS0ID_SEMANTICCHANGEEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31898);
pub const UA_NS0ID_EVENTQUEUEOVERFLOWEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31899);
pub const UA_NS0ID_EVENTQUEUEOVERFLOWEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31900);
pub const UA_NS0ID_EVENTQUEUEOVERFLOWEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31901);
pub const UA_NS0ID_EVENTQUEUEOVERFLOWEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31902);
pub const UA_NS0ID_PROGRESSEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31903);
pub const UA_NS0ID_PROGRESSEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31904);
pub const UA_NS0ID_PROGRESSEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31905);
pub const UA_NS0ID_PROGRESSEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31906);
pub const UA_NS0ID_AUDITCLIENTEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31907);
pub const UA_NS0ID_AUDITCLIENTEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31908);
pub const UA_NS0ID_AUDITCLIENTEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31909);
pub const UA_NS0ID_AUDITCLIENTEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31910);
pub const UA_NS0ID_AUDITCLIENTUPDATEMETHODRESULTEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31911);
pub const UA_NS0ID_AUDITCLIENTUPDATEMETHODRESULTEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31912);
pub const UA_NS0ID_AUDITCLIENTUPDATEMETHODRESULTEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31913);
pub const UA_NS0ID_AUDITCLIENTUPDATEMETHODRESULTEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31914);
pub const UA_NS0ID_LOCATIONS = @as(c_int, 31915);
pub const UA_NS0ID_SERVER_SERVERCAPABILITIES_MAXMONITOREDITEMSQUEUESIZE = @as(c_int, 31916);
pub const UA_NS0ID_HANDLE = @as(c_int, 31917);
pub const UA_NS0ID_TRIMMEDSTRING = @as(c_int, 31918);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31919);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31920);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31921);
pub const UA_NS0ID_TRANSITIONEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31922);
pub const UA_NS0ID_AUDITUPDATESTATEEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31923);
pub const UA_NS0ID_AUDITUPDATESTATEEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31924);
pub const UA_NS0ID_AUDITUPDATESTATEEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31925);
pub const UA_NS0ID_AUDITUPDATESTATEEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31926);
pub const UA_NS0ID_ROLEMAPPINGRULECHANGEDAUDITEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31927);
pub const UA_NS0ID_ROLEMAPPINGRULECHANGEDAUDITEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31928);
pub const UA_NS0ID_ROLEMAPPINGRULECHANGEDAUDITEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31929);
pub const UA_NS0ID_ROLEMAPPINGRULECHANGEDAUDITEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31930);
pub const UA_NS0ID_AUDITCONDITIONEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31931);
pub const UA_NS0ID_AUDITCONDITIONEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31932);
pub const UA_NS0ID_AUDITCONDITIONEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31933);
pub const UA_NS0ID_AUDITCONDITIONEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31934);
pub const UA_NS0ID_AUDITCONDITIONENABLEEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31935);
pub const UA_NS0ID_AUDITCONDITIONENABLEEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31936);
pub const UA_NS0ID_AUDITCONDITIONENABLEEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31937);
pub const UA_NS0ID_AUDITCONDITIONENABLEEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31938);
pub const UA_NS0ID_AUDITCONDITIONCOMMENTEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31939);
pub const UA_NS0ID_AUDITCONDITIONCOMMENTEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31940);
pub const UA_NS0ID_AUDITCONDITIONCOMMENTEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31941);
pub const UA_NS0ID_AUDITCONDITIONCOMMENTEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31942);
pub const UA_NS0ID_AUDITCONDITIONRESPONDEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31943);
pub const UA_NS0ID_AUDITCONDITIONRESPONDEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31944);
pub const UA_NS0ID_AUDITCONDITIONRESPONDEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31945);
pub const UA_NS0ID_AUDITCONDITIONRESPONDEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31946);
pub const UA_NS0ID_AUDITCONDITIONACKNOWLEDGEEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31947);
pub const UA_NS0ID_AUDITCONDITIONACKNOWLEDGEEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31948);
pub const UA_NS0ID_AUDITCONDITIONACKNOWLEDGEEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31949);
pub const UA_NS0ID_AUDITCONDITIONACKNOWLEDGEEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31950);
pub const UA_NS0ID_AUDITCONDITIONCONFIRMEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31951);
pub const UA_NS0ID_AUDITCONDITIONCONFIRMEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31952);
pub const UA_NS0ID_AUDITCONDITIONCONFIRMEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31953);
pub const UA_NS0ID_AUDITCONDITIONCONFIRMEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31954);
pub const UA_NS0ID_AUDITCONDITIONSHELVINGEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31955);
pub const UA_NS0ID_AUDITCONDITIONSHELVINGEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31956);
pub const UA_NS0ID_AUDITCONDITIONSHELVINGEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31957);
pub const UA_NS0ID_AUDITCONDITIONSHELVINGEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31958);
pub const UA_NS0ID_AUDITCONDITIONSUPPRESSIONEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31959);
pub const UA_NS0ID_AUDITCONDITIONSUPPRESSIONEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31960);
pub const UA_NS0ID_AUDITCONDITIONSUPPRESSIONEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31961);
pub const UA_NS0ID_AUDITCONDITIONSUPPRESSIONEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31962);
pub const UA_NS0ID_AUDITCONDITIONSILENCEEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31963);
pub const UA_NS0ID_AUDITCONDITIONSILENCEEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31964);
pub const UA_NS0ID_AUDITCONDITIONSILENCEEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31965);
pub const UA_NS0ID_AUDITCONDITIONSILENCEEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31966);
pub const UA_NS0ID_AUDITCONDITIONRESETEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31967);
pub const UA_NS0ID_AUDITCONDITIONRESETEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31968);
pub const UA_NS0ID_AUDITCONDITIONRESETEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31969);
pub const UA_NS0ID_AUDITCONDITIONRESETEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31970);
pub const UA_NS0ID_AUDITCONDITIONOUTOFSERVICEEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31971);
pub const UA_NS0ID_AUDITCONDITIONOUTOFSERVICEEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31972);
pub const UA_NS0ID_AUDITCONDITIONOUTOFSERVICEEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31973);
pub const UA_NS0ID_AUDITCONDITIONOUTOFSERVICEEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31974);
pub const UA_NS0ID_REFRESHSTARTEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31975);
pub const UA_NS0ID_REFRESHSTARTEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31976);
pub const UA_NS0ID_REFRESHSTARTEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31977);
pub const UA_NS0ID_REFRESHSTARTEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31978);
pub const UA_NS0ID_REFRESHENDEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31979);
pub const UA_NS0ID_REFRESHENDEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31980);
pub const UA_NS0ID_REFRESHENDEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31981);
pub const UA_NS0ID_REFRESHENDEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31982);
pub const UA_NS0ID_REFRESHREQUIREDEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31983);
pub const UA_NS0ID_REFRESHREQUIREDEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31984);
pub const UA_NS0ID_REFRESHREQUIREDEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31985);
pub const UA_NS0ID_REFRESHREQUIREDEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31986);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31987);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31988);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31989);
pub const UA_NS0ID_PROGRAMTRANSITIONEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31990);
pub const UA_NS0ID_AUDITPROGRAMTRANSITIONEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31991);
pub const UA_NS0ID_AUDITPROGRAMTRANSITIONEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31992);
pub const UA_NS0ID_AUDITPROGRAMTRANSITIONEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31993);
pub const UA_NS0ID_AUDITPROGRAMTRANSITIONEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31994);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31995);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 31996);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 31997);
pub const UA_NS0ID_PROGRAMTRANSITIONAUDITEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 31998);
pub const UA_NS0ID_AUDITHISTORYEVENTUPDATEEVENTTYPE_CONDITIONCLASSID = @as(c_int, 31999);
pub const UA_NS0ID_AUDITHISTORYEVENTUPDATEEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 32000);
pub const UA_NS0ID_AUDITHISTORYEVENTUPDATEEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 32001);
pub const UA_NS0ID_AUDITHISTORYEVENTUPDATEEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 32002);
pub const UA_NS0ID_AUDITHISTORYVALUEUPDATEEVENTTYPE_CONDITIONCLASSID = @as(c_int, 32003);
pub const UA_NS0ID_AUDITHISTORYVALUEUPDATEEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 32004);
pub const UA_NS0ID_AUDITHISTORYVALUEUPDATEEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 32005);
pub const UA_NS0ID_AUDITHISTORYVALUEUPDATEEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 32006);
pub const UA_NS0ID_AUDITHISTORYANNOTATIONUPDATEEVENTTYPE_CONDITIONCLASSID = @as(c_int, 32007);
pub const UA_NS0ID_AUDITHISTORYANNOTATIONUPDATEEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 32008);
pub const UA_NS0ID_AUDITHISTORYANNOTATIONUPDATEEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 32009);
pub const UA_NS0ID_AUDITHISTORYANNOTATIONUPDATEEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 32010);
pub const UA_NS0ID_AUDITHISTORYDELETEEVENTTYPE_CONDITIONCLASSID = @as(c_int, 32011);
pub const UA_NS0ID_AUDITHISTORYDELETEEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 32012);
pub const UA_NS0ID_AUDITHISTORYDELETEEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 32013);
pub const UA_NS0ID_AUDITHISTORYDELETEEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 32014);
pub const UA_NS0ID_AUDITHISTORYRAWMODIFYDELETEEVENTTYPE_CONDITIONCLASSID = @as(c_int, 32015);
pub const UA_NS0ID_AUDITHISTORYRAWMODIFYDELETEEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 32016);
pub const UA_NS0ID_AUDITHISTORYRAWMODIFYDELETEEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 32017);
pub const UA_NS0ID_AUDITHISTORYRAWMODIFYDELETEEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 32018);
pub const UA_NS0ID_AUDITHISTORYATTIMEDELETEEVENTTYPE_CONDITIONCLASSID = @as(c_int, 32019);
pub const UA_NS0ID_AUDITHISTORYATTIMEDELETEEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 32020);
pub const UA_NS0ID_AUDITHISTORYATTIMEDELETEEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 32021);
pub const UA_NS0ID_AUDITHISTORYATTIMEDELETEEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 32022);
pub const UA_NS0ID_AUDITHISTORYEVENTDELETEEVENTTYPE_CONDITIONCLASSID = @as(c_int, 32023);
pub const UA_NS0ID_AUDITHISTORYEVENTDELETEEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 32024);
pub const UA_NS0ID_AUDITHISTORYEVENTDELETEEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 32025);
pub const UA_NS0ID_AUDITHISTORYEVENTDELETEEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 32026);
pub const UA_NS0ID_TRUSTLISTUPDATEDAUDITEVENTTYPE_CONDITIONCLASSID = @as(c_int, 32027);
pub const UA_NS0ID_TRUSTLISTUPDATEDAUDITEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 32028);
pub const UA_NS0ID_TRUSTLISTUPDATEDAUDITEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 32029);
pub const UA_NS0ID_TRUSTLISTUPDATEDAUDITEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 32030);
pub const UA_NS0ID_CERTIFICATEUPDATEDAUDITEVENTTYPE_CONDITIONCLASSID = @as(c_int, 32031);
pub const UA_NS0ID_CERTIFICATEUPDATEDAUDITEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 32032);
pub const UA_NS0ID_CERTIFICATEUPDATEDAUDITEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 32033);
pub const UA_NS0ID_CERTIFICATEUPDATEDAUDITEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 32034);
pub const UA_NS0ID_KEYCREDENTIALAUDITEVENTTYPE_CONDITIONCLASSID = @as(c_int, 32035);
pub const UA_NS0ID_KEYCREDENTIALAUDITEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 32036);
pub const UA_NS0ID_KEYCREDENTIALAUDITEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 32037);
pub const UA_NS0ID_KEYCREDENTIALAUDITEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 32038);
pub const UA_NS0ID_KEYCREDENTIALUPDATEDAUDITEVENTTYPE_CONDITIONCLASSID = @as(c_int, 32039);
pub const UA_NS0ID_KEYCREDENTIALUPDATEDAUDITEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 32040);
pub const UA_NS0ID_KEYCREDENTIALUPDATEDAUDITEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 32041);
pub const UA_NS0ID_KEYCREDENTIALUPDATEDAUDITEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 32042);
pub const UA_NS0ID_KEYCREDENTIALDELETEDAUDITEVENTTYPE_CONDITIONCLASSID = @as(c_int, 32043);
pub const UA_NS0ID_KEYCREDENTIALDELETEDAUDITEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 32044);
pub const UA_NS0ID_KEYCREDENTIALDELETEDAUDITEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 32045);
pub const UA_NS0ID_KEYCREDENTIALDELETEDAUDITEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 32046);
pub const UA_NS0ID_PUBSUBSTATUSEVENTTYPE_CONDITIONCLASSID = @as(c_int, 32047);
pub const UA_NS0ID_PUBSUBSTATUSEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 32048);
pub const UA_NS0ID_PUBSUBSTATUSEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 32049);
pub const UA_NS0ID_PUBSUBSTATUSEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 32050);
pub const UA_NS0ID_PUBSUBTRANSPORTLIMITSEXCEEDEVENTTYPE_CONDITIONCLASSID = @as(c_int, 32051);
pub const UA_NS0ID_PUBSUBTRANSPORTLIMITSEXCEEDEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 32052);
pub const UA_NS0ID_PUBSUBTRANSPORTLIMITSEXCEEDEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 32053);
pub const UA_NS0ID_PUBSUBTRANSPORTLIMITSEXCEEDEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 32054);
pub const UA_NS0ID_PUBSUBCOMMUNICATIONFAILUREEVENTTYPE_CONDITIONCLASSID = @as(c_int, 32055);
pub const UA_NS0ID_PUBSUBCOMMUNICATIONFAILUREEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 32056);
pub const UA_NS0ID_PUBSUBCOMMUNICATIONFAILUREEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 32057);
pub const UA_NS0ID_PUBSUBCOMMUNICATIONFAILUREEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 32058);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPMEMBER = @as(c_int, 32059);
pub const UA_NS0ID_CONDITIONTYPE_SUPPORTSFILTEREDRETAIN = @as(c_int, 32060);
pub const UA_NS0ID_DIALOGCONDITIONTYPE_SUPPORTSFILTEREDRETAIN = @as(c_int, 32061);
pub const UA_NS0ID_ACKNOWLEDGEABLECONDITIONTYPE_SUPPORTSFILTEREDRETAIN = @as(c_int, 32062);
pub const UA_NS0ID_ALARMCONDITIONTYPE_SUPPORTSFILTEREDRETAIN = @as(c_int, 32063);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE = @as(c_int, 32064);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER = @as(c_int, 32065);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_EVENTID = @as(c_int, 32066);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_EVENTTYPE = @as(c_int, 32067);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SOURCENODE = @as(c_int, 32068);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SOURCENAME = @as(c_int, 32069);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_TIME = @as(c_int, 32070);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_RECEIVETIME = @as(c_int, 32071);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_LOCALTIME = @as(c_int, 32072);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_MESSAGE = @as(c_int, 32073);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SEVERITY = @as(c_int, 32074);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONDITIONCLASSID = @as(c_int, 32075);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONDITIONCLASSNAME = @as(c_int, 32076);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONDITIONSUBCLASSID = @as(c_int, 32077);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONDITIONSUBCLASSNAME = @as(c_int, 32078);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONDITIONNAME = @as(c_int, 32079);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_BRANCHID = @as(c_int, 32080);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_RETAIN = @as(c_int, 32081);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ENABLEDSTATE = @as(c_int, 32082);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ENABLEDSTATE_ID = @as(c_int, 32083);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ENABLEDSTATE_NAME = @as(c_int, 32084);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ENABLEDSTATE_NUMBER = @as(c_int, 32085);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ENABLEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 32086);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ENABLEDSTATE_TRANSITIONTIME = @as(c_int, 32087);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ENABLEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 32088);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ENABLEDSTATE_TRUESTATE = @as(c_int, 32089);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ENABLEDSTATE_FALSESTATE = @as(c_int, 32090);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_QUALITY = @as(c_int, 32091);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_QUALITY_SOURCETIMESTAMP = @as(c_int, 32092);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_LASTSEVERITY = @as(c_int, 32093);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_LASTSEVERITY_SOURCETIMESTAMP = @as(c_int, 32094);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_COMMENT = @as(c_int, 32095);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_COMMENT_SOURCETIMESTAMP = @as(c_int, 32096);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CLIENTUSERID = @as(c_int, 32097);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_DISABLE = @as(c_int, 32098);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ENABLE = @as(c_int, 32099);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ADDCOMMENT = @as(c_int, 32100);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ADDCOMMENT_INPUTARGUMENTS = @as(c_int, 32101);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACKEDSTATE = @as(c_int, 32102);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACKEDSTATE_ID = @as(c_int, 32103);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACKEDSTATE_NAME = @as(c_int, 32104);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACKEDSTATE_NUMBER = @as(c_int, 32105);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACKEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 32106);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACKEDSTATE_TRANSITIONTIME = @as(c_int, 32107);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACKEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 32108);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACKEDSTATE_TRUESTATE = @as(c_int, 32109);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACKEDSTATE_FALSESTATE = @as(c_int, 32110);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONFIRMEDSTATE = @as(c_int, 32111);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONFIRMEDSTATE_ID = @as(c_int, 32112);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONFIRMEDSTATE_NAME = @as(c_int, 32113);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONFIRMEDSTATE_NUMBER = @as(c_int, 32114);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONFIRMEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 32115);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONFIRMEDSTATE_TRANSITIONTIME = @as(c_int, 32116);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONFIRMEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 32117);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONFIRMEDSTATE_TRUESTATE = @as(c_int, 32118);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONFIRMEDSTATE_FALSESTATE = @as(c_int, 32119);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACKNOWLEDGE = @as(c_int, 32120);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACKNOWLEDGE_INPUTARGUMENTS = @as(c_int, 32121);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONFIRM = @as(c_int, 32122);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_CONFIRM_INPUTARGUMENTS = @as(c_int, 32123);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACTIVESTATE = @as(c_int, 32124);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACTIVESTATE_ID = @as(c_int, 32125);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACTIVESTATE_NAME = @as(c_int, 32126);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACTIVESTATE_NUMBER = @as(c_int, 32127);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACTIVESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 32128);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACTIVESTATE_TRANSITIONTIME = @as(c_int, 32129);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACTIVESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 32130);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACTIVESTATE_TRUESTATE = @as(c_int, 32131);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ACTIVESTATE_FALSESTATE = @as(c_int, 32132);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_INPUTNODE = @as(c_int, 32133);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SUPPRESSEDSTATE = @as(c_int, 32134);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SUPPRESSEDSTATE_ID = @as(c_int, 32135);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SUPPRESSEDSTATE_NAME = @as(c_int, 32136);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SUPPRESSEDSTATE_NUMBER = @as(c_int, 32137);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SUPPRESSEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 32138);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SUPPRESSEDSTATE_TRANSITIONTIME = @as(c_int, 32139);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SUPPRESSEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 32140);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SUPPRESSEDSTATE_TRUESTATE = @as(c_int, 32141);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SUPPRESSEDSTATE_FALSESTATE = @as(c_int, 32142);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_OUTOFSERVICESTATE = @as(c_int, 32143);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_OUTOFSERVICESTATE_ID = @as(c_int, 32144);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_OUTOFSERVICESTATE_NAME = @as(c_int, 32145);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_OUTOFSERVICESTATE_NUMBER = @as(c_int, 32146);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_OUTOFSERVICESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 32147);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_OUTOFSERVICESTATE_TRANSITIONTIME = @as(c_int, 32148);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_OUTOFSERVICESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 32149);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_OUTOFSERVICESTATE_TRUESTATE = @as(c_int, 32150);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_OUTOFSERVICESTATE_FALSESTATE = @as(c_int, 32151);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE = @as(c_int, 32152);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_CURRENTSTATE = @as(c_int, 32153);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_CURRENTSTATE_ID = @as(c_int, 32154);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_CURRENTSTATE_NAME = @as(c_int, 32155);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_CURRENTSTATE_NUMBER = @as(c_int, 32156);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_CURRENTSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 32157);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_LASTTRANSITION = @as(c_int, 32158);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_LASTTRANSITION_ID = @as(c_int, 32159);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_LASTTRANSITION_NAME = @as(c_int, 32160);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_LASTTRANSITION_NUMBER = @as(c_int, 32161);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_LASTTRANSITION_TRANSITIONTIME = @as(c_int, 32162);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_LASTTRANSITION_EFFECTIVETRANSITIONTIME = @as(c_int, 32163);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_AVAILABLESTATES = @as(c_int, 32164);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_AVAILABLETRANSITIONS = @as(c_int, 32165);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_UNSHELVETIME = @as(c_int, 32166);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_TIMEDSHELVE = @as(c_int, 32167);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_TIMEDSHELVE_INPUTARGUMENTS = @as(c_int, 32168);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_TIMEDSHELVE2 = @as(c_int, 32169);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_TIMEDSHELVE2_INPUTARGUMENTS = @as(c_int, 32170);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_UNSHELVE = @as(c_int, 32171);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_UNSHELVE2 = @as(c_int, 32172);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_UNSHELVE2_INPUTARGUMENTS = @as(c_int, 32173);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_ONESHOTSHELVE = @as(c_int, 32174);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_ONESHOTSHELVE2 = @as(c_int, 32175);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SHELVINGSTATE_ONESHOTSHELVE2_INPUTARGUMENTS = @as(c_int, 32176);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SUPPRESSEDORSHELVED = @as(c_int, 32177);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_MAXTIMESHELVED = @as(c_int, 32178);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_AUDIBLEENABLED = @as(c_int, 32179);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_AUDIBLESOUND = @as(c_int, 32180);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_AUDIBLESOUND_LISTID = @as(c_int, 32181);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_AUDIBLESOUND_AGENCYID = @as(c_int, 32182);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_AUDIBLESOUND_VERSIONID = @as(c_int, 32183);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SILENCESTATE = @as(c_int, 32184);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SILENCESTATE_ID = @as(c_int, 32185);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SILENCESTATE_NAME = @as(c_int, 32186);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SILENCESTATE_NUMBER = @as(c_int, 32187);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SILENCESTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 32188);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SILENCESTATE_TRANSITIONTIME = @as(c_int, 32189);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SILENCESTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 32190);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SILENCESTATE_TRUESTATE = @as(c_int, 32191);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SILENCESTATE_FALSESTATE = @as(c_int, 32192);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_ONDELAY = @as(c_int, 32193);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_OFFDELAY = @as(c_int, 32194);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_FIRSTINGROUPFLAG = @as(c_int, 32195);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_FIRSTINGROUP = @as(c_int, 32196);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_LATCHEDSTATE = @as(c_int, 32197);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_LATCHEDSTATE_ID = @as(c_int, 32198);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_LATCHEDSTATE_NAME = @as(c_int, 32199);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_LATCHEDSTATE_NUMBER = @as(c_int, 32200);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_LATCHEDSTATE_EFFECTIVEDISPLAYNAME = @as(c_int, 32201);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_LATCHEDSTATE_TRANSITIONTIME = @as(c_int, 32202);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_LATCHEDSTATE_EFFECTIVETRANSITIONTIME = @as(c_int, 32203);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_LATCHEDSTATE_TRUESTATE = @as(c_int, 32204);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_LATCHEDSTATE_FALSESTATE = @as(c_int, 32205);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_REALARMTIME = @as(c_int, 32206);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_REALARMREPEATCOUNT = @as(c_int, 32207);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SILENCE = @as(c_int, 32208);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SUPPRESS = @as(c_int, 32209);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SUPPRESS2 = @as(c_int, 32210);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_SUPPRESS2_INPUTARGUMENTS = @as(c_int, 32211);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_UNSUPPRESS = @as(c_int, 32212);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_UNSUPPRESS2 = @as(c_int, 32213);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_UNSUPPRESS2_INPUTARGUMENTS = @as(c_int, 32214);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_REMOVEFROMSERVICE = @as(c_int, 32215);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_REMOVEFROMSERVICE2 = @as(c_int, 32216);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_REMOVEFROMSERVICE2_INPUTARGUMENTS = @as(c_int, 32217);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_PLACEINSERVICE = @as(c_int, 32218);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_PLACEINSERVICE2 = @as(c_int, 32219);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_PLACEINSERVICE2_INPUTARGUMENTS = @as(c_int, 32220);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_RESET = @as(c_int, 32221);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_RESET2 = @as(c_int, 32222);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_RESET2_INPUTARGUMENTS = @as(c_int, 32223);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_GETGROUPMEMBERSHIPS = @as(c_int, 32224);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_ALARMCONDITIONINSTANCE_PLACEHOLDER_GETGROUPMEMBERSHIPS_OUTPUTARGUMENTS = @as(c_int, 32225);
pub const UA_NS0ID_ALARMSUPPRESSIONGROUPTYPE_DIGITALVARIABLE_PLACEHOLDER = @as(c_int, 32226);
pub const UA_NS0ID_LIMITALARMTYPE_SUPPORTSFILTEREDRETAIN = @as(c_int, 32227);
pub const UA_NS0ID_EXCLUSIVELIMITALARMTYPE_SUPPORTSFILTEREDRETAIN = @as(c_int, 32228);
pub const UA_NS0ID_NONEXCLUSIVELIMITALARMTYPE_SUPPORTSFILTEREDRETAIN = @as(c_int, 32229);
pub const UA_NS0ID_NONEXCLUSIVELEVELALARMTYPE_SUPPORTSFILTEREDRETAIN = @as(c_int, 32230);
pub const UA_NS0ID_EXCLUSIVELEVELALARMTYPE_SUPPORTSFILTEREDRETAIN = @as(c_int, 32231);
pub const UA_NS0ID_NONEXCLUSIVEDEVIATIONALARMTYPE_SUPPORTSFILTEREDRETAIN = @as(c_int, 32232);
pub const UA_NS0ID_NONEXCLUSIVERATEOFCHANGEALARMTYPE_SUPPORTSFILTEREDRETAIN = @as(c_int, 32233);
pub const UA_NS0ID_EXCLUSIVEDEVIATIONALARMTYPE_SUPPORTSFILTEREDRETAIN = @as(c_int, 32234);
pub const UA_NS0ID_EXCLUSIVERATEOFCHANGEALARMTYPE_SUPPORTSFILTEREDRETAIN = @as(c_int, 32235);
pub const UA_NS0ID_DISCRETEALARMTYPE_SUPPORTSFILTEREDRETAIN = @as(c_int, 32236);
pub const UA_NS0ID_OFFNORMALALARMTYPE_SUPPORTSFILTEREDRETAIN = @as(c_int, 32237);
pub const UA_NS0ID_SYSTEMOFFNORMALALARMTYPE_SUPPORTSFILTEREDRETAIN = @as(c_int, 32238);
pub const UA_NS0ID_TRIPALARMTYPE_SUPPORTSFILTEREDRETAIN = @as(c_int, 32239);
pub const UA_NS0ID_INSTRUMENTDIAGNOSTICALARMTYPE_SUPPORTSFILTEREDRETAIN = @as(c_int, 32240);
pub const UA_NS0ID_SYSTEMDIAGNOSTICALARMTYPE_SUPPORTSFILTEREDRETAIN = @as(c_int, 32241);
pub const UA_NS0ID_CERTIFICATEEXPIRATIONALARMTYPE_SUPPORTSFILTEREDRETAIN = @as(c_int, 32242);
pub const UA_NS0ID_DISCREPANCYALARMTYPE_SUPPORTSFILTEREDRETAIN = @as(c_int, 32243);
pub const UA_NS0ID_ALARMSTATEVARIABLETYPE = @as(c_int, 32244);
pub const UA_NS0ID_ALARMSTATEVARIABLETYPE_HIGHESTACTIVESEVERITY = @as(c_int, 32245);
pub const UA_NS0ID_ALARMSTATEVARIABLETYPE_HIGHESTUNACKSEVERITY = @as(c_int, 32246);
pub const UA_NS0ID_ALARMSTATEVARIABLETYPE_ACTIVECOUNT = @as(c_int, 32247);
pub const UA_NS0ID_ALARMSTATEVARIABLETYPE_UNACKNOWLEDGEDCOUNT = @as(c_int, 32248);
pub const UA_NS0ID_ALARMSTATEVARIABLETYPE_UNCONFIRMEDCOUNT = @as(c_int, 32249);
pub const UA_NS0ID_ALARMSTATEVARIABLETYPE_FILTER = @as(c_int, 32250);
pub const UA_NS0ID_ALARMMASK = @as(c_int, 32251);
pub const UA_NS0ID_ALARMMASK_OPTIONSETVALUES = @as(c_int, 32252);
pub const UA_NS0ID_TRUSTLISTOUTOFDATEALARMTYPE_SUPPORTSFILTEREDRETAIN = @as(c_int, 32253);
pub const UA_NS0ID_TRUSTLISTTYPE_ACTIVITYTIMEOUT = @as(c_int, 32254);
pub const UA_NS0ID_CERTIFICATEGROUPTYPE_TRUSTLIST_ACTIVITYTIMEOUT = @as(c_int, 32255);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTAPPLICATIONGROUP_TRUSTLIST_ACTIVITYTIMEOUT = @as(c_int, 32256);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTHTTPSGROUP_TRUSTLIST_ACTIVITYTIMEOUT = @as(c_int, 32257);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_DEFAULTUSERTOKENGROUP_TRUSTLIST_ACTIVITYTIMEOUT = @as(c_int, 32258);
pub const UA_NS0ID_CERTIFICATEGROUPFOLDERTYPE_ADDITIONALGROUP_PLACEHOLDER_TRUSTLIST_ACTIVITYTIMEOUT = @as(c_int, 32259);
pub const UA_NS0ID_TRUSTLISTUPDATEREQUESTEDAUDITEVENTTYPE = @as(c_int, 32260);
pub const UA_NS0ID_TRUSTLISTUPDATEREQUESTEDAUDITEVENTTYPE_EVENTID = @as(c_int, 32261);
pub const UA_NS0ID_TRUSTLISTUPDATEREQUESTEDAUDITEVENTTYPE_EVENTTYPE = @as(c_int, 32262);
pub const UA_NS0ID_TRUSTLISTUPDATEREQUESTEDAUDITEVENTTYPE_SOURCENODE = @as(c_int, 32263);
pub const UA_NS0ID_TRUSTLISTUPDATEREQUESTEDAUDITEVENTTYPE_SOURCENAME = @as(c_int, 32264);
pub const UA_NS0ID_TRUSTLISTUPDATEREQUESTEDAUDITEVENTTYPE_TIME = @as(c_int, 32265);
pub const UA_NS0ID_TRUSTLISTUPDATEREQUESTEDAUDITEVENTTYPE_RECEIVETIME = @as(c_int, 32266);
pub const UA_NS0ID_TRUSTLISTUPDATEREQUESTEDAUDITEVENTTYPE_LOCALTIME = @as(c_int, 32267);
pub const UA_NS0ID_TRUSTLISTUPDATEREQUESTEDAUDITEVENTTYPE_MESSAGE = @as(c_int, 32268);
pub const UA_NS0ID_TRUSTLISTUPDATEREQUESTEDAUDITEVENTTYPE_SEVERITY = @as(c_int, 32269);
pub const UA_NS0ID_TRUSTLISTUPDATEREQUESTEDAUDITEVENTTYPE_CONDITIONCLASSID = @as(c_int, 32270);
pub const UA_NS0ID_TRUSTLISTUPDATEREQUESTEDAUDITEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 32271);
pub const UA_NS0ID_TRUSTLISTUPDATEREQUESTEDAUDITEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 32272);
pub const UA_NS0ID_TRUSTLISTUPDATEREQUESTEDAUDITEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 32273);
pub const UA_NS0ID_TRUSTLISTUPDATEREQUESTEDAUDITEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 32274);
pub const UA_NS0ID_TRUSTLISTUPDATEREQUESTEDAUDITEVENTTYPE_STATUS = @as(c_int, 32275);
pub const UA_NS0ID_TRUSTLISTUPDATEREQUESTEDAUDITEVENTTYPE_SERVERID = @as(c_int, 32276);
pub const UA_NS0ID_TRUSTLISTUPDATEREQUESTEDAUDITEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 32277);
pub const UA_NS0ID_TRUSTLISTUPDATEREQUESTEDAUDITEVENTTYPE_CLIENTUSERID = @as(c_int, 32278);
pub const UA_NS0ID_TRUSTLISTUPDATEREQUESTEDAUDITEVENTTYPE_METHODID = @as(c_int, 32279);
pub const UA_NS0ID_TRUSTLISTUPDATEREQUESTEDAUDITEVENTTYPE_INPUTARGUMENTS = @as(c_int, 32280);
pub const UA_NS0ID_TRUSTLISTUPDATEDAUDITEVENTTYPE_TRUSTLISTID = @as(c_int, 32281);
pub const UA_NS0ID_GETCERTIFICATESMETHODTYPE = @as(c_int, 32282);
pub const UA_NS0ID_GETCERTIFICATESMETHODTYPE_INPUTARGUMENTS = @as(c_int, 32283);
pub const UA_NS0ID_GETCERTIFICATESMETHODTYPE_OUTPUTARGUMENTS = @as(c_int, 32284);
pub const UA_NS0ID_TRANSACTIONERRORTYPE = @as(c_int, 32285);
pub const UA_NS0ID_TRANSACTIONDIAGNOSTICSTYPE = @as(c_int, 32286);
pub const UA_NS0ID_TRANSACTIONDIAGNOSTICSTYPE_STARTTIME = @as(c_int, 32287);
pub const UA_NS0ID_TRANSACTIONDIAGNOSTICSTYPE_ENDTIME = @as(c_int, 32288);
pub const UA_NS0ID_TRANSACTIONDIAGNOSTICSTYPE_RESULT = @as(c_int, 32289);
pub const UA_NS0ID_TRANSACTIONDIAGNOSTICSTYPE_AFFECTEDTRUSTLISTS = @as(c_int, 32290);
pub const UA_NS0ID_TRANSACTIONDIAGNOSTICSTYPE_AFFECTEDCERTIFICATEGROUPS = @as(c_int, 32291);
pub const UA_NS0ID_TRANSACTIONDIAGNOSTICSTYPE_ERRORS = @as(c_int, 32292);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_ACTIVITYTIMEOUT = @as(c_int, 32293);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_ACTIVITYTIMEOUT = @as(c_int, 32294);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_ACTIVITYTIMEOUT = @as(c_int, 32295);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_GETCERTIFICATES = @as(c_int, 32296);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_GETCERTIFICATES_INPUTARGUMENTS = @as(c_int, 32297);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_GETCERTIFICATES_OUTPUTARGUMENTS = @as(c_int, 32298);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_TRANSACTIONDIAGNOSTICS = @as(c_int, 32299);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_TRANSACTIONDIAGNOSTICS_STARTTIME = @as(c_int, 32300);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_TRANSACTIONDIAGNOSTICS_ENDTIME = @as(c_int, 32301);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_TRANSACTIONDIAGNOSTICS_RESULT = @as(c_int, 32302);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_TRANSACTIONDIAGNOSTICS_AFFECTEDTRUSTLISTS = @as(c_int, 32303);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_TRANSACTIONDIAGNOSTICS_AFFECTEDCERTIFICATEGROUPS = @as(c_int, 32304);
pub const UA_NS0ID_SERVERCONFIGURATIONTYPE_TRANSACTIONDIAGNOSTICS_ERRORS = @as(c_int, 32305);
pub const UA_NS0ID_CERTIFICATEUPDATEREQUESTEDAUDITEVENTTYPE = @as(c_int, 32306);
pub const UA_NS0ID_CERTIFICATEUPDATEREQUESTEDAUDITEVENTTYPE_EVENTID = @as(c_int, 32307);
pub const UA_NS0ID_CERTIFICATEUPDATEREQUESTEDAUDITEVENTTYPE_EVENTTYPE = @as(c_int, 32308);
pub const UA_NS0ID_CERTIFICATEUPDATEREQUESTEDAUDITEVENTTYPE_SOURCENODE = @as(c_int, 32309);
pub const UA_NS0ID_CERTIFICATEUPDATEREQUESTEDAUDITEVENTTYPE_SOURCENAME = @as(c_int, 32310);
pub const UA_NS0ID_CERTIFICATEUPDATEREQUESTEDAUDITEVENTTYPE_TIME = @as(c_int, 32311);
pub const UA_NS0ID_CERTIFICATEUPDATEREQUESTEDAUDITEVENTTYPE_RECEIVETIME = @as(c_int, 32312);
pub const UA_NS0ID_CERTIFICATEUPDATEREQUESTEDAUDITEVENTTYPE_LOCALTIME = @as(c_int, 32313);
pub const UA_NS0ID_CERTIFICATEUPDATEREQUESTEDAUDITEVENTTYPE_MESSAGE = @as(c_int, 32314);
pub const UA_NS0ID_CERTIFICATEUPDATEREQUESTEDAUDITEVENTTYPE_SEVERITY = @as(c_int, 32315);
pub const UA_NS0ID_CERTIFICATEUPDATEREQUESTEDAUDITEVENTTYPE_CONDITIONCLASSID = @as(c_int, 32316);
pub const UA_NS0ID_CERTIFICATEUPDATEREQUESTEDAUDITEVENTTYPE_CONDITIONCLASSNAME = @as(c_int, 32317);
pub const UA_NS0ID_CERTIFICATEUPDATEREQUESTEDAUDITEVENTTYPE_CONDITIONSUBCLASSID = @as(c_int, 32318);
pub const UA_NS0ID_CERTIFICATEUPDATEREQUESTEDAUDITEVENTTYPE_CONDITIONSUBCLASSNAME = @as(c_int, 32319);
pub const UA_NS0ID_CERTIFICATEUPDATEREQUESTEDAUDITEVENTTYPE_ACTIONTIMESTAMP = @as(c_int, 32320);
pub const UA_NS0ID_CERTIFICATEUPDATEREQUESTEDAUDITEVENTTYPE_STATUS = @as(c_int, 32321);
pub const UA_NS0ID_CERTIFICATEUPDATEREQUESTEDAUDITEVENTTYPE_SERVERID = @as(c_int, 32322);
pub const UA_NS0ID_CERTIFICATEUPDATEREQUESTEDAUDITEVENTTYPE_CLIENTAUDITENTRYID = @as(c_int, 32323);
pub const UA_NS0ID_CERTIFICATEUPDATEREQUESTEDAUDITEVENTTYPE_CLIENTUSERID = @as(c_int, 32324);
pub const UA_NS0ID_CERTIFICATEUPDATEREQUESTEDAUDITEVENTTYPE_METHODID = @as(c_int, 32325);
pub const UA_NS0ID_CERTIFICATEUPDATEREQUESTEDAUDITEVENTTYPE_INPUTARGUMENTS = @as(c_int, 32326);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_ACTIVITYTIMEOUT = @as(c_int, 32330);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_ACTIVITYTIMEOUT = @as(c_int, 32331);
pub const UA_NS0ID_SERVERCONFIGURATION_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_ACTIVITYTIMEOUT = @as(c_int, 32332);
pub const UA_NS0ID_SERVERCONFIGURATION_GETCERTIFICATES = @as(c_int, 32333);
pub const UA_NS0ID_SERVERCONFIGURATION_GETCERTIFICATES_INPUTARGUMENTS = @as(c_int, 32334);
pub const UA_NS0ID_SERVERCONFIGURATION_GETCERTIFICATES_OUTPUTARGUMENTS = @as(c_int, 32335);
pub const UA_NS0ID_SERVERCONFIGURATION_TRANSACTIONDIAGNOSTICS = @as(c_int, 32336);
pub const UA_NS0ID_SERVERCONFIGURATION_TRANSACTIONDIAGNOSTICS_STARTTIME = @as(c_int, 32337);
pub const UA_NS0ID_SERVERCONFIGURATION_TRANSACTIONDIAGNOSTICS_ENDTIME = @as(c_int, 32338);
pub const UA_NS0ID_SERVERCONFIGURATION_TRANSACTIONDIAGNOSTICS_RESULT = @as(c_int, 32339);
pub const UA_NS0ID_SERVERCONFIGURATION_TRANSACTIONDIAGNOSTICS_AFFECTEDTRUSTLISTS = @as(c_int, 32340);
pub const UA_NS0ID_SERVERCONFIGURATION_TRANSACTIONDIAGNOSTICS_AFFECTEDCERTIFICATEGROUPS = @as(c_int, 32341);
pub const UA_NS0ID_SERVERCONFIGURATION_TRANSACTIONDIAGNOSTICS_ERRORS = @as(c_int, 32342);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_ACTIVITYTIMEOUT = @as(c_int, 32343);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_ACTIVITYTIMEOUT = @as(c_int, 32344);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_ACTIVITYTIMEOUT = @as(c_int, 32345);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_GETCERTIFICATES = @as(c_int, 32346);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_GETCERTIFICATES_INPUTARGUMENTS = @as(c_int, 32347);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_GETCERTIFICATES_OUTPUTARGUMENTS = @as(c_int, 32348);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_TRANSACTIONDIAGNOSTICS = @as(c_int, 32349);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_TRANSACTIONDIAGNOSTICS_STARTTIME = @as(c_int, 32350);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_TRANSACTIONDIAGNOSTICS_ENDTIME = @as(c_int, 32351);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_TRANSACTIONDIAGNOSTICS_RESULT = @as(c_int, 32352);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_TRANSACTIONDIAGNOSTICS_AFFECTEDTRUSTLISTS = @as(c_int, 32353);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_TRANSACTIONDIAGNOSTICS_AFFECTEDCERTIFICATEGROUPS = @as(c_int, 32354);
pub const UA_NS0ID_APPLICATIONCONFIGURATIONTYPE_TRANSACTIONDIAGNOSTICS_ERRORS = @as(c_int, 32355);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_ACTIVITYTIMEOUT = @as(c_int, 32356);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_ACTIVITYTIMEOUT = @as(c_int, 32357);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_ACTIVITYTIMEOUT = @as(c_int, 32358);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_GETCERTIFICATES = @as(c_int, 32359);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_GETCERTIFICATES_INPUTARGUMENTS = @as(c_int, 32360);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_GETCERTIFICATES_OUTPUTARGUMENTS = @as(c_int, 32361);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_TRANSACTIONDIAGNOSTICS = @as(c_int, 32362);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_TRANSACTIONDIAGNOSTICS_STARTTIME = @as(c_int, 32363);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_TRANSACTIONDIAGNOSTICS_ENDTIME = @as(c_int, 32364);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_TRANSACTIONDIAGNOSTICS_RESULT = @as(c_int, 32365);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_TRANSACTIONDIAGNOSTICS_AFFECTEDTRUSTLISTS = @as(c_int, 32366);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_TRANSACTIONDIAGNOSTICS_AFFECTEDCERTIFICATEGROUPS = @as(c_int, 32367);
pub const UA_NS0ID_PROVISIONABLEDEVICETYPE_APPLICATIONNAME_PLACEHOLDER_TRANSACTIONDIAGNOSTICS_ERRORS = @as(c_int, 32368);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTAPPLICATIONGROUP_TRUSTLIST_ACTIVITYTIMEOUT = @as(c_int, 32369);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTHTTPSGROUP_TRUSTLIST_ACTIVITYTIMEOUT = @as(c_int, 32370);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_CERTIFICATEGROUPS_DEFAULTUSERTOKENGROUP_TRUSTLIST_ACTIVITYTIMEOUT = @as(c_int, 32371);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_GETCERTIFICATES = @as(c_int, 32372);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_GETCERTIFICATES_INPUTARGUMENTS = @as(c_int, 32373);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_GETCERTIFICATES_OUTPUTARGUMENTS = @as(c_int, 32374);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_TRANSACTIONDIAGNOSTICS = @as(c_int, 32375);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_TRANSACTIONDIAGNOSTICS_STARTTIME = @as(c_int, 32376);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_TRANSACTIONDIAGNOSTICS_ENDTIME = @as(c_int, 32377);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_TRANSACTIONDIAGNOSTICS_RESULT = @as(c_int, 32378);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_TRANSACTIONDIAGNOSTICS_AFFECTEDTRUSTLISTS = @as(c_int, 32379);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_TRANSACTIONDIAGNOSTICS_AFFECTEDCERTIFICATEGROUPS = @as(c_int, 32380);
pub const UA_NS0ID_PROVISIONABLEDEVICE_APPLICATIONNAME_PLACEHOLDER_TRANSACTIONDIAGNOSTICS_ERRORS = @as(c_int, 32381);
pub const UA_NS0ID_TRANSACTIONERRORTYPE_ENCODING_DEFAULTBINARY = @as(c_int, 32382);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_TRANSACTIONERRORTYPE = @as(c_int, 32383);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_TRANSACTIONERRORTYPE_DATATYPEVERSION = @as(c_int, 32384);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_TRANSACTIONERRORTYPE_DICTIONARYFRAGMENT = @as(c_int, 32385);
pub const UA_NS0ID_TRANSACTIONERRORTYPE_ENCODING_DEFAULTXML = @as(c_int, 32386);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_TRANSACTIONERRORTYPE = @as(c_int, 32387);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_TRANSACTIONERRORTYPE_DATATYPEVERSION = @as(c_int, 32388);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_TRANSACTIONERRORTYPE_DICTIONARYFRAGMENT = @as(c_int, 32389);
pub const UA_NS0ID_TRANSACTIONERRORTYPE_ENCODING_DEFAULTJSON = @as(c_int, 32390);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCAPABLITIES_MAXDATASETWRITERSPERGROUP = @as(c_int, 32391);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCAPABLITIES_MAXNETWORKMESSAGESIZEDATAGRAM = @as(c_int, 32392);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCAPABLITIES_MAXNETWORKMESSAGESIZEBROKER = @as(c_int, 32393);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCAPABLITIES_SUPPORTSECURITYKEYPULL = @as(c_int, 32394);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_PUBSUBCAPABLITIES_SUPPORTSECURITYKEYPUSH = @as(c_int, 32395);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_DEFAULTSECURITYKEYSERVICES = @as(c_int, 32396);
pub const UA_NS0ID_PUBLISHSUBSCRIBETYPE_CONFIGURATIONPROPERTIES = @as(c_int, 32397);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCAPABLITIES_MAXDATASETWRITERSPERGROUP = @as(c_int, 32398);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCAPABLITIES_MAXNETWORKMESSAGESIZEDATAGRAM = @as(c_int, 32399);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCAPABLITIES_MAXNETWORKMESSAGESIZEBROKER = @as(c_int, 32400);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCAPABLITIES_SUPPORTSECURITYKEYPULL = @as(c_int, 32401);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_PUBSUBCAPABLITIES_SUPPORTSECURITYKEYPUSH = @as(c_int, 32402);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_DEFAULTSECURITYKEYSERVICES = @as(c_int, 32403);
pub const UA_NS0ID_PUBLISHSUBSCRIBE_CONFIGURATIONPROPERTIES = @as(c_int, 32404);
pub const UA_NS0ID_DATASETCLASSES = @as(c_int, 32405);
pub const UA_NS0ID_DATASETCLASSES_GETSECURITYKEYS = @as(c_int, 32406);
pub const UA_NS0ID_DATASETCLASSES_GETSECURITYKEYS_INPUTARGUMENTS = @as(c_int, 32407);
pub const UA_NS0ID_DATASETCLASSES_GETSECURITYKEYS_OUTPUTARGUMENTS = @as(c_int, 32408);
pub const UA_NS0ID_DATASETCLASSES_GETSECURITYGROUP = @as(c_int, 32409);
pub const UA_NS0ID_DATASETCLASSES_GETSECURITYGROUP_INPUTARGUMENTS = @as(c_int, 32410);
pub const UA_NS0ID_DATASETCLASSES_GETSECURITYGROUP_OUTPUTARGUMENTS = @as(c_int, 32411);
pub const UA_NS0ID_DATASETCLASSES_SECURITYGROUPS = @as(c_int, 32412);
pub const UA_NS0ID_DATASETCLASSES_SECURITYGROUPS_ADDSECURITYGROUP = @as(c_int, 32413);
pub const UA_NS0ID_DATASETCLASSES_SECURITYGROUPS_ADDSECURITYGROUP_INPUTARGUMENTS = @as(c_int, 32414);
pub const UA_NS0ID_DATASETCLASSES_SECURITYGROUPS_ADDSECURITYGROUP_OUTPUTARGUMENTS = @as(c_int, 32415);
pub const UA_NS0ID_DATASETCLASSES_SECURITYGROUPS_REMOVESECURITYGROUP = @as(c_int, 32416);
pub const UA_NS0ID_DATASETCLASSES_SECURITYGROUPS_REMOVESECURITYGROUP_INPUTARGUMENTS = @as(c_int, 32417);
pub const UA_NS0ID_DATASETCLASSES_SECURITYGROUPS_ADDSECURITYGROUPFOLDER = @as(c_int, 32418);
pub const UA_NS0ID_DATASETCLASSES_SECURITYGROUPS_ADDSECURITYGROUPFOLDER_INPUTARGUMENTS = @as(c_int, 32419);
pub const UA_NS0ID_DATASETCLASSES_SECURITYGROUPS_ADDSECURITYGROUPFOLDER_OUTPUTARGUMENTS = @as(c_int, 32420);
pub const UA_NS0ID_DATASETCLASSES_SECURITYGROUPS_REMOVESECURITYGROUPFOLDER = @as(c_int, 32421);
pub const UA_NS0ID_DATASETCLASSES_SECURITYGROUPS_REMOVESECURITYGROUPFOLDER_INPUTARGUMENTS = @as(c_int, 32422);
pub const UA_NS0ID_DATASETCLASSES_SECURITYGROUPS_SUPPORTEDSECURITYPOLICYURIS = @as(c_int, 32423);
pub const UA_NS0ID_DATASETCLASSES_KEYPUSHTARGETS = @as(c_int, 32424);
pub const UA_NS0ID_DATASETCLASSES_KEYPUSHTARGETS_ADDPUSHTARGET = @as(c_int, 32425);
pub const UA_NS0ID_DATASETCLASSES_KEYPUSHTARGETS_ADDPUSHTARGET_INPUTARGUMENTS = @as(c_int, 32426);
pub const UA_NS0ID_DATASETCLASSES_KEYPUSHTARGETS_ADDPUSHTARGET_OUTPUTARGUMENTS = @as(c_int, 32427);
pub const UA_NS0ID_DATASETCLASSES_KEYPUSHTARGETS_REMOVEPUSHTARGET = @as(c_int, 32428);
pub const UA_NS0ID_DATASETCLASSES_KEYPUSHTARGETS_REMOVEPUSHTARGET_INPUTARGUMENTS = @as(c_int, 32429);
pub const UA_NS0ID_DATASETCLASSES_KEYPUSHTARGETS_ADDPUSHTARGETFOLDER = @as(c_int, 32430);
pub const UA_NS0ID_DATASETCLASSES_KEYPUSHTARGETS_ADDPUSHTARGETFOLDER_INPUTARGUMENTS = @as(c_int, 32431);
pub const UA_NS0ID_DATASETCLASSES_KEYPUSHTARGETS_ADDPUSHTARGETFOLDER_OUTPUTARGUMENTS = @as(c_int, 32432);
pub const UA_NS0ID_DATASETCLASSES_KEYPUSHTARGETS_REMOVEPUSHTARGETFOLDER = @as(c_int, 32433);
pub const UA_NS0ID_DATASETCLASSES_KEYPUSHTARGETS_REMOVEPUSHTARGETFOLDER_INPUTARGUMENTS = @as(c_int, 32434);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER = @as(c_int, 32435);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_PUBLISHERID = @as(c_int, 32436);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_TRANSPORTPROFILEURI = @as(c_int, 32437);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_TRANSPORTPROFILEURI_SELECTIONS = @as(c_int, 32438);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_TRANSPORTPROFILEURI_SELECTIONDESCRIPTIONS = @as(c_int, 32439);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_TRANSPORTPROFILEURI_RESTRICTTOLIST = @as(c_int, 32440);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_CONNECTIONPROPERTIES = @as(c_int, 32441);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_ADDRESS = @as(c_int, 32442);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_ADDRESS_NETWORKINTERFACE = @as(c_int, 32443);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_ADDRESS_NETWORKINTERFACE_SELECTIONS = @as(c_int, 32444);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_ADDRESS_NETWORKINTERFACE_SELECTIONDESCRIPTIONS = @as(c_int, 32445);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_ADDRESS_NETWORKINTERFACE_RESTRICTTOLIST = @as(c_int, 32446);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_TRANSPORTSETTINGS = @as(c_int, 32447);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_STATUS = @as(c_int, 32448);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_STATUS_STATE = @as(c_int, 32449);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_STATUS_ENABLE = @as(c_int, 32450);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_STATUS_DISABLE = @as(c_int, 32451);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS = @as(c_int, 32452);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_DIAGNOSTICSLEVEL = @as(c_int, 32453);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION = @as(c_int, 32454);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_ACTIVE = @as(c_int, 32455);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_CLASSIFICATION = @as(c_int, 32456);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_DIAGNOSTICSLEVEL = @as(c_int, 32457);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALINFORMATION_TIMEFIRSTCHANGE = @as(c_int, 32458);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR = @as(c_int, 32459);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_ACTIVE = @as(c_int, 32460);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_CLASSIFICATION = @as(c_int, 32461);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_DIAGNOSTICSLEVEL = @as(c_int, 32462);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_TOTALERROR_TIMEFIRSTCHANGE = @as(c_int, 32463);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_RESET = @as(c_int, 32464);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_SUBERROR = @as(c_int, 32465);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS = @as(c_int, 32466);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR = @as(c_int, 32467);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_ACTIVE = @as(c_int, 32468);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_CLASSIFICATION = @as(c_int, 32469);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_DIAGNOSTICSLEVEL = @as(c_int, 32470);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEERROR_TIMEFIRSTCHANGE = @as(c_int, 32471);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD = @as(c_int, 32472);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_ACTIVE = @as(c_int, 32473);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_CLASSIFICATION = @as(c_int, 32474);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 32475);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 32476);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT = @as(c_int, 32477);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_ACTIVE = @as(c_int, 32478);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_CLASSIFICATION = @as(c_int, 32479);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 32480);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 32481);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR = @as(c_int, 32482);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_ACTIVE = @as(c_int, 32483);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_CLASSIFICATION = @as(c_int, 32484);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_DIAGNOSTICSLEVEL = @as(c_int, 32485);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_TIMEFIRSTCHANGE = @as(c_int, 32486);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT = @as(c_int, 32487);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_ACTIVE = @as(c_int, 32488);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_CLASSIFICATION = @as(c_int, 32489);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 32490);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 32491);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD = @as(c_int, 32492);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_ACTIVE = @as(c_int, 32493);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_CLASSIFICATION = @as(c_int, 32494);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 32495);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 32496);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES = @as(c_int, 32497);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_RESOLVEDADDRESS = @as(c_int, 32498);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_DIAGNOSTICS_LIVEVALUES_RESOLVEDADDRESS_DIAGNOSTICSLEVEL = @as(c_int, 32499);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_ADDWRITERGROUP = @as(c_int, 32500);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_ADDWRITERGROUP_INPUTARGUMENTS = @as(c_int, 32501);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_ADDWRITERGROUP_OUTPUTARGUMENTS = @as(c_int, 32502);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_ADDREADERGROUP = @as(c_int, 32503);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_ADDREADERGROUP_INPUTARGUMENTS = @as(c_int, 32504);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_ADDREADERGROUP_OUTPUTARGUMENTS = @as(c_int, 32505);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_REMOVEGROUP = @as(c_int, 32506);
pub const UA_NS0ID_DATASETCLASSES_CONNECTIONNAME_PLACEHOLDER_REMOVEGROUP_INPUTARGUMENTS = @as(c_int, 32507);
pub const UA_NS0ID_DATASETCLASSES_SETSECURITYKEYS = @as(c_int, 32508);
pub const UA_NS0ID_DATASETCLASSES_SETSECURITYKEYS_INPUTARGUMENTS = @as(c_int, 32509);
pub const UA_NS0ID_DATASETCLASSES_ADDCONNECTION = @as(c_int, 32510);
pub const UA_NS0ID_DATASETCLASSES_ADDCONNECTION_INPUTARGUMENTS = @as(c_int, 32511);
pub const UA_NS0ID_DATASETCLASSES_ADDCONNECTION_OUTPUTARGUMENTS = @as(c_int, 32512);
pub const UA_NS0ID_DATASETCLASSES_REMOVECONNECTION = @as(c_int, 32513);
pub const UA_NS0ID_DATASETCLASSES_REMOVECONNECTION_INPUTARGUMENTS = @as(c_int, 32514);
pub const UA_NS0ID_DATASETCLASSES_PUBLISHEDDATASETS = @as(c_int, 32515);
pub const UA_NS0ID_DATASETCLASSES_PUBLISHEDDATASETS_ADDPUBLISHEDDATAITEMS = @as(c_int, 32516);
pub const UA_NS0ID_DATASETCLASSES_PUBLISHEDDATASETS_ADDPUBLISHEDDATAITEMS_INPUTARGUMENTS = @as(c_int, 32517);
pub const UA_NS0ID_DATASETCLASSES_PUBLISHEDDATASETS_ADDPUBLISHEDDATAITEMS_OUTPUTARGUMENTS = @as(c_int, 32518);
pub const UA_NS0ID_DATASETCLASSES_PUBLISHEDDATASETS_ADDPUBLISHEDEVENTS = @as(c_int, 32519);
pub const UA_NS0ID_DATASETCLASSES_PUBLISHEDDATASETS_ADDPUBLISHEDEVENTS_INPUTARGUMENTS = @as(c_int, 32520);
pub const UA_NS0ID_DATASETCLASSES_PUBLISHEDDATASETS_ADDPUBLISHEDEVENTS_OUTPUTARGUMENTS = @as(c_int, 32521);
pub const UA_NS0ID_DATASETCLASSES_PUBLISHEDDATASETS_ADDPUBLISHEDDATAITEMSTEMPLATE = @as(c_int, 32522);
pub const UA_NS0ID_DATASETCLASSES_PUBLISHEDDATASETS_ADDPUBLISHEDDATAITEMSTEMPLATE_INPUTARGUMENTS = @as(c_int, 32523);
pub const UA_NS0ID_DATASETCLASSES_PUBLISHEDDATASETS_ADDPUBLISHEDDATAITEMSTEMPLATE_OUTPUTARGUMENTS = @as(c_int, 32524);
pub const UA_NS0ID_DATASETCLASSES_PUBLISHEDDATASETS_ADDPUBLISHEDEVENTSTEMPLATE = @as(c_int, 32525);
pub const UA_NS0ID_DATASETCLASSES_PUBLISHEDDATASETS_ADDPUBLISHEDEVENTSTEMPLATE_INPUTARGUMENTS = @as(c_int, 32526);
pub const UA_NS0ID_DATASETCLASSES_PUBLISHEDDATASETS_ADDPUBLISHEDEVENTSTEMPLATE_OUTPUTARGUMENTS = @as(c_int, 32527);
pub const UA_NS0ID_DATASETCLASSES_PUBLISHEDDATASETS_REMOVEPUBLISHEDDATASET = @as(c_int, 32528);
pub const UA_NS0ID_DATASETCLASSES_PUBLISHEDDATASETS_REMOVEPUBLISHEDDATASET_INPUTARGUMENTS = @as(c_int, 32529);
pub const UA_NS0ID_DATASETCLASSES_PUBLISHEDDATASETS_ADDDATASETFOLDER = @as(c_int, 32530);
pub const UA_NS0ID_DATASETCLASSES_PUBLISHEDDATASETS_ADDDATASETFOLDER_INPUTARGUMENTS = @as(c_int, 32531);
pub const UA_NS0ID_DATASETCLASSES_PUBLISHEDDATASETS_ADDDATASETFOLDER_OUTPUTARGUMENTS = @as(c_int, 32532);
pub const UA_NS0ID_DATASETCLASSES_PUBLISHEDDATASETS_REMOVEDATASETFOLDER = @as(c_int, 32533);
pub const UA_NS0ID_DATASETCLASSES_PUBLISHEDDATASETS_REMOVEDATASETFOLDER_INPUTARGUMENTS = @as(c_int, 32534);
pub const UA_NS0ID_DATASETCLASSES_SUBSCRIBEDDATASETS = @as(c_int, 32535);
pub const UA_NS0ID_DATASETCLASSES_SUBSCRIBEDDATASETS_ADDSUBSCRIBEDDATASET = @as(c_int, 32536);
pub const UA_NS0ID_DATASETCLASSES_SUBSCRIBEDDATASETS_ADDSUBSCRIBEDDATASET_INPUTARGUMENTS = @as(c_int, 32537);
pub const UA_NS0ID_DATASETCLASSES_SUBSCRIBEDDATASETS_ADDSUBSCRIBEDDATASET_OUTPUTARGUMENTS = @as(c_int, 32538);
pub const UA_NS0ID_DATASETCLASSES_SUBSCRIBEDDATASETS_REMOVESUBSCRIBEDDATASET = @as(c_int, 32539);
pub const UA_NS0ID_DATASETCLASSES_SUBSCRIBEDDATASETS_REMOVESUBSCRIBEDDATASET_INPUTARGUMENTS = @as(c_int, 32540);
pub const UA_NS0ID_DATASETCLASSES_SUBSCRIBEDDATASETS_ADDDATASETFOLDER = @as(c_int, 32541);
pub const UA_NS0ID_DATASETCLASSES_SUBSCRIBEDDATASETS_ADDDATASETFOLDER_INPUTARGUMENTS = @as(c_int, 32542);
pub const UA_NS0ID_DATASETCLASSES_SUBSCRIBEDDATASETS_ADDDATASETFOLDER_OUTPUTARGUMENTS = @as(c_int, 32543);
pub const UA_NS0ID_DATASETCLASSES_SUBSCRIBEDDATASETS_REMOVEDATASETFOLDER = @as(c_int, 32544);
pub const UA_NS0ID_DATASETCLASSES_SUBSCRIBEDDATASETS_REMOVEDATASETFOLDER_INPUTARGUMENTS = @as(c_int, 32545);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION = @as(c_int, 32546);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_SIZE = @as(c_int, 32547);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_WRITABLE = @as(c_int, 32548);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_USERWRITABLE = @as(c_int, 32549);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_OPENCOUNT = @as(c_int, 32550);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_MIMETYPE = @as(c_int, 32551);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_MAXBYTESTRINGLENGTH = @as(c_int, 32552);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_LASTMODIFIEDTIME = @as(c_int, 32553);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_OPEN = @as(c_int, 32554);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_OPEN_INPUTARGUMENTS = @as(c_int, 32555);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_OPEN_OUTPUTARGUMENTS = @as(c_int, 32556);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_CLOSE = @as(c_int, 32557);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_CLOSE_INPUTARGUMENTS = @as(c_int, 32558);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_READ = @as(c_int, 32559);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_READ_INPUTARGUMENTS = @as(c_int, 32560);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_READ_OUTPUTARGUMENTS = @as(c_int, 32561);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_WRITE = @as(c_int, 32562);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_WRITE_INPUTARGUMENTS = @as(c_int, 32563);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_GETPOSITION = @as(c_int, 32564);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_GETPOSITION_INPUTARGUMENTS = @as(c_int, 32565);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_GETPOSITION_OUTPUTARGUMENTS = @as(c_int, 32566);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_SETPOSITION = @as(c_int, 32567);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_SETPOSITION_INPUTARGUMENTS = @as(c_int, 32568);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_RESERVEIDS = @as(c_int, 32569);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_RESERVEIDS_INPUTARGUMENTS = @as(c_int, 32570);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_RESERVEIDS_OUTPUTARGUMENTS = @as(c_int, 32571);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_CLOSEANDUPDATE = @as(c_int, 32572);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_CLOSEANDUPDATE_INPUTARGUMENTS = @as(c_int, 32573);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCONFIGURATION_CLOSEANDUPDATE_OUTPUTARGUMENTS = @as(c_int, 32574);
pub const UA_NS0ID_DATASETCLASSES_STATUS = @as(c_int, 32575);
pub const UA_NS0ID_DATASETCLASSES_STATUS_STATE = @as(c_int, 32576);
pub const UA_NS0ID_DATASETCLASSES_STATUS_ENABLE = @as(c_int, 32577);
pub const UA_NS0ID_DATASETCLASSES_STATUS_DISABLE = @as(c_int, 32578);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS = @as(c_int, 32579);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_DIAGNOSTICSLEVEL = @as(c_int, 32580);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_TOTALINFORMATION = @as(c_int, 32581);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_TOTALINFORMATION_ACTIVE = @as(c_int, 32582);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_TOTALINFORMATION_CLASSIFICATION = @as(c_int, 32583);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_TOTALINFORMATION_DIAGNOSTICSLEVEL = @as(c_int, 32584);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_TOTALINFORMATION_TIMEFIRSTCHANGE = @as(c_int, 32585);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_TOTALERROR = @as(c_int, 32586);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_TOTALERROR_ACTIVE = @as(c_int, 32587);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_TOTALERROR_CLASSIFICATION = @as(c_int, 32588);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_TOTALERROR_DIAGNOSTICSLEVEL = @as(c_int, 32589);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_TOTALERROR_TIMEFIRSTCHANGE = @as(c_int, 32590);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_RESET = @as(c_int, 32591);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_SUBERROR = @as(c_int, 32592);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS = @as(c_int, 32593);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEERROR = @as(c_int, 32594);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEERROR_ACTIVE = @as(c_int, 32595);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEERROR_CLASSIFICATION = @as(c_int, 32596);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEERROR_DIAGNOSTICSLEVEL = @as(c_int, 32597);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEERROR_TIMEFIRSTCHANGE = @as(c_int, 32598);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD = @as(c_int, 32599);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_ACTIVE = @as(c_int, 32600);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_CLASSIFICATION = @as(c_int, 32601);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 32602);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 32603);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT = @as(c_int, 32604);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_ACTIVE = @as(c_int, 32605);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_CLASSIFICATION = @as(c_int, 32606);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 32607);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEOPERATIONALBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 32608);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR = @as(c_int, 32609);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_ACTIVE = @as(c_int, 32610);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_CLASSIFICATION = @as(c_int, 32611);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_DIAGNOSTICSLEVEL = @as(c_int, 32612);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEOPERATIONALFROMERROR_TIMEFIRSTCHANGE = @as(c_int, 32613);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT = @as(c_int, 32614);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_ACTIVE = @as(c_int, 32615);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_CLASSIFICATION = @as(c_int, 32616);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_DIAGNOSTICSLEVEL = @as(c_int, 32617);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEPAUSEDBYPARENT_TIMEFIRSTCHANGE = @as(c_int, 32618);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD = @as(c_int, 32619);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_ACTIVE = @as(c_int, 32620);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_CLASSIFICATION = @as(c_int, 32621);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_DIAGNOSTICSLEVEL = @as(c_int, 32622);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_COUNTERS_STATEDISABLEDBYMETHOD_TIMEFIRSTCHANGE = @as(c_int, 32623);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_LIVEVALUES = @as(c_int, 32624);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_LIVEVALUES_CONFIGUREDDATASETWRITERS = @as(c_int, 32625);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_LIVEVALUES_CONFIGUREDDATASETWRITERS_DIAGNOSTICSLEVEL = @as(c_int, 32626);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_LIVEVALUES_CONFIGUREDDATASETREADERS = @as(c_int, 32627);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_LIVEVALUES_CONFIGUREDDATASETREADERS_DIAGNOSTICSLEVEL = @as(c_int, 32628);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_LIVEVALUES_OPERATIONALDATASETWRITERS = @as(c_int, 32629);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_LIVEVALUES_OPERATIONALDATASETWRITERS_DIAGNOSTICSLEVEL = @as(c_int, 32630);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_LIVEVALUES_OPERATIONALDATASETREADERS = @as(c_int, 32631);
pub const UA_NS0ID_DATASETCLASSES_DIAGNOSTICS_LIVEVALUES_OPERATIONALDATASETREADERS_DIAGNOSTICSLEVEL = @as(c_int, 32632);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCAPABLITIES = @as(c_int, 32633);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCAPABLITIES_MAXPUBSUBCONNECTIONS = @as(c_int, 32634);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCAPABLITIES_MAXWRITERGROUPS = @as(c_int, 32635);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCAPABLITIES_MAXREADERGROUPS = @as(c_int, 32636);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCAPABLITIES_MAXDATASETWRITERS = @as(c_int, 32637);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCAPABLITIES_MAXDATASETREADERS = @as(c_int, 32638);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCAPABLITIES_MAXDATASETWRITERSPERGROUP = @as(c_int, 32639);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCAPABLITIES_MAXNETWORKMESSAGESIZEDATAGRAM = @as(c_int, 32640);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCAPABLITIES_MAXNETWORKMESSAGESIZEBROKER = @as(c_int, 32641);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCAPABLITIES_SUPPORTSECURITYKEYPULL = @as(c_int, 32642);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCAPABLITIES_SUPPORTSECURITYKEYPUSH = @as(c_int, 32643);
pub const UA_NS0ID_DATASETCLASSES_DATASETCLASSES = @as(c_int, 32644);
pub const UA_NS0ID_DATASETCLASSES_DATASETCLASSES_DATASETNAME_PLACEHOLDER = @as(c_int, 32645);
pub const UA_NS0ID_DATASETCLASSES_SUPPORTEDTRANSPORTPROFILES = @as(c_int, 32646);
pub const UA_NS0ID_DATASETCLASSES_DEFAULTDATAGRAMPUBLISHERID = @as(c_int, 32647);
pub const UA_NS0ID_DATASETCLASSES_CONFIGURATIONVERSION = @as(c_int, 32648);
pub const UA_NS0ID_DATASETCLASSES_DEFAULTSECURITYKEYSERVICES = @as(c_int, 32649);
pub const UA_NS0ID_DATASETCLASSES_CONFIGURATIONPROPERTIES = @as(c_int, 32650);
pub const UA_NS0ID_PUBSUBCAPABILITIESTYPE_MAXDATASETWRITERSPERGROUP = @as(c_int, 32651);
pub const UA_NS0ID_PUBSUBCAPABILITIESTYPE_MAXNETWORKMESSAGESIZEDATAGRAM = @as(c_int, 32652);
pub const UA_NS0ID_PUBSUBCAPABILITIESTYPE_MAXNETWORKMESSAGESIZEBROKER = @as(c_int, 32653);
pub const UA_NS0ID_PUBSUBCAPABILITIESTYPE_SUPPORTSECURITYKEYPULL = @as(c_int, 32654);
pub const UA_NS0ID_PUBSUBCAPABILITIESTYPE_SUPPORTSECURITYKEYPUSH = @as(c_int, 32655);
pub const UA_NS0ID_DATASETCLASSES_PUBSUBCAPABLITIES_MAXFIELDSPERDATASET = @as(c_int, 32656);
pub const UA_NS0ID_REFERENCEDESCRIPTIONVARIABLETYPE = @as(c_int, 32657);
pub const UA_NS0ID_REFERENCEDESCRIPTIONVARIABLETYPE_REFERENCEREFINEMENT = @as(c_int, 32658);
pub const UA_NS0ID_REFERENCEDESCRIPTIONDATATYPE = @as(c_int, 32659);
pub const UA_NS0ID_REFERENCELISTENTRYDATATYPE = @as(c_int, 32660);
pub const UA_NS0ID_REFERENCEDESCRIPTIONDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 32661);
pub const UA_NS0ID_REFERENCELISTENTRYDATATYPE_ENCODING_DEFAULTBINARY = @as(c_int, 32662);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_REFERENCEDESCRIPTIONDATATYPE = @as(c_int, 32663);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_REFERENCEDESCRIPTIONDATATYPE_DATATYPEVERSION = @as(c_int, 32664);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_REFERENCEDESCRIPTIONDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 32665);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_REFERENCELISTENTRYDATATYPE = @as(c_int, 32666);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_REFERENCELISTENTRYDATATYPE_DATATYPEVERSION = @as(c_int, 32667);
pub const UA_NS0ID_OPCUA_BINARYSCHEMA_REFERENCELISTENTRYDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 32668);
pub const UA_NS0ID_REFERENCEDESCRIPTIONDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 32669);
pub const UA_NS0ID_REFERENCELISTENTRYDATATYPE_ENCODING_DEFAULTXML = @as(c_int, 32670);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_REFERENCEDESCRIPTIONDATATYPE = @as(c_int, 32671);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_REFERENCEDESCRIPTIONDATATYPE_DATATYPEVERSION = @as(c_int, 32672);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_REFERENCEDESCRIPTIONDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 32673);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_REFERENCELISTENTRYDATATYPE = @as(c_int, 32674);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_REFERENCELISTENTRYDATATYPE_DATATYPEVERSION = @as(c_int, 32675);
pub const UA_NS0ID_OPCUA_XMLSCHEMA_REFERENCELISTENTRYDATATYPE_DICTIONARYFRAGMENT = @as(c_int, 32676);
pub const UA_NS0ID_REFERENCEDESCRIPTIONDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 32677);
pub const UA_NS0ID_REFERENCELISTENTRYDATATYPE_ENCODING_DEFAULTJSON = @as(c_int, 32678);
pub const UA_NS0ID_HASREFERENCEDESCRIPTION = @as(c_int, 32679);
pub const UA_NS0ID_OPTIONSETLENGTH = @as(c_int, 32750);
pub const UA_ACCESSLEVELMASK_READ = @as(c_uint, 0x01) << @as(c_uint, 0);
pub const UA_ACCESSLEVELMASK_WRITE = @as(c_uint, 0x01) << @as(c_uint, 1);
pub const UA_ACCESSLEVELMASK_HISTORYREAD = @as(c_uint, 0x01) << @as(c_uint, 2);
pub const UA_ACCESSLEVELMASK_HISTORYWRITE = @as(c_uint, 0x01) << @as(c_uint, 3);
pub const UA_ACCESSLEVELMASK_SEMANTICCHANGE = @as(c_uint, 0x01) << @as(c_uint, 4);
pub const UA_ACCESSLEVELMASK_STATUSWRITE = @as(c_uint, 0x01) << @as(c_uint, 5);
pub const UA_ACCESSLEVELMASK_TIMESTAMPWRITE = @as(c_uint, 0x01) << @as(c_uint, 6);
pub const UA_WRITEMASK_ACCESSLEVEL = @as(c_uint, 0x01) << @as(c_uint, 0);
pub const UA_WRITEMASK_ARRRAYDIMENSIONS = @as(c_uint, 0x01) << @as(c_uint, 1);
pub const UA_WRITEMASK_BROWSENAME = @as(c_uint, 0x01) << @as(c_uint, 2);
pub const UA_WRITEMASK_CONTAINSNOLOOPS = @as(c_uint, 0x01) << @as(c_uint, 3);
pub const UA_WRITEMASK_DATATYPE = @as(c_uint, 0x01) << @as(c_uint, 4);
pub const UA_WRITEMASK_DESCRIPTION = @as(c_uint, 0x01) << @as(c_uint, 5);
pub const UA_WRITEMASK_DISPLAYNAME = @as(c_uint, 0x01) << @as(c_uint, 6);
pub const UA_WRITEMASK_EVENTNOTIFIER = @as(c_uint, 0x01) << @as(c_uint, 7);
pub const UA_WRITEMASK_EXECUTABLE = @as(c_uint, 0x01) << @as(c_uint, 8);
pub const UA_WRITEMASK_HISTORIZING = @as(c_uint, 0x01) << @as(c_uint, 9);
pub const UA_WRITEMASK_INVERSENAME = @as(c_uint, 0x01) << @as(c_uint, 10);
pub const UA_WRITEMASK_ISABSTRACT = @as(c_uint, 0x01) << @as(c_uint, 11);
pub const UA_WRITEMASK_MINIMUMSAMPLINGINTERVAL = @as(c_uint, 0x01) << @as(c_uint, 12);
pub const UA_WRITEMASK_NODECLASS = @as(c_uint, 0x01) << @as(c_uint, 13);
pub const UA_WRITEMASK_NODEID = @as(c_uint, 0x01) << @as(c_uint, 14);
pub const UA_WRITEMASK_SYMMETRIC = @as(c_uint, 0x01) << @as(c_uint, 15);
pub const UA_WRITEMASK_USERACCESSLEVEL = @as(c_uint, 0x01) << @as(c_uint, 16);
pub const UA_WRITEMASK_USEREXECUTABLE = @as(c_uint, 0x01) << @as(c_uint, 17);
pub const UA_WRITEMASK_USERWRITEMASK = @as(c_uint, 0x01) << @as(c_uint, 18);
pub const UA_WRITEMASK_VALUERANK = @as(c_uint, 0x01) << @as(c_uint, 19);
pub const UA_WRITEMASK_WRITEMASK = @as(c_uint, 0x01) << @as(c_uint, 20);
pub const UA_WRITEMASK_VALUEFORVARIABLETYPE = @as(c_uint, 0x01) << @as(c_uint, 21);
pub const UA_WRITEMASK_ACCESSLEVELEX = @as(c_uint, 0x01) << @as(c_uint, 25);
pub const UA_VALUERANK_SCALAR_OR_ONE_DIMENSION = -@as(c_int, 3);
pub const UA_VALUERANK_ANY = -@as(c_int, 2);
pub const UA_VALUERANK_SCALAR = -@as(c_int, 1);
pub const UA_VALUERANK_ONE_OR_MORE_DIMENSIONS = @as(c_int, 0);
pub const UA_VALUERANK_ONE_DIMENSION = @as(c_int, 1);
pub const UA_VALUERANK_TWO_DIMENSIONS = @as(c_int, 2);
pub const UA_VALUERANK_THREE_DIMENSIONS = @as(c_int, 3);
pub const UA_EVENTNOTIFIER_SUBSCRIBE_TO_EVENT = @as(c_uint, 0x01) << @as(c_uint, 0);
pub const UA_EVENTNOTIFIER_HISTORY_READ = @as(c_uint, 0x01) << @as(c_uint, 2);
pub const UA_EVENTNOTIFIER_HISTORY_WRITE = @as(c_uint, 0x01) << @as(c_uint, 3);
pub const UA_TRUE = @"true";
pub const UA_FALSE = @"false";
pub const UA_SBYTE_MIN = -@as(c_int, 128);
pub const UA_SBYTE_MAX = @as(c_int, 127);
pub const UA_BYTE_MIN = @as(c_int, 0);
pub const UA_BYTE_MAX = @as(c_int, 255);
pub const UA_INT16_MIN = -@import("std").zig.c_translation.promoteIntLiteral(c_int, 32768, .decimal);
pub const UA_INT16_MAX = @as(c_int, 32767);
pub const UA_UINT16_MIN = @as(c_int, 0);
pub const UA_UINT16_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 65535, .decimal);
pub const UA_INT32_MIN = @import("std").zig.c_translation.cast(i32, -@as(c_longlong, 2147483648));
pub const UA_INT32_MAX = @as(c_long, 2147483647);
pub const UA_UINT32_MIN = @as(c_int, 0);
pub const UA_UINT32_MAX = @as(c_ulong, 4294967295);
pub const UA_INT64_MAX = @import("std").zig.c_translation.cast(i64, @as(c_longlong, 9223372036854775807));
pub const UA_INT64_MIN = @import("std").zig.c_translation.cast(i64, -UA_INT64_MAX) - @as(c_longlong, 1);
pub const UA_UINT64_MIN = @as(c_int, 0);
pub const UA_UINT64_MAX = @import("std").zig.c_translation.cast(u64, @as(c_ulonglong, 18446744073709551615));
pub const UA_FLOAT_MIN = FLT_MIN;
pub const UA_FLOAT_MAX = FLT_MAX;
pub const UA_DOUBLE_MIN = DBL_MIN;
pub const UA_DOUBLE_MAX = DBL_MAX;
pub inline fn UA_STRING_ALLOC(CHARS: anytype) @TypeOf(UA_String_fromChars(CHARS)) {
    _ = &CHARS;
    return UA_String_fromChars(CHARS);
}
pub const UA_STRING_STATIC = @compileError("unable to translate C expr: unexpected token '{'");
// ./vendor/open62541.h:22553:9
pub const UA_DATETIME_USEC = @as(c_longlong, 10);
pub const UA_DATETIME_MSEC = UA_DATETIME_USEC * @as(c_longlong, 1000);
pub const UA_DATETIME_SEC = UA_DATETIME_MSEC * @as(c_longlong, 1000);
pub const UA_DATETIME_UNIX_EPOCH = @as(c_longlong, 11644473600) * UA_DATETIME_SEC;
pub inline fn UA_BYTESTRING(chars: anytype) @TypeOf(UA_STRING(chars)) {
    _ = &chars;
    return UA_STRING(chars);
}
pub inline fn UA_BYTESTRING_ALLOC(chars: anytype) @TypeOf(UA_STRING_ALLOC(chars)) {
    _ = &chars;
    return UA_STRING_ALLOC(chars);
}
pub const UA_EMPTY_ARRAY_SENTINEL = @import("std").zig.c_translation.cast(?*anyopaque, @as(c_int, 0x01));
pub const UA_DATATYPEKINDS = @as(c_int, 31);
pub inline fn UA_deleteMembers(p: anytype, @"type": anytype) @TypeOf(UA_clear(p, @"type")) {
    _ = &p;
    _ = &@"type";
    return UA_clear(p, @"type");
}
pub const UA_TYPENAME = @compileError("unable to translate C expr: unexpected token ''");
// ./vendor/open62541.h:23831:10
pub const UA_TYPES_COUNT = @as(c_int, 394);
pub const UA_TYPES_BOOLEAN = @as(c_int, 0);
pub const UA_TYPES_SBYTE = @as(c_int, 1);
pub const UA_TYPES_BYTE = @as(c_int, 2);
pub const UA_TYPES_INT16 = @as(c_int, 3);
pub const UA_TYPES_UINT16 = @as(c_int, 4);
pub const UA_TYPES_INT32 = @as(c_int, 5);
pub const UA_TYPES_UINT32 = @as(c_int, 6);
pub const UA_TYPES_INT64 = @as(c_int, 7);
pub const UA_TYPES_UINT64 = @as(c_int, 8);
pub const UA_TYPES_FLOAT = @as(c_int, 9);
pub const UA_TYPES_DOUBLE = @as(c_int, 10);
pub const UA_TYPES_STRING = @as(c_int, 11);
pub const UA_TYPES_DATETIME = @as(c_int, 12);
pub const UA_TYPES_GUID = @as(c_int, 13);
pub const UA_TYPES_BYTESTRING = @as(c_int, 14);
pub const UA_TYPES_XMLELEMENT = @as(c_int, 15);
pub const UA_TYPES_NODEID = @as(c_int, 16);
pub const UA_TYPES_EXPANDEDNODEID = @as(c_int, 17);
pub const UA_TYPES_STATUSCODE = @as(c_int, 18);
pub const UA_TYPES_QUALIFIEDNAME = @as(c_int, 19);
pub const UA_TYPES_LOCALIZEDTEXT = @as(c_int, 20);
pub const UA_TYPES_EXTENSIONOBJECT = @as(c_int, 21);
pub const UA_TYPES_DATAVALUE = @as(c_int, 22);
pub const UA_TYPES_VARIANT = @as(c_int, 23);
pub const UA_TYPES_DIAGNOSTICINFO = @as(c_int, 24);
pub const UA_TYPES_NAMINGRULETYPE = @as(c_int, 25);
pub const UA_TYPES_ENUMERATION = @as(c_int, 26);
pub const UA_TYPES_IMAGEBMP = @as(c_int, 27);
pub const UA_TYPES_IMAGEGIF = @as(c_int, 28);
pub const UA_TYPES_IMAGEJPG = @as(c_int, 29);
pub const UA_TYPES_IMAGEPNG = @as(c_int, 30);
pub const UA_TYPES_AUDIODATATYPE = @as(c_int, 31);
pub const UA_TYPES_URISTRING = @as(c_int, 32);
pub const UA_TYPES_BITFIELDMASKDATATYPE = @as(c_int, 33);
pub const UA_TYPES_SEMANTICVERSIONSTRING = @as(c_int, 34);
pub const UA_TYPES_KEYVALUEPAIR = @as(c_int, 35);
pub const UA_TYPES_ADDITIONALPARAMETERSTYPE = @as(c_int, 36);
pub const UA_TYPES_EPHEMERALKEYTYPE = @as(c_int, 37);
pub const UA_TYPES_HANDLE = @as(c_int, 38);
pub const UA_TYPES_TRIMMEDSTRING = @as(c_int, 39);
pub const UA_TYPES_RATIONALNUMBER = @as(c_int, 40);
pub const UA_TYPES_THREEDVECTOR = @as(c_int, 41);
pub const UA_TYPES_THREEDCARTESIANCOORDINATES = @as(c_int, 42);
pub const UA_TYPES_THREEDORIENTATION = @as(c_int, 43);
pub const UA_TYPES_THREEDFRAME = @as(c_int, 44);
pub const UA_TYPES_OPENFILEMODE = @as(c_int, 45);
pub const UA_TYPES_IDENTITYCRITERIATYPE = @as(c_int, 46);
pub const UA_TYPES_IDENTITYMAPPINGRULETYPE = @as(c_int, 47);
pub const UA_TYPES_CURRENCYUNITTYPE = @as(c_int, 48);
pub const UA_ALARMMASK_NONE = @as(c_int, 0);
pub const UA_ALARMMASK_ACTIVE = @as(c_int, 1);
pub const UA_ALARMMASK_UNACKNOWLEDGED = @as(c_int, 2);
pub const UA_ALARMMASK_UNCONFIRMED = @as(c_int, 4);
pub const UA_TYPES_ALARMMASK = @as(c_int, 49);
pub const UA_TRUSTLISTVALIDATIONOPTIONS_NONE = @as(c_int, 0);
pub const UA_TRUSTLISTVALIDATIONOPTIONS_SUPPRESSCERTIFICATEEXPIRED = @as(c_int, 1);
pub const UA_TRUSTLISTVALIDATIONOPTIONS_SUPPRESSHOSTNAMEINVALID = @as(c_int, 2);
pub const UA_TRUSTLISTVALIDATIONOPTIONS_SUPPRESSREVOCATIONSTATUSUNKNOWN = @as(c_int, 4);
pub const UA_TRUSTLISTVALIDATIONOPTIONS_SUPPRESSISSUERCERTIFICATEEXPIRED = @as(c_int, 8);
pub const UA_TRUSTLISTVALIDATIONOPTIONS_SUPPRESSISSUERREVOCATIONSTATUSUNKNOWN = @as(c_int, 16);
pub const UA_TRUSTLISTVALIDATIONOPTIONS_CHECKREVOCATIONSTATUSONLINE = @as(c_int, 32);
pub const UA_TRUSTLISTVALIDATIONOPTIONS_CHECKREVOCATIONSTATUSOFFLINE = @as(c_int, 64);
pub const UA_TYPES_TRUSTLISTVALIDATIONOPTIONS = @as(c_int, 50);
pub const UA_TYPES_TRUSTLISTMASKS = @as(c_int, 51);
pub const UA_TYPES_TRUSTLISTDATATYPE = @as(c_int, 52);
pub const UA_TYPES_TRANSACTIONERRORTYPE = @as(c_int, 53);
pub const UA_TYPES_DATATYPEDESCRIPTION = @as(c_int, 54);
pub const UA_TYPES_SIMPLETYPEDESCRIPTION = @as(c_int, 55);
pub const UA_TYPES_PORTABLEQUALIFIEDNAME = @as(c_int, 56);
pub const UA_TYPES_PORTABLENODEID = @as(c_int, 57);
pub const UA_TYPES_UNSIGNEDRATIONALNUMBER = @as(c_int, 58);
pub const UA_TYPES_PUBSUBSTATE = @as(c_int, 59);
pub const UA_DATASETFIELDFLAGS_NONE = @as(c_int, 0);
pub const UA_DATASETFIELDFLAGS_PROMOTEDFIELD = @as(c_int, 1);
pub const UA_TYPES_DATASETFIELDFLAGS = @as(c_int, 60);
pub const UA_TYPES_CONFIGURATIONVERSIONDATATYPE = @as(c_int, 61);
pub const UA_TYPES_PUBLISHEDVARIABLEDATATYPE = @as(c_int, 62);
pub const UA_TYPES_PUBLISHEDDATAITEMSDATATYPE = @as(c_int, 63);
pub const UA_TYPES_PUBLISHEDDATASETCUSTOMSOURCEDATATYPE = @as(c_int, 64);
pub const UA_DATASETFIELDCONTENTMASK_NONE = @as(c_int, 0);
pub const UA_DATASETFIELDCONTENTMASK_STATUSCODE = @as(c_int, 1);
pub const UA_DATASETFIELDCONTENTMASK_SOURCETIMESTAMP = @as(c_int, 2);
pub const UA_DATASETFIELDCONTENTMASK_SERVERTIMESTAMP = @as(c_int, 4);
pub const UA_DATASETFIELDCONTENTMASK_SOURCEPICOSECONDS = @as(c_int, 8);
pub const UA_DATASETFIELDCONTENTMASK_SERVERPICOSECONDS = @as(c_int, 16);
pub const UA_DATASETFIELDCONTENTMASK_RAWDATA = @as(c_int, 32);
pub const UA_TYPES_DATASETFIELDCONTENTMASK = @as(c_int, 65);
pub const UA_TYPES_DATASETWRITERDATATYPE = @as(c_int, 66);
pub const UA_TYPES_NETWORKADDRESSDATATYPE = @as(c_int, 67);
pub const UA_TYPES_NETWORKADDRESSURLDATATYPE = @as(c_int, 68);
pub const UA_TYPES_OVERRIDEVALUEHANDLING = @as(c_int, 69);
pub const UA_TYPES_STANDALONESUBSCRIBEDDATASETREFDATATYPE = @as(c_int, 70);
pub const UA_TYPES_DATASETORDERINGTYPE = @as(c_int, 71);
pub const UA_UADPNETWORKMESSAGECONTENTMASK_NONE = @as(c_int, 0);
pub const UA_UADPNETWORKMESSAGECONTENTMASK_PUBLISHERID = @as(c_int, 1);
pub const UA_UADPNETWORKMESSAGECONTENTMASK_GROUPHEADER = @as(c_int, 2);
pub const UA_UADPNETWORKMESSAGECONTENTMASK_WRITERGROUPID = @as(c_int, 4);
pub const UA_UADPNETWORKMESSAGECONTENTMASK_GROUPVERSION = @as(c_int, 8);
pub const UA_UADPNETWORKMESSAGECONTENTMASK_NETWORKMESSAGENUMBER = @as(c_int, 16);
pub const UA_UADPNETWORKMESSAGECONTENTMASK_SEQUENCENUMBER = @as(c_int, 32);
pub const UA_UADPNETWORKMESSAGECONTENTMASK_PAYLOADHEADER = @as(c_int, 64);
pub const UA_UADPNETWORKMESSAGECONTENTMASK_TIMESTAMP = @as(c_int, 128);
pub const UA_UADPNETWORKMESSAGECONTENTMASK_PICOSECONDS = @as(c_int, 256);
pub const UA_UADPNETWORKMESSAGECONTENTMASK_DATASETCLASSID = @as(c_int, 512);
pub const UA_UADPNETWORKMESSAGECONTENTMASK_PROMOTEDFIELDS = @as(c_int, 1024);
pub const UA_TYPES_UADPNETWORKMESSAGECONTENTMASK = @as(c_int, 72);
pub const UA_TYPES_UADPWRITERGROUPMESSAGEDATATYPE = @as(c_int, 73);
pub const UA_UADPDATASETMESSAGECONTENTMASK_NONE = @as(c_int, 0);
pub const UA_UADPDATASETMESSAGECONTENTMASK_TIMESTAMP = @as(c_int, 1);
pub const UA_UADPDATASETMESSAGECONTENTMASK_PICOSECONDS = @as(c_int, 2);
pub const UA_UADPDATASETMESSAGECONTENTMASK_STATUS = @as(c_int, 4);
pub const UA_UADPDATASETMESSAGECONTENTMASK_MAJORVERSION = @as(c_int, 8);
pub const UA_UADPDATASETMESSAGECONTENTMASK_MINORVERSION = @as(c_int, 16);
pub const UA_UADPDATASETMESSAGECONTENTMASK_SEQUENCENUMBER = @as(c_int, 32);
pub const UA_TYPES_UADPDATASETMESSAGECONTENTMASK = @as(c_int, 74);
pub const UA_TYPES_UADPDATASETWRITERMESSAGEDATATYPE = @as(c_int, 75);
pub const UA_TYPES_UADPDATASETREADERMESSAGEDATATYPE = @as(c_int, 76);
pub const UA_JSONNETWORKMESSAGECONTENTMASK_NONE = @as(c_int, 0);
pub const UA_JSONNETWORKMESSAGECONTENTMASK_NETWORKMESSAGEHEADER = @as(c_int, 1);
pub const UA_JSONNETWORKMESSAGECONTENTMASK_DATASETMESSAGEHEADER = @as(c_int, 2);
pub const UA_JSONNETWORKMESSAGECONTENTMASK_SINGLEDATASETMESSAGE = @as(c_int, 4);
pub const UA_JSONNETWORKMESSAGECONTENTMASK_PUBLISHERID = @as(c_int, 8);
pub const UA_JSONNETWORKMESSAGECONTENTMASK_DATASETCLASSID = @as(c_int, 16);
pub const UA_JSONNETWORKMESSAGECONTENTMASK_REPLYTO = @as(c_int, 32);
pub const UA_TYPES_JSONNETWORKMESSAGECONTENTMASK = @as(c_int, 77);
pub const UA_TYPES_JSONWRITERGROUPMESSAGEDATATYPE = @as(c_int, 78);
pub const UA_JSONDATASETMESSAGECONTENTMASK_NONE = @as(c_int, 0);
pub const UA_JSONDATASETMESSAGECONTENTMASK_DATASETWRITERID = @as(c_int, 1);
pub const UA_JSONDATASETMESSAGECONTENTMASK_METADATAVERSION = @as(c_int, 2);
pub const UA_JSONDATASETMESSAGECONTENTMASK_SEQUENCENUMBER = @as(c_int, 4);
pub const UA_JSONDATASETMESSAGECONTENTMASK_TIMESTAMP = @as(c_int, 8);
pub const UA_JSONDATASETMESSAGECONTENTMASK_STATUS = @as(c_int, 16);
pub const UA_JSONDATASETMESSAGECONTENTMASK_MESSAGETYPE = @as(c_int, 32);
pub const UA_JSONDATASETMESSAGECONTENTMASK_DATASETWRITERNAME = @as(c_int, 64);
pub const UA_JSONDATASETMESSAGECONTENTMASK_REVERSIBLEFIELDENCODING = @as(c_int, 128);
pub const UA_TYPES_JSONDATASETMESSAGECONTENTMASK = @as(c_int, 79);
pub const UA_TYPES_JSONDATASETWRITERMESSAGEDATATYPE = @as(c_int, 80);
pub const UA_TYPES_JSONDATASETREADERMESSAGEDATATYPE = @as(c_int, 81);
pub const UA_TYPES_TRANSMITQOSPRIORITYDATATYPE = @as(c_int, 82);
pub const UA_TYPES_RECEIVEQOSPRIORITYDATATYPE = @as(c_int, 83);
pub const UA_TYPES_DATAGRAMCONNECTIONTRANSPORTDATATYPE = @as(c_int, 84);
pub const UA_TYPES_DATAGRAMCONNECTIONTRANSPORT2DATATYPE = @as(c_int, 85);
pub const UA_TYPES_DATAGRAMWRITERGROUPTRANSPORTDATATYPE = @as(c_int, 86);
pub const UA_TYPES_DATAGRAMWRITERGROUPTRANSPORT2DATATYPE = @as(c_int, 87);
pub const UA_TYPES_DATAGRAMDATASETREADERTRANSPORTDATATYPE = @as(c_int, 88);
pub const UA_TYPES_BROKERCONNECTIONTRANSPORTDATATYPE = @as(c_int, 89);
pub const UA_TYPES_BROKERTRANSPORTQUALITYOFSERVICE = @as(c_int, 90);
pub const UA_TYPES_BROKERWRITERGROUPTRANSPORTDATATYPE = @as(c_int, 91);
pub const UA_TYPES_BROKERDATASETWRITERTRANSPORTDATATYPE = @as(c_int, 92);
pub const UA_TYPES_BROKERDATASETREADERTRANSPORTDATATYPE = @as(c_int, 93);
pub const UA_PUBSUBCONFIGURATIONREFMASK_NONE = @as(c_int, 0);
pub const UA_PUBSUBCONFIGURATIONREFMASK_ELEMENTADD = @as(c_int, 1);
pub const UA_PUBSUBCONFIGURATIONREFMASK_ELEMENTMATCH = @as(c_int, 2);
pub const UA_PUBSUBCONFIGURATIONREFMASK_ELEMENTMODIFY = @as(c_int, 4);
pub const UA_PUBSUBCONFIGURATIONREFMASK_ELEMENTREMOVE = @as(c_int, 8);
pub const UA_PUBSUBCONFIGURATIONREFMASK_REFERENCEWRITER = @as(c_int, 16);
pub const UA_PUBSUBCONFIGURATIONREFMASK_REFERENCEREADER = @as(c_int, 32);
pub const UA_PUBSUBCONFIGURATIONREFMASK_REFERENCEWRITERGROUP = @as(c_int, 64);
pub const UA_PUBSUBCONFIGURATIONREFMASK_REFERENCEREADERGROUP = @as(c_int, 128);
pub const UA_PUBSUBCONFIGURATIONREFMASK_REFERENCECONNECTION = @as(c_int, 256);
pub const UA_PUBSUBCONFIGURATIONREFMASK_REFERENCEPUBDATASET = @as(c_int, 512);
pub const UA_PUBSUBCONFIGURATIONREFMASK_REFERENCESUBDATASET = @as(c_int, 1024);
pub const UA_PUBSUBCONFIGURATIONREFMASK_REFERENCESECURITYGROUP = @as(c_int, 2048);
pub const UA_PUBSUBCONFIGURATIONREFMASK_REFERENCEPUSHTARGET = @as(c_int, 4096);
pub const UA_TYPES_PUBSUBCONFIGURATIONREFMASK = @as(c_int, 94);
pub const UA_TYPES_PUBSUBCONFIGURATIONREFDATATYPE = @as(c_int, 95);
pub const UA_TYPES_PUBSUBCONFIGURATIONVALUEDATATYPE = @as(c_int, 96);
pub const UA_TYPES_DIAGNOSTICSLEVEL = @as(c_int, 97);
pub const UA_TYPES_PUBSUBDIAGNOSTICSCOUNTERCLASSIFICATION = @as(c_int, 98);
pub const UA_TYPES_ALIASNAMEDATATYPE = @as(c_int, 99);
pub const UA_PASSWORDOPTIONSMASK_NONE = @as(c_int, 0);
pub const UA_PASSWORDOPTIONSMASK_SUPPORTINITIALPASSWORDCHANGE = @as(c_int, 1);
pub const UA_PASSWORDOPTIONSMASK_SUPPORTDISABLEUSER = @as(c_int, 2);
pub const UA_PASSWORDOPTIONSMASK_SUPPORTDISABLEDELETEFORUSER = @as(c_int, 4);
pub const UA_PASSWORDOPTIONSMASK_SUPPORTNOCHANGEFORUSER = @as(c_int, 8);
pub const UA_PASSWORDOPTIONSMASK_SUPPORTDESCRIPTIONFORUSER = @as(c_int, 16);
pub const UA_PASSWORDOPTIONSMASK_REQUIRESUPPERCASECHARACTERS = @as(c_int, 32);
pub const UA_PASSWORDOPTIONSMASK_REQUIRESLOWERCASECHARACTERS = @as(c_int, 64);
pub const UA_PASSWORDOPTIONSMASK_REQUIRESDIGITCHARACTERS = @as(c_int, 128);
pub const UA_PASSWORDOPTIONSMASK_REQUIRESSPECIALCHARACTERS = @as(c_int, 256);
pub const UA_TYPES_PASSWORDOPTIONSMASK = @as(c_int, 100);
pub const UA_USERCONFIGURATIONMASK_NONE = @as(c_int, 0);
pub const UA_USERCONFIGURATIONMASK_NODELETE = @as(c_int, 1);
pub const UA_USERCONFIGURATIONMASK_DISABLED = @as(c_int, 2);
pub const UA_USERCONFIGURATIONMASK_NOCHANGEBYUSER = @as(c_int, 4);
pub const UA_USERCONFIGURATIONMASK_MUSTCHANGEPASSWORD = @as(c_int, 8);
pub const UA_TYPES_USERCONFIGURATIONMASK = @as(c_int, 101);
pub const UA_TYPES_USERMANAGEMENTDATATYPE = @as(c_int, 102);
pub const UA_TYPES_ENCODEDTICKET = @as(c_int, 103);
pub const UA_TYPES_DUPLEX = @as(c_int, 104);
pub const UA_TYPES_INTERFACEADMINSTATUS = @as(c_int, 105);
pub const UA_TYPES_INTERFACEOPERSTATUS = @as(c_int, 106);
pub const UA_TYPES_NEGOTIATIONSTATUS = @as(c_int, 107);
pub const UA_TYPES_TSNFAILURECODE = @as(c_int, 108);
pub const UA_TYPES_TSNSTREAMSTATE = @as(c_int, 109);
pub const UA_TYPES_TSNTALKERSTATUS = @as(c_int, 110);
pub const UA_TYPES_TSNLISTENERSTATUS = @as(c_int, 111);
pub const UA_TYPES_PRIORITYMAPPINGENTRYTYPE = @as(c_int, 112);
pub const UA_TYPES_REFERENCEDESCRIPTIONDATATYPE = @as(c_int, 113);
pub const UA_TYPES_REFERENCELISTENTRYDATATYPE = @as(c_int, 114);
pub const UA_TYPES_IDTYPE = @as(c_int, 115);
pub const UA_TYPES_NODECLASS = @as(c_int, 116);
pub const UA_PERMISSIONTYPE_NONE = @as(c_int, 0);
pub const UA_PERMISSIONTYPE_BROWSE = @as(c_int, 1);
pub const UA_PERMISSIONTYPE_READROLEPERMISSIONS = @as(c_int, 2);
pub const UA_PERMISSIONTYPE_WRITEATTRIBUTE = @as(c_int, 4);
pub const UA_PERMISSIONTYPE_WRITEROLEPERMISSIONS = @as(c_int, 8);
pub const UA_PERMISSIONTYPE_WRITEHISTORIZING = @as(c_int, 16);
pub const UA_PERMISSIONTYPE_READ = @as(c_int, 32);
pub const UA_PERMISSIONTYPE_WRITE = @as(c_int, 64);
pub const UA_PERMISSIONTYPE_READHISTORY = @as(c_int, 128);
pub const UA_PERMISSIONTYPE_INSERTHISTORY = @as(c_int, 256);
pub const UA_PERMISSIONTYPE_MODIFYHISTORY = @as(c_int, 512);
pub const UA_PERMISSIONTYPE_DELETEHISTORY = @as(c_int, 1024);
pub const UA_PERMISSIONTYPE_RECEIVEEVENTS = @as(c_int, 2048);
pub const UA_PERMISSIONTYPE_CALL = @as(c_int, 4096);
pub const UA_PERMISSIONTYPE_ADDREFERENCE = @as(c_int, 8192);
pub const UA_PERMISSIONTYPE_REMOVEREFERENCE = @as(c_int, 16384);
pub const UA_PERMISSIONTYPE_DELETENODE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 32768, .decimal);
pub const UA_PERMISSIONTYPE_ADDNODE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 65536, .decimal);
pub const UA_TYPES_PERMISSIONTYPE = @as(c_int, 117);
pub const UA_ACCESSLEVELTYPE_NONE = @as(c_int, 0);
pub const UA_ACCESSLEVELTYPE_CURRENTREAD = @as(c_int, 1);
pub const UA_ACCESSLEVELTYPE_CURRENTWRITE = @as(c_int, 2);
pub const UA_ACCESSLEVELTYPE_HISTORYREAD = @as(c_int, 4);
pub const UA_ACCESSLEVELTYPE_HISTORYWRITE = @as(c_int, 8);
pub const UA_ACCESSLEVELTYPE_SEMANTICCHANGE = @as(c_int, 16);
pub const UA_ACCESSLEVELTYPE_STATUSWRITE = @as(c_int, 32);
pub const UA_ACCESSLEVELTYPE_TIMESTAMPWRITE = @as(c_int, 64);
pub const UA_TYPES_ACCESSLEVELTYPE = @as(c_int, 118);
pub const UA_ACCESSLEVELEXTYPE_NONE = @as(c_int, 0);
pub const UA_ACCESSLEVELEXTYPE_CURRENTREAD = @as(c_int, 1);
pub const UA_ACCESSLEVELEXTYPE_CURRENTWRITE = @as(c_int, 2);
pub const UA_ACCESSLEVELEXTYPE_HISTORYREAD = @as(c_int, 4);
pub const UA_ACCESSLEVELEXTYPE_HISTORYWRITE = @as(c_int, 8);
pub const UA_ACCESSLEVELEXTYPE_SEMANTICCHANGE = @as(c_int, 16);
pub const UA_ACCESSLEVELEXTYPE_STATUSWRITE = @as(c_int, 32);
pub const UA_ACCESSLEVELEXTYPE_TIMESTAMPWRITE = @as(c_int, 64);
pub const UA_ACCESSLEVELEXTYPE_NONATOMICREAD = @as(c_int, 256);
pub const UA_ACCESSLEVELEXTYPE_NONATOMICWRITE = @as(c_int, 512);
pub const UA_ACCESSLEVELEXTYPE_WRITEFULLARRAYONLY = @as(c_int, 1024);
pub const UA_ACCESSLEVELEXTYPE_NOSUBDATATYPES = @as(c_int, 2048);
pub const UA_ACCESSLEVELEXTYPE_NONVOLATILE = @as(c_int, 4096);
pub const UA_ACCESSLEVELEXTYPE_CONSTANT = @as(c_int, 8192);
pub const UA_TYPES_ACCESSLEVELEXTYPE = @as(c_int, 119);
pub const UA_EVENTNOTIFIERTYPE_NONE = @as(c_int, 0);
pub const UA_EVENTNOTIFIERTYPE_SUBSCRIBETOEVENTS = @as(c_int, 1);
pub const UA_EVENTNOTIFIERTYPE_HISTORYREAD = @as(c_int, 4);
pub const UA_EVENTNOTIFIERTYPE_HISTORYWRITE = @as(c_int, 8);
pub const UA_TYPES_EVENTNOTIFIERTYPE = @as(c_int, 120);
pub const UA_ACCESSRESTRICTIONTYPE_NONE = @as(c_int, 0);
pub const UA_ACCESSRESTRICTIONTYPE_SIGNINGREQUIRED = @as(c_int, 1);
pub const UA_ACCESSRESTRICTIONTYPE_ENCRYPTIONREQUIRED = @as(c_int, 2);
pub const UA_ACCESSRESTRICTIONTYPE_SESSIONREQUIRED = @as(c_int, 4);
pub const UA_ACCESSRESTRICTIONTYPE_APPLYRESTRICTIONSTOBROWSE = @as(c_int, 8);
pub const UA_TYPES_ACCESSRESTRICTIONTYPE = @as(c_int, 121);
pub const UA_TYPES_ROLEPERMISSIONTYPE = @as(c_int, 122);
pub const UA_TYPES_STRUCTURETYPE = @as(c_int, 123);
pub const UA_TYPES_STRUCTUREFIELD = @as(c_int, 124);
pub const UA_TYPES_STRUCTUREDEFINITION = @as(c_int, 125);
pub const UA_TYPES_ARGUMENT = @as(c_int, 126);
pub const UA_TYPES_ENUMVALUETYPE = @as(c_int, 127);
pub const UA_TYPES_ENUMFIELD = @as(c_int, 128);
pub const UA_TYPES_OPTIONSET = @as(c_int, 129);
pub const UA_TYPES_NORMALIZEDSTRING = @as(c_int, 130);
pub const UA_TYPES_DECIMALSTRING = @as(c_int, 131);
pub const UA_TYPES_DURATIONSTRING = @as(c_int, 132);
pub const UA_TYPES_TIMESTRING = @as(c_int, 133);
pub const UA_TYPES_DATESTRING = @as(c_int, 134);
pub const UA_TYPES_DURATION = @as(c_int, 135);
pub const UA_TYPES_UTCTIME = @as(c_int, 136);
pub const UA_TYPES_LOCALEID = @as(c_int, 137);
pub const UA_TYPES_TIMEZONEDATATYPE = @as(c_int, 138);
pub const UA_TYPES_INDEX = @as(c_int, 139);
pub const UA_TYPES_INTEGERID = @as(c_int, 140);
pub const UA_TYPES_APPLICATIONTYPE = @as(c_int, 141);
pub const UA_TYPES_APPLICATIONDESCRIPTION = @as(c_int, 142);
pub const UA_TYPES_REQUESTHEADER = @as(c_int, 143);
pub const UA_TYPES_RESPONSEHEADER = @as(c_int, 144);
pub const UA_TYPES_VERSIONTIME = @as(c_int, 145);
pub const UA_TYPES_SERVICEFAULT = @as(c_int, 146);
pub const UA_TYPES_SESSIONLESSINVOKEREQUESTTYPE = @as(c_int, 147);
pub const UA_TYPES_SESSIONLESSINVOKERESPONSETYPE = @as(c_int, 148);
pub const UA_TYPES_FINDSERVERSREQUEST = @as(c_int, 149);
pub const UA_TYPES_FINDSERVERSRESPONSE = @as(c_int, 150);
pub const UA_TYPES_SERVERONNETWORK = @as(c_int, 151);
pub const UA_TYPES_FINDSERVERSONNETWORKREQUEST = @as(c_int, 152);
pub const UA_TYPES_FINDSERVERSONNETWORKRESPONSE = @as(c_int, 153);
pub const UA_TYPES_APPLICATIONINSTANCECERTIFICATE = @as(c_int, 154);
pub const UA_TYPES_MESSAGESECURITYMODE = @as(c_int, 155);
pub const UA_TYPES_USERTOKENTYPE = @as(c_int, 156);
pub const UA_TYPES_USERTOKENPOLICY = @as(c_int, 157);
pub const UA_TYPES_ENDPOINTDESCRIPTION = @as(c_int, 158);
pub const UA_TYPES_GETENDPOINTSREQUEST = @as(c_int, 159);
pub const UA_TYPES_GETENDPOINTSRESPONSE = @as(c_int, 160);
pub const UA_TYPES_REGISTEREDSERVER = @as(c_int, 161);
pub const UA_TYPES_REGISTERSERVERREQUEST = @as(c_int, 162);
pub const UA_TYPES_REGISTERSERVERRESPONSE = @as(c_int, 163);
pub const UA_TYPES_MDNSDISCOVERYCONFIGURATION = @as(c_int, 164);
pub const UA_TYPES_REGISTERSERVER2REQUEST = @as(c_int, 165);
pub const UA_TYPES_REGISTERSERVER2RESPONSE = @as(c_int, 166);
pub const UA_TYPES_SECURITYTOKENREQUESTTYPE = @as(c_int, 167);
pub const UA_TYPES_CHANNELSECURITYTOKEN = @as(c_int, 168);
pub const UA_TYPES_OPENSECURECHANNELREQUEST = @as(c_int, 169);
pub const UA_TYPES_OPENSECURECHANNELRESPONSE = @as(c_int, 170);
pub const UA_TYPES_CLOSESECURECHANNELREQUEST = @as(c_int, 171);
pub const UA_TYPES_CLOSESECURECHANNELRESPONSE = @as(c_int, 172);
pub const UA_TYPES_SIGNEDSOFTWARECERTIFICATE = @as(c_int, 173);
pub const UA_TYPES_SESSIONAUTHENTICATIONTOKEN = @as(c_int, 174);
pub const UA_TYPES_SIGNATUREDATA = @as(c_int, 175);
pub const UA_TYPES_CREATESESSIONREQUEST = @as(c_int, 176);
pub const UA_TYPES_CREATESESSIONRESPONSE = @as(c_int, 177);
pub const UA_TYPES_USERIDENTITYTOKEN = @as(c_int, 178);
pub const UA_TYPES_ANONYMOUSIDENTITYTOKEN = @as(c_int, 179);
pub const UA_TYPES_USERNAMEIDENTITYTOKEN = @as(c_int, 180);
pub const UA_TYPES_X509IDENTITYTOKEN = @as(c_int, 181);
pub const UA_TYPES_ISSUEDIDENTITYTOKEN = @as(c_int, 182);
pub const UA_TYPES_RSAENCRYPTEDSECRET = @as(c_int, 183);
pub const UA_TYPES_ECCENCRYPTEDSECRET = @as(c_int, 184);
pub const UA_TYPES_ACTIVATESESSIONREQUEST = @as(c_int, 185);
pub const UA_TYPES_ACTIVATESESSIONRESPONSE = @as(c_int, 186);
pub const UA_TYPES_CLOSESESSIONREQUEST = @as(c_int, 187);
pub const UA_TYPES_CLOSESESSIONRESPONSE = @as(c_int, 188);
pub const UA_TYPES_CANCELREQUEST = @as(c_int, 189);
pub const UA_TYPES_CANCELRESPONSE = @as(c_int, 190);
pub const UA_TYPES_NODEATTRIBUTESMASK = @as(c_int, 191);
pub const UA_TYPES_NODEATTRIBUTES = @as(c_int, 192);
pub const UA_TYPES_OBJECTATTRIBUTES = @as(c_int, 193);
pub const UA_TYPES_VARIABLEATTRIBUTES = @as(c_int, 194);
pub const UA_TYPES_METHODATTRIBUTES = @as(c_int, 195);
pub const UA_TYPES_OBJECTTYPEATTRIBUTES = @as(c_int, 196);
pub const UA_TYPES_VARIABLETYPEATTRIBUTES = @as(c_int, 197);
pub const UA_TYPES_REFERENCETYPEATTRIBUTES = @as(c_int, 198);
pub const UA_TYPES_DATATYPEATTRIBUTES = @as(c_int, 199);
pub const UA_TYPES_VIEWATTRIBUTES = @as(c_int, 200);
pub const UA_TYPES_GENERICATTRIBUTEVALUE = @as(c_int, 201);
pub const UA_TYPES_GENERICATTRIBUTES = @as(c_int, 202);
pub const UA_TYPES_ADDNODESITEM = @as(c_int, 203);
pub const UA_TYPES_ADDNODESRESULT = @as(c_int, 204);
pub const UA_TYPES_ADDNODESREQUEST = @as(c_int, 205);
pub const UA_TYPES_ADDNODESRESPONSE = @as(c_int, 206);
pub const UA_TYPES_ADDREFERENCESITEM = @as(c_int, 207);
pub const UA_TYPES_ADDREFERENCESREQUEST = @as(c_int, 208);
pub const UA_TYPES_ADDREFERENCESRESPONSE = @as(c_int, 209);
pub const UA_TYPES_DELETENODESITEM = @as(c_int, 210);
pub const UA_TYPES_DELETENODESREQUEST = @as(c_int, 211);
pub const UA_TYPES_DELETENODESRESPONSE = @as(c_int, 212);
pub const UA_TYPES_DELETEREFERENCESITEM = @as(c_int, 213);
pub const UA_TYPES_DELETEREFERENCESREQUEST = @as(c_int, 214);
pub const UA_TYPES_DELETEREFERENCESRESPONSE = @as(c_int, 215);
pub const UA_ATTRIBUTEWRITEMASK_NONE = @as(c_int, 0);
pub const UA_ATTRIBUTEWRITEMASK_ACCESSLEVEL = @as(c_int, 1);
pub const UA_ATTRIBUTEWRITEMASK_ARRAYDIMENSIONS = @as(c_int, 2);
pub const UA_ATTRIBUTEWRITEMASK_BROWSENAME = @as(c_int, 4);
pub const UA_ATTRIBUTEWRITEMASK_CONTAINSNOLOOPS = @as(c_int, 8);
pub const UA_ATTRIBUTEWRITEMASK_DATATYPE = @as(c_int, 16);
pub const UA_ATTRIBUTEWRITEMASK_DESCRIPTION = @as(c_int, 32);
pub const UA_ATTRIBUTEWRITEMASK_DISPLAYNAME = @as(c_int, 64);
pub const UA_ATTRIBUTEWRITEMASK_EVENTNOTIFIER = @as(c_int, 128);
pub const UA_ATTRIBUTEWRITEMASK_EXECUTABLE = @as(c_int, 256);
pub const UA_ATTRIBUTEWRITEMASK_HISTORIZING = @as(c_int, 512);
pub const UA_ATTRIBUTEWRITEMASK_INVERSENAME = @as(c_int, 1024);
pub const UA_ATTRIBUTEWRITEMASK_ISABSTRACT = @as(c_int, 2048);
pub const UA_ATTRIBUTEWRITEMASK_MINIMUMSAMPLINGINTERVAL = @as(c_int, 4096);
pub const UA_ATTRIBUTEWRITEMASK_NODECLASS = @as(c_int, 8192);
pub const UA_ATTRIBUTEWRITEMASK_NODEID = @as(c_int, 16384);
pub const UA_ATTRIBUTEWRITEMASK_SYMMETRIC = @import("std").zig.c_translation.promoteIntLiteral(c_int, 32768, .decimal);
pub const UA_ATTRIBUTEWRITEMASK_USERACCESSLEVEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 65536, .decimal);
pub const UA_ATTRIBUTEWRITEMASK_USEREXECUTABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 131072, .decimal);
pub const UA_ATTRIBUTEWRITEMASK_USERWRITEMASK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 262144, .decimal);
pub const UA_ATTRIBUTEWRITEMASK_VALUERANK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 524288, .decimal);
pub const UA_ATTRIBUTEWRITEMASK_WRITEMASK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 1048576, .decimal);
pub const UA_ATTRIBUTEWRITEMASK_VALUEFORVARIABLETYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2097152, .decimal);
pub const UA_ATTRIBUTEWRITEMASK_DATATYPEDEFINITION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 4194304, .decimal);
pub const UA_ATTRIBUTEWRITEMASK_ROLEPERMISSIONS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 8388608, .decimal);
pub const UA_ATTRIBUTEWRITEMASK_ACCESSRESTRICTIONS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 16777216, .decimal);
pub const UA_ATTRIBUTEWRITEMASK_ACCESSLEVELEX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 33554432, .decimal);
pub const UA_TYPES_ATTRIBUTEWRITEMASK = @as(c_int, 216);
pub const UA_TYPES_BROWSEDIRECTION = @as(c_int, 217);
pub const UA_TYPES_VIEWDESCRIPTION = @as(c_int, 218);
pub const UA_TYPES_BROWSEDESCRIPTION = @as(c_int, 219);
pub const UA_TYPES_BROWSERESULTMASK = @as(c_int, 220);
pub const UA_TYPES_REFERENCEDESCRIPTION = @as(c_int, 221);
pub const UA_TYPES_CONTINUATIONPOINT = @as(c_int, 222);
pub const UA_TYPES_BROWSERESULT = @as(c_int, 223);
pub const UA_TYPES_BROWSEREQUEST = @as(c_int, 224);
pub const UA_TYPES_BROWSERESPONSE = @as(c_int, 225);
pub const UA_TYPES_BROWSENEXTREQUEST = @as(c_int, 226);
pub const UA_TYPES_BROWSENEXTRESPONSE = @as(c_int, 227);
pub const UA_TYPES_RELATIVEPATHELEMENT = @as(c_int, 228);
pub const UA_TYPES_RELATIVEPATH = @as(c_int, 229);
pub const UA_TYPES_BROWSEPATH = @as(c_int, 230);
pub const UA_TYPES_BROWSEPATHTARGET = @as(c_int, 231);
pub const UA_TYPES_BROWSEPATHRESULT = @as(c_int, 232);
pub const UA_TYPES_TRANSLATEBROWSEPATHSTONODEIDSREQUEST = @as(c_int, 233);
pub const UA_TYPES_TRANSLATEBROWSEPATHSTONODEIDSRESPONSE = @as(c_int, 234);
pub const UA_TYPES_REGISTERNODESREQUEST = @as(c_int, 235);
pub const UA_TYPES_REGISTERNODESRESPONSE = @as(c_int, 236);
pub const UA_TYPES_UNREGISTERNODESREQUEST = @as(c_int, 237);
pub const UA_TYPES_UNREGISTERNODESRESPONSE = @as(c_int, 238);
pub const UA_TYPES_COUNTER = @as(c_int, 239);
pub const UA_TYPES_OPAQUENUMERICRANGE = @as(c_int, 240);
pub const UA_TYPES_ENDPOINTCONFIGURATION = @as(c_int, 241);
pub const UA_TYPES_QUERYDATADESCRIPTION = @as(c_int, 242);
pub const UA_TYPES_NODETYPEDESCRIPTION = @as(c_int, 243);
pub const UA_TYPES_FILTEROPERATOR = @as(c_int, 244);
pub const UA_TYPES_QUERYDATASET = @as(c_int, 245);
pub const UA_TYPES_NODEREFERENCE = @as(c_int, 246);
pub const UA_TYPES_CONTENTFILTERELEMENT = @as(c_int, 247);
pub const UA_TYPES_CONTENTFILTER = @as(c_int, 248);
pub const UA_TYPES_ELEMENTOPERAND = @as(c_int, 249);
pub const UA_TYPES_LITERALOPERAND = @as(c_int, 250);
pub const UA_TYPES_ATTRIBUTEOPERAND = @as(c_int, 251);
pub const UA_TYPES_SIMPLEATTRIBUTEOPERAND = @as(c_int, 252);
pub const UA_TYPES_CONTENTFILTERELEMENTRESULT = @as(c_int, 253);
pub const UA_TYPES_CONTENTFILTERRESULT = @as(c_int, 254);
pub const UA_TYPES_PARSINGRESULT = @as(c_int, 255);
pub const UA_TYPES_QUERYFIRSTREQUEST = @as(c_int, 256);
pub const UA_TYPES_QUERYFIRSTRESPONSE = @as(c_int, 257);
pub const UA_TYPES_QUERYNEXTREQUEST = @as(c_int, 258);
pub const UA_TYPES_QUERYNEXTRESPONSE = @as(c_int, 259);
pub const UA_TYPES_TIMESTAMPSTORETURN = @as(c_int, 260);
pub const UA_TYPES_READVALUEID = @as(c_int, 261);
pub const UA_TYPES_READREQUEST = @as(c_int, 262);
pub const UA_TYPES_READRESPONSE = @as(c_int, 263);
pub const UA_TYPES_HISTORYREADVALUEID = @as(c_int, 264);
pub const UA_TYPES_HISTORYREADRESULT = @as(c_int, 265);
pub const UA_TYPES_READRAWMODIFIEDDETAILS = @as(c_int, 266);
pub const UA_TYPES_READATTIMEDETAILS = @as(c_int, 267);
pub const UA_TYPES_READANNOTATIONDATADETAILS = @as(c_int, 268);
pub const UA_TYPES_HISTORYDATA = @as(c_int, 269);
pub const UA_TYPES_HISTORYREADREQUEST = @as(c_int, 270);
pub const UA_TYPES_HISTORYREADRESPONSE = @as(c_int, 271);
pub const UA_TYPES_WRITEVALUE = @as(c_int, 272);
pub const UA_TYPES_WRITEREQUEST = @as(c_int, 273);
pub const UA_TYPES_WRITERESPONSE = @as(c_int, 274);
pub const UA_TYPES_HISTORYUPDATEDETAILS = @as(c_int, 275);
pub const UA_TYPES_HISTORYUPDATETYPE = @as(c_int, 276);
pub const UA_TYPES_PERFORMUPDATETYPE = @as(c_int, 277);
pub const UA_TYPES_UPDATEDATADETAILS = @as(c_int, 278);
pub const UA_TYPES_UPDATESTRUCTUREDATADETAILS = @as(c_int, 279);
pub const UA_TYPES_DELETERAWMODIFIEDDETAILS = @as(c_int, 280);
pub const UA_TYPES_DELETEATTIMEDETAILS = @as(c_int, 281);
pub const UA_TYPES_DELETEEVENTDETAILS = @as(c_int, 282);
pub const UA_TYPES_HISTORYUPDATERESULT = @as(c_int, 283);
pub const UA_TYPES_HISTORYUPDATEREQUEST = @as(c_int, 284);
pub const UA_TYPES_HISTORYUPDATERESPONSE = @as(c_int, 285);
pub const UA_TYPES_CALLMETHODREQUEST = @as(c_int, 286);
pub const UA_TYPES_CALLMETHODRESULT = @as(c_int, 287);
pub const UA_TYPES_CALLREQUEST = @as(c_int, 288);
pub const UA_TYPES_CALLRESPONSE = @as(c_int, 289);
pub const UA_TYPES_MONITORINGMODE = @as(c_int, 290);
pub const UA_TYPES_DATACHANGETRIGGER = @as(c_int, 291);
pub const UA_TYPES_DEADBANDTYPE = @as(c_int, 292);
pub const UA_TYPES_DATACHANGEFILTER = @as(c_int, 293);
pub const UA_TYPES_EVENTFILTER = @as(c_int, 294);
pub const UA_TYPES_AGGREGATECONFIGURATION = @as(c_int, 295);
pub const UA_TYPES_AGGREGATEFILTER = @as(c_int, 296);
pub const UA_TYPES_EVENTFILTERRESULT = @as(c_int, 297);
pub const UA_TYPES_AGGREGATEFILTERRESULT = @as(c_int, 298);
pub const UA_TYPES_MONITORINGPARAMETERS = @as(c_int, 299);
pub const UA_TYPES_MONITOREDITEMCREATEREQUEST = @as(c_int, 300);
pub const UA_TYPES_MONITOREDITEMCREATERESULT = @as(c_int, 301);
pub const UA_TYPES_CREATEMONITOREDITEMSREQUEST = @as(c_int, 302);
pub const UA_TYPES_CREATEMONITOREDITEMSRESPONSE = @as(c_int, 303);
pub const UA_TYPES_MONITOREDITEMMODIFYREQUEST = @as(c_int, 304);
pub const UA_TYPES_MONITOREDITEMMODIFYRESULT = @as(c_int, 305);
pub const UA_TYPES_MODIFYMONITOREDITEMSREQUEST = @as(c_int, 306);
pub const UA_TYPES_MODIFYMONITOREDITEMSRESPONSE = @as(c_int, 307);
pub const UA_TYPES_SETMONITORINGMODEREQUEST = @as(c_int, 308);
pub const UA_TYPES_SETMONITORINGMODERESPONSE = @as(c_int, 309);
pub const UA_TYPES_SETTRIGGERINGREQUEST = @as(c_int, 310);
pub const UA_TYPES_SETTRIGGERINGRESPONSE = @as(c_int, 311);
pub const UA_TYPES_DELETEMONITOREDITEMSREQUEST = @as(c_int, 312);
pub const UA_TYPES_DELETEMONITOREDITEMSRESPONSE = @as(c_int, 313);
pub const UA_TYPES_CREATESUBSCRIPTIONREQUEST = @as(c_int, 314);
pub const UA_TYPES_CREATESUBSCRIPTIONRESPONSE = @as(c_int, 315);
pub const UA_TYPES_MODIFYSUBSCRIPTIONREQUEST = @as(c_int, 316);
pub const UA_TYPES_MODIFYSUBSCRIPTIONRESPONSE = @as(c_int, 317);
pub const UA_TYPES_SETPUBLISHINGMODEREQUEST = @as(c_int, 318);
pub const UA_TYPES_SETPUBLISHINGMODERESPONSE = @as(c_int, 319);
pub const UA_TYPES_NOTIFICATIONMESSAGE = @as(c_int, 320);
pub const UA_TYPES_MONITOREDITEMNOTIFICATION = @as(c_int, 321);
pub const UA_TYPES_EVENTFIELDLIST = @as(c_int, 322);
pub const UA_TYPES_HISTORYEVENTFIELDLIST = @as(c_int, 323);
pub const UA_TYPES_STATUSCHANGENOTIFICATION = @as(c_int, 324);
pub const UA_TYPES_SUBSCRIPTIONACKNOWLEDGEMENT = @as(c_int, 325);
pub const UA_TYPES_PUBLISHREQUEST = @as(c_int, 326);
pub const UA_TYPES_PUBLISHRESPONSE = @as(c_int, 327);
pub const UA_TYPES_REPUBLISHREQUEST = @as(c_int, 328);
pub const UA_TYPES_REPUBLISHRESPONSE = @as(c_int, 329);
pub const UA_TYPES_TRANSFERRESULT = @as(c_int, 330);
pub const UA_TYPES_TRANSFERSUBSCRIPTIONSREQUEST = @as(c_int, 331);
pub const UA_TYPES_TRANSFERSUBSCRIPTIONSRESPONSE = @as(c_int, 332);
pub const UA_TYPES_DELETESUBSCRIPTIONSREQUEST = @as(c_int, 333);
pub const UA_TYPES_DELETESUBSCRIPTIONSRESPONSE = @as(c_int, 334);
pub const UA_TYPES_BUILDINFO = @as(c_int, 335);
pub const UA_TYPES_REDUNDANCYSUPPORT = @as(c_int, 336);
pub const UA_TYPES_SERVERSTATE = @as(c_int, 337);
pub const UA_TYPES_REDUNDANTSERVERDATATYPE = @as(c_int, 338);
pub const UA_TYPES_ENDPOINTURLLISTDATATYPE = @as(c_int, 339);
pub const UA_TYPES_NETWORKGROUPDATATYPE = @as(c_int, 340);
pub const UA_TYPES_SAMPLINGINTERVALDIAGNOSTICSDATATYPE = @as(c_int, 341);
pub const UA_TYPES_SERVERDIAGNOSTICSSUMMARYDATATYPE = @as(c_int, 342);
pub const UA_TYPES_SERVERSTATUSDATATYPE = @as(c_int, 343);
pub const UA_TYPES_SESSIONSECURITYDIAGNOSTICSDATATYPE = @as(c_int, 344);
pub const UA_TYPES_SERVICECOUNTERDATATYPE = @as(c_int, 345);
pub const UA_TYPES_STATUSRESULT = @as(c_int, 346);
pub const UA_TYPES_SUBSCRIPTIONDIAGNOSTICSDATATYPE = @as(c_int, 347);
pub const UA_TYPES_MODELCHANGESTRUCTUREVERBMASK = @as(c_int, 348);
pub const UA_TYPES_MODELCHANGESTRUCTUREDATATYPE = @as(c_int, 349);
pub const UA_TYPES_SEMANTICCHANGESTRUCTUREDATATYPE = @as(c_int, 350);
pub const UA_TYPES_RANGE = @as(c_int, 351);
pub const UA_TYPES_EUINFORMATION = @as(c_int, 352);
pub const UA_TYPES_AXISSCALEENUMERATION = @as(c_int, 353);
pub const UA_TYPES_COMPLEXNUMBERTYPE = @as(c_int, 354);
pub const UA_TYPES_DOUBLECOMPLEXNUMBERTYPE = @as(c_int, 355);
pub const UA_TYPES_AXISINFORMATION = @as(c_int, 356);
pub const UA_TYPES_XVTYPE = @as(c_int, 357);
pub const UA_TYPES_PROGRAMDIAGNOSTICDATATYPE = @as(c_int, 358);
pub const UA_TYPES_PROGRAMDIAGNOSTIC2DATATYPE = @as(c_int, 359);
pub const UA_TYPES_ANNOTATION = @as(c_int, 360);
pub const UA_TYPES_EXCEPTIONDEVIATIONFORMAT = @as(c_int, 361);
pub const UA_TYPES_ENDPOINTTYPE = @as(c_int, 362);
pub const UA_TYPES_STRUCTUREDESCRIPTION = @as(c_int, 363);
pub const UA_TYPES_FIELDMETADATA = @as(c_int, 364);
pub const UA_TYPES_PUBLISHEDEVENTSDATATYPE = @as(c_int, 365);
pub const UA_TYPES_PUBSUBGROUPDATATYPE = @as(c_int, 366);
pub const UA_TYPES_WRITERGROUPDATATYPE = @as(c_int, 367);
pub const UA_TYPES_FIELDTARGETDATATYPE = @as(c_int, 368);
pub const UA_TYPES_SUBSCRIBEDDATASETMIRRORDATATYPE = @as(c_int, 369);
pub const UA_TYPES_SECURITYGROUPDATATYPE = @as(c_int, 370);
pub const UA_TYPES_PUBSUBKEYPUSHTARGETDATATYPE = @as(c_int, 371);
pub const UA_TYPES_ENUMDEFINITION = @as(c_int, 372);
pub const UA_TYPES_READEVENTDETAILS = @as(c_int, 373);
pub const UA_TYPES_READPROCESSEDDETAILS = @as(c_int, 374);
pub const UA_TYPES_MODIFICATIONINFO = @as(c_int, 375);
pub const UA_TYPES_HISTORYMODIFIEDDATA = @as(c_int, 376);
pub const UA_TYPES_HISTORYEVENT = @as(c_int, 377);
pub const UA_TYPES_UPDATEEVENTDETAILS = @as(c_int, 378);
pub const UA_TYPES_DATACHANGENOTIFICATION = @as(c_int, 379);
pub const UA_TYPES_EVENTNOTIFICATIONLIST = @as(c_int, 380);
pub const UA_TYPES_SESSIONDIAGNOSTICSDATATYPE = @as(c_int, 381);
pub const UA_TYPES_ENUMDESCRIPTION = @as(c_int, 382);
pub const UA_TYPES_UABINARYFILEDATATYPE = @as(c_int, 383);
pub const UA_TYPES_DATASETMETADATATYPE = @as(c_int, 384);
pub const UA_TYPES_PUBLISHEDDATASETDATATYPE = @as(c_int, 385);
pub const UA_TYPES_DATASETREADERDATATYPE = @as(c_int, 386);
pub const UA_TYPES_TARGETVARIABLESDATATYPE = @as(c_int, 387);
pub const UA_TYPES_STANDALONESUBSCRIBEDDATASETDATATYPE = @as(c_int, 388);
pub const UA_TYPES_DATATYPESCHEMAHEADER = @as(c_int, 389);
pub const UA_TYPES_READERGROUPDATATYPE = @as(c_int, 390);
pub const UA_TYPES_PUBSUBCONNECTIONDATATYPE = @as(c_int, 391);
pub const UA_TYPES_PUBSUBCONFIGURATIONDATATYPE = @as(c_int, 392);
pub const UA_TYPES_PUBSUBCONFIGURATION2DATATYPE = @as(c_int, 393);
pub inline fn UA_MIN(A: anytype, B: anytype) @TypeOf(if (A > B) B else A) {
    _ = &A;
    _ = &B;
    return if (A > B) B else A;
}
pub inline fn UA_MAX(A: anytype, B: anytype) @TypeOf(if (A > B) A else B) {
    _ = &A;
    _ = &B;
    return if (A > B) A else B;
}
pub const UA_PRINTF_GUID_FORMAT = "%08" ++ PRIx32 ++ "-%04" ++ PRIx16 ++ "-%04" ++ PRIx16 ++ "-%02" ++ PRIx8 ++ "%02" ++ PRIx8 ++ "-%02" ++ PRIx8 ++ "%02" ++ PRIx8 ++ "%02" ++ PRIx8 ++ "%02" ++ PRIx8 ++ "%02" ++ PRIx8 ++ "%02" ++ PRIx8;
pub inline fn UA_PRINTF_GUID_DATA(GUID: anytype) @TypeOf(GUID.data4[@as(usize, @intCast(@as(c_int, 7)))]) {
    _ = &GUID;
    return blk: {
        _ = GUID.data1;
        _ = GUID.data2;
        _ = GUID.data3;
        _ = GUID.data4[@as(usize, @intCast(@as(c_int, 0)))];
        _ = GUID.data4[@as(usize, @intCast(@as(c_int, 1)))];
        _ = GUID.data4[@as(usize, @intCast(@as(c_int, 2)))];
        _ = GUID.data4[@as(usize, @intCast(@as(c_int, 3)))];
        _ = GUID.data4[@as(usize, @intCast(@as(c_int, 4)))];
        _ = GUID.data4[@as(usize, @intCast(@as(c_int, 5)))];
        _ = GUID.data4[@as(usize, @intCast(@as(c_int, 6)))];
        break :blk GUID.data4[@as(usize, @intCast(@as(c_int, 7)))];
    };
}
pub const UA_PRINTF_STRING_FORMAT = "\"%.*s\"";
pub inline fn UA_PRINTF_STRING_DATA(STRING: anytype) @TypeOf(STRING.data) {
    _ = &STRING;
    return blk: {
        _ = @import("std").zig.c_translation.cast(c_int, STRING.length);
        break :blk STRING.data;
    };
}
pub const __need___va_list = "";
pub const __need_va_list = "";
pub const __need_va_arg = "";
pub const __need___va_copy = "";
pub const __need_va_copy = "";
pub const __STDARG_H = "";
pub const __GNUC_VA_LIST = "";
pub const _VA_LIST = "";
pub const va_start = @compileError("unable to translate macro: undefined identifier `__builtin_va_start`");
// /home/chris/.zvm/0.14.1/lib/include/__stdarg_va_arg.h:17:9
pub const va_end = @compileError("unable to translate macro: undefined identifier `__builtin_va_end`");
// /home/chris/.zvm/0.14.1/lib/include/__stdarg_va_arg.h:19:9
pub const va_arg = @compileError("unable to translate C expr: unexpected token 'an identifier'");
// /home/chris/.zvm/0.14.1/lib/include/__stdarg_va_arg.h:20:9
pub const __va_copy = @compileError("unable to translate macro: undefined identifier `__builtin_va_copy`");
// /home/chris/.zvm/0.14.1/lib/include/__stdarg___va_copy.h:11:9
pub const va_copy = @compileError("unable to translate macro: undefined identifier `__builtin_va_copy`");
// /home/chris/.zvm/0.14.1/lib/include/__stdarg_va_copy.h:11:9
pub const UA_LOGCATEGORIES = @as(c_int, 10);
pub const UA_REFERENCETYPEINDEX_REFERENCES = @as(c_int, 0);
pub const UA_REFERENCETYPEINDEX_HASSUBTYPE = @as(c_int, 1);
pub const UA_REFERENCETYPEINDEX_AGGREGATES = @as(c_int, 2);
pub const UA_REFERENCETYPEINDEX_HIERARCHICALREFERENCES = @as(c_int, 3);
pub const UA_REFERENCETYPEINDEX_NONHIERARCHICALREFERENCES = @as(c_int, 4);
pub const UA_REFERENCETYPEINDEX_HASCHILD = @as(c_int, 5);
pub const UA_REFERENCETYPEINDEX_ORGANIZES = @as(c_int, 6);
pub const UA_REFERENCETYPEINDEX_HASEVENTSOURCE = @as(c_int, 7);
pub const UA_REFERENCETYPEINDEX_HASMODELLINGRULE = @as(c_int, 8);
pub const UA_REFERENCETYPEINDEX_HASENCODING = @as(c_int, 9);
pub const UA_REFERENCETYPEINDEX_HASDESCRIPTION = @as(c_int, 10);
pub const UA_REFERENCETYPEINDEX_HASTYPEDEFINITION = @as(c_int, 11);
pub const UA_REFERENCETYPEINDEX_GENERATESEVENT = @as(c_int, 12);
pub const UA_REFERENCETYPEINDEX_HASPROPERTY = @as(c_int, 13);
pub const UA_REFERENCETYPEINDEX_HASCOMPONENT = @as(c_int, 14);
pub const UA_REFERENCETYPEINDEX_HASNOTIFIER = @as(c_int, 15);
pub const UA_REFERENCETYPEINDEX_HASORDEREDCOMPONENT = @as(c_int, 16);
pub const UA_REFERENCETYPEINDEX_HASINTERFACE = @as(c_int, 17);
pub const UA_REFERENCETYPESET_MAX = @as(c_int, 128);
pub const UA_NODE_VARIABLEATTRIBUTES = @compileError("unable to translate macro: undefined identifier `dataType`");
// ./vendor/open62541.h:44546:9
pub const UA_SERVER_PUBSUB_H = "";
pub const UA_Client_removeRepeatedCallback = @compileError("unable to translate C expr: unexpected token ';'");
// ./vendor/open62541.h:46920:9
pub const UA_Server_removeRepeatedCallback = @compileError("unable to translate C expr: unexpected token ';'");
// ./vendor/open62541.h:47471:9
pub const HAVE_NODEITER_CALLBACK = "";
pub inline fn UA_Server_setMethodNode_callback(server: anytype, methodNodeId: anytype, methodCallback: anytype) @TypeOf(UA_Server_setMethodNodeCallback(server, methodNodeId, methodCallback)) {
    _ = &server;
    _ = &methodNodeId;
    _ = &methodCallback;
    return UA_Server_setMethodNodeCallback(server, methodNodeId, methodCallback);
}
pub const UA_SERVER_CONFIG_FILE_BASED_H = "";
pub const _STDIO_H = @as(c_int, 1);
pub const _____fpos_t_defined = @as(c_int, 1);
pub const ____mbstate_t_defined = @as(c_int, 1);
pub const _____fpos64_t_defined = @as(c_int, 1);
pub const ____FILE_defined = @as(c_int, 1);
pub const __FILE_defined = @as(c_int, 1);
pub const __struct_FILE_defined = @as(c_int, 1);
pub const __getc_unlocked_body = @compileError("TODO postfix inc/dec expr");
// /usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h:102:9
pub const __putc_unlocked_body = @compileError("TODO postfix inc/dec expr");
// /usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h:106:9
pub const _IO_EOF_SEEN = @as(c_int, 0x0010);
pub inline fn __feof_unlocked_body(_fp: anytype) @TypeOf((_fp.*._flags & _IO_EOF_SEEN) != @as(c_int, 0)) {
    _ = &_fp;
    return (_fp.*._flags & _IO_EOF_SEEN) != @as(c_int, 0);
}
pub const _IO_ERR_SEEN = @as(c_int, 0x0020);
pub inline fn __ferror_unlocked_body(_fp: anytype) @TypeOf((_fp.*._flags & _IO_ERR_SEEN) != @as(c_int, 0)) {
    _ = &_fp;
    return (_fp.*._flags & _IO_ERR_SEEN) != @as(c_int, 0);
}
pub const _IO_USER_LOCK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8000, .hex);
pub const __cookie_io_functions_t_defined = @as(c_int, 1);
pub const _VA_LIST_DEFINED = "";
pub const _IOFBF = @as(c_int, 0);
pub const _IOLBF = @as(c_int, 1);
pub const _IONBF = @as(c_int, 2);
pub const BUFSIZ = @as(c_int, 8192);
pub const EOF = -@as(c_int, 1);
pub const SEEK_SET = @as(c_int, 0);
pub const SEEK_CUR = @as(c_int, 1);
pub const SEEK_END = @as(c_int, 2);
pub const SEEK_DATA = @as(c_int, 3);
pub const SEEK_HOLE = @as(c_int, 4);
pub const P_tmpdir = "/tmp";
pub const L_tmpnam = @as(c_int, 20);
pub const TMP_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 238328, .decimal);
pub const _BITS_STDIO_LIM_H = @as(c_int, 1);
pub const FILENAME_MAX = @as(c_int, 4096);
pub const L_ctermid = @as(c_int, 9);
pub const L_cuserid = @as(c_int, 9);
pub const FOPEN_MAX = @as(c_int, 16);
pub const _PRINTF_NAN_LEN_MAX = @as(c_int, 4);
pub const RENAME_NOREPLACE = @as(c_int, 1) << @as(c_int, 0);
pub const RENAME_EXCHANGE = @as(c_int, 1) << @as(c_int, 1);
pub const RENAME_WHITEOUT = @as(c_int, 1) << @as(c_int, 2);
pub const __attr_dealloc_fclose = __attr_dealloc(fclose, @as(c_int, 1));
pub const _ERRNO_H = @as(c_int, 1);
pub const _BITS_ERRNO_H = @as(c_int, 1);
pub const _ASM_GENERIC_ERRNO_H = "";
pub const _ASM_GENERIC_ERRNO_BASE_H = "";
pub const EPERM = @as(c_int, 1);
pub const ENOENT = @as(c_int, 2);
pub const ESRCH = @as(c_int, 3);
pub const EINTR = @as(c_int, 4);
pub const EIO = @as(c_int, 5);
pub const ENXIO = @as(c_int, 6);
pub const E2BIG = @as(c_int, 7);
pub const ENOEXEC = @as(c_int, 8);
pub const EBADF = @as(c_int, 9);
pub const ECHILD = @as(c_int, 10);
pub const EAGAIN = @as(c_int, 11);
pub const ENOMEM = @as(c_int, 12);
pub const EACCES = @as(c_int, 13);
pub const EFAULT = @as(c_int, 14);
pub const ENOTBLK = @as(c_int, 15);
pub const EBUSY = @as(c_int, 16);
pub const EEXIST = @as(c_int, 17);
pub const EXDEV = @as(c_int, 18);
pub const ENODEV = @as(c_int, 19);
pub const ENOTDIR = @as(c_int, 20);
pub const EISDIR = @as(c_int, 21);
pub const EINVAL = @as(c_int, 22);
pub const ENFILE = @as(c_int, 23);
pub const EMFILE = @as(c_int, 24);
pub const ENOTTY = @as(c_int, 25);
pub const ETXTBSY = @as(c_int, 26);
pub const EFBIG = @as(c_int, 27);
pub const ENOSPC = @as(c_int, 28);
pub const ESPIPE = @as(c_int, 29);
pub const EROFS = @as(c_int, 30);
pub const EMLINK = @as(c_int, 31);
pub const EPIPE = @as(c_int, 32);
pub const EDOM = @as(c_int, 33);
pub const ERANGE = @as(c_int, 34);
pub const EDEADLK = @as(c_int, 35);
pub const ENAMETOOLONG = @as(c_int, 36);
pub const ENOLCK = @as(c_int, 37);
pub const ENOSYS = @as(c_int, 38);
pub const ENOTEMPTY = @as(c_int, 39);
pub const ELOOP = @as(c_int, 40);
pub const EWOULDBLOCK = EAGAIN;
pub const ENOMSG = @as(c_int, 42);
pub const EIDRM = @as(c_int, 43);
pub const ECHRNG = @as(c_int, 44);
pub const EL2NSYNC = @as(c_int, 45);
pub const EL3HLT = @as(c_int, 46);
pub const EL3RST = @as(c_int, 47);
pub const ELNRNG = @as(c_int, 48);
pub const EUNATCH = @as(c_int, 49);
pub const ENOCSI = @as(c_int, 50);
pub const EL2HLT = @as(c_int, 51);
pub const EBADE = @as(c_int, 52);
pub const EBADR = @as(c_int, 53);
pub const EXFULL = @as(c_int, 54);
pub const ENOANO = @as(c_int, 55);
pub const EBADRQC = @as(c_int, 56);
pub const EBADSLT = @as(c_int, 57);
pub const EDEADLOCK = EDEADLK;
pub const EBFONT = @as(c_int, 59);
pub const ENOSTR = @as(c_int, 60);
pub const ENODATA = @as(c_int, 61);
pub const ETIME = @as(c_int, 62);
pub const ENOSR = @as(c_int, 63);
pub const ENONET = @as(c_int, 64);
pub const ENOPKG = @as(c_int, 65);
pub const EREMOTE = @as(c_int, 66);
pub const ENOLINK = @as(c_int, 67);
pub const EADV = @as(c_int, 68);
pub const ESRMNT = @as(c_int, 69);
pub const ECOMM = @as(c_int, 70);
pub const EPROTO = @as(c_int, 71);
pub const EMULTIHOP = @as(c_int, 72);
pub const EDOTDOT = @as(c_int, 73);
pub const EBADMSG = @as(c_int, 74);
pub const EOVERFLOW = @as(c_int, 75);
pub const ENOTUNIQ = @as(c_int, 76);
pub const EBADFD = @as(c_int, 77);
pub const EREMCHG = @as(c_int, 78);
pub const ELIBACC = @as(c_int, 79);
pub const ELIBBAD = @as(c_int, 80);
pub const ELIBSCN = @as(c_int, 81);
pub const ELIBMAX = @as(c_int, 82);
pub const ELIBEXEC = @as(c_int, 83);
pub const EILSEQ = @as(c_int, 84);
pub const ERESTART = @as(c_int, 85);
pub const ESTRPIPE = @as(c_int, 86);
pub const EUSERS = @as(c_int, 87);
pub const ENOTSOCK = @as(c_int, 88);
pub const EDESTADDRREQ = @as(c_int, 89);
pub const EMSGSIZE = @as(c_int, 90);
pub const EPROTOTYPE = @as(c_int, 91);
pub const ENOPROTOOPT = @as(c_int, 92);
pub const EPROTONOSUPPORT = @as(c_int, 93);
pub const ESOCKTNOSUPPORT = @as(c_int, 94);
pub const EOPNOTSUPP = @as(c_int, 95);
pub const EPFNOSUPPORT = @as(c_int, 96);
pub const EAFNOSUPPORT = @as(c_int, 97);
pub const EADDRINUSE = @as(c_int, 98);
pub const EADDRNOTAVAIL = @as(c_int, 99);
pub const ENETDOWN = @as(c_int, 100);
pub const ENETUNREACH = @as(c_int, 101);
pub const ENETRESET = @as(c_int, 102);
pub const ECONNABORTED = @as(c_int, 103);
pub const ECONNRESET = @as(c_int, 104);
pub const ENOBUFS = @as(c_int, 105);
pub const EISCONN = @as(c_int, 106);
pub const ENOTCONN = @as(c_int, 107);
pub const ESHUTDOWN = @as(c_int, 108);
pub const ETOOMANYREFS = @as(c_int, 109);
pub const ETIMEDOUT = @as(c_int, 110);
pub const ECONNREFUSED = @as(c_int, 111);
pub const EHOSTDOWN = @as(c_int, 112);
pub const EHOSTUNREACH = @as(c_int, 113);
pub const EALREADY = @as(c_int, 114);
pub const EINPROGRESS = @as(c_int, 115);
pub const ESTALE = @as(c_int, 116);
pub const EUCLEAN = @as(c_int, 117);
pub const ENOTNAM = @as(c_int, 118);
pub const ENAVAIL = @as(c_int, 119);
pub const EISNAM = @as(c_int, 120);
pub const EREMOTEIO = @as(c_int, 121);
pub const EDQUOT = @as(c_int, 122);
pub const ENOMEDIUM = @as(c_int, 123);
pub const EMEDIUMTYPE = @as(c_int, 124);
pub const ECANCELED = @as(c_int, 125);
pub const ENOKEY = @as(c_int, 126);
pub const EKEYEXPIRED = @as(c_int, 127);
pub const EKEYREVOKED = @as(c_int, 128);
pub const EKEYREJECTED = @as(c_int, 129);
pub const EOWNERDEAD = @as(c_int, 130);
pub const ENOTRECOVERABLE = @as(c_int, 131);
pub const ERFKILL = @as(c_int, 132);
pub const EHWPOISON = @as(c_int, 133);
pub const ENOTSUP = EOPNOTSUPP;
pub const errno = __errno_location().*;
pub const __error_t_defined = @as(c_int, 1);
pub const INITIAL_MEMORY_STORE_SIZE = @as(c_int, 1000);
pub const __locale_struct = struct___locale_struct;
pub const timeval = struct_timeval;
pub const timespec = struct_timespec;
pub const __pthread_internal_list = struct___pthread_internal_list;
pub const __pthread_internal_slist = struct___pthread_internal_slist;
pub const __pthread_mutex_s = struct___pthread_mutex_s;
pub const __pthread_rwlock_arch_t = struct___pthread_rwlock_arch_t;
pub const __pthread_cond_s = struct___pthread_cond_s;
pub const random_data = struct_random_data;
pub const drand48_data = struct_drand48_data;
pub const sched_param = struct_sched_param;
pub const timex = struct_timex;
pub const tm = struct_tm;
pub const itimerspec = struct_itimerspec;
pub const sigevent = struct_sigevent;
pub const __jmp_buf_tag = struct___jmp_buf_tag;
pub const _pthread_cleanup_buffer = struct__pthread_cleanup_buffer;
pub const __cancel_jmp_buf_tag = struct___cancel_jmp_buf_tag;
pub const __pthread_cleanup_frame = struct___pthread_cleanup_frame;
pub const UA_NodeIdType = enum_UA_NodeIdType;
pub const _G_fpos_t = struct__G_fpos_t;
pub const _G_fpos64_t = struct__G_fpos64_t;
pub const _IO_marker = struct__IO_marker;
pub const _IO_codecvt = struct__IO_codecvt;
pub const _IO_wide_data = struct__IO_wide_data;
pub const _IO_FILE = struct__IO_FILE;
pub const _IO_cookie_io_functions_t = struct__IO_cookie_io_functions_t;
pub const obstack = struct_obstack;
